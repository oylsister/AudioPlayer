// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steammessages.proto
// Protobuf C++ Version: 6.30.0-rc1

#include "steammessages.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CMsgProtoBufHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_job_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_steam_id_{::uint64_t{0u}},
        client_session_id_{0},
        source_app_id_{0u},
        ip_{0u},
        gc_msg_src_{static_cast< ::GCProtoBufMsgSrc >(0)},
        gc_dir_index_source_{0u},
        eresult_{2},
        job_id_source_{::uint64_t{18446744073709551615u}},
        job_id_target_{::uint64_t{18446744073709551615u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgProtoBufHeader::CMsgProtoBufHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgProtoBufHeader_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgProtoBufHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgProtoBufHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgProtoBufHeaderDefaultTypeInternal() {}
  union {
    CMsgProtoBufHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;

inline constexpr CChinaAgreementSessions_StartAgreementSessionInGame_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agreement_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_Response::CChinaAgreementSessions_StartAgreementSessionInGame_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal() {}
  union {
    CChinaAgreementSessions_StartAgreementSessionInGame_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal _CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_;

inline constexpr CChinaAgreementSessions_StartAgreementSessionInGame_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_ipaddress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        steamid_{::uint64_t{0u}},
        appid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_Request::CChinaAgreementSessions_StartAgreementSessionInGame_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal() {}
  union {
    CChinaAgreementSessions_StartAgreementSessionInGame_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal _CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_;
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_steammessages_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_steammessages_2eproto = nullptr;
const ::uint32_t
    TableStruct_steammessages_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.client_steam_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.client_session_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.source_app_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.job_id_source_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.job_id_target_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.target_job_name_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.eresult_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.gc_msg_src_),
        PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.gc_dir_index_source_),
        2,
        3,
        4,
        9,
        10,
        0,
        8,
        1,
        5,
        6,
        7,
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_),
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_),
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.client_ipaddress_),
        2,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_.agreement_url_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 19, -1, sizeof(::CMsgProtoBufHeader)},
        {30, 41, -1, sizeof(::CChinaAgreementSessions_StartAgreementSessionInGame_Request)},
        {44, 53, -1, sizeof(::CChinaAgreementSessions_StartAgreementSessionInGame_Response)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_CMsgProtoBufHeader_default_instance_._instance,
    &::_CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_._instance,
    &::_CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_._instance,
};
const char descriptor_table_protodef_steammessages_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023steammessages.proto\032 google/protobuf/d"
    "escriptor.proto\"\371\002\n\022CMsgProtoBufHeader\022\027"
    "\n\017client_steam_id\030\001 \001(\006\022\031\n\021client_sessio"
    "n_id\030\002 \001(\005\022\025\n\rsource_app_id\030\003 \001(\r\022+\n\rjob"
    "_id_source\030\n \001(\006:\02418446744073709551615\022+"
    "\n\rjob_id_target\030\013 \001(\006:\02418446744073709551"
    "615\022\027\n\017target_job_name\030\014 \001(\t\022\022\n\007eresult\030"
    "\r \001(\005:\0012\022\025\n\rerror_message\030\016 \001(\t\022\n\n\002ip\030\017 "
    "\001(\r\022D\n\ngc_msg_src\030\310\001 \001(\0162\021.GCProtoBufMsg"
    "Src:\034GCProtoBufMsgSrc_Unspecified\022\034\n\023gc_"
    "dir_index_source\030\311\001 \001(\r:\n\200\246\035\200\002\210\246\035\200\010\"w\n;C"
    "ChinaAgreementSessions_StartAgreementSes"
    "sionInGame_Request\022\r\n\005appid\030\001 \001(\r\022\017\n\007ste"
    "amid\030\002 \001(\006\022\030\n\020client_ipaddress\030\003 \001(\t\"U\n<"
    "CChinaAgreementSessions_StartAgreementSe"
    "ssionInGame_Response\022\025\n\ragreement_url\030\001 "
    "\001(\t*\266\001\n\020GCProtoBufMsgSrc\022 \n\034GCProtoBufMs"
    "gSrc_Unspecified\020\000\022\037\n\033GCProtoBufMsgSrc_F"
    "romSystem\020\001\022 \n\034GCProtoBufMsgSrc_FromStea"
    "mID\020\002\022\033\n\027GCProtoBufMsgSrc_FromGC\020\003\022 \n\034GC"
    "ProtoBufMsgSrc_ReplySystem\020\004:9\n\tkey_fiel"
    "d\022\035.google.protobuf.FieldOptions\030\340\324\003 \001(\010"
    ":\005false:A\n\022msgpool_soft_limit\022\037.google.p"
    "rotobuf.MessageOptions\030\340\324\003 \001(\005:\00232:B\n\022ms"
    "gpool_hard_limit\022\037.google.protobuf.Messa"
    "geOptions\030\341\324\003 \001(\005:\003384"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_steammessages_2eproto_deps[1] = {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_steammessages_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_steammessages_2eproto = {
    false,
    false,
    1022,
    descriptor_table_protodef_steammessages_2eproto,
    "steammessages.proto",
    &descriptor_table_steammessages_2eproto_once,
    descriptor_table_steammessages_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_steammessages_2eproto::offsets,
    file_level_enum_descriptors_steammessages_2eproto,
    file_level_service_descriptors_steammessages_2eproto,
};
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL GCProtoBufMsgSrc_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_steammessages_2eproto);
  return file_level_enum_descriptors_steammessages_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t GCProtoBufMsgSrc_internal_data_[] = {
    327680u, 0u, };
// ===================================================================

class CMsgProtoBufHeader::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgProtoBufHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_._has_bits_);
};

CMsgProtoBufHeader::CMsgProtoBufHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgProtoBufHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgProtoBufHeader)
}
PROTOBUF_NDEBUG_INLINE CMsgProtoBufHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgProtoBufHeader& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_job_name_(arena, from.target_job_name_),
        error_message_(arena, from.error_message_) {}

CMsgProtoBufHeader::CMsgProtoBufHeader(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgProtoBufHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgProtoBufHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgProtoBufHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, client_steam_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, client_steam_id_),
           offsetof(Impl_, job_id_target_) -
               offsetof(Impl_, client_steam_id_) +
               sizeof(Impl_::job_id_target_));

  // @@protoc_insertion_point(copy_constructor:CMsgProtoBufHeader)
}
PROTOBUF_NDEBUG_INLINE CMsgProtoBufHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        target_job_name_(arena),
        error_message_(arena),
        eresult_{2},
        job_id_source_{::uint64_t{18446744073709551615u}},
        job_id_target_{::uint64_t{18446744073709551615u}} {}

inline void CMsgProtoBufHeader::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, client_steam_id_),
           0,
           offsetof(Impl_, gc_dir_index_source_) -
               offsetof(Impl_, client_steam_id_) +
               sizeof(Impl_::gc_dir_index_source_));
}
CMsgProtoBufHeader::~CMsgProtoBufHeader() {
  // @@protoc_insertion_point(destructor:CMsgProtoBufHeader)
  SharedDtor(*this);
}
inline void CMsgProtoBufHeader::SharedDtor(MessageLite& self) {
  CMsgProtoBufHeader& this_ = static_cast<CMsgProtoBufHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_job_name_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgProtoBufHeader::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgProtoBufHeader(arena);
}
constexpr auto CMsgProtoBufHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgProtoBufHeader),
                                            alignof(CMsgProtoBufHeader));
}
constexpr auto CMsgProtoBufHeader::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgProtoBufHeader_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgProtoBufHeader::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgProtoBufHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgProtoBufHeader::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgProtoBufHeader>(), &CMsgProtoBufHeader::ByteSizeLong,
              &CMsgProtoBufHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_._cached_size_),
          false,
      },
      &CMsgProtoBufHeader::kDescriptorMethods,
      &descriptor_table_steammessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgProtoBufHeader_class_data_ =
            CMsgProtoBufHeader::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgProtoBufHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgProtoBufHeader_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgProtoBufHeader_class_data_.tc_table);
  return CMsgProtoBufHeader_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 63, 7>
CMsgProtoBufHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_._has_bits_),
    0, // no _extensions_
    201, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294935032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgProtoBufHeader_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgProtoBufHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 client_steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_steam_id_)}},
    // optional int32 client_session_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.client_session_id_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_session_id_)}},
    // optional uint32 source_app_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.source_app_id_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.source_app_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    {::_pbi::TcParser::FastEr0S2,
     {3264, 6, 4, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_msg_src_)}},
    // optional uint32 gc_dir_index_source = 201;
    {::_pbi::TcParser::FastV32S2,
     {3272, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_dir_index_source_)}},
    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    {::_pbi::TcParser::FastF64S1,
     {81, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_source_)}},
    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    {::_pbi::TcParser::FastF64S1,
     {89, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_target_)}},
    // optional string target_job_name = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.target_job_name_)}},
    // optional int32 eresult = 13 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.eresult_), 8>(),
     {104, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.eresult_)}},
    // optional string error_message = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.error_message_)}},
    // optional uint32 ip = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.ip_), 5>(),
     {120, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.ip_)}},
  }}, {{
    200, 0, 1,
    65532, 9,
    65535, 65535
  }}, {{
    // optional fixed64 client_steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_steam_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 client_session_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_session_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 source_app_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.source_app_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_source_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_target_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string target_job_name = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.target_job_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 eresult = 13 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.eresult_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string error_message = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.error_message_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 ip = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.ip_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_msg_src_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 gc_dir_index_source = 201;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_dir_index_source_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {0, 5},
  }},
  {{
    "\22\0\0\0\0\0\17\0\15\0\0\0\0\0\0\0"
    "CMsgProtoBufHeader"
    "target_job_name"
    "error_message"
  }},
};
PROTOBUF_NOINLINE void CMsgProtoBufHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgProtoBufHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.target_job_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.error_message_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000fcu) != 0) {
    ::memset(&_impl_.client_steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gc_dir_index_source_) -
        reinterpret_cast<char*>(&_impl_.client_steam_id_)) + sizeof(_impl_.gc_dir_index_source_));
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    _impl_.eresult_ = 2;
    _impl_.job_id_source_ = ::uint64_t{18446744073709551615u};
    _impl_.job_id_target_ = ::uint64_t{18446744073709551615u};
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgProtoBufHeader::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgProtoBufHeader& this_ = static_cast<const CMsgProtoBufHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgProtoBufHeader::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgProtoBufHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgProtoBufHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional fixed64 client_steam_id = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this_._internal_client_steam_id(), target);
  }

  // optional int32 client_session_id = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_client_session_id(), target);
  }

  // optional uint32 source_app_id = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_source_app_id(), target);
  }

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        10, this_._internal_job_id_source(), target);
  }

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        11, this_._internal_job_id_target(), target);
  }

  // optional string target_job_name = 12;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_target_job_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgProtoBufHeader.target_job_name");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional int32 eresult = 13 [default = 2];
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<13>(
            stream, this_._internal_eresult(), target);
  }

  // optional string error_message = 14;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_error_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgProtoBufHeader.error_message");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional uint32 ip = 15;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this_._internal_ip(), target);
  }

  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        200, this_._internal_gc_msg_src(), target);
  }

  // optional uint32 gc_dir_index_source = 201;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        201, this_._internal_gc_dir_index_source(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgProtoBufHeader)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgProtoBufHeader::ByteSizeLong(const MessageLite& base) {
  const CMsgProtoBufHeader& this_ = static_cast<const CMsgProtoBufHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgProtoBufHeader::ByteSizeLong() const {
  const CMsgProtoBufHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgProtoBufHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000604u & cached_has_bits) * 9;
  if ((cached_has_bits & 0x000000fbu) != 0) {
    // optional string target_job_name = 12;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_target_job_name());
    }
    // optional string error_message = 14;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_error_message());
    }
    // optional int32 client_session_id = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_client_session_id());
    }
    // optional uint32 source_app_id = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_source_app_id());
    }
    // optional uint32 ip = 15;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ip());
    }
    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_gc_msg_src());
    }
    // optional uint32 gc_dir_index_source = 201;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_gc_dir_index_source());
    }
  }
   {
    // optional int32 eresult = 13 [default = 2];
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_eresult());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgProtoBufHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgProtoBufHeader*>(&to_msg);
  auto& from = static_cast<const CMsgProtoBufHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgProtoBufHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_target_job_name(from._internal_target_job_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_error_message(from._internal_error_message());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.client_steam_id_ = from._impl_.client_steam_id_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.client_session_id_ = from._impl_.client_session_id_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.source_app_id_ = from._impl_.source_app_id_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.ip_ = from._impl_.ip_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.gc_msg_src_ = from._impl_.gc_msg_src_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.gc_dir_index_source_ = from._impl_.gc_dir_index_source_;
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.job_id_source_ = from._impl_.job_id_source_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.job_id_target_ = from._impl_.job_id_target_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgProtoBufHeader::CopyFrom(const CMsgProtoBufHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgProtoBufHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgProtoBufHeader::InternalSwap(CMsgProtoBufHeader* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_job_name_, &other->_impl_.target_job_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_target_)
      + sizeof(CMsgProtoBufHeader::_impl_.job_id_target_)
      - PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_steam_id_)>(
          reinterpret_cast<char*>(&_impl_.client_steam_id_),
          reinterpret_cast<char*>(&other->_impl_.client_steam_id_));
}

::google::protobuf::Metadata CMsgProtoBufHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CChinaAgreementSessions_StartAgreementSessionInGame_Request::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CChinaAgreementSessions_StartAgreementSessionInGame_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_._has_bits_);
};

CChinaAgreementSessions_StartAgreementSessionInGame_Request::CChinaAgreementSessions_StartAgreementSessionInGame_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
}
PROTOBUF_NDEBUG_INLINE CChinaAgreementSessions_StartAgreementSessionInGame_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CChinaAgreementSessions_StartAgreementSessionInGame_Request& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        client_ipaddress_(arena, from.client_ipaddress_) {}

CChinaAgreementSessions_StartAgreementSessionInGame_Request::CChinaAgreementSessions_StartAgreementSessionInGame_Request(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CChinaAgreementSessions_StartAgreementSessionInGame_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, steamid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, steamid_),
           offsetof(Impl_, appid_) -
               offsetof(Impl_, steamid_) +
               sizeof(Impl_::appid_));

  // @@protoc_insertion_point(copy_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
}
PROTOBUF_NDEBUG_INLINE CChinaAgreementSessions_StartAgreementSessionInGame_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        client_ipaddress_(arena) {}

inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, steamid_),
           0,
           offsetof(Impl_, appid_) -
               offsetof(Impl_, steamid_) +
               sizeof(Impl_::appid_));
}
CChinaAgreementSessions_StartAgreementSessionInGame_Request::~CChinaAgreementSessions_StartAgreementSessionInGame_Request() {
  // @@protoc_insertion_point(destructor:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  SharedDtor(*this);
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::SharedDtor(MessageLite& self) {
  CChinaAgreementSessions_StartAgreementSessionInGame_Request& this_ = static_cast<CChinaAgreementSessions_StartAgreementSessionInGame_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_ipaddress_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Request::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CChinaAgreementSessions_StartAgreementSessionInGame_Request(arena);
}
constexpr auto CChinaAgreementSessions_StartAgreementSessionInGame_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CChinaAgreementSessions_StartAgreementSessionInGame_Request),
                                            alignof(CChinaAgreementSessions_StartAgreementSessionInGame_Request));
}
constexpr auto CChinaAgreementSessions_StartAgreementSessionInGame_Request::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CChinaAgreementSessions_StartAgreementSessionInGame_Request::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CChinaAgreementSessions_StartAgreementSessionInGame_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CChinaAgreementSessions_StartAgreementSessionInGame_Request::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CChinaAgreementSessions_StartAgreementSessionInGame_Request>(), &CChinaAgreementSessions_StartAgreementSessionInGame_Request::ByteSizeLong,
              &CChinaAgreementSessions_StartAgreementSessionInGame_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_._cached_size_),
          false,
      },
      &CChinaAgreementSessions_StartAgreementSessionInGame_Request::kDescriptorMethods,
      &descriptor_table_steammessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_ =
            CChinaAgreementSessions_StartAgreementSessionInGame_Request::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_.tc_table);
  return CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 84, 2>
CChinaAgreementSessions_StartAgreementSessionInGame_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CChinaAgreementSessions_StartAgreementSessionInGame_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 appid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_)}},
    // optional fixed64 steamid = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_)}},
    // optional string client_ipaddress = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.client_ipaddress_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 appid = 1;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 steamid = 2;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string client_ipaddress = 3;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.client_ipaddress_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\0\0\20\0\0\0\0"
    "CChinaAgreementSessions_StartAgreementSessionInGame_Request"
    "client_ipaddress"
  }},
};
PROTOBUF_NOINLINE void CChinaAgreementSessions_StartAgreementSessionInGame_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.client_ipaddress_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Request::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Request& this_ = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Request::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 appid = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_appid(), target);
  }

  // optional fixed64 steamid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this_._internal_steamid(), target);
  }

  // optional string client_ipaddress = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_client_ipaddress();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CChinaAgreementSessions_StartAgreementSessionInGame_Request.client_ipaddress");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CChinaAgreementSessions_StartAgreementSessionInGame_Request::ByteSizeLong(const MessageLite& base) {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Request& this_ = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CChinaAgreementSessions_StartAgreementSessionInGame_Request::ByteSizeLong() const {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000002u & cached_has_bits) * 9;
  if ((cached_has_bits & 0x00000005u) != 0) {
    // optional string client_ipaddress = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_client_ipaddress());
    }
    // optional uint32 appid = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_appid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CChinaAgreementSessions_StartAgreementSessionInGame_Request*>(&to_msg);
  auto& from = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_client_ipaddress(from._internal_client_ipaddress());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Request::CopyFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CChinaAgreementSessions_StartAgreementSessionInGame_Request::InternalSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Request* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_ipaddress_, &other->_impl_.client_ipaddress_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_)
      + sizeof(CChinaAgreementSessions_StartAgreementSessionInGame_Request::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CChinaAgreementSessions_StartAgreementSessionInGame_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CChinaAgreementSessions_StartAgreementSessionInGame_Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CChinaAgreementSessions_StartAgreementSessionInGame_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_._has_bits_);
};

CChinaAgreementSessions_StartAgreementSessionInGame_Response::CChinaAgreementSessions_StartAgreementSessionInGame_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
}
PROTOBUF_NDEBUG_INLINE CChinaAgreementSessions_StartAgreementSessionInGame_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CChinaAgreementSessions_StartAgreementSessionInGame_Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        agreement_url_(arena, from.agreement_url_) {}

CChinaAgreementSessions_StartAgreementSessionInGame_Response::CChinaAgreementSessions_StartAgreementSessionInGame_Response(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CChinaAgreementSessions_StartAgreementSessionInGame_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
}
PROTOBUF_NDEBUG_INLINE CChinaAgreementSessions_StartAgreementSessionInGame_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        agreement_url_(arena) {}

inline void CChinaAgreementSessions_StartAgreementSessionInGame_Response::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CChinaAgreementSessions_StartAgreementSessionInGame_Response::~CChinaAgreementSessions_StartAgreementSessionInGame_Response() {
  // @@protoc_insertion_point(destructor:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  SharedDtor(*this);
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Response::SharedDtor(MessageLite& self) {
  CChinaAgreementSessions_StartAgreementSessionInGame_Response& this_ = static_cast<CChinaAgreementSessions_StartAgreementSessionInGame_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.agreement_url_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Response::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CChinaAgreementSessions_StartAgreementSessionInGame_Response(arena);
}
constexpr auto CChinaAgreementSessions_StartAgreementSessionInGame_Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CChinaAgreementSessions_StartAgreementSessionInGame_Response),
                                            alignof(CChinaAgreementSessions_StartAgreementSessionInGame_Response));
}
constexpr auto CChinaAgreementSessions_StartAgreementSessionInGame_Response::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CChinaAgreementSessions_StartAgreementSessionInGame_Response::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CChinaAgreementSessions_StartAgreementSessionInGame_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CChinaAgreementSessions_StartAgreementSessionInGame_Response::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CChinaAgreementSessions_StartAgreementSessionInGame_Response>(), &CChinaAgreementSessions_StartAgreementSessionInGame_Response::ByteSizeLong,
              &CChinaAgreementSessions_StartAgreementSessionInGame_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_._cached_size_),
          false,
      },
      &CChinaAgreementSessions_StartAgreementSessionInGame_Response::kDescriptorMethods,
      &descriptor_table_steammessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_ =
            CChinaAgreementSessions_StartAgreementSessionInGame_Response::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_.tc_table);
  return CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 82, 2>
CChinaAgreementSessions_StartAgreementSessionInGame_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CChinaAgreementSessions_StartAgreementSessionInGame_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string agreement_url = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_.agreement_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string agreement_url = 1;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_.agreement_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\74\15\0\0\0\0\0\0"
    "CChinaAgreementSessions_StartAgreementSessionInGame_Response"
    "agreement_url"
  }},
};
PROTOBUF_NOINLINE void CChinaAgreementSessions_StartAgreementSessionInGame_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.agreement_url_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Response::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Response& this_ = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Response::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string agreement_url = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_agreement_url();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CChinaAgreementSessions_StartAgreementSessionInGame_Response.agreement_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CChinaAgreementSessions_StartAgreementSessionInGame_Response::ByteSizeLong(const MessageLite& base) {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Response& this_ = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CChinaAgreementSessions_StartAgreementSessionInGame_Response::ByteSizeLong() const {
  const CChinaAgreementSessions_StartAgreementSessionInGame_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional string agreement_url = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_agreement_url());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CChinaAgreementSessions_StartAgreementSessionInGame_Response*>(&to_msg);
  auto& from = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_agreement_url(from._internal_agreement_url());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Response::CopyFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CChinaAgreementSessions_StartAgreementSessionInGame_Response::InternalSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Response* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agreement_url_, &other->_impl_.agreement_url_, arena);
}

::google::protobuf::Metadata CChinaAgreementSessions_StartAgreementSessionInGame_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::ExtensionIdentifier<
        ::google::protobuf::FieldOptions, ::_pbi::PrimitiveTypeTraits< bool >, 8, false>
        key_field(kKeyFieldFieldNumber, false);
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::ExtensionIdentifier<
        ::google::protobuf::MessageOptions, ::_pbi::PrimitiveTypeTraits< ::int32_t >, 5, false>
        msgpool_soft_limit(kMsgpoolSoftLimitFieldNumber, 32);
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::ExtensionIdentifier<
        ::google::protobuf::MessageOptions, ::_pbi::PrimitiveTypeTraits< ::int32_t >, 5, false>
        msgpool_hard_limit(kMsgpoolHardLimitFieldNumber, 384);
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_steammessages_2eproto),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::FieldOptions::default_instance(), 60000, 8,
            false, false),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::MessageOptions::default_instance(), 60000, 5,
            false, false),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::MessageOptions::default_instance(), 60001, 5,
            false, false),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

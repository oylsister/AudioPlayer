// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: te.proto
// Protobuf C++ Version: 6.30.0-rc1

#include "te.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CMsgTEFizz::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        density_{0u},
        current_{0},
        entity_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEFizz::CMsgTEFizz(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEFizz_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEFizzDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEFizzDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEFizzDefaultTypeInternal() {}
  union {
    CMsgTEFizz _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEFizzDefaultTypeInternal _CMsgTEFizz_default_instance_;

inline constexpr CMsgTEBaseBeam::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        modelindex_{::uint64_t{0u}},
        haloindex_{::uint64_t{0u}},
        startframe_{0u},
        framerate_{0u},
        life_{0},
        width_{0},
        endwidth_{0},
        fadelength_{0u},
        amplitude_{0},
        color_{0u},
        speed_{0u},
        flags_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBaseBeam::CMsgTEBaseBeam(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBaseBeam_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBaseBeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBaseBeamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBaseBeamDefaultTypeInternal() {}
  union {
    CMsgTEBaseBeam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBaseBeamDefaultTypeInternal _CMsgTEBaseBeam_default_instance_;

inline constexpr CMsgTEWorldDecal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        normal_{nullptr},
        index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEWorldDecal::CMsgTEWorldDecal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEWorldDecal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEWorldDecalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEWorldDecalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEWorldDecalDefaultTypeInternal() {}
  union {
    CMsgTEWorldDecal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEWorldDecalDefaultTypeInternal _CMsgTEWorldDecal_default_instance_;

inline constexpr CMsgTESparks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        direction_{nullptr},
        magnitude_{0u},
        length_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTESparks::CMsgTESparks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTESparks_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTESparksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTESparksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTESparksDefaultTypeInternal() {}
  union {
    CMsgTESparks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTESparksDefaultTypeInternal _CMsgTESparks_default_instance_;

inline constexpr CMsgTESmoke::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        scale_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTESmoke::CMsgTESmoke(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTESmoke_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTESmokeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTESmokeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTESmokeDefaultTypeInternal() {}
  union {
    CMsgTESmoke _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTESmokeDefaultTypeInternal _CMsgTESmoke_default_instance_;

inline constexpr CMsgTEShatterSurface::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        angles_{nullptr},
        force_{nullptr},
        forcepos_{nullptr},
        width_{0},
        height_{0},
        shardsize_{0},
        surfacetype_{0u},
        frontcolor_{0u},
        backcolor_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEShatterSurface::CMsgTEShatterSurface(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEShatterSurface_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEShatterSurfaceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEShatterSurfaceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEShatterSurfaceDefaultTypeInternal() {}
  union {
    CMsgTEShatterSurface _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEShatterSurfaceDefaultTypeInternal _CMsgTEShatterSurface_default_instance_;

inline constexpr CMsgTEProjectedDecal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        angles_{nullptr},
        index_{0u},
        distance_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEProjectedDecal::CMsgTEProjectedDecal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEProjectedDecal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEProjectedDecalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEProjectedDecalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEProjectedDecalDefaultTypeInternal() {}
  union {
    CMsgTEProjectedDecal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEProjectedDecalDefaultTypeInternal _CMsgTEProjectedDecal_default_instance_;

inline constexpr CMsgTEPlayerDecal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        player_{-1},
        entity_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEPlayerDecal::CMsgTEPlayerDecal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEPlayerDecal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEPlayerDecalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEPlayerDecalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEPlayerDecalDefaultTypeInternal() {}
  union {
    CMsgTEPlayerDecal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEPlayerDecalDefaultTypeInternal _CMsgTEPlayerDecal_default_instance_;

inline constexpr CMsgTEPhysicsProp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        velocity_{nullptr},
        angles_{nullptr},
        dmgpos_{nullptr},
        dmgdir_{nullptr},
        skin_{0u},
        flags_{0u},
        effects_{0u},
        color_{0u},
        modelindex_{::uint64_t{0u}},
        unused_breakmodelsnottomake_{0u},
        scale_{0},
        dmgtype_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEPhysicsProp::CMsgTEPhysicsProp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEPhysicsProp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEPhysicsPropDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEPhysicsPropDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEPhysicsPropDefaultTypeInternal() {}
  union {
    CMsgTEPhysicsProp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEPhysicsPropDefaultTypeInternal _CMsgTEPhysicsProp_default_instance_;

inline constexpr CMsgTEMuzzleFlash::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        angles_{nullptr},
        scale_{0},
        type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEMuzzleFlash::CMsgTEMuzzleFlash(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEMuzzleFlash_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEMuzzleFlashDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEMuzzleFlashDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEMuzzleFlashDefaultTypeInternal() {}
  union {
    CMsgTEMuzzleFlash _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEMuzzleFlashDefaultTypeInternal _CMsgTEMuzzleFlash_default_instance_;

inline constexpr CMsgTELargeFunnel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        reversed_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTELargeFunnel::CMsgTELargeFunnel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTELargeFunnel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTELargeFunnelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTELargeFunnelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTELargeFunnelDefaultTypeInternal() {}
  union {
    CMsgTELargeFunnel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTELargeFunnelDefaultTypeInternal _CMsgTELargeFunnel_default_instance_;

inline constexpr CMsgTEImpact::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        normal_{nullptr},
        type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEImpact::CMsgTEImpact(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEImpact_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEImpactDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEImpactDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEImpactDefaultTypeInternal() {}
  union {
    CMsgTEImpact _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEImpactDefaultTypeInternal _CMsgTEImpact_default_instance_;

inline constexpr CMsgTEGlowSprite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        scale_{0},
        life_{0},
        brightness_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEGlowSprite::CMsgTEGlowSprite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEGlowSprite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEGlowSpriteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEGlowSpriteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEGlowSpriteDefaultTypeInternal() {}
  union {
    CMsgTEGlowSprite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEGlowSpriteDefaultTypeInternal _CMsgTEGlowSprite_default_instance_;

inline constexpr CMsgTEExplosion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        effect_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_{nullptr},
        normal_{nullptr},
        debris_origin_{nullptr},
        framerate_{0u},
        flags_{0u},
        materialtype_{0u},
        radius_{0u},
        magnitude_{0u},
        scale_{0},
        affect_ragdolls_{false},
        create_debris_{false},
        explosion_type_{0u},
        debris_surfaceprop_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEExplosion::CMsgTEExplosion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEExplosion_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEExplosionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEExplosionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEExplosionDefaultTypeInternal() {}
  union {
    CMsgTEExplosion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEExplosionDefaultTypeInternal _CMsgTEExplosion_default_instance_;

inline constexpr CMsgTEEnergySplash::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        dir_{nullptr},
        explosive_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEEnergySplash::CMsgTEEnergySplash(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEEnergySplash_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEEnergySplashDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEEnergySplashDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEEnergySplashDefaultTypeInternal() {}
  union {
    CMsgTEEnergySplash _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEEnergySplashDefaultTypeInternal _CMsgTEEnergySplash_default_instance_;

inline constexpr CMsgTEDust::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        direction_{nullptr},
        size_{0},
        speed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEDust::CMsgTEDust(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEDust_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEDustDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEDustDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEDustDefaultTypeInternal() {}
  union {
    CMsgTEDust _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEDustDefaultTypeInternal _CMsgTEDust_default_instance_;

inline constexpr CMsgTEDecal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        start_{nullptr},
        hitbox_{0u},
        index_{0u},
        entity_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEDecal::CMsgTEDecal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEDecal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEDecalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEDecalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEDecalDefaultTypeInternal() {}
  union {
    CMsgTEDecal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEDecalDefaultTypeInternal _CMsgTEDecal_default_instance_;

inline constexpr CMsgTEBubbles::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mins_{nullptr},
        maxs_{nullptr},
        height_{0},
        count_{0u},
        speed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBubbles::CMsgTEBubbles(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBubbles_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBubblesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBubblesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBubblesDefaultTypeInternal() {}
  union {
    CMsgTEBubbles _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBubblesDefaultTypeInternal _CMsgTEBubbles_default_instance_;

inline constexpr CMsgTEBubbleTrail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mins_{nullptr},
        maxs_{nullptr},
        waterz_{0},
        count_{0u},
        speed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBubbleTrail::CMsgTEBubbleTrail(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBubbleTrail_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBubbleTrailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBubbleTrailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBubbleTrailDefaultTypeInternal() {}
  union {
    CMsgTEBubbleTrail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBubbleTrailDefaultTypeInternal _CMsgTEBubbleTrail_default_instance_;

inline constexpr CMsgTEBloodStream::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        direction_{nullptr},
        color_{0u},
        amount_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBloodStream::CMsgTEBloodStream(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBloodStream_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBloodStreamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBloodStreamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBloodStreamDefaultTypeInternal() {}
  union {
    CMsgTEBloodStream _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBloodStreamDefaultTypeInternal _CMsgTEBloodStream_default_instance_;

inline constexpr CMsgTEBeamRing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        startentity_{0u},
        endentity_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBeamRing::CMsgTEBeamRing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBeamRing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBeamRingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBeamRingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBeamRingDefaultTypeInternal() {}
  union {
    CMsgTEBeamRing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBeamRingDefaultTypeInternal _CMsgTEBeamRing_default_instance_;

inline constexpr CMsgTEBeamPoints::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        start_{nullptr},
        end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBeamPoints::CMsgTEBeamPoints(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBeamPoints_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBeamPointsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBeamPointsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBeamPointsDefaultTypeInternal() {}
  union {
    CMsgTEBeamPoints _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBeamPointsDefaultTypeInternal _CMsgTEBeamPoints_default_instance_;

inline constexpr CMsgTEBeamEnts::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        startentity_{0u},
        endentity_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBeamEnts::CMsgTEBeamEnts(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBeamEnts_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBeamEntsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBeamEntsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBeamEntsDefaultTypeInternal() {}
  union {
    CMsgTEBeamEnts _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBeamEntsDefaultTypeInternal _CMsgTEBeamEnts_default_instance_;

inline constexpr CMsgTEBeamEntPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        start_{nullptr},
        end_{nullptr},
        startentity_{0u},
        endentity_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBeamEntPoint::CMsgTEBeamEntPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBeamEntPoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBeamEntPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBeamEntPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBeamEntPointDefaultTypeInternal() {}
  union {
    CMsgTEBeamEntPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBeamEntPointDefaultTypeInternal _CMsgTEBeamEntPoint_default_instance_;

inline constexpr CMsgTEBSPDecal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        normal_{nullptr},
        saxis_{nullptr},
        index_{0u},
        entity_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEBSPDecal::CMsgTEBSPDecal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEBSPDecal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEBSPDecalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEBSPDecalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEBSPDecalDefaultTypeInternal() {}
  union {
    CMsgTEBSPDecal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEBSPDecalDefaultTypeInternal _CMsgTEBSPDecal_default_instance_;

inline constexpr CMsgTEArmorRicochet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        dir_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEArmorRicochet::CMsgTEArmorRicochet(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEArmorRicochet_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEArmorRicochetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEArmorRicochetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEArmorRicochetDefaultTypeInternal() {}
  union {
    CMsgTEArmorRicochet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEArmorRicochetDefaultTypeInternal _CMsgTEArmorRicochet_default_instance_;

inline constexpr CMsgEffectData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        start_{nullptr},
        normal_{nullptr},
        angles_{nullptr},
        scale_{0},
        magnitude_{0},
        radius_{0},
        surfaceprop_{0u},
        effectindex_{::uint64_t{0u}},
        damagetype_{0u},
        material_{0u},
        hitbox_{0u},
        color_{0u},
        flags_{0u},
        attachmentindex_{0},
        effectname_{0u},
        attachmentname_{0u},
        entity_{16777215u},
        otherentity_{16777215u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgEffectData::CMsgEffectData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgEffectData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgEffectDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgEffectDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgEffectDataDefaultTypeInternal() {}
  union {
    CMsgEffectData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgEffectDataDefaultTypeInternal _CMsgEffectData_default_instance_;

inline constexpr CMsgTEEffectDispatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        effectdata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgTEEffectDispatch::CMsgTEEffectDispatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgTEEffectDispatch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgTEEffectDispatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTEEffectDispatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTEEffectDispatchDefaultTypeInternal() {}
  union {
    CMsgTEEffectDispatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTEEffectDispatchDefaultTypeInternal _CMsgTEEffectDispatch_default_instance_;
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_te_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_te_2eproto = nullptr;
const ::uint32_t
    TableStruct_te_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CMsgTEArmorRicochet, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEArmorRicochet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEArmorRicochet, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEArmorRicochet, _impl_.dir_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.modelindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.haloindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.startframe_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.framerate_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.life_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.endwidth_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.fadelength_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.amplitude_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBaseBeam, _impl_.flags_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEntPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEntPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEntPoint, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEntPoint, _impl_.startentity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEntPoint, _impl_.endentity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEntPoint, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEntPoint, _impl_.end_),
        0,
        3,
        4,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEnts, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEnts, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEnts, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEnts, _impl_.startentity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamEnts, _impl_.endentity_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamPoints, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamPoints, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamPoints, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamPoints, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamPoints, _impl_.end_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamRing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamRing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamRing, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamRing, _impl_.startentity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBeamRing, _impl_.endentity_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBSPDecal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBSPDecal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBSPDecal, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBSPDecal, _impl_.normal_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBSPDecal, _impl_.saxis_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBSPDecal, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBSPDecal, _impl_.index_),
        0,
        1,
        2,
        4,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbles, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbles, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbles, _impl_.mins_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbles, _impl_.maxs_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbles, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbles, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbles, _impl_.speed_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbleTrail, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbleTrail, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbleTrail, _impl_.mins_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbleTrail, _impl_.maxs_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbleTrail, _impl_.waterz_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbleTrail, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBubbleTrail, _impl_.speed_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::CMsgTEDecal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDecal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEDecal, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDecal, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDecal, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDecal, _impl_.hitbox_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDecal, _impl_.index_),
        0,
        1,
        4,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.normal_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.otherentity_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.scale_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.magnitude_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.surfaceprop_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.effectindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.damagetype_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.material_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.hitbox_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.attachmentindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.effectname_),
        PROTOBUF_FIELD_OFFSET(::CMsgEffectData, _impl_.attachmentname_),
        0,
        1,
        2,
        3,
        17,
        18,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        PROTOBUF_FIELD_OFFSET(::CMsgTEEffectDispatch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEEffectDispatch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEEffectDispatch, _impl_.effectdata_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgTEEnergySplash, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEEnergySplash, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEEnergySplash, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEEnergySplash, _impl_.dir_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEEnergySplash, _impl_.explosive_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgTEFizz, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEFizz, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEFizz, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEFizz, _impl_.density_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEFizz, _impl_.current_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.force_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.forcepos_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.shardsize_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.surfacetype_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.frontcolor_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEShatterSurface, _impl_.backcolor_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::CMsgTEGlowSprite, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEGlowSprite, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEGlowSprite, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEGlowSprite, _impl_.scale_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEGlowSprite, _impl_.life_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEGlowSprite, _impl_.brightness_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgTEImpact, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEImpact, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEImpact, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEImpact, _impl_.normal_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEImpact, _impl_.type_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgTEMuzzleFlash, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEMuzzleFlash, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEMuzzleFlash, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEMuzzleFlash, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEMuzzleFlash, _impl_.scale_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEMuzzleFlash, _impl_.type_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgTEBloodStream, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBloodStream, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEBloodStream, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBloodStream, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBloodStream, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEBloodStream, _impl_.amount_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.framerate_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.normal_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.materialtype_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.magnitude_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.scale_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.affect_ragdolls_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.effect_name_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.explosion_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.create_debris_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.debris_origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEExplosion, _impl_.debris_surfaceprop_),
        1,
        4,
        5,
        2,
        6,
        7,
        8,
        9,
        10,
        0,
        12,
        11,
        3,
        13,
        PROTOBUF_FIELD_OFFSET(::CMsgTEDust, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDust, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEDust, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDust, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDust, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEDust, _impl_.direction_),
        0,
        2,
        3,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgTELargeFunnel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTELargeFunnel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTELargeFunnel, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTELargeFunnel, _impl_.reversed_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgTESparks, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTESparks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTESparks, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTESparks, _impl_.magnitude_),
        PROTOBUF_FIELD_OFFSET(::CMsgTESparks, _impl_.length_),
        PROTOBUF_FIELD_OFFSET(::CMsgTESparks, _impl_.direction_),
        0,
        2,
        3,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.velocity_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.skin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.effects_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.modelindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.unused_breakmodelsnottomake_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.scale_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.dmgpos_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.dmgdir_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPhysicsProp, _impl_.dmgtype_),
        0,
        1,
        2,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        3,
        4,
        12,
        PROTOBUF_FIELD_OFFSET(::CMsgTEPlayerDecal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPlayerDecal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEPlayerDecal, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPlayerDecal, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEPlayerDecal, _impl_.entity_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgTEProjectedDecal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEProjectedDecal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEProjectedDecal, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEProjectedDecal, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEProjectedDecal, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEProjectedDecal, _impl_.distance_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgTESmoke, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTESmoke, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTESmoke, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTESmoke, _impl_.scale_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgTEWorldDecal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEWorldDecal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgTEWorldDecal, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEWorldDecal, _impl_.normal_),
        PROTOBUF_FIELD_OFFSET(::CMsgTEWorldDecal, _impl_.index_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::CMsgTEArmorRicochet)},
        {12, 32, -1, sizeof(::CMsgTEBaseBeam)},
        {44, 57, -1, sizeof(::CMsgTEBeamEntPoint)},
        {62, 73, -1, sizeof(::CMsgTEBeamEnts)},
        {76, 87, -1, sizeof(::CMsgTEBeamPoints)},
        {90, 101, -1, sizeof(::CMsgTEBeamRing)},
        {104, 117, -1, sizeof(::CMsgTEBSPDecal)},
        {122, 135, -1, sizeof(::CMsgTEBubbles)},
        {140, 153, -1, sizeof(::CMsgTEBubbleTrail)},
        {158, 171, -1, sizeof(::CMsgTEDecal)},
        {176, 203, -1, sizeof(::CMsgEffectData)},
        {222, 231, -1, sizeof(::CMsgTEEffectDispatch)},
        {232, 243, -1, sizeof(::CMsgTEEnergySplash)},
        {246, 257, -1, sizeof(::CMsgTEFizz)},
        {260, 278, -1, sizeof(::CMsgTEShatterSurface)},
        {288, 300, -1, sizeof(::CMsgTEGlowSprite)},
        {304, 315, -1, sizeof(::CMsgTEImpact)},
        {318, 330, -1, sizeof(::CMsgTEMuzzleFlash)},
        {334, 346, -1, sizeof(::CMsgTEBloodStream)},
        {350, 372, -1, sizeof(::CMsgTEExplosion)},
        {386, 398, -1, sizeof(::CMsgTEDust)},
        {402, 412, -1, sizeof(::CMsgTELargeFunnel)},
        {414, 426, -1, sizeof(::CMsgTESparks)},
        {430, 451, -1, sizeof(::CMsgTEPhysicsProp)},
        {464, 475, -1, sizeof(::CMsgTEPlayerDecal)},
        {478, 490, -1, sizeof(::CMsgTEProjectedDecal)},
        {494, 504, -1, sizeof(::CMsgTESmoke)},
        {506, 517, -1, sizeof(::CMsgTEWorldDecal)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_CMsgTEArmorRicochet_default_instance_._instance,
    &::_CMsgTEBaseBeam_default_instance_._instance,
    &::_CMsgTEBeamEntPoint_default_instance_._instance,
    &::_CMsgTEBeamEnts_default_instance_._instance,
    &::_CMsgTEBeamPoints_default_instance_._instance,
    &::_CMsgTEBeamRing_default_instance_._instance,
    &::_CMsgTEBSPDecal_default_instance_._instance,
    &::_CMsgTEBubbles_default_instance_._instance,
    &::_CMsgTEBubbleTrail_default_instance_._instance,
    &::_CMsgTEDecal_default_instance_._instance,
    &::_CMsgEffectData_default_instance_._instance,
    &::_CMsgTEEffectDispatch_default_instance_._instance,
    &::_CMsgTEEnergySplash_default_instance_._instance,
    &::_CMsgTEFizz_default_instance_._instance,
    &::_CMsgTEShatterSurface_default_instance_._instance,
    &::_CMsgTEGlowSprite_default_instance_._instance,
    &::_CMsgTEImpact_default_instance_._instance,
    &::_CMsgTEMuzzleFlash_default_instance_._instance,
    &::_CMsgTEBloodStream_default_instance_._instance,
    &::_CMsgTEExplosion_default_instance_._instance,
    &::_CMsgTEDust_default_instance_._instance,
    &::_CMsgTELargeFunnel_default_instance_._instance,
    &::_CMsgTESparks_default_instance_._instance,
    &::_CMsgTEPhysicsProp_default_instance_._instance,
    &::_CMsgTEPlayerDecal_default_instance_._instance,
    &::_CMsgTEProjectedDecal_default_instance_._instance,
    &::_CMsgTESmoke_default_instance_._instance,
    &::_CMsgTEWorldDecal_default_instance_._instance,
};
const char descriptor_table_protodef_te_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\010te.proto\032\026networkbasetypes.proto\"I\n\023CM"
    "sgTEArmorRicochet\022\030\n\003pos\030\001 \001(\0132\013.CMsgVec"
    "tor\022\030\n\003dir\030\002 \001(\0132\013.CMsgVector\"\341\001\n\016CMsgTE"
    "BaseBeam\022\022\n\nmodelindex\030\001 \001(\006\022\021\n\thaloinde"
    "x\030\002 \001(\006\022\022\n\nstartframe\030\003 \001(\r\022\021\n\tframerate"
    "\030\004 \001(\r\022\014\n\004life\030\005 \001(\002\022\r\n\005width\030\006 \001(\002\022\020\n\010e"
    "ndwidth\030\007 \001(\002\022\022\n\nfadelength\030\010 \001(\r\022\021\n\tamp"
    "litude\030\t \001(\002\022\r\n\005color\030\n \001(\007\022\r\n\005speed\030\013 \001"
    "(\r\022\r\n\005flags\030\014 \001(\r\"\221\001\n\022CMsgTEBeamEntPoint"
    "\022\035\n\004base\030\001 \001(\0132\017.CMsgTEBaseBeam\022\023\n\013start"
    "entity\030\002 \001(\r\022\021\n\tendentity\030\003 \001(\r\022\032\n\005start"
    "\030\004 \001(\0132\013.CMsgVector\022\030\n\003end\030\005 \001(\0132\013.CMsgV"
    "ector\"W\n\016CMsgTEBeamEnts\022\035\n\004base\030\001 \001(\0132\017."
    "CMsgTEBaseBeam\022\023\n\013startentity\030\002 \001(\r\022\021\n\te"
    "ndentity\030\003 \001(\r\"g\n\020CMsgTEBeamPoints\022\035\n\004ba"
    "se\030\001 \001(\0132\017.CMsgTEBaseBeam\022\032\n\005start\030\002 \001(\013"
    "2\013.CMsgVector\022\030\n\003end\030\003 \001(\0132\013.CMsgVector\""
    "W\n\016CMsgTEBeamRing\022\035\n\004base\030\001 \001(\0132\017.CMsgTE"
    "BaseBeam\022\023\n\013startentity\030\002 \001(\r\022\021\n\tendenti"
    "ty\030\003 \001(\r\"\211\001\n\016CMsgTEBSPDecal\022\033\n\006origin\030\001 "
    "\001(\0132\013.CMsgVector\022\033\n\006normal\030\002 \001(\0132\013.CMsgV"
    "ector\022\032\n\005saxis\030\003 \001(\0132\013.CMsgVector\022\022\n\006ent"
    "ity\030\004 \001(\005:\002-1\022\r\n\005index\030\005 \001(\r\"s\n\rCMsgTEBu"
    "bbles\022\031\n\004mins\030\001 \001(\0132\013.CMsgVector\022\031\n\004maxs"
    "\030\002 \001(\0132\013.CMsgVector\022\016\n\006height\030\003 \001(\002\022\r\n\005c"
    "ount\030\004 \001(\r\022\r\n\005speed\030\005 \001(\002\"w\n\021CMsgTEBubbl"
    "eTrail\022\031\n\004mins\030\001 \001(\0132\013.CMsgVector\022\031\n\004max"
    "s\030\002 \001(\0132\013.CMsgVector\022\016\n\006waterz\030\003 \001(\002\022\r\n\005"
    "count\030\004 \001(\r\022\r\n\005speed\030\005 \001(\002\"y\n\013CMsgTEDeca"
    "l\022\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\032\n\005start\030"
    "\002 \001(\0132\013.CMsgVector\022\022\n\006entity\030\003 \001(\005:\002-1\022\016"
    "\n\006hitbox\030\004 \001(\r\022\r\n\005index\030\005 \001(\r\"\261\003\n\016CMsgEf"
    "fectData\022\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\032\n"
    "\005start\030\002 \001(\0132\013.CMsgVector\022\033\n\006normal\030\003 \001("
    "\0132\013.CMsgVector\022\033\n\006angles\030\004 \001(\0132\013.CMsgQAn"
    "gle\022\030\n\006entity\030\005 \001(\007:\01016777215\022\035\n\013otheren"
    "tity\030\006 \001(\007:\01016777215\022\r\n\005scale\030\007 \001(\002\022\021\n\tm"
    "agnitude\030\010 \001(\002\022\016\n\006radius\030\t \001(\002\022\023\n\013surfac"
    "eprop\030\n \001(\007\022\023\n\013effectindex\030\013 \001(\006\022\022\n\ndama"
    "getype\030\014 \001(\r\022\020\n\010material\030\r \001(\r\022\016\n\006hitbox"
    "\030\016 \001(\r\022\r\n\005color\030\017 \001(\r\022\r\n\005flags\030\020 \001(\r\022\027\n\017"
    "attachmentindex\030\021 \001(\005\022\022\n\neffectname\030\022 \001("
    "\r\022\026\n\016attachmentname\030\023 \001(\r\";\n\024CMsgTEEffec"
    "tDispatch\022#\n\neffectdata\030\001 \001(\0132\017.CMsgEffe"
    "ctData\"[\n\022CMsgTEEnergySplash\022\030\n\003pos\030\001 \001("
    "\0132\013.CMsgVector\022\030\n\003dir\030\002 \001(\0132\013.CMsgVector"
    "\022\021\n\texplosive\030\003 \001(\010\"B\n\nCMsgTEFizz\022\022\n\006ent"
    "ity\030\001 \001(\005:\002-1\022\017\n\007density\030\002 \001(\r\022\017\n\007curren"
    "t\030\003 \001(\005\"\371\001\n\024CMsgTEShatterSurface\022\033\n\006orig"
    "in\030\001 \001(\0132\013.CMsgVector\022\033\n\006angles\030\002 \001(\0132\013."
    "CMsgQAngle\022\032\n\005force\030\003 \001(\0132\013.CMsgVector\022\035"
    "\n\010forcepos\030\004 \001(\0132\013.CMsgVector\022\r\n\005width\030\005"
    " \001(\002\022\016\n\006height\030\006 \001(\002\022\021\n\tshardsize\030\007 \001(\002\022"
    "\023\n\013surfacetype\030\010 \001(\r\022\022\n\nfrontcolor\030\t \001(\007"
    "\022\021\n\tbackcolor\030\n \001(\007\"`\n\020CMsgTEGlowSprite\022"
    "\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\r\n\005scale\030\002 "
    "\001(\002\022\014\n\004life\030\003 \001(\002\022\022\n\nbrightness\030\004 \001(\r\"V\n"
    "\014CMsgTEImpact\022\033\n\006origin\030\001 \001(\0132\013.CMsgVect"
    "or\022\033\n\006normal\030\002 \001(\0132\013.CMsgVector\022\014\n\004type\030"
    "\003 \001(\r\"j\n\021CMsgTEMuzzleFlash\022\033\n\006origin\030\001 \001"
    "(\0132\013.CMsgVector\022\033\n\006angles\030\002 \001(\0132\013.CMsgQA"
    "ngle\022\r\n\005scale\030\003 \001(\002\022\014\n\004type\030\004 \001(\r\"o\n\021CMs"
    "gTEBloodStream\022\033\n\006origin\030\001 \001(\0132\013.CMsgVec"
    "tor\022\036\n\tdirection\030\002 \001(\0132\013.CMsgVector\022\r\n\005c"
    "olor\030\003 \001(\007\022\016\n\006amount\030\004 \001(\r\"\322\002\n\017CMsgTEExp"
    "losion\022\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\021\n\tf"
    "ramerate\030\002 \001(\r\022\r\n\005flags\030\003 \001(\r\022\033\n\006normal\030"
    "\004 \001(\0132\013.CMsgVector\022\024\n\014materialtype\030\005 \001(\r"
    "\022\016\n\006radius\030\006 \001(\r\022\021\n\tmagnitude\030\007 \001(\r\022\r\n\005s"
    "cale\030\010 \001(\002\022\027\n\017affect_ragdolls\030\t \001(\010\022\023\n\013e"
    "ffect_name\030\n \001(\t\022\026\n\016explosion_type\030\013 \001(\r"
    "\022\025\n\rcreate_debris\030\014 \001(\010\022\"\n\rdebris_origin"
    "\030\r \001(\0132\013.CMsgVector\022\032\n\022debris_surfacepro"
    "p\030\016 \001(\007\"f\n\nCMsgTEDust\022\033\n\006origin\030\001 \001(\0132\013."
    "CMsgVector\022\014\n\004size\030\002 \001(\002\022\r\n\005speed\030\003 \001(\002\022"
    "\036\n\tdirection\030\004 \001(\0132\013.CMsgVector\"B\n\021CMsgT"
    "ELargeFunnel\022\033\n\006origin\030\001 \001(\0132\013.CMsgVecto"
    "r\022\020\n\010reversed\030\002 \001(\r\"n\n\014CMsgTESparks\022\033\n\006o"
    "rigin\030\001 \001(\0132\013.CMsgVector\022\021\n\tmagnitude\030\002 "
    "\001(\r\022\016\n\006length\030\003 \001(\r\022\036\n\tdirection\030\004 \001(\0132\013"
    ".CMsgVector\"\274\002\n\021CMsgTEPhysicsProp\022\033\n\006ori"
    "gin\030\001 \001(\0132\013.CMsgVector\022\035\n\010velocity\030\002 \001(\013"
    "2\013.CMsgVector\022\033\n\006angles\030\003 \001(\0132\013.CMsgQAng"
    "le\022\014\n\004skin\030\004 \001(\007\022\r\n\005flags\030\005 \001(\r\022\017\n\007effec"
    "ts\030\006 \001(\r\022\r\n\005color\030\007 \001(\007\022\022\n\nmodelindex\030\010 "
    "\001(\006\022#\n\033unused_breakmodelsnottomake\030\t \001(\r"
    "\022\r\n\005scale\030\n \001(\002\022\033\n\006dmgpos\030\013 \001(\0132\013.CMsgVe"
    "ctor\022\033\n\006dmgdir\030\014 \001(\0132\013.CMsgVector\022\017\n\007dmg"
    "type\030\r \001(\005\"X\n\021CMsgTEPlayerDecal\022\033\n\006origi"
    "n\030\001 \001(\0132\013.CMsgVector\022\022\n\006player\030\002 \001(\005:\002-1"
    "\022\022\n\006entity\030\003 \001(\005:\002-1\"q\n\024CMsgTEProjectedD"
    "ecal\022\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\033\n\006ang"
    "les\030\002 \001(\0132\013.CMsgQAngle\022\r\n\005index\030\003 \001(\r\022\020\n"
    "\010distance\030\004 \001(\002\"9\n\013CMsgTESmoke\022\033\n\006origin"
    "\030\001 \001(\0132\013.CMsgVector\022\r\n\005scale\030\002 \001(\002\"[\n\020CM"
    "sgTEWorldDecal\022\033\n\006origin\030\001 \001(\0132\013.CMsgVec"
    "tor\022\033\n\006normal\030\002 \001(\0132\013.CMsgVector\022\r\n\005inde"
    "x\030\003 \001(\r*\275\004\n\016ETEProtobufIds\022\030\n\023TE_EffectD"
    "ispatchId\020\220\003\022\027\n\022TE_ArmorRicochetId\020\221\003\022\026\n"
    "\021TE_BeamEntPointId\020\222\003\022\022\n\rTE_BeamEntsId\020\223"
    "\003\022\024\n\017TE_BeamPointsId\020\224\003\022\022\n\rTE_BeamRingId"
    "\020\225\003\022\022\n\rTE_BSPDecalId\020\227\003\022\021\n\014TE_BubblesId\020"
    "\230\003\022\025\n\020TE_BubbleTrailId\020\231\003\022\017\n\nTE_DecalId\020"
    "\232\003\022\024\n\017TE_WorldDecalId\020\233\003\022\026\n\021TE_EnergySpl"
    "ashId\020\234\003\022\016\n\tTE_FizzId\020\235\003\022\030\n\023TE_ShatterSu"
    "rfaceId\020\236\003\022\024\n\017TE_GlowSpriteId\020\237\003\022\020\n\013TE_I"
    "mpactId\020\240\003\022\025\n\020TE_MuzzleFlashId\020\241\003\022\025\n\020TE_"
    "BloodStreamId\020\242\003\022\023\n\016TE_ExplosionId\020\243\003\022\016\n"
    "\tTE_DustId\020\244\003\022\025\n\020TE_LargeFunnelId\020\245\003\022\020\n\013"
    "TE_SparksId\020\246\003\022\025\n\020TE_PhysicsPropId\020\247\003\022\025\n"
    "\020TE_PlayerDecalId\020\250\003\022\030\n\023TE_ProjectedDeca"
    "lId\020\251\003\022\017\n\nTE_SmokeId\020\252\003"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_te_2eproto_deps[1] = {
        &::descriptor_table_networkbasetypes_2eproto,
};
static ::absl::once_flag descriptor_table_te_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_te_2eproto = {
    false,
    false,
    4463,
    descriptor_table_protodef_te_2eproto,
    "te.proto",
    &descriptor_table_te_2eproto_once,
    descriptor_table_te_2eproto_deps,
    1,
    28,
    schemas,
    file_default_instances,
    TableStruct_te_2eproto::offsets,
    file_level_enum_descriptors_te_2eproto,
    file_level_service_descriptors_te_2eproto,
};
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ETEProtobufIds_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_te_2eproto);
  return file_level_enum_descriptors_te_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ETEProtobufIds_internal_data_[] = {
    393616u, 32u, 2097150u, };
// ===================================================================

class CMsgTEArmorRicochet::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEArmorRicochet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_._has_bits_);
};

void CMsgTEArmorRicochet::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEArmorRicochet::clear_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dir_ != nullptr) _impl_.dir_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEArmorRicochet::CMsgTEArmorRicochet(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEArmorRicochet_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEArmorRicochet)
}
PROTOBUF_NDEBUG_INLINE CMsgTEArmorRicochet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEArmorRicochet& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEArmorRicochet::CMsgTEArmorRicochet(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEArmorRicochet& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEArmorRicochet_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEArmorRicochet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_)
                : nullptr;
  _impl_.dir_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dir_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgTEArmorRicochet)
}
PROTOBUF_NDEBUG_INLINE CMsgTEArmorRicochet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEArmorRicochet::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, dir_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::dir_));
}
CMsgTEArmorRicochet::~CMsgTEArmorRicochet() {
  // @@protoc_insertion_point(destructor:CMsgTEArmorRicochet)
  SharedDtor(*this);
}
inline void CMsgTEArmorRicochet::SharedDtor(MessageLite& self) {
  CMsgTEArmorRicochet& this_ = static_cast<CMsgTEArmorRicochet&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pos_;
  delete this_._impl_.dir_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEArmorRicochet::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEArmorRicochet(arena);
}
constexpr auto CMsgTEArmorRicochet::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEArmorRicochet),
                                            alignof(CMsgTEArmorRicochet));
}
constexpr auto CMsgTEArmorRicochet::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEArmorRicochet_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEArmorRicochet::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEArmorRicochet>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEArmorRicochet::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEArmorRicochet>(), &CMsgTEArmorRicochet::ByteSizeLong,
              &CMsgTEArmorRicochet::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_._cached_size_),
          false,
      },
      &CMsgTEArmorRicochet::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEArmorRicochet_class_data_ =
            CMsgTEArmorRicochet::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEArmorRicochet::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEArmorRicochet_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEArmorRicochet_class_data_.tc_table);
  return CMsgTEArmorRicochet_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CMsgTEArmorRicochet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEArmorRicochet_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEArmorRicochet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector dir = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_.dir_)}},
    // optional .CMsgVector pos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector pos = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector dir = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_.dir_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEArmorRicochet::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEArmorRicochet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.dir_ != nullptr);
      _impl_.dir_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEArmorRicochet::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEArmorRicochet& this_ = static_cast<const CMsgTEArmorRicochet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEArmorRicochet::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEArmorRicochet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEArmorRicochet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector pos = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector dir = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.dir_, this_._impl_.dir_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEArmorRicochet)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEArmorRicochet::ByteSizeLong(const MessageLite& base) {
  const CMsgTEArmorRicochet& this_ = static_cast<const CMsgTEArmorRicochet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEArmorRicochet::ByteSizeLong() const {
  const CMsgTEArmorRicochet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEArmorRicochet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgVector pos = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
    }
    // optional .CMsgVector dir = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dir_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEArmorRicochet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEArmorRicochet*>(&to_msg);
  auto& from = static_cast<const CMsgTEArmorRicochet&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEArmorRicochet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.dir_ != nullptr);
      if (_this->_impl_.dir_ == nullptr) {
        _this->_impl_.dir_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dir_);
      } else {
        _this->_impl_.dir_->MergeFrom(*from._impl_.dir_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEArmorRicochet::CopyFrom(const CMsgTEArmorRicochet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEArmorRicochet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEArmorRicochet::InternalSwap(CMsgTEArmorRicochet* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_.dir_)
      + sizeof(CMsgTEArmorRicochet::_impl_.dir_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEArmorRicochet, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata CMsgTEArmorRicochet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBaseBeam::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBaseBeam>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_._has_bits_);
};

CMsgTEBaseBeam::CMsgTEBaseBeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBaseBeam_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBaseBeam)
}
CMsgTEBaseBeam::CMsgTEBaseBeam(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgTEBaseBeam& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBaseBeam_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgTEBaseBeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBaseBeam::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, modelindex_),
           0,
           offsetof(Impl_, flags_) -
               offsetof(Impl_, modelindex_) +
               sizeof(Impl_::flags_));
}
CMsgTEBaseBeam::~CMsgTEBaseBeam() {
  // @@protoc_insertion_point(destructor:CMsgTEBaseBeam)
  SharedDtor(*this);
}
inline void CMsgTEBaseBeam::SharedDtor(MessageLite& self) {
  CMsgTEBaseBeam& this_ = static_cast<CMsgTEBaseBeam&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBaseBeam::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBaseBeam(arena);
}
constexpr auto CMsgTEBaseBeam::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBaseBeam),
                                            alignof(CMsgTEBaseBeam));
}
constexpr auto CMsgTEBaseBeam::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBaseBeam_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBaseBeam::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBaseBeam>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBaseBeam::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBaseBeam>(), &CMsgTEBaseBeam::ByteSizeLong,
              &CMsgTEBaseBeam::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_._cached_size_),
          false,
      },
      &CMsgTEBaseBeam::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBaseBeam_class_data_ =
            CMsgTEBaseBeam::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBaseBeam::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBaseBeam_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBaseBeam_class_data_.tc_table);
  return CMsgTEBaseBeam_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 0, 2>
CMsgTEBaseBeam::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgTEBaseBeam_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBaseBeam>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 modelindex = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.modelindex_)}},
    // optional fixed64 haloindex = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.haloindex_)}},
    // optional uint32 startframe = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBaseBeam, _impl_.startframe_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.startframe_)}},
    // optional uint32 framerate = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBaseBeam, _impl_.framerate_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.framerate_)}},
    // optional float life = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.life_)}},
    // optional float width = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.width_)}},
    // optional float endwidth = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.endwidth_)}},
    // optional uint32 fadelength = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBaseBeam, _impl_.fadelength_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.fadelength_)}},
    // optional float amplitude = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.amplitude_)}},
    // optional fixed32 color = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.color_)}},
    // optional uint32 speed = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBaseBeam, _impl_.speed_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.speed_)}},
    // optional uint32 flags = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBaseBeam, _impl_.flags_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.flags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 modelindex = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.modelindex_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 haloindex = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.haloindex_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 startframe = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.startframe_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 framerate = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.framerate_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float life = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.life_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float width = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.width_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float endwidth = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.endwidth_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 fadelength = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.fadelength_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float amplitude = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.amplitude_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional fixed32 color = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.color_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional uint32 speed = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.speed_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flags = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.flags_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBaseBeam::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBaseBeam)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.modelindex_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fadelength_) -
        reinterpret_cast<char*>(&_impl_.modelindex_)) + sizeof(_impl_.fadelength_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.amplitude_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.flags_) -
        reinterpret_cast<char*>(&_impl_.amplitude_)) + sizeof(_impl_.flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBaseBeam::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBaseBeam& this_ = static_cast<const CMsgTEBaseBeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBaseBeam::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBaseBeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBaseBeam)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional fixed64 modelindex = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this_._internal_modelindex(), target);
  }

  // optional fixed64 haloindex = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this_._internal_haloindex(), target);
  }

  // optional uint32 startframe = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_startframe(), target);
  }

  // optional uint32 framerate = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_framerate(), target);
  }

  // optional float life = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this_._internal_life(), target);
  }

  // optional float width = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this_._internal_width(), target);
  }

  // optional float endwidth = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this_._internal_endwidth(), target);
  }

  // optional uint32 fadelength = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_fadelength(), target);
  }

  // optional float amplitude = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this_._internal_amplitude(), target);
  }

  // optional fixed32 color = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        10, this_._internal_color(), target);
  }

  // optional uint32 speed = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_speed(), target);
  }

  // optional uint32 flags = 12;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_flags(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBaseBeam)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBaseBeam::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBaseBeam& this_ = static_cast<const CMsgTEBaseBeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBaseBeam::ByteSizeLong() const {
  const CMsgTEBaseBeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBaseBeam)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000003u & cached_has_bits) * 9;
  total_size += ::absl::popcount(0x00000370u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000008cu) != 0) {
    // optional uint32 startframe = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_startframe());
    }
    // optional uint32 framerate = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_framerate());
    }
    // optional uint32 fadelength = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_fadelength());
    }
  }
  if ((cached_has_bits & 0x00000c00u) != 0) {
    // optional uint32 speed = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_speed());
    }
    // optional uint32 flags = 12;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_flags());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBaseBeam::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBaseBeam*>(&to_msg);
  auto& from = static_cast<const CMsgTEBaseBeam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBaseBeam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.modelindex_ = from._impl_.modelindex_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.haloindex_ = from._impl_.haloindex_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.startframe_ = from._impl_.startframe_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.framerate_ = from._impl_.framerate_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.life_ = from._impl_.life_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.endwidth_ = from._impl_.endwidth_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.fadelength_ = from._impl_.fadelength_;
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.amplitude_ = from._impl_.amplitude_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.color_ = from._impl_.color_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBaseBeam::CopyFrom(const CMsgTEBaseBeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBaseBeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBaseBeam::InternalSwap(CMsgTEBaseBeam* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.flags_)
      + sizeof(CMsgTEBaseBeam::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBaseBeam, _impl_.modelindex_)>(
          reinterpret_cast<char*>(&_impl_.modelindex_),
          reinterpret_cast<char*>(&other->_impl_.modelindex_));
}

::google::protobuf::Metadata CMsgTEBaseBeam::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBeamEntPoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBeamEntPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_._has_bits_);
};

void CMsgTEBeamEntPoint::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ != nullptr) _impl_.start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgTEBeamEntPoint::clear_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ != nullptr) _impl_.end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CMsgTEBeamEntPoint::CMsgTEBeamEntPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamEntPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBeamEntPoint)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamEntPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBeamEntPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBeamEntPoint::CMsgTEBeamEntPoint(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBeamEntPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamEntPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBeamEntPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_)
                : nullptr;
  _impl_.start_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_)
                : nullptr;
  _impl_.end_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, startentity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, startentity_),
           offsetof(Impl_, endentity_) -
               offsetof(Impl_, startentity_) +
               sizeof(Impl_::endentity_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEBeamEntPoint)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamEntPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBeamEntPoint::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, endentity_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::endentity_));
}
CMsgTEBeamEntPoint::~CMsgTEBeamEntPoint() {
  // @@protoc_insertion_point(destructor:CMsgTEBeamEntPoint)
  SharedDtor(*this);
}
inline void CMsgTEBeamEntPoint::SharedDtor(MessageLite& self) {
  CMsgTEBeamEntPoint& this_ = static_cast<CMsgTEBeamEntPoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  delete this_._impl_.start_;
  delete this_._impl_.end_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBeamEntPoint::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBeamEntPoint(arena);
}
constexpr auto CMsgTEBeamEntPoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBeamEntPoint),
                                            alignof(CMsgTEBeamEntPoint));
}
constexpr auto CMsgTEBeamEntPoint::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBeamEntPoint_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBeamEntPoint::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBeamEntPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBeamEntPoint::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBeamEntPoint>(), &CMsgTEBeamEntPoint::ByteSizeLong,
              &CMsgTEBeamEntPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_._cached_size_),
          false,
      },
      &CMsgTEBeamEntPoint::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBeamEntPoint_class_data_ =
            CMsgTEBeamEntPoint::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBeamEntPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBeamEntPoint_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBeamEntPoint_class_data_.tc_table);
  return CMsgTEBeamEntPoint_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2>
CMsgTEBeamEntPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBeamEntPoint_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBeamEntPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgTEBaseBeam base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.base_)}},
    // optional uint32 startentity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBeamEntPoint, _impl_.startentity_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.startentity_)}},
    // optional uint32 endentity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBeamEntPoint, _impl_.endentity_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.endentity_)}},
    // optional .CMsgVector start = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.start_)}},
    // optional .CMsgVector end = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.end_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgTEBaseBeam base = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 startentity = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.startentity_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 endentity = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.endentity_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgVector start = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.start_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector end = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.end_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgTEBaseBeam>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBeamEntPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBeamEntPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.start_ != nullptr);
      _impl_.start_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.end_ != nullptr);
      _impl_.end_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.startentity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.endentity_) -
        reinterpret_cast<char*>(&_impl_.startentity_)) + sizeof(_impl_.endentity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamEntPoint::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBeamEntPoint& this_ = static_cast<const CMsgTEBeamEntPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamEntPoint::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBeamEntPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBeamEntPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgTEBaseBeam base = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 startentity = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_startentity(), target);
  }

  // optional uint32 endentity = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_endentity(), target);
  }

  // optional .CMsgVector start = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.start_, this_._impl_.start_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector end = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.end_, this_._impl_.end_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBeamEntPoint)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBeamEntPoint::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBeamEntPoint& this_ = static_cast<const CMsgTEBeamEntPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBeamEntPoint::ByteSizeLong() const {
  const CMsgTEBeamEntPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBeamEntPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional .CMsgTEBaseBeam base = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
    }
    // optional .CMsgVector start = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_);
    }
    // optional .CMsgVector end = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_);
    }
    // optional uint32 startentity = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_startentity());
    }
    // optional uint32 endentity = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_endentity());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBeamEntPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBeamEntPoint*>(&to_msg);
  auto& from = static_cast<const CMsgTEBeamEntPoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBeamEntPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.base_ != nullptr);
      if (_this->_impl_.base_ == nullptr) {
        _this->_impl_.base_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_);
      } else {
        _this->_impl_.base_->MergeFrom(*from._impl_.base_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.start_ != nullptr);
      if (_this->_impl_.start_ == nullptr) {
        _this->_impl_.start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_);
      } else {
        _this->_impl_.start_->MergeFrom(*from._impl_.start_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.end_ != nullptr);
      if (_this->_impl_.end_ == nullptr) {
        _this->_impl_.end_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_);
      } else {
        _this->_impl_.end_->MergeFrom(*from._impl_.end_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.startentity_ = from._impl_.startentity_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.endentity_ = from._impl_.endentity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBeamEntPoint::CopyFrom(const CMsgTEBeamEntPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBeamEntPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBeamEntPoint::InternalSwap(CMsgTEBeamEntPoint* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.endentity_)
      + sizeof(CMsgTEBeamEntPoint::_impl_.endentity_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBeamEntPoint, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata CMsgTEBeamEntPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBeamEnts::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBeamEnts>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_._has_bits_);
};

CMsgTEBeamEnts::CMsgTEBeamEnts(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamEnts_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBeamEnts)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamEnts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBeamEnts& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBeamEnts::CMsgTEBeamEnts(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBeamEnts& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamEnts_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBeamEnts* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, startentity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, startentity_),
           offsetof(Impl_, endentity_) -
               offsetof(Impl_, startentity_) +
               sizeof(Impl_::endentity_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEBeamEnts)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamEnts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBeamEnts::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, endentity_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::endentity_));
}
CMsgTEBeamEnts::~CMsgTEBeamEnts() {
  // @@protoc_insertion_point(destructor:CMsgTEBeamEnts)
  SharedDtor(*this);
}
inline void CMsgTEBeamEnts::SharedDtor(MessageLite& self) {
  CMsgTEBeamEnts& this_ = static_cast<CMsgTEBeamEnts&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBeamEnts::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBeamEnts(arena);
}
constexpr auto CMsgTEBeamEnts::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBeamEnts),
                                            alignof(CMsgTEBeamEnts));
}
constexpr auto CMsgTEBeamEnts::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBeamEnts_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBeamEnts::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBeamEnts>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBeamEnts::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBeamEnts>(), &CMsgTEBeamEnts::ByteSizeLong,
              &CMsgTEBeamEnts::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_._cached_size_),
          false,
      },
      &CMsgTEBeamEnts::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBeamEnts_class_data_ =
            CMsgTEBeamEnts::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBeamEnts::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBeamEnts_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBeamEnts_class_data_.tc_table);
  return CMsgTEBeamEnts_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
CMsgTEBeamEnts::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBeamEnts_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBeamEnts>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgTEBaseBeam base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.base_)}},
    // optional uint32 startentity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBeamEnts, _impl_.startentity_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.startentity_)}},
    // optional uint32 endentity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBeamEnts, _impl_.endentity_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.endentity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgTEBaseBeam base = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 startentity = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.startentity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 endentity = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.endentity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgTEBaseBeam>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBeamEnts::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBeamEnts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.startentity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.endentity_) -
        reinterpret_cast<char*>(&_impl_.startentity_)) + sizeof(_impl_.endentity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamEnts::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBeamEnts& this_ = static_cast<const CMsgTEBeamEnts&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamEnts::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBeamEnts& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBeamEnts)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgTEBaseBeam base = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 startentity = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_startentity(), target);
  }

  // optional uint32 endentity = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_endentity(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBeamEnts)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBeamEnts::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBeamEnts& this_ = static_cast<const CMsgTEBeamEnts&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBeamEnts::ByteSizeLong() const {
  const CMsgTEBeamEnts& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBeamEnts)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .CMsgTEBaseBeam base = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
    }
    // optional uint32 startentity = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_startentity());
    }
    // optional uint32 endentity = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_endentity());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBeamEnts::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBeamEnts*>(&to_msg);
  auto& from = static_cast<const CMsgTEBeamEnts&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBeamEnts)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.base_ != nullptr);
      if (_this->_impl_.base_ == nullptr) {
        _this->_impl_.base_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_);
      } else {
        _this->_impl_.base_->MergeFrom(*from._impl_.base_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.startentity_ = from._impl_.startentity_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.endentity_ = from._impl_.endentity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBeamEnts::CopyFrom(const CMsgTEBeamEnts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBeamEnts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBeamEnts::InternalSwap(CMsgTEBeamEnts* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.endentity_)
      + sizeof(CMsgTEBeamEnts::_impl_.endentity_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBeamEnts, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata CMsgTEBeamEnts::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBeamPoints::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBeamPoints>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_._has_bits_);
};

void CMsgTEBeamPoints::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ != nullptr) _impl_.start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgTEBeamPoints::clear_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ != nullptr) _impl_.end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CMsgTEBeamPoints::CMsgTEBeamPoints(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamPoints_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBeamPoints)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamPoints::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBeamPoints& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBeamPoints::CMsgTEBeamPoints(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBeamPoints& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamPoints_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBeamPoints* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_)
                : nullptr;
  _impl_.start_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_)
                : nullptr;
  _impl_.end_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgTEBeamPoints)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamPoints::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBeamPoints::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, end_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::end_));
}
CMsgTEBeamPoints::~CMsgTEBeamPoints() {
  // @@protoc_insertion_point(destructor:CMsgTEBeamPoints)
  SharedDtor(*this);
}
inline void CMsgTEBeamPoints::SharedDtor(MessageLite& self) {
  CMsgTEBeamPoints& this_ = static_cast<CMsgTEBeamPoints&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  delete this_._impl_.start_;
  delete this_._impl_.end_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBeamPoints::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBeamPoints(arena);
}
constexpr auto CMsgTEBeamPoints::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBeamPoints),
                                            alignof(CMsgTEBeamPoints));
}
constexpr auto CMsgTEBeamPoints::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBeamPoints_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBeamPoints::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBeamPoints>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBeamPoints::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBeamPoints>(), &CMsgTEBeamPoints::ByteSizeLong,
              &CMsgTEBeamPoints::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_._cached_size_),
          false,
      },
      &CMsgTEBeamPoints::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBeamPoints_class_data_ =
            CMsgTEBeamPoints::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBeamPoints::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBeamPoints_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBeamPoints_class_data_.tc_table);
  return CMsgTEBeamPoints_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
CMsgTEBeamPoints::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBeamPoints_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBeamPoints>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgTEBaseBeam base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.base_)}},
    // optional .CMsgVector start = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.start_)}},
    // optional .CMsgVector end = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.end_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgTEBaseBeam base = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector start = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.start_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector end = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.end_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgTEBaseBeam>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBeamPoints::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBeamPoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.start_ != nullptr);
      _impl_.start_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.end_ != nullptr);
      _impl_.end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamPoints::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBeamPoints& this_ = static_cast<const CMsgTEBeamPoints&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamPoints::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBeamPoints& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBeamPoints)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgTEBaseBeam base = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector start = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.start_, this_._impl_.start_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector end = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.end_, this_._impl_.end_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBeamPoints)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBeamPoints::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBeamPoints& this_ = static_cast<const CMsgTEBeamPoints&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBeamPoints::ByteSizeLong() const {
  const CMsgTEBeamPoints& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBeamPoints)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .CMsgTEBaseBeam base = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
    }
    // optional .CMsgVector start = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_);
    }
    // optional .CMsgVector end = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBeamPoints::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBeamPoints*>(&to_msg);
  auto& from = static_cast<const CMsgTEBeamPoints&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBeamPoints)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.base_ != nullptr);
      if (_this->_impl_.base_ == nullptr) {
        _this->_impl_.base_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_);
      } else {
        _this->_impl_.base_->MergeFrom(*from._impl_.base_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.start_ != nullptr);
      if (_this->_impl_.start_ == nullptr) {
        _this->_impl_.start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_);
      } else {
        _this->_impl_.start_->MergeFrom(*from._impl_.start_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.end_ != nullptr);
      if (_this->_impl_.end_ == nullptr) {
        _this->_impl_.end_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_);
      } else {
        _this->_impl_.end_->MergeFrom(*from._impl_.end_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBeamPoints::CopyFrom(const CMsgTEBeamPoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBeamPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBeamPoints::InternalSwap(CMsgTEBeamPoints* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.end_)
      + sizeof(CMsgTEBeamPoints::_impl_.end_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBeamPoints, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata CMsgTEBeamPoints::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBeamRing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBeamRing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_._has_bits_);
};

CMsgTEBeamRing::CMsgTEBeamRing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamRing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBeamRing)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamRing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBeamRing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBeamRing::CMsgTEBeamRing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBeamRing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBeamRing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBeamRing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, startentity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, startentity_),
           offsetof(Impl_, endentity_) -
               offsetof(Impl_, startentity_) +
               sizeof(Impl_::endentity_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEBeamRing)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBeamRing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBeamRing::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, endentity_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::endentity_));
}
CMsgTEBeamRing::~CMsgTEBeamRing() {
  // @@protoc_insertion_point(destructor:CMsgTEBeamRing)
  SharedDtor(*this);
}
inline void CMsgTEBeamRing::SharedDtor(MessageLite& self) {
  CMsgTEBeamRing& this_ = static_cast<CMsgTEBeamRing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBeamRing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBeamRing(arena);
}
constexpr auto CMsgTEBeamRing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBeamRing),
                                            alignof(CMsgTEBeamRing));
}
constexpr auto CMsgTEBeamRing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBeamRing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBeamRing::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBeamRing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBeamRing::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBeamRing>(), &CMsgTEBeamRing::ByteSizeLong,
              &CMsgTEBeamRing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_._cached_size_),
          false,
      },
      &CMsgTEBeamRing::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBeamRing_class_data_ =
            CMsgTEBeamRing::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBeamRing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBeamRing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBeamRing_class_data_.tc_table);
  return CMsgTEBeamRing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
CMsgTEBeamRing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBeamRing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBeamRing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgTEBaseBeam base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.base_)}},
    // optional uint32 startentity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBeamRing, _impl_.startentity_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.startentity_)}},
    // optional uint32 endentity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBeamRing, _impl_.endentity_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.endentity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgTEBaseBeam base = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 startentity = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.startentity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 endentity = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.endentity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgTEBaseBeam>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBeamRing::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBeamRing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.startentity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.endentity_) -
        reinterpret_cast<char*>(&_impl_.startentity_)) + sizeof(_impl_.endentity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamRing::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBeamRing& this_ = static_cast<const CMsgTEBeamRing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBeamRing::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBeamRing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBeamRing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgTEBaseBeam base = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 startentity = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_startentity(), target);
  }

  // optional uint32 endentity = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_endentity(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBeamRing)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBeamRing::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBeamRing& this_ = static_cast<const CMsgTEBeamRing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBeamRing::ByteSizeLong() const {
  const CMsgTEBeamRing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBeamRing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .CMsgTEBaseBeam base = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
    }
    // optional uint32 startentity = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_startentity());
    }
    // optional uint32 endentity = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_endentity());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBeamRing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBeamRing*>(&to_msg);
  auto& from = static_cast<const CMsgTEBeamRing&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBeamRing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.base_ != nullptr);
      if (_this->_impl_.base_ == nullptr) {
        _this->_impl_.base_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_);
      } else {
        _this->_impl_.base_->MergeFrom(*from._impl_.base_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.startentity_ = from._impl_.startentity_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.endentity_ = from._impl_.endentity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBeamRing::CopyFrom(const CMsgTEBeamRing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBeamRing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBeamRing::InternalSwap(CMsgTEBeamRing* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.endentity_)
      + sizeof(CMsgTEBeamRing::_impl_.endentity_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBeamRing, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata CMsgTEBeamRing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBSPDecal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBSPDecal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_._has_bits_);
};

void CMsgTEBSPDecal::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEBSPDecal::clear_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normal_ != nullptr) _impl_.normal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgTEBSPDecal::clear_saxis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.saxis_ != nullptr) _impl_.saxis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CMsgTEBSPDecal::CMsgTEBSPDecal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBSPDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBSPDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBSPDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBSPDecal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBSPDecal::CMsgTEBSPDecal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBSPDecal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBSPDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBSPDecal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.normal_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_)
                : nullptr;
  _impl_.saxis_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.saxis_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, entity_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::entity_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEBSPDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBSPDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_{-1} {}

inline void CMsgTEBSPDecal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::index_));
}
CMsgTEBSPDecal::~CMsgTEBSPDecal() {
  // @@protoc_insertion_point(destructor:CMsgTEBSPDecal)
  SharedDtor(*this);
}
inline void CMsgTEBSPDecal::SharedDtor(MessageLite& self) {
  CMsgTEBSPDecal& this_ = static_cast<CMsgTEBSPDecal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.normal_;
  delete this_._impl_.saxis_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBSPDecal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBSPDecal(arena);
}
constexpr auto CMsgTEBSPDecal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgTEBSPDecal),
                                            alignof(CMsgTEBSPDecal));
}
constexpr auto CMsgTEBSPDecal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBSPDecal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBSPDecal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBSPDecal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBSPDecal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBSPDecal>(), &CMsgTEBSPDecal::ByteSizeLong,
              &CMsgTEBSPDecal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_._cached_size_),
          false,
      },
      &CMsgTEBSPDecal::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBSPDecal_class_data_ =
            CMsgTEBSPDecal::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBSPDecal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBSPDecal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBSPDecal_class_data_.tc_table);
  return CMsgTEBSPDecal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2>
CMsgTEBSPDecal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBSPDecal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBSPDecal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.origin_)}},
    // optional .CMsgVector normal = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.normal_)}},
    // optional .CMsgVector saxis = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.saxis_)}},
    // optional int32 entity = 4 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBSPDecal, _impl_.entity_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.entity_)}},
    // optional uint32 index = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBSPDecal, _impl_.index_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.index_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector normal = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.normal_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector saxis = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.saxis_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 entity = 4 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.entity_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 index = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.index_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBSPDecal::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBSPDecal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.normal_ != nullptr);
      _impl_.normal_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.saxis_ != nullptr);
      _impl_.saxis_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    _impl_.index_ = 0u;
    _impl_.entity_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBSPDecal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBSPDecal& this_ = static_cast<const CMsgTEBSPDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBSPDecal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBSPDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBSPDecal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector normal = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.normal_, this_._impl_.normal_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector saxis = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.saxis_, this_._impl_.saxis_->GetCachedSize(), target,
        stream);
  }

  // optional int32 entity = 4 [default = -1];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_entity(), target);
  }

  // optional uint32 index = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_index(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBSPDecal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBSPDecal::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBSPDecal& this_ = static_cast<const CMsgTEBSPDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBSPDecal::ByteSizeLong() const {
  const CMsgTEBSPDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBSPDecal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector normal = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.normal_);
    }
    // optional .CMsgVector saxis = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.saxis_);
    }
    // optional uint32 index = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_index());
    }
    // optional int32 entity = 4 [default = -1];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_entity());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBSPDecal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBSPDecal*>(&to_msg);
  auto& from = static_cast<const CMsgTEBSPDecal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBSPDecal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.normal_ != nullptr);
      if (_this->_impl_.normal_ == nullptr) {
        _this->_impl_.normal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_);
      } else {
        _this->_impl_.normal_->MergeFrom(*from._impl_.normal_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.saxis_ != nullptr);
      if (_this->_impl_.saxis_ == nullptr) {
        _this->_impl_.saxis_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.saxis_);
      } else {
        _this->_impl_.saxis_->MergeFrom(*from._impl_.saxis_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.entity_ = from._impl_.entity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBSPDecal::CopyFrom(const CMsgTEBSPDecal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBSPDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBSPDecal::InternalSwap(CMsgTEBSPDecal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.entity_)
      + sizeof(CMsgTEBSPDecal::_impl_.entity_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBSPDecal, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEBSPDecal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBubbles::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBubbles>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_._has_bits_);
};

void CMsgTEBubbles::clear_mins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mins_ != nullptr) _impl_.mins_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEBubbles::clear_maxs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.maxs_ != nullptr) _impl_.maxs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEBubbles::CMsgTEBubbles(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBubbles_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBubbles)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBubbles::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBubbles& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBubbles::CMsgTEBubbles(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBubbles& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBubbles_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBubbles* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mins_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mins_)
                : nullptr;
  _impl_.maxs_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.maxs_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, speed_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::speed_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEBubbles)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBubbles::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBubbles::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mins_),
           0,
           offsetof(Impl_, speed_) -
               offsetof(Impl_, mins_) +
               sizeof(Impl_::speed_));
}
CMsgTEBubbles::~CMsgTEBubbles() {
  // @@protoc_insertion_point(destructor:CMsgTEBubbles)
  SharedDtor(*this);
}
inline void CMsgTEBubbles::SharedDtor(MessageLite& self) {
  CMsgTEBubbles& this_ = static_cast<CMsgTEBubbles&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mins_;
  delete this_._impl_.maxs_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBubbles::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBubbles(arena);
}
constexpr auto CMsgTEBubbles::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBubbles),
                                            alignof(CMsgTEBubbles));
}
constexpr auto CMsgTEBubbles::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBubbles_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBubbles::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBubbles>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBubbles::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBubbles>(), &CMsgTEBubbles::ByteSizeLong,
              &CMsgTEBubbles::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_._cached_size_),
          false,
      },
      &CMsgTEBubbles::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBubbles_class_data_ =
            CMsgTEBubbles::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBubbles::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBubbles_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBubbles_class_data_.tc_table);
  return CMsgTEBubbles_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
CMsgTEBubbles::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBubbles_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBubbles>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector mins = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.mins_)}},
    // optional .CMsgVector maxs = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.maxs_)}},
    // optional float height = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.height_)}},
    // optional uint32 count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBubbles, _impl_.count_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.count_)}},
    // optional float speed = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.speed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector mins = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.mins_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector maxs = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.maxs_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float height = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.height_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 count = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float speed = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.speed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBubbles::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBubbles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.mins_ != nullptr);
      _impl_.mins_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.maxs_ != nullptr);
      _impl_.maxs_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.speed_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBubbles::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBubbles& this_ = static_cast<const CMsgTEBubbles&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBubbles::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBubbles& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBubbles)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector mins = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.mins_, this_._impl_.mins_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector maxs = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.maxs_, this_._impl_.maxs_->GetCachedSize(), target,
        stream);
  }

  // optional float height = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_height(), target);
  }

  // optional uint32 count = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_count(), target);
  }

  // optional float speed = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this_._internal_speed(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBubbles)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBubbles::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBubbles& this_ = static_cast<const CMsgTEBubbles&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBubbles::ByteSizeLong() const {
  const CMsgTEBubbles& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBubbles)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000014u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000000bu) != 0) {
    // optional .CMsgVector mins = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mins_);
    }
    // optional .CMsgVector maxs = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.maxs_);
    }
    // optional uint32 count = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_count());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBubbles::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBubbles*>(&to_msg);
  auto& from = static_cast<const CMsgTEBubbles&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBubbles)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.mins_ != nullptr);
      if (_this->_impl_.mins_ == nullptr) {
        _this->_impl_.mins_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mins_);
      } else {
        _this->_impl_.mins_->MergeFrom(*from._impl_.mins_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.maxs_ != nullptr);
      if (_this->_impl_.maxs_ == nullptr) {
        _this->_impl_.maxs_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.maxs_);
      } else {
        _this->_impl_.maxs_->MergeFrom(*from._impl_.maxs_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBubbles::CopyFrom(const CMsgTEBubbles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBubbles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBubbles::InternalSwap(CMsgTEBubbles* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.speed_)
      + sizeof(CMsgTEBubbles::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBubbles, _impl_.mins_)>(
          reinterpret_cast<char*>(&_impl_.mins_),
          reinterpret_cast<char*>(&other->_impl_.mins_));
}

::google::protobuf::Metadata CMsgTEBubbles::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBubbleTrail::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBubbleTrail>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_._has_bits_);
};

void CMsgTEBubbleTrail::clear_mins() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mins_ != nullptr) _impl_.mins_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEBubbleTrail::clear_maxs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.maxs_ != nullptr) _impl_.maxs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEBubbleTrail::CMsgTEBubbleTrail(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBubbleTrail_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBubbleTrail)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBubbleTrail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBubbleTrail& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBubbleTrail::CMsgTEBubbleTrail(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBubbleTrail& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBubbleTrail_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBubbleTrail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mins_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mins_)
                : nullptr;
  _impl_.maxs_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.maxs_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, waterz_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, waterz_),
           offsetof(Impl_, speed_) -
               offsetof(Impl_, waterz_) +
               sizeof(Impl_::speed_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEBubbleTrail)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBubbleTrail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBubbleTrail::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mins_),
           0,
           offsetof(Impl_, speed_) -
               offsetof(Impl_, mins_) +
               sizeof(Impl_::speed_));
}
CMsgTEBubbleTrail::~CMsgTEBubbleTrail() {
  // @@protoc_insertion_point(destructor:CMsgTEBubbleTrail)
  SharedDtor(*this);
}
inline void CMsgTEBubbleTrail::SharedDtor(MessageLite& self) {
  CMsgTEBubbleTrail& this_ = static_cast<CMsgTEBubbleTrail&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mins_;
  delete this_._impl_.maxs_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBubbleTrail::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBubbleTrail(arena);
}
constexpr auto CMsgTEBubbleTrail::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBubbleTrail),
                                            alignof(CMsgTEBubbleTrail));
}
constexpr auto CMsgTEBubbleTrail::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBubbleTrail_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBubbleTrail::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBubbleTrail>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBubbleTrail::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBubbleTrail>(), &CMsgTEBubbleTrail::ByteSizeLong,
              &CMsgTEBubbleTrail::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_._cached_size_),
          false,
      },
      &CMsgTEBubbleTrail::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBubbleTrail_class_data_ =
            CMsgTEBubbleTrail::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBubbleTrail::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBubbleTrail_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBubbleTrail_class_data_.tc_table);
  return CMsgTEBubbleTrail_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
CMsgTEBubbleTrail::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBubbleTrail_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBubbleTrail>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector mins = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.mins_)}},
    // optional .CMsgVector maxs = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.maxs_)}},
    // optional float waterz = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.waterz_)}},
    // optional uint32 count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBubbleTrail, _impl_.count_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.count_)}},
    // optional float speed = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.speed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector mins = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.mins_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector maxs = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.maxs_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float waterz = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.waterz_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 count = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float speed = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.speed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBubbleTrail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBubbleTrail)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.mins_ != nullptr);
      _impl_.mins_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.maxs_ != nullptr);
      _impl_.maxs_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.waterz_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.speed_) -
        reinterpret_cast<char*>(&_impl_.waterz_)) + sizeof(_impl_.speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBubbleTrail::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBubbleTrail& this_ = static_cast<const CMsgTEBubbleTrail&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBubbleTrail::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBubbleTrail& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBubbleTrail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector mins = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.mins_, this_._impl_.mins_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector maxs = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.maxs_, this_._impl_.maxs_->GetCachedSize(), target,
        stream);
  }

  // optional float waterz = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_waterz(), target);
  }

  // optional uint32 count = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_count(), target);
  }

  // optional float speed = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this_._internal_speed(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBubbleTrail)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBubbleTrail::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBubbleTrail& this_ = static_cast<const CMsgTEBubbleTrail&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBubbleTrail::ByteSizeLong() const {
  const CMsgTEBubbleTrail& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBubbleTrail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000014u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000000bu) != 0) {
    // optional .CMsgVector mins = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mins_);
    }
    // optional .CMsgVector maxs = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.maxs_);
    }
    // optional uint32 count = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_count());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBubbleTrail::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBubbleTrail*>(&to_msg);
  auto& from = static_cast<const CMsgTEBubbleTrail&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBubbleTrail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.mins_ != nullptr);
      if (_this->_impl_.mins_ == nullptr) {
        _this->_impl_.mins_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mins_);
      } else {
        _this->_impl_.mins_->MergeFrom(*from._impl_.mins_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.maxs_ != nullptr);
      if (_this->_impl_.maxs_ == nullptr) {
        _this->_impl_.maxs_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.maxs_);
      } else {
        _this->_impl_.maxs_->MergeFrom(*from._impl_.maxs_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.waterz_ = from._impl_.waterz_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBubbleTrail::CopyFrom(const CMsgTEBubbleTrail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBubbleTrail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBubbleTrail::InternalSwap(CMsgTEBubbleTrail* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.speed_)
      + sizeof(CMsgTEBubbleTrail::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBubbleTrail, _impl_.mins_)>(
          reinterpret_cast<char*>(&_impl_.mins_),
          reinterpret_cast<char*>(&other->_impl_.mins_));
}

::google::protobuf::Metadata CMsgTEBubbleTrail::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEDecal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEDecal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_._has_bits_);
};

void CMsgTEDecal::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEDecal::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ != nullptr) _impl_.start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEDecal::CMsgTEDecal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEDecal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEDecal::CMsgTEDecal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEDecal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEDecal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.start_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hitbox_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, hitbox_),
           offsetof(Impl_, entity_) -
               offsetof(Impl_, hitbox_) +
               sizeof(Impl_::entity_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_{-1} {}

inline void CMsgTEDecal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::index_));
}
CMsgTEDecal::~CMsgTEDecal() {
  // @@protoc_insertion_point(destructor:CMsgTEDecal)
  SharedDtor(*this);
}
inline void CMsgTEDecal::SharedDtor(MessageLite& self) {
  CMsgTEDecal& this_ = static_cast<CMsgTEDecal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.start_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEDecal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEDecal(arena);
}
constexpr auto CMsgTEDecal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgTEDecal),
                                            alignof(CMsgTEDecal));
}
constexpr auto CMsgTEDecal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEDecal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEDecal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEDecal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEDecal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEDecal>(), &CMsgTEDecal::ByteSizeLong,
              &CMsgTEDecal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_._cached_size_),
          false,
      },
      &CMsgTEDecal::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEDecal_class_data_ =
            CMsgTEDecal::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEDecal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEDecal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEDecal_class_data_.tc_table);
  return CMsgTEDecal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
CMsgTEDecal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEDecal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEDecal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.origin_)}},
    // optional .CMsgVector start = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.start_)}},
    // optional int32 entity = 3 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEDecal, _impl_.entity_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.entity_)}},
    // optional uint32 hitbox = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEDecal, _impl_.hitbox_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.hitbox_)}},
    // optional uint32 index = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEDecal, _impl_.index_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.index_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector start = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.start_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 entity = 3 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.entity_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 hitbox = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.hitbox_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 index = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.index_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEDecal::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEDecal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.start_ != nullptr);
      _impl_.start_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.hitbox_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.index_) -
        reinterpret_cast<char*>(&_impl_.hitbox_)) + sizeof(_impl_.index_));
    _impl_.entity_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEDecal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEDecal& this_ = static_cast<const CMsgTEDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEDecal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEDecal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector start = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.start_, this_._impl_.start_->GetCachedSize(), target,
        stream);
  }

  // optional int32 entity = 3 [default = -1];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_entity(), target);
  }

  // optional uint32 hitbox = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_hitbox(), target);
  }

  // optional uint32 index = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_index(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEDecal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEDecal::ByteSizeLong(const MessageLite& base) {
  const CMsgTEDecal& this_ = static_cast<const CMsgTEDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEDecal::ByteSizeLong() const {
  const CMsgTEDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEDecal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector start = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_);
    }
    // optional uint32 hitbox = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_hitbox());
    }
    // optional uint32 index = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_index());
    }
    // optional int32 entity = 3 [default = -1];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_entity());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEDecal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEDecal*>(&to_msg);
  auto& from = static_cast<const CMsgTEDecal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEDecal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.start_ != nullptr);
      if (_this->_impl_.start_ == nullptr) {
        _this->_impl_.start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_);
      } else {
        _this->_impl_.start_->MergeFrom(*from._impl_.start_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.hitbox_ = from._impl_.hitbox_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.entity_ = from._impl_.entity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEDecal::CopyFrom(const CMsgTEDecal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEDecal::InternalSwap(CMsgTEDecal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.entity_)
      + sizeof(CMsgTEDecal::_impl_.entity_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEDecal, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEDecal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgEffectData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgEffectData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_._has_bits_);
};

void CMsgEffectData::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgEffectData::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ != nullptr) _impl_.start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgEffectData::clear_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normal_ != nullptr) _impl_.normal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CMsgEffectData::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
CMsgEffectData::CMsgEffectData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgEffectData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgEffectData)
}
PROTOBUF_NDEBUG_INLINE CMsgEffectData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgEffectData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgEffectData::CMsgEffectData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgEffectData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgEffectData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgEffectData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.start_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_)
                : nullptr;
  _impl_.normal_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_)
                : nullptr;
  _impl_.angles_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scale_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, scale_),
           offsetof(Impl_, otherentity_) -
               offsetof(Impl_, scale_) +
               sizeof(Impl_::otherentity_));

  // @@protoc_insertion_point(copy_constructor:CMsgEffectData)
}
PROTOBUF_NDEBUG_INLINE CMsgEffectData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_{16777215u},
        otherentity_{16777215u} {}

inline void CMsgEffectData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, attachmentname_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::attachmentname_));
}
CMsgEffectData::~CMsgEffectData() {
  // @@protoc_insertion_point(destructor:CMsgEffectData)
  SharedDtor(*this);
}
inline void CMsgEffectData::SharedDtor(MessageLite& self) {
  CMsgEffectData& this_ = static_cast<CMsgEffectData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.start_;
  delete this_._impl_.normal_;
  delete this_._impl_.angles_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgEffectData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgEffectData(arena);
}
constexpr auto CMsgEffectData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgEffectData),
                                            alignof(CMsgEffectData));
}
constexpr auto CMsgEffectData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgEffectData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgEffectData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgEffectData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgEffectData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgEffectData>(), &CMsgEffectData::ByteSizeLong,
              &CMsgEffectData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_._cached_size_),
          false,
      },
      &CMsgEffectData::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgEffectData_class_data_ =
            CMsgEffectData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgEffectData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgEffectData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgEffectData_class_data_.tc_table);
  return CMsgEffectData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 4, 0, 2>
CMsgEffectData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgEffectData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgEffectData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.origin_)}},
    // optional .CMsgVector start = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.start_)}},
    // optional .CMsgVector normal = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.normal_)}},
    // optional .CMsgQAngle angles = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.angles_)}},
    // optional fixed32 entity = 5 [default = 16777215];
    {::_pbi::TcParser::FastF32S1,
     {45, 17, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.entity_)}},
    // optional fixed32 otherentity = 6 [default = 16777215];
    {::_pbi::TcParser::FastF32S1,
     {53, 18, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.otherentity_)}},
    // optional float scale = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.scale_)}},
    // optional float magnitude = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.magnitude_)}},
    // optional float radius = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.radius_)}},
    // optional fixed32 surfaceprop = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.surfaceprop_)}},
    // optional fixed64 effectindex = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.effectindex_)}},
    // optional uint32 damagetype = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgEffectData, _impl_.damagetype_), 9>(),
     {96, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.damagetype_)}},
    // optional uint32 material = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgEffectData, _impl_.material_), 10>(),
     {104, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.material_)}},
    // optional uint32 hitbox = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgEffectData, _impl_.hitbox_), 11>(),
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.hitbox_)}},
    // optional uint32 color = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgEffectData, _impl_.color_), 12>(),
     {120, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.color_)}},
    // optional uint32 flags = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.flags_)}},
    // optional int32 attachmentindex = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.attachmentindex_)}},
    // optional uint32 effectname = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 15, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.effectname_)}},
    // optional uint32 attachmentname = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 16, 0, PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.attachmentname_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector start = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.start_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector normal = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.normal_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.angles_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional fixed32 entity = 5 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.entity_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed32 otherentity = 6 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.otherentity_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional float scale = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.scale_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float magnitude = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.magnitude_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float radius = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.radius_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional fixed32 surfaceprop = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.surfaceprop_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 effectindex = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.effectindex_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 damagetype = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.damagetype_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 material = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.material_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 hitbox = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.hitbox_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 color = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.color_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flags = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.flags_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 attachmentindex = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.attachmentindex_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 effectname = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.effectname_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 attachmentname = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.attachmentname_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgEffectData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgEffectData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.start_ != nullptr);
      _impl_.start_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.normal_ != nullptr);
      _impl_.normal_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.scale_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.surfaceprop_) -
        reinterpret_cast<char*>(&_impl_.scale_)) + sizeof(_impl_.surfaceprop_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.effectindex_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.effectname_) -
        reinterpret_cast<char*>(&_impl_.effectindex_)) + sizeof(_impl_.effectname_));
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    _impl_.attachmentname_ = 0u;
    _impl_.entity_ = 16777215u;
    _impl_.otherentity_ = 16777215u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgEffectData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgEffectData& this_ = static_cast<const CMsgEffectData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgEffectData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgEffectData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEffectData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector start = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.start_, this_._impl_.start_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector normal = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.normal_, this_._impl_.normal_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgQAngle angles = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.angles_, this_._impl_.angles_->GetCachedSize(), target,
        stream);
  }

  // optional fixed32 entity = 5 [default = 16777215];
  if ((cached_has_bits & 0x00020000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        5, this_._internal_entity(), target);
  }

  // optional fixed32 otherentity = 6 [default = 16777215];
  if ((cached_has_bits & 0x00040000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        6, this_._internal_otherentity(), target);
  }

  // optional float scale = 7;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this_._internal_scale(), target);
  }

  // optional float magnitude = 8;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this_._internal_magnitude(), target);
  }

  // optional float radius = 9;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this_._internal_radius(), target);
  }

  // optional fixed32 surfaceprop = 10;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        10, this_._internal_surfaceprop(), target);
  }

  // optional fixed64 effectindex = 11;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        11, this_._internal_effectindex(), target);
  }

  // optional uint32 damagetype = 12;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_damagetype(), target);
  }

  // optional uint32 material = 13;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this_._internal_material(), target);
  }

  // optional uint32 hitbox = 14;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_hitbox(), target);
  }

  // optional uint32 color = 15;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this_._internal_color(), target);
  }

  // optional uint32 flags = 16;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_flags(), target);
  }

  // optional int32 attachmentindex = 17;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this_._internal_attachmentindex(), target);
  }

  // optional uint32 effectname = 18;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this_._internal_effectname(), target);
  }

  // optional uint32 attachmentname = 19;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this_._internal_attachmentname(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEffectData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgEffectData::ByteSizeLong(const MessageLite& base) {
  const CMsgEffectData& this_ = static_cast<const CMsgEffectData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgEffectData::ByteSizeLong() const {
  const CMsgEffectData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgEffectData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000100u & cached_has_bits) * 9;
  total_size += ::absl::popcount(0x000600f0u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector start = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_);
    }
    // optional .CMsgVector normal = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.normal_);
    }
    // optional .CMsgQAngle angles = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angles_);
    }
  }
  if ((cached_has_bits & 0x0000fe00u) != 0) {
    // optional uint32 damagetype = 12;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_damagetype());
    }
    // optional uint32 material = 13;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_material());
    }
    // optional uint32 hitbox = 14;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_hitbox());
    }
    // optional uint32 color = 15;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_color());
    }
    // optional uint32 flags = 16;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_flags());
    }
    // optional int32 attachmentindex = 17;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_attachmentindex());
    }
    // optional uint32 effectname = 18;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_effectname());
    }
  }
   {
    // optional uint32 attachmentname = 19;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_attachmentname());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgEffectData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgEffectData*>(&to_msg);
  auto& from = static_cast<const CMsgEffectData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgEffectData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.start_ != nullptr);
      if (_this->_impl_.start_ == nullptr) {
        _this->_impl_.start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_);
      } else {
        _this->_impl_.start_->MergeFrom(*from._impl_.start_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.normal_ != nullptr);
      if (_this->_impl_.normal_ == nullptr) {
        _this->_impl_.normal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_);
      } else {
        _this->_impl_.normal_->MergeFrom(*from._impl_.normal_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.magnitude_ = from._impl_.magnitude_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.radius_ = from._impl_.radius_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.surfaceprop_ = from._impl_.surfaceprop_;
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.effectindex_ = from._impl_.effectindex_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.damagetype_ = from._impl_.damagetype_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.material_ = from._impl_.material_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.hitbox_ = from._impl_.hitbox_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.color_ = from._impl_.color_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.attachmentindex_ = from._impl_.attachmentindex_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.effectname_ = from._impl_.effectname_;
    }
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _this->_impl_.attachmentname_ = from._impl_.attachmentname_;
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _this->_impl_.entity_ = from._impl_.entity_;
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      _this->_impl_.otherentity_ = from._impl_.otherentity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgEffectData::CopyFrom(const CMsgEffectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgEffectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgEffectData::InternalSwap(CMsgEffectData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.otherentity_)
      + sizeof(CMsgEffectData::_impl_.otherentity_)
      - PROTOBUF_FIELD_OFFSET(CMsgEffectData, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgEffectData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEEffectDispatch::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEEffectDispatch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEEffectDispatch, _impl_._has_bits_);
};

CMsgTEEffectDispatch::CMsgTEEffectDispatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEEffectDispatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEEffectDispatch)
}
PROTOBUF_NDEBUG_INLINE CMsgTEEffectDispatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEEffectDispatch& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEEffectDispatch::CMsgTEEffectDispatch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEEffectDispatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEEffectDispatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEEffectDispatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.effectdata_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.effectdata_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgTEEffectDispatch)
}
PROTOBUF_NDEBUG_INLINE CMsgTEEffectDispatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEEffectDispatch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.effectdata_ = {};
}
CMsgTEEffectDispatch::~CMsgTEEffectDispatch() {
  // @@protoc_insertion_point(destructor:CMsgTEEffectDispatch)
  SharedDtor(*this);
}
inline void CMsgTEEffectDispatch::SharedDtor(MessageLite& self) {
  CMsgTEEffectDispatch& this_ = static_cast<CMsgTEEffectDispatch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.effectdata_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEEffectDispatch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEEffectDispatch(arena);
}
constexpr auto CMsgTEEffectDispatch::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEEffectDispatch),
                                            alignof(CMsgTEEffectDispatch));
}
constexpr auto CMsgTEEffectDispatch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEEffectDispatch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEEffectDispatch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEEffectDispatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEEffectDispatch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEEffectDispatch>(), &CMsgTEEffectDispatch::ByteSizeLong,
              &CMsgTEEffectDispatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEEffectDispatch, _impl_._cached_size_),
          false,
      },
      &CMsgTEEffectDispatch::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEEffectDispatch_class_data_ =
            CMsgTEEffectDispatch::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEEffectDispatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEEffectDispatch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEEffectDispatch_class_data_.tc_table);
  return CMsgTEEffectDispatch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgTEEffectDispatch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEEffectDispatch, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEEffectDispatch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEEffectDispatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgEffectData effectdata = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEEffectDispatch, _impl_.effectdata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgEffectData effectdata = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEEffectDispatch, _impl_.effectdata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgEffectData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEEffectDispatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEEffectDispatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.effectdata_ != nullptr);
    _impl_.effectdata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEEffectDispatch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEEffectDispatch& this_ = static_cast<const CMsgTEEffectDispatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEEffectDispatch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEEffectDispatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEEffectDispatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgEffectData effectdata = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.effectdata_, this_._impl_.effectdata_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEEffectDispatch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEEffectDispatch::ByteSizeLong(const MessageLite& base) {
  const CMsgTEEffectDispatch& this_ = static_cast<const CMsgTEEffectDispatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEEffectDispatch::ByteSizeLong() const {
  const CMsgTEEffectDispatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEEffectDispatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .CMsgEffectData effectdata = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.effectdata_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEEffectDispatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEEffectDispatch*>(&to_msg);
  auto& from = static_cast<const CMsgTEEffectDispatch&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEEffectDispatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.effectdata_ != nullptr);
    if (_this->_impl_.effectdata_ == nullptr) {
      _this->_impl_.effectdata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.effectdata_);
    } else {
      _this->_impl_.effectdata_->MergeFrom(*from._impl_.effectdata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEEffectDispatch::CopyFrom(const CMsgTEEffectDispatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEEffectDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEEffectDispatch::InternalSwap(CMsgTEEffectDispatch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.effectdata_, other->_impl_.effectdata_);
}

::google::protobuf::Metadata CMsgTEEffectDispatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEEnergySplash::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEEnergySplash>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_._has_bits_);
};

void CMsgTEEnergySplash::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEEnergySplash::clear_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dir_ != nullptr) _impl_.dir_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEEnergySplash::CMsgTEEnergySplash(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEEnergySplash_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEEnergySplash)
}
PROTOBUF_NDEBUG_INLINE CMsgTEEnergySplash::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEEnergySplash& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEEnergySplash::CMsgTEEnergySplash(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEEnergySplash& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEEnergySplash_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEEnergySplash* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_)
                : nullptr;
  _impl_.dir_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dir_)
                : nullptr;
  _impl_.explosive_ = from._impl_.explosive_;

  // @@protoc_insertion_point(copy_constructor:CMsgTEEnergySplash)
}
PROTOBUF_NDEBUG_INLINE CMsgTEEnergySplash::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEEnergySplash::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, explosive_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::explosive_));
}
CMsgTEEnergySplash::~CMsgTEEnergySplash() {
  // @@protoc_insertion_point(destructor:CMsgTEEnergySplash)
  SharedDtor(*this);
}
inline void CMsgTEEnergySplash::SharedDtor(MessageLite& self) {
  CMsgTEEnergySplash& this_ = static_cast<CMsgTEEnergySplash&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pos_;
  delete this_._impl_.dir_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEEnergySplash::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEEnergySplash(arena);
}
constexpr auto CMsgTEEnergySplash::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEEnergySplash),
                                            alignof(CMsgTEEnergySplash));
}
constexpr auto CMsgTEEnergySplash::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEEnergySplash_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEEnergySplash::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEEnergySplash>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEEnergySplash::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEEnergySplash>(), &CMsgTEEnergySplash::ByteSizeLong,
              &CMsgTEEnergySplash::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_._cached_size_),
          false,
      },
      &CMsgTEEnergySplash::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEEnergySplash_class_data_ =
            CMsgTEEnergySplash::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEEnergySplash::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEEnergySplash_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEEnergySplash_class_data_.tc_table);
  return CMsgTEEnergySplash_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
CMsgTEEnergySplash::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEEnergySplash_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEEnergySplash>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector pos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.pos_)}},
    // optional .CMsgVector dir = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.dir_)}},
    // optional bool explosive = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgTEEnergySplash, _impl_.explosive_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.explosive_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector pos = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector dir = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.dir_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool explosive = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.explosive_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEEnergySplash::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEEnergySplash)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.dir_ != nullptr);
      _impl_.dir_->Clear();
    }
  }
  _impl_.explosive_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEEnergySplash::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEEnergySplash& this_ = static_cast<const CMsgTEEnergySplash&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEEnergySplash::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEEnergySplash& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEEnergySplash)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector pos = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector dir = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.dir_, this_._impl_.dir_->GetCachedSize(), target,
        stream);
  }

  // optional bool explosive = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_explosive(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEEnergySplash)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEEnergySplash::ByteSizeLong(const MessageLite& base) {
  const CMsgTEEnergySplash& this_ = static_cast<const CMsgTEEnergySplash&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEEnergySplash::ByteSizeLong() const {
  const CMsgTEEnergySplash& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEEnergySplash)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgVector pos = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
    }
    // optional .CMsgVector dir = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dir_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEEnergySplash::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEEnergySplash*>(&to_msg);
  auto& from = static_cast<const CMsgTEEnergySplash&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEEnergySplash)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.dir_ != nullptr);
      if (_this->_impl_.dir_ == nullptr) {
        _this->_impl_.dir_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dir_);
      } else {
        _this->_impl_.dir_->MergeFrom(*from._impl_.dir_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.explosive_ = from._impl_.explosive_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEEnergySplash::CopyFrom(const CMsgTEEnergySplash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEEnergySplash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEEnergySplash::InternalSwap(CMsgTEEnergySplash* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.explosive_)
      + sizeof(CMsgTEEnergySplash::_impl_.explosive_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEEnergySplash, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata CMsgTEEnergySplash::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEFizz::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEFizz>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_._has_bits_);
};

CMsgTEFizz::CMsgTEFizz(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEFizz_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEFizz)
}
CMsgTEFizz::CMsgTEFizz(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgTEFizz& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEFizz_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgTEFizz::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_{-1} {}

inline void CMsgTEFizz::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, density_),
           0,
           offsetof(Impl_, current_) -
               offsetof(Impl_, density_) +
               sizeof(Impl_::current_));
}
CMsgTEFizz::~CMsgTEFizz() {
  // @@protoc_insertion_point(destructor:CMsgTEFizz)
  SharedDtor(*this);
}
inline void CMsgTEFizz::SharedDtor(MessageLite& self) {
  CMsgTEFizz& this_ = static_cast<CMsgTEFizz&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEFizz::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEFizz(arena);
}
constexpr auto CMsgTEFizz::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgTEFizz),
                                            alignof(CMsgTEFizz));
}
constexpr auto CMsgTEFizz::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEFizz_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEFizz::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEFizz>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEFizz::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEFizz>(), &CMsgTEFizz::ByteSizeLong,
              &CMsgTEFizz::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_._cached_size_),
          false,
      },
      &CMsgTEFizz::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEFizz_class_data_ =
            CMsgTEFizz::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEFizz::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEFizz_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEFizz_class_data_.tc_table);
  return CMsgTEFizz_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgTEFizz::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgTEFizz_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEFizz>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 entity = 1 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEFizz, _impl_.entity_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.entity_)}},
    // optional uint32 density = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEFizz, _impl_.density_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.density_)}},
    // optional int32 current = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEFizz, _impl_.current_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.current_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 entity = 1 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.entity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 density = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.density_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 current = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.current_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEFizz::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEFizz)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.density_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.current_) -
        reinterpret_cast<char*>(&_impl_.density_)) + sizeof(_impl_.current_));
    _impl_.entity_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEFizz::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEFizz& this_ = static_cast<const CMsgTEFizz&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEFizz::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEFizz& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEFizz)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 entity = 1 [default = -1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_entity(), target);
  }

  // optional uint32 density = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_density(), target);
  }

  // optional int32 current = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_current(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEFizz)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEFizz::ByteSizeLong(const MessageLite& base) {
  const CMsgTEFizz& this_ = static_cast<const CMsgTEFizz&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEFizz::ByteSizeLong() const {
  const CMsgTEFizz& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEFizz)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 density = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_density());
    }
    // optional int32 current = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_current());
    }
    // optional int32 entity = 1 [default = -1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_entity());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEFizz::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEFizz*>(&to_msg);
  auto& from = static_cast<const CMsgTEFizz&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEFizz)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.density_ = from._impl_.density_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.current_ = from._impl_.current_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.entity_ = from._impl_.entity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEFizz::CopyFrom(const CMsgTEFizz& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEFizz)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEFizz::InternalSwap(CMsgTEFizz* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.entity_)
      + sizeof(CMsgTEFizz::_impl_.entity_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEFizz, _impl_.density_)>(
          reinterpret_cast<char*>(&_impl_.density_),
          reinterpret_cast<char*>(&other->_impl_.density_));
}

::google::protobuf::Metadata CMsgTEFizz::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEShatterSurface::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEShatterSurface>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_._has_bits_);
};

void CMsgTEShatterSurface::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEShatterSurface::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgTEShatterSurface::clear_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.force_ != nullptr) _impl_.force_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CMsgTEShatterSurface::clear_forcepos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.forcepos_ != nullptr) _impl_.forcepos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
CMsgTEShatterSurface::CMsgTEShatterSurface(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEShatterSurface_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEShatterSurface)
}
PROTOBUF_NDEBUG_INLINE CMsgTEShatterSurface::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEShatterSurface& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEShatterSurface::CMsgTEShatterSurface(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEShatterSurface& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEShatterSurface_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEShatterSurface* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.angles_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_)
                : nullptr;
  _impl_.force_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.force_)
                : nullptr;
  _impl_.forcepos_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.forcepos_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, backcolor_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::backcolor_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEShatterSurface)
}
PROTOBUF_NDEBUG_INLINE CMsgTEShatterSurface::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEShatterSurface::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, backcolor_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::backcolor_));
}
CMsgTEShatterSurface::~CMsgTEShatterSurface() {
  // @@protoc_insertion_point(destructor:CMsgTEShatterSurface)
  SharedDtor(*this);
}
inline void CMsgTEShatterSurface::SharedDtor(MessageLite& self) {
  CMsgTEShatterSurface& this_ = static_cast<CMsgTEShatterSurface&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.angles_;
  delete this_._impl_.force_;
  delete this_._impl_.forcepos_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEShatterSurface::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEShatterSurface(arena);
}
constexpr auto CMsgTEShatterSurface::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEShatterSurface),
                                            alignof(CMsgTEShatterSurface));
}
constexpr auto CMsgTEShatterSurface::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEShatterSurface_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEShatterSurface::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEShatterSurface>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEShatterSurface::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEShatterSurface>(), &CMsgTEShatterSurface::ByteSizeLong,
              &CMsgTEShatterSurface::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_._cached_size_),
          false,
      },
      &CMsgTEShatterSurface::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEShatterSurface_class_data_ =
            CMsgTEShatterSurface::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEShatterSurface::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEShatterSurface_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEShatterSurface_class_data_.tc_table);
  return CMsgTEShatterSurface_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 4, 0, 2>
CMsgTEShatterSurface::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEShatterSurface_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEShatterSurface>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.origin_)}},
    // optional .CMsgQAngle angles = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.angles_)}},
    // optional .CMsgVector force = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.force_)}},
    // optional .CMsgVector forcepos = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.forcepos_)}},
    // optional float width = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.width_)}},
    // optional float height = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.height_)}},
    // optional float shardsize = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.shardsize_)}},
    // optional uint32 surfacetype = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEShatterSurface, _impl_.surfacetype_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.surfacetype_)}},
    // optional fixed32 frontcolor = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.frontcolor_)}},
    // optional fixed32 backcolor = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.backcolor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.angles_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector force = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.force_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector forcepos = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.forcepos_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float width = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.width_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float height = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.height_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float shardsize = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.shardsize_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 surfacetype = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.surfacetype_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 frontcolor = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.frontcolor_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed32 backcolor = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.backcolor_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEShatterSurface::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEShatterSurface)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.force_ != nullptr);
      _impl_.force_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.forcepos_ != nullptr);
      _impl_.forcepos_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.surfacetype_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.surfacetype_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.frontcolor_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.backcolor_) -
        reinterpret_cast<char*>(&_impl_.frontcolor_)) + sizeof(_impl_.backcolor_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEShatterSurface::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEShatterSurface& this_ = static_cast<const CMsgTEShatterSurface&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEShatterSurface::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEShatterSurface& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEShatterSurface)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgQAngle angles = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.angles_, this_._impl_.angles_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector force = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.force_, this_._impl_.force_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector forcepos = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.forcepos_, this_._impl_.forcepos_->GetCachedSize(), target,
        stream);
  }

  // optional float width = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this_._internal_width(), target);
  }

  // optional float height = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this_._internal_height(), target);
  }

  // optional float shardsize = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this_._internal_shardsize(), target);
  }

  // optional uint32 surfacetype = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_surfacetype(), target);
  }

  // optional fixed32 frontcolor = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        9, this_._internal_frontcolor(), target);
  }

  // optional fixed32 backcolor = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        10, this_._internal_backcolor(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEShatterSurface)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEShatterSurface::ByteSizeLong(const MessageLite& base) {
  const CMsgTEShatterSurface& this_ = static_cast<const CMsgTEShatterSurface&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEShatterSurface::ByteSizeLong() const {
  const CMsgTEShatterSurface& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEShatterSurface)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000370u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000008fu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgQAngle angles = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angles_);
    }
    // optional .CMsgVector force = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.force_);
    }
    // optional .CMsgVector forcepos = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.forcepos_);
    }
    // optional uint32 surfacetype = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_surfacetype());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEShatterSurface::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEShatterSurface*>(&to_msg);
  auto& from = static_cast<const CMsgTEShatterSurface&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEShatterSurface)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.force_ != nullptr);
      if (_this->_impl_.force_ == nullptr) {
        _this->_impl_.force_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.force_);
      } else {
        _this->_impl_.force_->MergeFrom(*from._impl_.force_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.forcepos_ != nullptr);
      if (_this->_impl_.forcepos_ == nullptr) {
        _this->_impl_.forcepos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.forcepos_);
      } else {
        _this->_impl_.forcepos_->MergeFrom(*from._impl_.forcepos_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.shardsize_ = from._impl_.shardsize_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.surfacetype_ = from._impl_.surfacetype_;
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.frontcolor_ = from._impl_.frontcolor_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.backcolor_ = from._impl_.backcolor_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEShatterSurface::CopyFrom(const CMsgTEShatterSurface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEShatterSurface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEShatterSurface::InternalSwap(CMsgTEShatterSurface* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.backcolor_)
      + sizeof(CMsgTEShatterSurface::_impl_.backcolor_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEShatterSurface, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEShatterSurface::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEGlowSprite::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEGlowSprite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_._has_bits_);
};

void CMsgTEGlowSprite::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgTEGlowSprite::CMsgTEGlowSprite(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEGlowSprite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEGlowSprite)
}
PROTOBUF_NDEBUG_INLINE CMsgTEGlowSprite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEGlowSprite& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEGlowSprite::CMsgTEGlowSprite(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEGlowSprite& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEGlowSprite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEGlowSprite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scale_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, scale_),
           offsetof(Impl_, brightness_) -
               offsetof(Impl_, scale_) +
               sizeof(Impl_::brightness_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEGlowSprite)
}
PROTOBUF_NDEBUG_INLINE CMsgTEGlowSprite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEGlowSprite::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, brightness_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::brightness_));
}
CMsgTEGlowSprite::~CMsgTEGlowSprite() {
  // @@protoc_insertion_point(destructor:CMsgTEGlowSprite)
  SharedDtor(*this);
}
inline void CMsgTEGlowSprite::SharedDtor(MessageLite& self) {
  CMsgTEGlowSprite& this_ = static_cast<CMsgTEGlowSprite&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEGlowSprite::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEGlowSprite(arena);
}
constexpr auto CMsgTEGlowSprite::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEGlowSprite),
                                            alignof(CMsgTEGlowSprite));
}
constexpr auto CMsgTEGlowSprite::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEGlowSprite_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEGlowSprite::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEGlowSprite>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEGlowSprite::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEGlowSprite>(), &CMsgTEGlowSprite::ByteSizeLong,
              &CMsgTEGlowSprite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_._cached_size_),
          false,
      },
      &CMsgTEGlowSprite::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEGlowSprite_class_data_ =
            CMsgTEGlowSprite::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEGlowSprite::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEGlowSprite_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEGlowSprite_class_data_.tc_table);
  return CMsgTEGlowSprite_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
CMsgTEGlowSprite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEGlowSprite_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEGlowSprite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 brightness = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEGlowSprite, _impl_.brightness_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.brightness_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.origin_)}},
    // optional float scale = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.scale_)}},
    // optional float life = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.life_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float scale = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.scale_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float life = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.life_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 brightness = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.brightness_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEGlowSprite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEGlowSprite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.origin_ != nullptr);
    _impl_.origin_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.scale_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.brightness_) -
        reinterpret_cast<char*>(&_impl_.scale_)) + sizeof(_impl_.brightness_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEGlowSprite::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEGlowSprite& this_ = static_cast<const CMsgTEGlowSprite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEGlowSprite::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEGlowSprite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEGlowSprite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional float scale = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this_._internal_scale(), target);
  }

  // optional float life = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_life(), target);
  }

  // optional uint32 brightness = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_brightness(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEGlowSprite)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEGlowSprite::ByteSizeLong(const MessageLite& base) {
  const CMsgTEGlowSprite& this_ = static_cast<const CMsgTEGlowSprite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEGlowSprite::ByteSizeLong() const {
  const CMsgTEGlowSprite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEGlowSprite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000006u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000009u) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional uint32 brightness = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_brightness());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEGlowSprite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEGlowSprite*>(&to_msg);
  auto& from = static_cast<const CMsgTEGlowSprite&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEGlowSprite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.life_ = from._impl_.life_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.brightness_ = from._impl_.brightness_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEGlowSprite::CopyFrom(const CMsgTEGlowSprite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEGlowSprite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEGlowSprite::InternalSwap(CMsgTEGlowSprite* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.brightness_)
      + sizeof(CMsgTEGlowSprite::_impl_.brightness_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEGlowSprite, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEGlowSprite::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEImpact::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEImpact>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_._has_bits_);
};

void CMsgTEImpact::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEImpact::clear_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normal_ != nullptr) _impl_.normal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEImpact::CMsgTEImpact(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEImpact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEImpact)
}
PROTOBUF_NDEBUG_INLINE CMsgTEImpact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEImpact& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEImpact::CMsgTEImpact(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEImpact& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEImpact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEImpact* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.normal_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:CMsgTEImpact)
}
PROTOBUF_NDEBUG_INLINE CMsgTEImpact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEImpact::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::type_));
}
CMsgTEImpact::~CMsgTEImpact() {
  // @@protoc_insertion_point(destructor:CMsgTEImpact)
  SharedDtor(*this);
}
inline void CMsgTEImpact::SharedDtor(MessageLite& self) {
  CMsgTEImpact& this_ = static_cast<CMsgTEImpact&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.normal_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEImpact::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEImpact(arena);
}
constexpr auto CMsgTEImpact::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEImpact),
                                            alignof(CMsgTEImpact));
}
constexpr auto CMsgTEImpact::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEImpact_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEImpact::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEImpact>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEImpact::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEImpact>(), &CMsgTEImpact::ByteSizeLong,
              &CMsgTEImpact::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_._cached_size_),
          false,
      },
      &CMsgTEImpact::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEImpact_class_data_ =
            CMsgTEImpact::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEImpact::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEImpact_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEImpact_class_data_.tc_table);
  return CMsgTEImpact_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
CMsgTEImpact::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEImpact_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEImpact>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.origin_)}},
    // optional .CMsgVector normal = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.normal_)}},
    // optional uint32 type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEImpact, _impl_.type_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector normal = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.normal_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 type = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEImpact::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEImpact)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.normal_ != nullptr);
      _impl_.normal_->Clear();
    }
  }
  _impl_.type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEImpact::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEImpact& this_ = static_cast<const CMsgTEImpact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEImpact::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEImpact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEImpact)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector normal = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.normal_, this_._impl_.normal_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 type = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_type(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEImpact)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEImpact::ByteSizeLong(const MessageLite& base) {
  const CMsgTEImpact& this_ = static_cast<const CMsgTEImpact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEImpact::ByteSizeLong() const {
  const CMsgTEImpact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEImpact)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector normal = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.normal_);
    }
    // optional uint32 type = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEImpact::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEImpact*>(&to_msg);
  auto& from = static_cast<const CMsgTEImpact&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEImpact)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.normal_ != nullptr);
      if (_this->_impl_.normal_ == nullptr) {
        _this->_impl_.normal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_);
      } else {
        _this->_impl_.normal_->MergeFrom(*from._impl_.normal_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEImpact::CopyFrom(const CMsgTEImpact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEImpact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEImpact::InternalSwap(CMsgTEImpact* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.type_)
      + sizeof(CMsgTEImpact::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEImpact, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEImpact::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEMuzzleFlash::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEMuzzleFlash>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_._has_bits_);
};

void CMsgTEMuzzleFlash::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEMuzzleFlash::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEMuzzleFlash::CMsgTEMuzzleFlash(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEMuzzleFlash_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEMuzzleFlash)
}
PROTOBUF_NDEBUG_INLINE CMsgTEMuzzleFlash::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEMuzzleFlash& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEMuzzleFlash::CMsgTEMuzzleFlash(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEMuzzleFlash& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEMuzzleFlash_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEMuzzleFlash* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.angles_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scale_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, scale_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, scale_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEMuzzleFlash)
}
PROTOBUF_NDEBUG_INLINE CMsgTEMuzzleFlash::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEMuzzleFlash::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::type_));
}
CMsgTEMuzzleFlash::~CMsgTEMuzzleFlash() {
  // @@protoc_insertion_point(destructor:CMsgTEMuzzleFlash)
  SharedDtor(*this);
}
inline void CMsgTEMuzzleFlash::SharedDtor(MessageLite& self) {
  CMsgTEMuzzleFlash& this_ = static_cast<CMsgTEMuzzleFlash&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.angles_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEMuzzleFlash::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEMuzzleFlash(arena);
}
constexpr auto CMsgTEMuzzleFlash::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEMuzzleFlash),
                                            alignof(CMsgTEMuzzleFlash));
}
constexpr auto CMsgTEMuzzleFlash::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEMuzzleFlash_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEMuzzleFlash::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEMuzzleFlash>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEMuzzleFlash::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEMuzzleFlash>(), &CMsgTEMuzzleFlash::ByteSizeLong,
              &CMsgTEMuzzleFlash::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_._cached_size_),
          false,
      },
      &CMsgTEMuzzleFlash::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEMuzzleFlash_class_data_ =
            CMsgTEMuzzleFlash::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEMuzzleFlash::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEMuzzleFlash_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEMuzzleFlash_class_data_.tc_table);
  return CMsgTEMuzzleFlash_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
CMsgTEMuzzleFlash::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEMuzzleFlash_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEMuzzleFlash>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEMuzzleFlash, _impl_.type_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.type_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.origin_)}},
    // optional .CMsgQAngle angles = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.angles_)}},
    // optional float scale = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.scale_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.angles_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float scale = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.scale_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 type = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEMuzzleFlash::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEMuzzleFlash)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.scale_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.scale_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEMuzzleFlash::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEMuzzleFlash& this_ = static_cast<const CMsgTEMuzzleFlash&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEMuzzleFlash::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEMuzzleFlash& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEMuzzleFlash)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgQAngle angles = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.angles_, this_._impl_.angles_->GetCachedSize(), target,
        stream);
  }

  // optional float scale = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_scale(), target);
  }

  // optional uint32 type = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_type(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEMuzzleFlash)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEMuzzleFlash::ByteSizeLong(const MessageLite& base) {
  const CMsgTEMuzzleFlash& this_ = static_cast<const CMsgTEMuzzleFlash&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEMuzzleFlash::ByteSizeLong() const {
  const CMsgTEMuzzleFlash& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEMuzzleFlash)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000000bu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgQAngle angles = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angles_);
    }
    // optional uint32 type = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEMuzzleFlash::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEMuzzleFlash*>(&to_msg);
  auto& from = static_cast<const CMsgTEMuzzleFlash&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEMuzzleFlash)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEMuzzleFlash::CopyFrom(const CMsgTEMuzzleFlash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEMuzzleFlash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEMuzzleFlash::InternalSwap(CMsgTEMuzzleFlash* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.type_)
      + sizeof(CMsgTEMuzzleFlash::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEMuzzleFlash, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEMuzzleFlash::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEBloodStream::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEBloodStream>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_._has_bits_);
};

void CMsgTEBloodStream::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEBloodStream::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.direction_ != nullptr) _impl_.direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEBloodStream::CMsgTEBloodStream(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBloodStream_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEBloodStream)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBloodStream::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEBloodStream& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEBloodStream::CMsgTEBloodStream(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEBloodStream& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEBloodStream_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEBloodStream* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.direction_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, color_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, color_),
           offsetof(Impl_, amount_) -
               offsetof(Impl_, color_) +
               sizeof(Impl_::amount_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEBloodStream)
}
PROTOBUF_NDEBUG_INLINE CMsgTEBloodStream::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEBloodStream::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, amount_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::amount_));
}
CMsgTEBloodStream::~CMsgTEBloodStream() {
  // @@protoc_insertion_point(destructor:CMsgTEBloodStream)
  SharedDtor(*this);
}
inline void CMsgTEBloodStream::SharedDtor(MessageLite& self) {
  CMsgTEBloodStream& this_ = static_cast<CMsgTEBloodStream&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.direction_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEBloodStream::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEBloodStream(arena);
}
constexpr auto CMsgTEBloodStream::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEBloodStream),
                                            alignof(CMsgTEBloodStream));
}
constexpr auto CMsgTEBloodStream::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEBloodStream_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEBloodStream::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEBloodStream>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEBloodStream::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEBloodStream>(), &CMsgTEBloodStream::ByteSizeLong,
              &CMsgTEBloodStream::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_._cached_size_),
          false,
      },
      &CMsgTEBloodStream::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEBloodStream_class_data_ =
            CMsgTEBloodStream::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEBloodStream::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEBloodStream_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEBloodStream_class_data_.tc_table);
  return CMsgTEBloodStream_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
CMsgTEBloodStream::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEBloodStream_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEBloodStream>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 amount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEBloodStream, _impl_.amount_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.amount_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.origin_)}},
    // optional .CMsgVector direction = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.direction_)}},
    // optional fixed32 color = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.color_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector direction = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.direction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional fixed32 color = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.color_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional uint32 amount = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.amount_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEBloodStream::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEBloodStream)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.color_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.amount_) -
        reinterpret_cast<char*>(&_impl_.color_)) + sizeof(_impl_.amount_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEBloodStream::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEBloodStream& this_ = static_cast<const CMsgTEBloodStream&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEBloodStream::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEBloodStream& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEBloodStream)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector direction = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.direction_, this_._impl_.direction_->GetCachedSize(), target,
        stream);
  }

  // optional fixed32 color = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        3, this_._internal_color(), target);
  }

  // optional uint32 amount = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_amount(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEBloodStream)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEBloodStream::ByteSizeLong(const MessageLite& base) {
  const CMsgTEBloodStream& this_ = static_cast<const CMsgTEBloodStream&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEBloodStream::ByteSizeLong() const {
  const CMsgTEBloodStream& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEBloodStream)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000000bu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector direction = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.direction_);
    }
    // optional uint32 amount = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_amount());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEBloodStream::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEBloodStream*>(&to_msg);
  auto& from = static_cast<const CMsgTEBloodStream&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEBloodStream)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.direction_ != nullptr);
      if (_this->_impl_.direction_ == nullptr) {
        _this->_impl_.direction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_);
      } else {
        _this->_impl_.direction_->MergeFrom(*from._impl_.direction_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.color_ = from._impl_.color_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.amount_ = from._impl_.amount_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEBloodStream::CopyFrom(const CMsgTEBloodStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEBloodStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEBloodStream::InternalSwap(CMsgTEBloodStream* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.amount_)
      + sizeof(CMsgTEBloodStream::_impl_.amount_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEBloodStream, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEBloodStream::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEExplosion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEExplosion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_._has_bits_);
};

void CMsgTEExplosion::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgTEExplosion::clear_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normal_ != nullptr) _impl_.normal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CMsgTEExplosion::clear_debris_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.debris_origin_ != nullptr) _impl_.debris_origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
CMsgTEExplosion::CMsgTEExplosion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEExplosion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEExplosion)
}
PROTOBUF_NDEBUG_INLINE CMsgTEExplosion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEExplosion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        effect_name_(arena, from.effect_name_) {}

CMsgTEExplosion::CMsgTEExplosion(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEExplosion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEExplosion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEExplosion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.normal_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_)
                : nullptr;
  _impl_.debris_origin_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.debris_origin_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, framerate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, framerate_),
           offsetof(Impl_, debris_surfaceprop_) -
               offsetof(Impl_, framerate_) +
               sizeof(Impl_::debris_surfaceprop_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEExplosion)
}
PROTOBUF_NDEBUG_INLINE CMsgTEExplosion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        effect_name_(arena) {}

inline void CMsgTEExplosion::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, debris_surfaceprop_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::debris_surfaceprop_));
}
CMsgTEExplosion::~CMsgTEExplosion() {
  // @@protoc_insertion_point(destructor:CMsgTEExplosion)
  SharedDtor(*this);
}
inline void CMsgTEExplosion::SharedDtor(MessageLite& self) {
  CMsgTEExplosion& this_ = static_cast<CMsgTEExplosion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.effect_name_.Destroy();
  delete this_._impl_.origin_;
  delete this_._impl_.normal_;
  delete this_._impl_.debris_origin_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEExplosion::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEExplosion(arena);
}
constexpr auto CMsgTEExplosion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgTEExplosion),
                                            alignof(CMsgTEExplosion));
}
constexpr auto CMsgTEExplosion::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEExplosion_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEExplosion::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEExplosion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEExplosion::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEExplosion>(), &CMsgTEExplosion::ByteSizeLong,
              &CMsgTEExplosion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_._cached_size_),
          false,
      },
      &CMsgTEExplosion::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEExplosion_class_data_ =
            CMsgTEExplosion::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEExplosion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEExplosion_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEExplosion_class_data_.tc_table);
  return CMsgTEExplosion_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 3, 43, 2>
CMsgTEExplosion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEExplosion_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEExplosion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.origin_)}},
    // optional uint32 framerate = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEExplosion, _impl_.framerate_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.framerate_)}},
    // optional uint32 flags = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEExplosion, _impl_.flags_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.flags_)}},
    // optional .CMsgVector normal = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.normal_)}},
    // optional uint32 materialtype = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEExplosion, _impl_.materialtype_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.materialtype_)}},
    // optional uint32 radius = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEExplosion, _impl_.radius_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.radius_)}},
    // optional uint32 magnitude = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEExplosion, _impl_.magnitude_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.magnitude_)}},
    // optional float scale = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.scale_)}},
    // optional bool affect_ragdolls = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgTEExplosion, _impl_.affect_ragdolls_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.affect_ragdolls_)}},
    // optional string effect_name = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.effect_name_)}},
    // optional uint32 explosion_type = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEExplosion, _impl_.explosion_type_), 12>(),
     {88, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.explosion_type_)}},
    // optional bool create_debris = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgTEExplosion, _impl_.create_debris_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.create_debris_)}},
    // optional .CMsgVector debris_origin = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 3, 2, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.debris_origin_)}},
    // optional fixed32 debris_surfaceprop = 14;
    {::_pbi::TcParser::FastF32S1,
     {117, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.debris_surfaceprop_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.origin_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 framerate = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.framerate_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flags = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.flags_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgVector normal = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.normal_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 materialtype = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.materialtype_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 radius = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.radius_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 magnitude = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.magnitude_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float scale = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.scale_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool affect_ragdolls = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.affect_ragdolls_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string effect_name = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.effect_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 explosion_type = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.explosion_type_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool create_debris = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.create_debris_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .CMsgVector debris_origin = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.debris_origin_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional fixed32 debris_surfaceprop = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.debris_surfaceprop_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
    "\17\0\0\0\0\0\0\0\0\0\13\0\0\0\0\0"
    "CMsgTEExplosion"
    "effect_name"
  }},
};
PROTOBUF_NOINLINE void CMsgTEExplosion::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEExplosion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.effect_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.normal_ != nullptr);
      _impl_.normal_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.debris_origin_ != nullptr);
      _impl_.debris_origin_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.framerate_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.radius_) -
        reinterpret_cast<char*>(&_impl_.framerate_)) + sizeof(_impl_.radius_));
  }
  if ((cached_has_bits & 0x00003f00u) != 0) {
    ::memset(&_impl_.magnitude_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.debris_surfaceprop_) -
        reinterpret_cast<char*>(&_impl_.magnitude_)) + sizeof(_impl_.debris_surfaceprop_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEExplosion::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEExplosion& this_ = static_cast<const CMsgTEExplosion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEExplosion::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEExplosion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEExplosion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 framerate = 2;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_framerate(), target);
  }

  // optional uint32 flags = 3;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_flags(), target);
  }

  // optional .CMsgVector normal = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.normal_, this_._impl_.normal_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 materialtype = 5;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_materialtype(), target);
  }

  // optional uint32 radius = 6;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_radius(), target);
  }

  // optional uint32 magnitude = 7;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_magnitude(), target);
  }

  // optional float scale = 8;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this_._internal_scale(), target);
  }

  // optional bool affect_ragdolls = 9;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this_._internal_affect_ragdolls(), target);
  }

  // optional string effect_name = 10;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_effect_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgTEExplosion.effect_name");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional uint32 explosion_type = 11;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_explosion_type(), target);
  }

  // optional bool create_debris = 12;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this_._internal_create_debris(), target);
  }

  // optional .CMsgVector debris_origin = 13;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.debris_origin_, this_._impl_.debris_origin_->GetCachedSize(), target,
        stream);
  }

  // optional fixed32 debris_surfaceprop = 14;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        14, this_._internal_debris_surfaceprop(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEExplosion)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEExplosion::ByteSizeLong(const MessageLite& base) {
  const CMsgTEExplosion& this_ = static_cast<const CMsgTEExplosion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEExplosion::ByteSizeLong() const {
  const CMsgTEExplosion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEExplosion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00002200u & cached_has_bits) * 5;
  total_size += ::absl::popcount(0x00000c00u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string effect_name = 10;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_effect_name());
    }
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector normal = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.normal_);
    }
    // optional .CMsgVector debris_origin = 13;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.debris_origin_);
    }
    // optional uint32 framerate = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_framerate());
    }
    // optional uint32 flags = 3;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_flags());
    }
    // optional uint32 materialtype = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_materialtype());
    }
    // optional uint32 radius = 6;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_radius());
    }
  }
  if ((cached_has_bits & 0x00001100u) != 0) {
    // optional uint32 magnitude = 7;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_magnitude());
    }
    // optional uint32 explosion_type = 11;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_explosion_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEExplosion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEExplosion*>(&to_msg);
  auto& from = static_cast<const CMsgTEExplosion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEExplosion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_effect_name(from._internal_effect_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.normal_ != nullptr);
      if (_this->_impl_.normal_ == nullptr) {
        _this->_impl_.normal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_);
      } else {
        _this->_impl_.normal_->MergeFrom(*from._impl_.normal_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.debris_origin_ != nullptr);
      if (_this->_impl_.debris_origin_ == nullptr) {
        _this->_impl_.debris_origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.debris_origin_);
      } else {
        _this->_impl_.debris_origin_->MergeFrom(*from._impl_.debris_origin_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.framerate_ = from._impl_.framerate_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.materialtype_ = from._impl_.materialtype_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.radius_ = from._impl_.radius_;
    }
  }
  if ((cached_has_bits & 0x00003f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.magnitude_ = from._impl_.magnitude_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.affect_ragdolls_ = from._impl_.affect_ragdolls_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.create_debris_ = from._impl_.create_debris_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.explosion_type_ = from._impl_.explosion_type_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.debris_surfaceprop_ = from._impl_.debris_surfaceprop_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEExplosion::CopyFrom(const CMsgTEExplosion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEExplosion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEExplosion::InternalSwap(CMsgTEExplosion* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effect_name_, &other->_impl_.effect_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.debris_surfaceprop_)
      + sizeof(CMsgTEExplosion::_impl_.debris_surfaceprop_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEExplosion, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEExplosion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEDust::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEDust>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_._has_bits_);
};

void CMsgTEDust::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEDust::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.direction_ != nullptr) _impl_.direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEDust::CMsgTEDust(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEDust_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEDust)
}
PROTOBUF_NDEBUG_INLINE CMsgTEDust::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEDust& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEDust::CMsgTEDust(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEDust& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEDust_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEDust* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.direction_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, speed_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::speed_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEDust)
}
PROTOBUF_NDEBUG_INLINE CMsgTEDust::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEDust::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, speed_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::speed_));
}
CMsgTEDust::~CMsgTEDust() {
  // @@protoc_insertion_point(destructor:CMsgTEDust)
  SharedDtor(*this);
}
inline void CMsgTEDust::SharedDtor(MessageLite& self) {
  CMsgTEDust& this_ = static_cast<CMsgTEDust&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.direction_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEDust::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEDust(arena);
}
constexpr auto CMsgTEDust::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEDust),
                                            alignof(CMsgTEDust));
}
constexpr auto CMsgTEDust::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEDust_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEDust::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEDust>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEDust::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEDust>(), &CMsgTEDust::ByteSizeLong,
              &CMsgTEDust::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_._cached_size_),
          false,
      },
      &CMsgTEDust::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEDust_class_data_ =
            CMsgTEDust::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEDust::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEDust_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEDust_class_data_.tc_table);
  return CMsgTEDust_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
CMsgTEDust::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEDust_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEDust>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector direction = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.direction_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.origin_)}},
    // optional float size = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.size_)}},
    // optional float speed = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float size = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float speed = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.speed_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .CMsgVector direction = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.direction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEDust::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEDust)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.speed_) -
        reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEDust::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEDust& this_ = static_cast<const CMsgTEDust&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEDust::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEDust& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEDust)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional float size = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this_._internal_size(), target);
  }

  // optional float speed = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_speed(), target);
  }

  // optional .CMsgVector direction = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.direction_, this_._impl_.direction_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEDust)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEDust::ByteSizeLong(const MessageLite& base) {
  const CMsgTEDust& this_ = static_cast<const CMsgTEDust&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEDust::ByteSizeLong() const {
  const CMsgTEDust& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEDust)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x0000000cu & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector direction = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.direction_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEDust::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEDust*>(&to_msg);
  auto& from = static_cast<const CMsgTEDust&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEDust)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.direction_ != nullptr);
      if (_this->_impl_.direction_ == nullptr) {
        _this->_impl_.direction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_);
      } else {
        _this->_impl_.direction_->MergeFrom(*from._impl_.direction_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.size_ = from._impl_.size_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEDust::CopyFrom(const CMsgTEDust& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEDust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEDust::InternalSwap(CMsgTEDust* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.speed_)
      + sizeof(CMsgTEDust::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEDust, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEDust::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTELargeFunnel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTELargeFunnel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_._has_bits_);
};

void CMsgTELargeFunnel::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgTELargeFunnel::CMsgTELargeFunnel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTELargeFunnel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTELargeFunnel)
}
PROTOBUF_NDEBUG_INLINE CMsgTELargeFunnel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTELargeFunnel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTELargeFunnel::CMsgTELargeFunnel(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTELargeFunnel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTELargeFunnel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTELargeFunnel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.reversed_ = from._impl_.reversed_;

  // @@protoc_insertion_point(copy_constructor:CMsgTELargeFunnel)
}
PROTOBUF_NDEBUG_INLINE CMsgTELargeFunnel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTELargeFunnel::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, reversed_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::reversed_));
}
CMsgTELargeFunnel::~CMsgTELargeFunnel() {
  // @@protoc_insertion_point(destructor:CMsgTELargeFunnel)
  SharedDtor(*this);
}
inline void CMsgTELargeFunnel::SharedDtor(MessageLite& self) {
  CMsgTELargeFunnel& this_ = static_cast<CMsgTELargeFunnel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTELargeFunnel::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTELargeFunnel(arena);
}
constexpr auto CMsgTELargeFunnel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTELargeFunnel),
                                            alignof(CMsgTELargeFunnel));
}
constexpr auto CMsgTELargeFunnel::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTELargeFunnel_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTELargeFunnel::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTELargeFunnel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTELargeFunnel::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTELargeFunnel>(), &CMsgTELargeFunnel::ByteSizeLong,
              &CMsgTELargeFunnel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_._cached_size_),
          false,
      },
      &CMsgTELargeFunnel::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTELargeFunnel_class_data_ =
            CMsgTELargeFunnel::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTELargeFunnel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTELargeFunnel_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTELargeFunnel_class_data_.tc_table);
  return CMsgTELargeFunnel_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgTELargeFunnel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTELargeFunnel_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTELargeFunnel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 reversed = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTELargeFunnel, _impl_.reversed_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_.reversed_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_.origin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 reversed = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_.reversed_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTELargeFunnel::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTELargeFunnel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.origin_ != nullptr);
    _impl_.origin_->Clear();
  }
  _impl_.reversed_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTELargeFunnel::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTELargeFunnel& this_ = static_cast<const CMsgTELargeFunnel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTELargeFunnel::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTELargeFunnel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTELargeFunnel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 reversed = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_reversed(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTELargeFunnel)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTELargeFunnel::ByteSizeLong(const MessageLite& base) {
  const CMsgTELargeFunnel& this_ = static_cast<const CMsgTELargeFunnel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTELargeFunnel::ByteSizeLong() const {
  const CMsgTELargeFunnel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTELargeFunnel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional uint32 reversed = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reversed());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTELargeFunnel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTELargeFunnel*>(&to_msg);
  auto& from = static_cast<const CMsgTELargeFunnel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTELargeFunnel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.reversed_ = from._impl_.reversed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTELargeFunnel::CopyFrom(const CMsgTELargeFunnel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTELargeFunnel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTELargeFunnel::InternalSwap(CMsgTELargeFunnel* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_.reversed_)
      + sizeof(CMsgTELargeFunnel::_impl_.reversed_)
      - PROTOBUF_FIELD_OFFSET(CMsgTELargeFunnel, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTELargeFunnel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTESparks::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTESparks>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_._has_bits_);
};

void CMsgTESparks::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTESparks::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.direction_ != nullptr) _impl_.direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTESparks::CMsgTESparks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTESparks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTESparks)
}
PROTOBUF_NDEBUG_INLINE CMsgTESparks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTESparks& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTESparks::CMsgTESparks(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTESparks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTESparks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTESparks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.direction_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, magnitude_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, magnitude_),
           offsetof(Impl_, length_) -
               offsetof(Impl_, magnitude_) +
               sizeof(Impl_::length_));

  // @@protoc_insertion_point(copy_constructor:CMsgTESparks)
}
PROTOBUF_NDEBUG_INLINE CMsgTESparks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTESparks::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, length_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::length_));
}
CMsgTESparks::~CMsgTESparks() {
  // @@protoc_insertion_point(destructor:CMsgTESparks)
  SharedDtor(*this);
}
inline void CMsgTESparks::SharedDtor(MessageLite& self) {
  CMsgTESparks& this_ = static_cast<CMsgTESparks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.direction_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTESparks::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTESparks(arena);
}
constexpr auto CMsgTESparks::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTESparks),
                                            alignof(CMsgTESparks));
}
constexpr auto CMsgTESparks::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTESparks_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTESparks::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTESparks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTESparks::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTESparks>(), &CMsgTESparks::ByteSizeLong,
              &CMsgTESparks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_._cached_size_),
          false,
      },
      &CMsgTESparks::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTESparks_class_data_ =
            CMsgTESparks::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTESparks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTESparks_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTESparks_class_data_.tc_table);
  return CMsgTESparks_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
CMsgTESparks::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTESparks_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTESparks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector direction = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.direction_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.origin_)}},
    // optional uint32 magnitude = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTESparks, _impl_.magnitude_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.magnitude_)}},
    // optional uint32 length = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTESparks, _impl_.length_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 magnitude = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.magnitude_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 length = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.length_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgVector direction = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.direction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTESparks::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTESparks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.magnitude_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.length_) -
        reinterpret_cast<char*>(&_impl_.magnitude_)) + sizeof(_impl_.length_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTESparks::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTESparks& this_ = static_cast<const CMsgTESparks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTESparks::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTESparks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTESparks)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 magnitude = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_magnitude(), target);
  }

  // optional uint32 length = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_length(), target);
  }

  // optional .CMsgVector direction = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.direction_, this_._impl_.direction_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTESparks)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTESparks::ByteSizeLong(const MessageLite& base) {
  const CMsgTESparks& this_ = static_cast<const CMsgTESparks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTESparks::ByteSizeLong() const {
  const CMsgTESparks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTESparks)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector direction = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.direction_);
    }
    // optional uint32 magnitude = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_magnitude());
    }
    // optional uint32 length = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_length());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTESparks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTESparks*>(&to_msg);
  auto& from = static_cast<const CMsgTESparks&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTESparks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.direction_ != nullptr);
      if (_this->_impl_.direction_ == nullptr) {
        _this->_impl_.direction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_);
      } else {
        _this->_impl_.direction_->MergeFrom(*from._impl_.direction_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.magnitude_ = from._impl_.magnitude_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.length_ = from._impl_.length_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTESparks::CopyFrom(const CMsgTESparks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTESparks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTESparks::InternalSwap(CMsgTESparks* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.length_)
      + sizeof(CMsgTESparks::_impl_.length_)
      - PROTOBUF_FIELD_OFFSET(CMsgTESparks, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTESparks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEPhysicsProp::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEPhysicsProp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_._has_bits_);
};

void CMsgTEPhysicsProp::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEPhysicsProp::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.velocity_ != nullptr) _impl_.velocity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgTEPhysicsProp::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CMsgTEPhysicsProp::clear_dmgpos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dmgpos_ != nullptr) _impl_.dmgpos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void CMsgTEPhysicsProp::clear_dmgdir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dmgdir_ != nullptr) _impl_.dmgdir_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
CMsgTEPhysicsProp::CMsgTEPhysicsProp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEPhysicsProp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEPhysicsProp)
}
PROTOBUF_NDEBUG_INLINE CMsgTEPhysicsProp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEPhysicsProp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEPhysicsProp::CMsgTEPhysicsProp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEPhysicsProp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEPhysicsProp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEPhysicsProp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.velocity_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.velocity_)
                : nullptr;
  _impl_.angles_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_)
                : nullptr;
  _impl_.dmgpos_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dmgpos_)
                : nullptr;
  _impl_.dmgdir_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dmgdir_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, skin_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, skin_),
           offsetof(Impl_, dmgtype_) -
               offsetof(Impl_, skin_) +
               sizeof(Impl_::dmgtype_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEPhysicsProp)
}
PROTOBUF_NDEBUG_INLINE CMsgTEPhysicsProp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEPhysicsProp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, dmgtype_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::dmgtype_));
}
CMsgTEPhysicsProp::~CMsgTEPhysicsProp() {
  // @@protoc_insertion_point(destructor:CMsgTEPhysicsProp)
  SharedDtor(*this);
}
inline void CMsgTEPhysicsProp::SharedDtor(MessageLite& self) {
  CMsgTEPhysicsProp& this_ = static_cast<CMsgTEPhysicsProp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.velocity_;
  delete this_._impl_.angles_;
  delete this_._impl_.dmgpos_;
  delete this_._impl_.dmgdir_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEPhysicsProp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEPhysicsProp(arena);
}
constexpr auto CMsgTEPhysicsProp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEPhysicsProp),
                                            alignof(CMsgTEPhysicsProp));
}
constexpr auto CMsgTEPhysicsProp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEPhysicsProp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEPhysicsProp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEPhysicsProp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEPhysicsProp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEPhysicsProp>(), &CMsgTEPhysicsProp::ByteSizeLong,
              &CMsgTEPhysicsProp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_._cached_size_),
          false,
      },
      &CMsgTEPhysicsProp::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEPhysicsProp_class_data_ =
            CMsgTEPhysicsProp::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEPhysicsProp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEPhysicsProp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEPhysicsProp_class_data_.tc_table);
  return CMsgTEPhysicsProp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 5, 0, 2>
CMsgTEPhysicsProp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEPhysicsProp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEPhysicsProp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.origin_)}},
    // optional .CMsgVector velocity = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.velocity_)}},
    // optional .CMsgQAngle angles = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.angles_)}},
    // optional fixed32 skin = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.skin_)}},
    // optional uint32 flags = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEPhysicsProp, _impl_.flags_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.flags_)}},
    // optional uint32 effects = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEPhysicsProp, _impl_.effects_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.effects_)}},
    // optional fixed32 color = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.color_)}},
    // optional fixed64 modelindex = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.modelindex_)}},
    // optional uint32 unused_breakmodelsnottomake = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEPhysicsProp, _impl_.unused_breakmodelsnottomake_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.unused_breakmodelsnottomake_)}},
    // optional float scale = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.scale_)}},
    // optional .CMsgVector dmgpos = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 3, 3, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.dmgpos_)}},
    // optional .CMsgVector dmgdir = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 4, 4, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.dmgdir_)}},
    // optional int32 dmgtype = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEPhysicsProp, _impl_.dmgtype_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.dmgtype_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector velocity = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.velocity_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.angles_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional fixed32 skin = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.skin_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional uint32 flags = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.flags_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 effects = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.effects_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 color = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.color_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 modelindex = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.modelindex_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 unused_breakmodelsnottomake = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.unused_breakmodelsnottomake_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float scale = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.scale_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .CMsgVector dmgpos = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.dmgpos_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector dmgdir = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.dmgdir_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 dmgtype = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.dmgtype_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEPhysicsProp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEPhysicsProp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.dmgpos_ != nullptr);
      _impl_.dmgpos_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.dmgdir_ != nullptr);
      _impl_.dmgdir_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.skin_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.effects_) -
        reinterpret_cast<char*>(&_impl_.skin_)) + sizeof(_impl_.effects_));
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    ::memset(&_impl_.color_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dmgtype_) -
        reinterpret_cast<char*>(&_impl_.color_)) + sizeof(_impl_.dmgtype_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEPhysicsProp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEPhysicsProp& this_ = static_cast<const CMsgTEPhysicsProp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEPhysicsProp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEPhysicsProp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEPhysicsProp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector velocity = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.velocity_, this_._impl_.velocity_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgQAngle angles = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.angles_, this_._impl_.angles_->GetCachedSize(), target,
        stream);
  }

  // optional fixed32 skin = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        4, this_._internal_skin(), target);
  }

  // optional uint32 flags = 5;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_flags(), target);
  }

  // optional uint32 effects = 6;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_effects(), target);
  }

  // optional fixed32 color = 7;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        7, this_._internal_color(), target);
  }

  // optional fixed64 modelindex = 8;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        8, this_._internal_modelindex(), target);
  }

  // optional uint32 unused_breakmodelsnottomake = 9;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_unused_breakmodelsnottomake(), target);
  }

  // optional float scale = 10;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this_._internal_scale(), target);
  }

  // optional .CMsgVector dmgpos = 11;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.dmgpos_, this_._impl_.dmgpos_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector dmgdir = 12;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.dmgdir_, this_._impl_.dmgdir_->GetCachedSize(), target,
        stream);
  }

  // optional int32 dmgtype = 13;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<13>(
            stream, this_._internal_dmgtype(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEPhysicsProp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEPhysicsProp::ByteSizeLong(const MessageLite& base) {
  const CMsgTEPhysicsProp& this_ = static_cast<const CMsgTEPhysicsProp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEPhysicsProp::ByteSizeLong() const {
  const CMsgTEPhysicsProp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEPhysicsProp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000200u & cached_has_bits) * 9;
  total_size += ::absl::popcount(0x00000920u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x000000dfu) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector velocity = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_);
    }
    // optional .CMsgQAngle angles = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angles_);
    }
    // optional .CMsgVector dmgpos = 11;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dmgpos_);
    }
    // optional .CMsgVector dmgdir = 12;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dmgdir_);
    }
    // optional uint32 flags = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_flags());
    }
    // optional uint32 effects = 6;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_effects());
    }
  }
  if ((cached_has_bits & 0x00001400u) != 0) {
    // optional uint32 unused_breakmodelsnottomake = 9;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_unused_breakmodelsnottomake());
    }
    // optional int32 dmgtype = 13;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_dmgtype());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEPhysicsProp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEPhysicsProp*>(&to_msg);
  auto& from = static_cast<const CMsgTEPhysicsProp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEPhysicsProp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.velocity_ != nullptr);
      if (_this->_impl_.velocity_ == nullptr) {
        _this->_impl_.velocity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.velocity_);
      } else {
        _this->_impl_.velocity_->MergeFrom(*from._impl_.velocity_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.dmgpos_ != nullptr);
      if (_this->_impl_.dmgpos_ == nullptr) {
        _this->_impl_.dmgpos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dmgpos_);
      } else {
        _this->_impl_.dmgpos_->MergeFrom(*from._impl_.dmgpos_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.dmgdir_ != nullptr);
      if (_this->_impl_.dmgdir_ == nullptr) {
        _this->_impl_.dmgdir_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dmgdir_);
      } else {
        _this->_impl_.dmgdir_->MergeFrom(*from._impl_.dmgdir_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.skin_ = from._impl_.skin_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.effects_ = from._impl_.effects_;
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.color_ = from._impl_.color_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.modelindex_ = from._impl_.modelindex_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.unused_breakmodelsnottomake_ = from._impl_.unused_breakmodelsnottomake_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.dmgtype_ = from._impl_.dmgtype_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEPhysicsProp::CopyFrom(const CMsgTEPhysicsProp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEPhysicsProp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEPhysicsProp::InternalSwap(CMsgTEPhysicsProp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.dmgtype_)
      + sizeof(CMsgTEPhysicsProp::_impl_.dmgtype_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEPhysicsProp, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEPhysicsProp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEPlayerDecal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEPlayerDecal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_._has_bits_);
};

void CMsgTEPlayerDecal::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgTEPlayerDecal::CMsgTEPlayerDecal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEPlayerDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEPlayerDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEPlayerDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEPlayerDecal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEPlayerDecal::CMsgTEPlayerDecal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEPlayerDecal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEPlayerDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEPlayerDecal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, player_),
           offsetof(Impl_, entity_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::entity_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEPlayerDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEPlayerDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        player_{-1},
        entity_{-1} {}

inline void CMsgTEPlayerDecal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.origin_ = {};
}
CMsgTEPlayerDecal::~CMsgTEPlayerDecal() {
  // @@protoc_insertion_point(destructor:CMsgTEPlayerDecal)
  SharedDtor(*this);
}
inline void CMsgTEPlayerDecal::SharedDtor(MessageLite& self) {
  CMsgTEPlayerDecal& this_ = static_cast<CMsgTEPlayerDecal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEPlayerDecal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEPlayerDecal(arena);
}
constexpr auto CMsgTEPlayerDecal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgTEPlayerDecal),
                                            alignof(CMsgTEPlayerDecal));
}
constexpr auto CMsgTEPlayerDecal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEPlayerDecal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEPlayerDecal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEPlayerDecal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEPlayerDecal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEPlayerDecal>(), &CMsgTEPlayerDecal::ByteSizeLong,
              &CMsgTEPlayerDecal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_._cached_size_),
          false,
      },
      &CMsgTEPlayerDecal::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEPlayerDecal_class_data_ =
            CMsgTEPlayerDecal::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEPlayerDecal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEPlayerDecal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEPlayerDecal_class_data_.tc_table);
  return CMsgTEPlayerDecal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
CMsgTEPlayerDecal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEPlayerDecal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEPlayerDecal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.origin_)}},
    // optional int32 player = 2 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEPlayerDecal, _impl_.player_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.player_)}},
    // optional int32 entity = 3 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEPlayerDecal, _impl_.entity_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.entity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 player = 2 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.player_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 entity = 3 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.entity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEPlayerDecal::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEPlayerDecal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    _impl_.player_ = -1;
    _impl_.entity_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEPlayerDecal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEPlayerDecal& this_ = static_cast<const CMsgTEPlayerDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEPlayerDecal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEPlayerDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEPlayerDecal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional int32 player = 2 [default = -1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_player(), target);
  }

  // optional int32 entity = 3 [default = -1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_entity(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEPlayerDecal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEPlayerDecal::ByteSizeLong(const MessageLite& base) {
  const CMsgTEPlayerDecal& this_ = static_cast<const CMsgTEPlayerDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEPlayerDecal::ByteSizeLong() const {
  const CMsgTEPlayerDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEPlayerDecal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional int32 player = 2 [default = -1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_player());
    }
    // optional int32 entity = 3 [default = -1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_entity());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEPlayerDecal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEPlayerDecal*>(&to_msg);
  auto& from = static_cast<const CMsgTEPlayerDecal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEPlayerDecal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.player_ = from._impl_.player_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.entity_ = from._impl_.entity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEPlayerDecal::CopyFrom(const CMsgTEPlayerDecal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEPlayerDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEPlayerDecal::InternalSwap(CMsgTEPlayerDecal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.entity_)
      + sizeof(CMsgTEPlayerDecal::_impl_.entity_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEPlayerDecal, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEPlayerDecal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEProjectedDecal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEProjectedDecal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_._has_bits_);
};

void CMsgTEProjectedDecal::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEProjectedDecal::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEProjectedDecal::CMsgTEProjectedDecal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEProjectedDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEProjectedDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEProjectedDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEProjectedDecal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEProjectedDecal::CMsgTEProjectedDecal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEProjectedDecal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEProjectedDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEProjectedDecal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.angles_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, distance_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::distance_));

  // @@protoc_insertion_point(copy_constructor:CMsgTEProjectedDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEProjectedDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEProjectedDecal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, distance_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::distance_));
}
CMsgTEProjectedDecal::~CMsgTEProjectedDecal() {
  // @@protoc_insertion_point(destructor:CMsgTEProjectedDecal)
  SharedDtor(*this);
}
inline void CMsgTEProjectedDecal::SharedDtor(MessageLite& self) {
  CMsgTEProjectedDecal& this_ = static_cast<CMsgTEProjectedDecal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.angles_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEProjectedDecal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEProjectedDecal(arena);
}
constexpr auto CMsgTEProjectedDecal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEProjectedDecal),
                                            alignof(CMsgTEProjectedDecal));
}
constexpr auto CMsgTEProjectedDecal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEProjectedDecal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEProjectedDecal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEProjectedDecal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEProjectedDecal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEProjectedDecal>(), &CMsgTEProjectedDecal::ByteSizeLong,
              &CMsgTEProjectedDecal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_._cached_size_),
          false,
      },
      &CMsgTEProjectedDecal::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEProjectedDecal_class_data_ =
            CMsgTEProjectedDecal::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEProjectedDecal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEProjectedDecal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEProjectedDecal_class_data_.tc_table);
  return CMsgTEProjectedDecal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
CMsgTEProjectedDecal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEProjectedDecal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEProjectedDecal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional float distance = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.distance_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.origin_)}},
    // optional .CMsgQAngle angles = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.angles_)}},
    // optional uint32 index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEProjectedDecal, _impl_.index_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.angles_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 index = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float distance = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.distance_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEProjectedDecal::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEProjectedDecal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.distance_) -
        reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.distance_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEProjectedDecal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEProjectedDecal& this_ = static_cast<const CMsgTEProjectedDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEProjectedDecal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEProjectedDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEProjectedDecal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgQAngle angles = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.angles_, this_._impl_.angles_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 index = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_index(), target);
  }

  // optional float distance = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this_._internal_distance(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEProjectedDecal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEProjectedDecal::ByteSizeLong(const MessageLite& base) {
  const CMsgTEProjectedDecal& this_ = static_cast<const CMsgTEProjectedDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEProjectedDecal::ByteSizeLong() const {
  const CMsgTEProjectedDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEProjectedDecal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgQAngle angles = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angles_);
    }
    // optional uint32 index = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_index());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEProjectedDecal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEProjectedDecal*>(&to_msg);
  auto& from = static_cast<const CMsgTEProjectedDecal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEProjectedDecal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.distance_ = from._impl_.distance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEProjectedDecal::CopyFrom(const CMsgTEProjectedDecal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEProjectedDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEProjectedDecal::InternalSwap(CMsgTEProjectedDecal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.distance_)
      + sizeof(CMsgTEProjectedDecal::_impl_.distance_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEProjectedDecal, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEProjectedDecal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTESmoke::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTESmoke>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_._has_bits_);
};

void CMsgTESmoke::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgTESmoke::CMsgTESmoke(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTESmoke_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTESmoke)
}
PROTOBUF_NDEBUG_INLINE CMsgTESmoke::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTESmoke& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTESmoke::CMsgTESmoke(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTESmoke& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTESmoke_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTESmoke* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.scale_ = from._impl_.scale_;

  // @@protoc_insertion_point(copy_constructor:CMsgTESmoke)
}
PROTOBUF_NDEBUG_INLINE CMsgTESmoke::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTESmoke::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, scale_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::scale_));
}
CMsgTESmoke::~CMsgTESmoke() {
  // @@protoc_insertion_point(destructor:CMsgTESmoke)
  SharedDtor(*this);
}
inline void CMsgTESmoke::SharedDtor(MessageLite& self) {
  CMsgTESmoke& this_ = static_cast<CMsgTESmoke&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTESmoke::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTESmoke(arena);
}
constexpr auto CMsgTESmoke::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTESmoke),
                                            alignof(CMsgTESmoke));
}
constexpr auto CMsgTESmoke::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTESmoke_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTESmoke::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTESmoke>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTESmoke::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTESmoke>(), &CMsgTESmoke::ByteSizeLong,
              &CMsgTESmoke::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_._cached_size_),
          false,
      },
      &CMsgTESmoke::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTESmoke_class_data_ =
            CMsgTESmoke::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTESmoke::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTESmoke_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTESmoke_class_data_.tc_table);
  return CMsgTESmoke_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgTESmoke::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTESmoke_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTESmoke>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional float scale = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_.scale_)}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_.origin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float scale = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_.scale_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTESmoke::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTESmoke)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.origin_ != nullptr);
    _impl_.origin_->Clear();
  }
  _impl_.scale_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTESmoke::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTESmoke& this_ = static_cast<const CMsgTESmoke&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTESmoke::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTESmoke& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTESmoke)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional float scale = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this_._internal_scale(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTESmoke)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTESmoke::ByteSizeLong(const MessageLite& base) {
  const CMsgTESmoke& this_ = static_cast<const CMsgTESmoke&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTESmoke::ByteSizeLong() const {
  const CMsgTESmoke& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTESmoke)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000002u & cached_has_bits) * 5;
   {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTESmoke::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTESmoke*>(&to_msg);
  auto& from = static_cast<const CMsgTESmoke&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTESmoke)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTESmoke::CopyFrom(const CMsgTESmoke& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTESmoke)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTESmoke::InternalSwap(CMsgTESmoke* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_.scale_)
      + sizeof(CMsgTESmoke::_impl_.scale_)
      - PROTOBUF_FIELD_OFFSET(CMsgTESmoke, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTESmoke::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgTEWorldDecal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgTEWorldDecal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_._has_bits_);
};

void CMsgTEWorldDecal::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgTEWorldDecal::clear_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normal_ != nullptr) _impl_.normal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgTEWorldDecal::CMsgTEWorldDecal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEWorldDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTEWorldDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEWorldDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgTEWorldDecal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgTEWorldDecal::CMsgTEWorldDecal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgTEWorldDecal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgTEWorldDecal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgTEWorldDecal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.normal_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_)
                : nullptr;
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:CMsgTEWorldDecal)
}
PROTOBUF_NDEBUG_INLINE CMsgTEWorldDecal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgTEWorldDecal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::index_));
}
CMsgTEWorldDecal::~CMsgTEWorldDecal() {
  // @@protoc_insertion_point(destructor:CMsgTEWorldDecal)
  SharedDtor(*this);
}
inline void CMsgTEWorldDecal::SharedDtor(MessageLite& self) {
  CMsgTEWorldDecal& this_ = static_cast<CMsgTEWorldDecal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.origin_;
  delete this_._impl_.normal_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgTEWorldDecal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgTEWorldDecal(arena);
}
constexpr auto CMsgTEWorldDecal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgTEWorldDecal),
                                            alignof(CMsgTEWorldDecal));
}
constexpr auto CMsgTEWorldDecal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgTEWorldDecal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgTEWorldDecal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgTEWorldDecal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgTEWorldDecal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgTEWorldDecal>(), &CMsgTEWorldDecal::ByteSizeLong,
              &CMsgTEWorldDecal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_._cached_size_),
          false,
      },
      &CMsgTEWorldDecal::kDescriptorMethods,
      &descriptor_table_te_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgTEWorldDecal_class_data_ =
            CMsgTEWorldDecal::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgTEWorldDecal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgTEWorldDecal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgTEWorldDecal_class_data_.tc_table);
  return CMsgTEWorldDecal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
CMsgTEWorldDecal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgTEWorldDecal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgTEWorldDecal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.origin_)}},
    // optional .CMsgVector normal = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.normal_)}},
    // optional uint32 index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgTEWorldDecal, _impl_.index_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector normal = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.normal_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 index = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgTEWorldDecal::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTEWorldDecal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.normal_ != nullptr);
      _impl_.normal_->Clear();
    }
  }
  _impl_.index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgTEWorldDecal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgTEWorldDecal& this_ = static_cast<const CMsgTEWorldDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgTEWorldDecal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgTEWorldDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTEWorldDecal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgVector normal = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.normal_, this_._impl_.normal_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 index = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_index(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTEWorldDecal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgTEWorldDecal::ByteSizeLong(const MessageLite& base) {
  const CMsgTEWorldDecal& this_ = static_cast<const CMsgTEWorldDecal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgTEWorldDecal::ByteSizeLong() const {
  const CMsgTEWorldDecal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgTEWorldDecal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .CMsgVector origin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // optional .CMsgVector normal = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.normal_);
    }
    // optional uint32 index = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_index());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgTEWorldDecal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgTEWorldDecal*>(&to_msg);
  auto& from = static_cast<const CMsgTEWorldDecal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTEWorldDecal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.normal_ != nullptr);
      if (_this->_impl_.normal_ == nullptr) {
        _this->_impl_.normal_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.normal_);
      } else {
        _this->_impl_.normal_->MergeFrom(*from._impl_.normal_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.index_ = from._impl_.index_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTEWorldDecal::CopyFrom(const CMsgTEWorldDecal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTEWorldDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgTEWorldDecal::InternalSwap(CMsgTEWorldDecal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.index_)
      + sizeof(CMsgTEWorldDecal::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(CMsgTEWorldDecal, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgTEWorldDecal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_te_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: c_peer2peer_netmessages.proto
// Protobuf C++ Version: 6.30.0-rc1

#include "c_peer2peer_netmessages.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CSteam_Voice_Encoding::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        voice_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CSteam_Voice_Encoding::CSteam_Voice_Encoding(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSteam_Voice_Encoding_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSteam_Voice_EncodingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSteam_Voice_EncodingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSteam_Voice_EncodingDefaultTypeInternal() {}
  union {
    CSteam_Voice_Encoding _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSteam_Voice_EncodingDefaultTypeInternal _CSteam_Voice_Encoding_default_instance_;

inline constexpr CP2P_WatchSynchronization::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        demo_tick_{0},
        paused_{false},
        dota_spectator_watching_broadcaster_{false},
        tv_listen_voice_indices_{::uint64_t{0u}},
        dota_spectator_mode_{0},
        dota_spectator_hero_index_{0},
        dota_spectator_autospeed_{0},
        dota_replay_speed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CP2P_WatchSynchronization::CP2P_WatchSynchronization(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CP2P_WatchSynchronization_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CP2P_WatchSynchronizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CP2P_WatchSynchronizationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CP2P_WatchSynchronizationDefaultTypeInternal() {}
  union {
    CP2P_WatchSynchronization _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CP2P_WatchSynchronizationDefaultTypeInternal _CP2P_WatchSynchronization_default_instance_;

inline constexpr CP2P_TextMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CP2P_TextMessage::CP2P_TextMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CP2P_TextMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CP2P_TextMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CP2P_TextMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CP2P_TextMessageDefaultTypeInternal() {}
  union {
    CP2P_TextMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CP2P_TextMessageDefaultTypeInternal _CP2P_TextMessage_default_instance_;

inline constexpr CP2P_Ping::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        send_time_{::uint64_t{0u}},
        is_reply_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CP2P_Ping::CP2P_Ping(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CP2P_Ping_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CP2P_PingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CP2P_PingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CP2P_PingDefaultTypeInternal() {}
  union {
    CP2P_Ping _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CP2P_PingDefaultTypeInternal _CP2P_Ping_default_instance_;

inline constexpr CP2P_Voice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_{nullptr},
        broadcast_group_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CP2P_Voice::CP2P_Voice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CP2P_Voice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CP2P_VoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CP2P_VoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CP2P_VoiceDefaultTypeInternal() {}
  union {
    CP2P_Voice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CP2P_VoiceDefaultTypeInternal _CP2P_Voice_default_instance_;

inline constexpr CP2P_VRAvatarPosition_COrientation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pos_{nullptr},
        ang_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CP2P_VRAvatarPosition_COrientation::CP2P_VRAvatarPosition_COrientation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CP2P_VRAvatarPosition_COrientation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CP2P_VRAvatarPosition_COrientationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CP2P_VRAvatarPosition_COrientationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CP2P_VRAvatarPosition_COrientationDefaultTypeInternal() {}
  union {
    CP2P_VRAvatarPosition_COrientation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CP2P_VRAvatarPosition_COrientationDefaultTypeInternal _CP2P_VRAvatarPosition_COrientation_default_instance_;

inline constexpr CP2P_VRAvatarPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_parts_{},
        hat_id_{0},
        scene_id_{0},
        world_scale_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CP2P_VRAvatarPosition::CP2P_VRAvatarPosition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CP2P_VRAvatarPosition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CP2P_VRAvatarPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CP2P_VRAvatarPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CP2P_VRAvatarPositionDefaultTypeInternal() {}
  union {
    CP2P_VRAvatarPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CP2P_VRAvatarPositionDefaultTypeInternal _CP2P_VRAvatarPosition_default_instance_;
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_c_5fpeer2peer_5fnetmessages_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_c_5fpeer2peer_5fnetmessages_2eproto = nullptr;
const ::uint32_t
    TableStruct_c_5fpeer2peer_5fnetmessages_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CP2P_TextMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CP2P_TextMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CP2P_TextMessage, _impl_.text_),
        0,
        PROTOBUF_FIELD_OFFSET(::CSteam_Voice_Encoding, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSteam_Voice_Encoding, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSteam_Voice_Encoding, _impl_.voice_data_),
        0,
        PROTOBUF_FIELD_OFFSET(::CP2P_Voice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CP2P_Voice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CP2P_Voice, _impl_.audio_),
        PROTOBUF_FIELD_OFFSET(::CP2P_Voice, _impl_.broadcast_group_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CP2P_Ping, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CP2P_Ping, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CP2P_Ping, _impl_.send_time_),
        PROTOBUF_FIELD_OFFSET(::CP2P_Ping, _impl_.is_reply_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition_COrientation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition_COrientation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition_COrientation, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition_COrientation, _impl_.ang_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition, _impl_.body_parts_),
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition, _impl_.hat_id_),
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition, _impl_.scene_id_),
        PROTOBUF_FIELD_OFFSET(::CP2P_VRAvatarPosition, _impl_.world_scale_),
        ~0u,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.demo_tick_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.paused_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.tv_listen_voice_indices_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.dota_spectator_mode_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.dota_spectator_watching_broadcaster_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.dota_spectator_hero_index_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.dota_spectator_autospeed_),
        PROTOBUF_FIELD_OFFSET(::CP2P_WatchSynchronization, _impl_.dota_replay_speed_),
        0,
        1,
        3,
        4,
        2,
        5,
        6,
        7,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::CP2P_TextMessage)},
        {10, 19, -1, sizeof(::CSteam_Voice_Encoding)},
        {20, 30, -1, sizeof(::CP2P_Voice)},
        {32, 42, -1, sizeof(::CP2P_Ping)},
        {44, 54, -1, sizeof(::CP2P_VRAvatarPosition_COrientation)},
        {56, 68, -1, sizeof(::CP2P_VRAvatarPosition)},
        {72, 88, -1, sizeof(::CP2P_WatchSynchronization)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_CP2P_TextMessage_default_instance_._instance,
    &::_CSteam_Voice_Encoding_default_instance_._instance,
    &::_CP2P_Voice_default_instance_._instance,
    &::_CP2P_Ping_default_instance_._instance,
    &::_CP2P_VRAvatarPosition_COrientation_default_instance_._instance,
    &::_CP2P_VRAvatarPosition_default_instance_._instance,
    &::_CP2P_WatchSynchronization_default_instance_._instance,
};
const char descriptor_table_protodef_c_5fpeer2peer_5fnetmessages_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035c_peer2peer_netmessages.proto\032\021netmess"
    "ages.proto\032\026networkbasetypes.proto\" \n\020CP"
    "2P_TextMessage\022\014\n\004text\030\001 \001(\014\"+\n\025CSteam_V"
    "oice_Encoding\022\022\n\nvoice_data\030\001 \001(\014\"h\n\nCP2"
    "P_Voice\022\036\n\005audio\030\001 \001(\0132\017.CMsgVoiceAudio\022"
    "\027\n\017broadcast_group\030\002 \001(\r\"!\n\rHandler_Flag"
    "s\022\020\n\014Played_Audio\020\001\"0\n\tCP2P_Ping\022\021\n\tsend"
    "_time\030\001 \002(\004\022\020\n\010is_reply\030\002 \002(\010\"\313\001\n\025CP2P_V"
    "RAvatarPosition\0227\n\nbody_parts\030\001 \003(\0132#.CP"
    "2P_VRAvatarPosition.COrientation\022\016\n\006hat_"
    "id\030\002 \001(\005\022\020\n\010scene_id\030\003 \001(\005\022\023\n\013world_scal"
    "e\030\004 \001(\005\032B\n\014COrientation\022\030\n\003pos\030\001 \001(\0132\013.C"
    "MsgVector\022\030\n\003ang\030\002 \001(\0132\013.CMsgQAngle\"\211\002\n\031"
    "CP2P_WatchSynchronization\022\021\n\tdemo_tick\030\001"
    " \001(\005\022\016\n\006paused\030\002 \001(\010\022\037\n\027tv_listen_voice_"
    "indices\030\003 \001(\004\022\033\n\023dota_spectator_mode\030\004 \001"
    "(\005\022+\n#dota_spectator_watching_broadcaste"
    "r\030\005 \001(\010\022!\n\031dota_spectator_hero_index\030\006 \001"
    "(\005\022 \n\030dota_spectator_autospeed\030\007 \001(\005\022\031\n\021"
    "dota_replay_speed\030\010 \001(\005*\277\001\n\014P2P_Messages"
    "\022\024\n\017p2p_TextMessage\020\200\002\022\016\n\tp2p_Voice\020\201\002\022\r"
    "\n\010p2p_Ping\020\202\002\022\031\n\024p2p_VRAvatarPosition\020\203\002"
    "\022\035\n\030p2p_WatchSynchronization\020\204\002\022\036\n\031p2p_F"
    "ightingGame_GameData\020\205\002\022 \n\033p2p_FightingG"
    "ame_Connection\020\206\002"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto_deps[2] = {
        &::descriptor_table_netmessages_2eproto,
        &::descriptor_table_networkbasetypes_2eproto,
};
static ::absl::once_flag descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto = {
    false,
    false,
    977,
    descriptor_table_protodef_c_5fpeer2peer_5fnetmessages_2eproto,
    "c_peer2peer_netmessages.proto",
    &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto_once,
    descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto_deps,
    2,
    7,
    schemas,
    file_default_instances,
    TableStruct_c_5fpeer2peer_5fnetmessages_2eproto::offsets,
    file_level_enum_descriptors_c_5fpeer2peer_5fnetmessages_2eproto,
    file_level_service_descriptors_c_5fpeer2peer_5fnetmessages_2eproto,
};
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CP2P_Voice_Handler_Flags_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto);
  return file_level_enum_descriptors_c_5fpeer2peer_5fnetmessages_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CP2P_Voice_Handler_Flags_internal_data_[] = {
    65537u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL P2P_Messages_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto);
  return file_level_enum_descriptors_c_5fpeer2peer_5fnetmessages_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t P2P_Messages_internal_data_[] = {
    459008u, 0u, };
// ===================================================================

class CP2P_TextMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CP2P_TextMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CP2P_TextMessage, _impl_._has_bits_);
};

CP2P_TextMessage::CP2P_TextMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_TextMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CP2P_TextMessage)
}
PROTOBUF_NDEBUG_INLINE CP2P_TextMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CP2P_TextMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        text_(arena, from.text_) {}

CP2P_TextMessage::CP2P_TextMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CP2P_TextMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_TextMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CP2P_TextMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CP2P_TextMessage)
}
PROTOBUF_NDEBUG_INLINE CP2P_TextMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        text_(arena) {}

inline void CP2P_TextMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CP2P_TextMessage::~CP2P_TextMessage() {
  // @@protoc_insertion_point(destructor:CP2P_TextMessage)
  SharedDtor(*this);
}
inline void CP2P_TextMessage::SharedDtor(MessageLite& self) {
  CP2P_TextMessage& this_ = static_cast<CP2P_TextMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CP2P_TextMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CP2P_TextMessage(arena);
}
constexpr auto CP2P_TextMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CP2P_TextMessage),
                                            alignof(CP2P_TextMessage));
}
constexpr auto CP2P_TextMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CP2P_TextMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CP2P_TextMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CP2P_TextMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CP2P_TextMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CP2P_TextMessage>(), &CP2P_TextMessage::ByteSizeLong,
              &CP2P_TextMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CP2P_TextMessage, _impl_._cached_size_),
          false,
      },
      &CP2P_TextMessage::kDescriptorMethods,
      &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CP2P_TextMessage_class_data_ =
            CP2P_TextMessage::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CP2P_TextMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CP2P_TextMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CP2P_TextMessage_class_data_.tc_table);
  return CP2P_TextMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CP2P_TextMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CP2P_TextMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CP2P_TextMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CP2P_TextMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes text = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CP2P_TextMessage, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes text = 1;
    {PROTOBUF_FIELD_OFFSET(CP2P_TextMessage, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CP2P_TextMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CP2P_TextMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.text_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CP2P_TextMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CP2P_TextMessage& this_ = static_cast<const CP2P_TextMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CP2P_TextMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CP2P_TextMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CP2P_TextMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes text = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_text();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2P_TextMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CP2P_TextMessage::ByteSizeLong(const MessageLite& base) {
  const CP2P_TextMessage& this_ = static_cast<const CP2P_TextMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CP2P_TextMessage::ByteSizeLong() const {
  const CP2P_TextMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CP2P_TextMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional bytes text = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_text());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CP2P_TextMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CP2P_TextMessage*>(&to_msg);
  auto& from = static_cast<const CP2P_TextMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CP2P_TextMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CP2P_TextMessage::CopyFrom(const CP2P_TextMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CP2P_TextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CP2P_TextMessage::InternalSwap(CP2P_TextMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata CP2P_TextMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSteam_Voice_Encoding::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSteam_Voice_Encoding>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSteam_Voice_Encoding, _impl_._has_bits_);
};

CSteam_Voice_Encoding::CSteam_Voice_Encoding(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSteam_Voice_Encoding_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSteam_Voice_Encoding)
}
PROTOBUF_NDEBUG_INLINE CSteam_Voice_Encoding::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CSteam_Voice_Encoding& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        voice_data_(arena, from.voice_data_) {}

CSteam_Voice_Encoding::CSteam_Voice_Encoding(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CSteam_Voice_Encoding& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSteam_Voice_Encoding_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CSteam_Voice_Encoding* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CSteam_Voice_Encoding)
}
PROTOBUF_NDEBUG_INLINE CSteam_Voice_Encoding::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        voice_data_(arena) {}

inline void CSteam_Voice_Encoding::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CSteam_Voice_Encoding::~CSteam_Voice_Encoding() {
  // @@protoc_insertion_point(destructor:CSteam_Voice_Encoding)
  SharedDtor(*this);
}
inline void CSteam_Voice_Encoding::SharedDtor(MessageLite& self) {
  CSteam_Voice_Encoding& this_ = static_cast<CSteam_Voice_Encoding&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.voice_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSteam_Voice_Encoding::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSteam_Voice_Encoding(arena);
}
constexpr auto CSteam_Voice_Encoding::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CSteam_Voice_Encoding),
                                            alignof(CSteam_Voice_Encoding));
}
constexpr auto CSteam_Voice_Encoding::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSteam_Voice_Encoding_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSteam_Voice_Encoding::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSteam_Voice_Encoding>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSteam_Voice_Encoding::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSteam_Voice_Encoding>(), &CSteam_Voice_Encoding::ByteSizeLong,
              &CSteam_Voice_Encoding::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSteam_Voice_Encoding, _impl_._cached_size_),
          false,
      },
      &CSteam_Voice_Encoding::kDescriptorMethods,
      &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSteam_Voice_Encoding_class_data_ =
            CSteam_Voice_Encoding::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSteam_Voice_Encoding::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSteam_Voice_Encoding_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSteam_Voice_Encoding_class_data_.tc_table);
  return CSteam_Voice_Encoding_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CSteam_Voice_Encoding::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSteam_Voice_Encoding, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSteam_Voice_Encoding_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSteam_Voice_Encoding>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes voice_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSteam_Voice_Encoding, _impl_.voice_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes voice_data = 1;
    {PROTOBUF_FIELD_OFFSET(CSteam_Voice_Encoding, _impl_.voice_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSteam_Voice_Encoding::Clear() {
// @@protoc_insertion_point(message_clear_start:CSteam_Voice_Encoding)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.voice_data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSteam_Voice_Encoding::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSteam_Voice_Encoding& this_ = static_cast<const CSteam_Voice_Encoding&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSteam_Voice_Encoding::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSteam_Voice_Encoding& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSteam_Voice_Encoding)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes voice_data = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_voice_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSteam_Voice_Encoding)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSteam_Voice_Encoding::ByteSizeLong(const MessageLite& base) {
  const CSteam_Voice_Encoding& this_ = static_cast<const CSteam_Voice_Encoding&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSteam_Voice_Encoding::ByteSizeLong() const {
  const CSteam_Voice_Encoding& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSteam_Voice_Encoding)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional bytes voice_data = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_voice_data());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSteam_Voice_Encoding::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSteam_Voice_Encoding*>(&to_msg);
  auto& from = static_cast<const CSteam_Voice_Encoding&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSteam_Voice_Encoding)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_voice_data(from._internal_voice_data());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSteam_Voice_Encoding::CopyFrom(const CSteam_Voice_Encoding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSteam_Voice_Encoding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSteam_Voice_Encoding::InternalSwap(CSteam_Voice_Encoding* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voice_data_, &other->_impl_.voice_data_, arena);
}

::google::protobuf::Metadata CSteam_Voice_Encoding::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CP2P_Voice::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CP2P_Voice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_._has_bits_);
};

void CP2P_Voice::clear_audio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.audio_ != nullptr) _impl_.audio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CP2P_Voice::CP2P_Voice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_Voice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CP2P_Voice)
}
PROTOBUF_NDEBUG_INLINE CP2P_Voice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CP2P_Voice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CP2P_Voice::CP2P_Voice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CP2P_Voice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_Voice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CP2P_Voice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.audio_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.audio_)
                : nullptr;
  _impl_.broadcast_group_ = from._impl_.broadcast_group_;

  // @@protoc_insertion_point(copy_constructor:CP2P_Voice)
}
PROTOBUF_NDEBUG_INLINE CP2P_Voice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CP2P_Voice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, audio_),
           0,
           offsetof(Impl_, broadcast_group_) -
               offsetof(Impl_, audio_) +
               sizeof(Impl_::broadcast_group_));
}
CP2P_Voice::~CP2P_Voice() {
  // @@protoc_insertion_point(destructor:CP2P_Voice)
  SharedDtor(*this);
}
inline void CP2P_Voice::SharedDtor(MessageLite& self) {
  CP2P_Voice& this_ = static_cast<CP2P_Voice&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.audio_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CP2P_Voice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CP2P_Voice(arena);
}
constexpr auto CP2P_Voice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CP2P_Voice),
                                            alignof(CP2P_Voice));
}
constexpr auto CP2P_Voice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CP2P_Voice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CP2P_Voice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CP2P_Voice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CP2P_Voice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CP2P_Voice>(), &CP2P_Voice::ByteSizeLong,
              &CP2P_Voice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_._cached_size_),
          false,
      },
      &CP2P_Voice::kDescriptorMethods,
      &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CP2P_Voice_class_data_ =
            CP2P_Voice::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CP2P_Voice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CP2P_Voice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CP2P_Voice_class_data_.tc_table);
  return CP2P_Voice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CP2P_Voice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CP2P_Voice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CP2P_Voice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 broadcast_group = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_Voice, _impl_.broadcast_group_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_.broadcast_group_)}},
    // optional .CMsgVoiceAudio audio = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_.audio_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVoiceAudio audio = 1;
    {PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_.audio_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 broadcast_group = 2;
    {PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_.broadcast_group_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVoiceAudio>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CP2P_Voice::Clear() {
// @@protoc_insertion_point(message_clear_start:CP2P_Voice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.audio_ != nullptr);
    _impl_.audio_->Clear();
  }
  _impl_.broadcast_group_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CP2P_Voice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CP2P_Voice& this_ = static_cast<const CP2P_Voice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CP2P_Voice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CP2P_Voice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CP2P_Voice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVoiceAudio audio = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.audio_, this_._impl_.audio_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 broadcast_group = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_broadcast_group(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2P_Voice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CP2P_Voice::ByteSizeLong(const MessageLite& base) {
  const CP2P_Voice& this_ = static_cast<const CP2P_Voice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CP2P_Voice::ByteSizeLong() const {
  const CP2P_Voice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CP2P_Voice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgVoiceAudio audio = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.audio_);
    }
    // optional uint32 broadcast_group = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_broadcast_group());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CP2P_Voice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CP2P_Voice*>(&to_msg);
  auto& from = static_cast<const CP2P_Voice&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CP2P_Voice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.audio_ != nullptr);
      if (_this->_impl_.audio_ == nullptr) {
        _this->_impl_.audio_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.audio_);
      } else {
        _this->_impl_.audio_->MergeFrom(*from._impl_.audio_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.broadcast_group_ = from._impl_.broadcast_group_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CP2P_Voice::CopyFrom(const CP2P_Voice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CP2P_Voice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CP2P_Voice::InternalSwap(CP2P_Voice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_.broadcast_group_)
      + sizeof(CP2P_Voice::_impl_.broadcast_group_)
      - PROTOBUF_FIELD_OFFSET(CP2P_Voice, _impl_.audio_)>(
          reinterpret_cast<char*>(&_impl_.audio_),
          reinterpret_cast<char*>(&other->_impl_.audio_));
}

::google::protobuf::Metadata CP2P_Voice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CP2P_Ping::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CP2P_Ping>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CP2P_Ping::CP2P_Ping(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_Ping_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CP2P_Ping)
}
CP2P_Ping::CP2P_Ping(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CP2P_Ping& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_Ping_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CP2P_Ping::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CP2P_Ping::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, send_time_),
           0,
           offsetof(Impl_, is_reply_) -
               offsetof(Impl_, send_time_) +
               sizeof(Impl_::is_reply_));
}
CP2P_Ping::~CP2P_Ping() {
  // @@protoc_insertion_point(destructor:CP2P_Ping)
  SharedDtor(*this);
}
inline void CP2P_Ping::SharedDtor(MessageLite& self) {
  CP2P_Ping& this_ = static_cast<CP2P_Ping&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CP2P_Ping::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CP2P_Ping(arena);
}
constexpr auto CP2P_Ping::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CP2P_Ping),
                                            alignof(CP2P_Ping));
}
constexpr auto CP2P_Ping::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CP2P_Ping_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          CP2P_Ping::IsInitializedImpl,
          &CP2P_Ping::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CP2P_Ping>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CP2P_Ping::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CP2P_Ping>(), &CP2P_Ping::ByteSizeLong,
              &CP2P_Ping::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_._cached_size_),
          false,
      },
      &CP2P_Ping::kDescriptorMethods,
      &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CP2P_Ping_class_data_ =
            CP2P_Ping::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CP2P_Ping::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CP2P_Ping_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CP2P_Ping_class_data_.tc_table);
  return CP2P_Ping_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CP2P_Ping::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CP2P_Ping_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CP2P_Ping>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required bool is_reply = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CP2P_Ping, _impl_.is_reply_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_.is_reply_)}},
    // required uint64 send_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CP2P_Ping, _impl_.send_time_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_.send_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint64 send_time = 1;
    {PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_.send_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required bool is_reply = 2;
    {PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_.is_reply_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CP2P_Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:CP2P_Ping)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.send_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_reply_) -
        reinterpret_cast<char*>(&_impl_.send_time_)) + sizeof(_impl_.is_reply_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CP2P_Ping::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CP2P_Ping& this_ = static_cast<const CP2P_Ping&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CP2P_Ping::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CP2P_Ping& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CP2P_Ping)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // required uint64 send_time = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_send_time(), target);
  }

  // required bool is_reply = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_is_reply(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2P_Ping)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CP2P_Ping::ByteSizeLong(const MessageLite& base) {
  const CP2P_Ping& this_ = static_cast<const CP2P_Ping&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CP2P_Ping::ByteSizeLong() const {
  const CP2P_Ping& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CP2P_Ping)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000002u & cached_has_bits) * 2;
   {
    // required uint64 send_time = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_send_time());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CP2P_Ping::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CP2P_Ping*>(&to_msg);
  auto& from = static_cast<const CP2P_Ping&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CP2P_Ping)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.send_time_ = from._impl_.send_time_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.is_reply_ = from._impl_.is_reply_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CP2P_Ping::CopyFrom(const CP2P_Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CP2P_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CP2P_Ping::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CP2P_Ping&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CP2P_Ping::InternalSwap(CP2P_Ping* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_.is_reply_)
      + sizeof(CP2P_Ping::_impl_.is_reply_)
      - PROTOBUF_FIELD_OFFSET(CP2P_Ping, _impl_.send_time_)>(
          reinterpret_cast<char*>(&_impl_.send_time_),
          reinterpret_cast<char*>(&other->_impl_.send_time_));
}

::google::protobuf::Metadata CP2P_Ping::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CP2P_VRAvatarPosition_COrientation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CP2P_VRAvatarPosition_COrientation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_._has_bits_);
};

void CP2P_VRAvatarPosition_COrientation::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CP2P_VRAvatarPosition_COrientation::clear_ang() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ang_ != nullptr) _impl_.ang_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CP2P_VRAvatarPosition_COrientation::CP2P_VRAvatarPosition_COrientation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_VRAvatarPosition_COrientation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CP2P_VRAvatarPosition.COrientation)
}
PROTOBUF_NDEBUG_INLINE CP2P_VRAvatarPosition_COrientation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CP2P_VRAvatarPosition_COrientation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CP2P_VRAvatarPosition_COrientation::CP2P_VRAvatarPosition_COrientation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CP2P_VRAvatarPosition_COrientation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_VRAvatarPosition_COrientation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CP2P_VRAvatarPosition_COrientation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_)
                : nullptr;
  _impl_.ang_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ang_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CP2P_VRAvatarPosition.COrientation)
}
PROTOBUF_NDEBUG_INLINE CP2P_VRAvatarPosition_COrientation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CP2P_VRAvatarPosition_COrientation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, ang_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::ang_));
}
CP2P_VRAvatarPosition_COrientation::~CP2P_VRAvatarPosition_COrientation() {
  // @@protoc_insertion_point(destructor:CP2P_VRAvatarPosition.COrientation)
  SharedDtor(*this);
}
inline void CP2P_VRAvatarPosition_COrientation::SharedDtor(MessageLite& self) {
  CP2P_VRAvatarPosition_COrientation& this_ = static_cast<CP2P_VRAvatarPosition_COrientation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pos_;
  delete this_._impl_.ang_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CP2P_VRAvatarPosition_COrientation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CP2P_VRAvatarPosition_COrientation(arena);
}
constexpr auto CP2P_VRAvatarPosition_COrientation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CP2P_VRAvatarPosition_COrientation),
                                            alignof(CP2P_VRAvatarPosition_COrientation));
}
constexpr auto CP2P_VRAvatarPosition_COrientation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CP2P_VRAvatarPosition_COrientation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CP2P_VRAvatarPosition_COrientation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CP2P_VRAvatarPosition_COrientation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CP2P_VRAvatarPosition_COrientation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CP2P_VRAvatarPosition_COrientation>(), &CP2P_VRAvatarPosition_COrientation::ByteSizeLong,
              &CP2P_VRAvatarPosition_COrientation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_._cached_size_),
          false,
      },
      &CP2P_VRAvatarPosition_COrientation::kDescriptorMethods,
      &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CP2P_VRAvatarPosition_COrientation_class_data_ =
            CP2P_VRAvatarPosition_COrientation::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CP2P_VRAvatarPosition_COrientation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CP2P_VRAvatarPosition_COrientation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CP2P_VRAvatarPosition_COrientation_class_data_.tc_table);
  return CP2P_VRAvatarPosition_COrientation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CP2P_VRAvatarPosition_COrientation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CP2P_VRAvatarPosition_COrientation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CP2P_VRAvatarPosition_COrientation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgQAngle ang = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_.ang_)}},
    // optional .CMsgVector pos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector pos = 1;
    {PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle ang = 2;
    {PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_.ang_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgVector>()},
      {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CP2P_VRAvatarPosition_COrientation::Clear() {
// @@protoc_insertion_point(message_clear_start:CP2P_VRAvatarPosition.COrientation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.ang_ != nullptr);
      _impl_.ang_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CP2P_VRAvatarPosition_COrientation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CP2P_VRAvatarPosition_COrientation& this_ = static_cast<const CP2P_VRAvatarPosition_COrientation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CP2P_VRAvatarPosition_COrientation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CP2P_VRAvatarPosition_COrientation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CP2P_VRAvatarPosition.COrientation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgVector pos = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgQAngle ang = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.ang_, this_._impl_.ang_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2P_VRAvatarPosition.COrientation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CP2P_VRAvatarPosition_COrientation::ByteSizeLong(const MessageLite& base) {
  const CP2P_VRAvatarPosition_COrientation& this_ = static_cast<const CP2P_VRAvatarPosition_COrientation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CP2P_VRAvatarPosition_COrientation::ByteSizeLong() const {
  const CP2P_VRAvatarPosition_COrientation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CP2P_VRAvatarPosition.COrientation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgVector pos = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
    }
    // optional .CMsgQAngle ang = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ang_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CP2P_VRAvatarPosition_COrientation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CP2P_VRAvatarPosition_COrientation*>(&to_msg);
  auto& from = static_cast<const CP2P_VRAvatarPosition_COrientation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CP2P_VRAvatarPosition.COrientation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.ang_ != nullptr);
      if (_this->_impl_.ang_ == nullptr) {
        _this->_impl_.ang_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ang_);
      } else {
        _this->_impl_.ang_->MergeFrom(*from._impl_.ang_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CP2P_VRAvatarPosition_COrientation::CopyFrom(const CP2P_VRAvatarPosition_COrientation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CP2P_VRAvatarPosition.COrientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CP2P_VRAvatarPosition_COrientation::InternalSwap(CP2P_VRAvatarPosition_COrientation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_.ang_)
      + sizeof(CP2P_VRAvatarPosition_COrientation::_impl_.ang_)
      - PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition_COrientation, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata CP2P_VRAvatarPosition_COrientation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CP2P_VRAvatarPosition::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CP2P_VRAvatarPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_._has_bits_);
};

CP2P_VRAvatarPosition::CP2P_VRAvatarPosition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_VRAvatarPosition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CP2P_VRAvatarPosition)
}
PROTOBUF_NDEBUG_INLINE CP2P_VRAvatarPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CP2P_VRAvatarPosition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        body_parts_{visibility, arena, from.body_parts_} {}

CP2P_VRAvatarPosition::CP2P_VRAvatarPosition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CP2P_VRAvatarPosition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_VRAvatarPosition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CP2P_VRAvatarPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hat_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, hat_id_),
           offsetof(Impl_, world_scale_) -
               offsetof(Impl_, hat_id_) +
               sizeof(Impl_::world_scale_));

  // @@protoc_insertion_point(copy_constructor:CP2P_VRAvatarPosition)
}
PROTOBUF_NDEBUG_INLINE CP2P_VRAvatarPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        body_parts_{visibility, arena} {}

inline void CP2P_VRAvatarPosition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hat_id_),
           0,
           offsetof(Impl_, world_scale_) -
               offsetof(Impl_, hat_id_) +
               sizeof(Impl_::world_scale_));
}
CP2P_VRAvatarPosition::~CP2P_VRAvatarPosition() {
  // @@protoc_insertion_point(destructor:CP2P_VRAvatarPosition)
  SharedDtor(*this);
}
inline void CP2P_VRAvatarPosition::SharedDtor(MessageLite& self) {
  CP2P_VRAvatarPosition& this_ = static_cast<CP2P_VRAvatarPosition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CP2P_VRAvatarPosition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CP2P_VRAvatarPosition(arena);
}
constexpr auto CP2P_VRAvatarPosition::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.body_parts_) +
          decltype(CP2P_VRAvatarPosition::_impl_.body_parts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CP2P_VRAvatarPosition), alignof(CP2P_VRAvatarPosition), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CP2P_VRAvatarPosition::PlacementNew_,
                                 sizeof(CP2P_VRAvatarPosition),
                                 alignof(CP2P_VRAvatarPosition));
  }
}
constexpr auto CP2P_VRAvatarPosition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CP2P_VRAvatarPosition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CP2P_VRAvatarPosition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CP2P_VRAvatarPosition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CP2P_VRAvatarPosition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CP2P_VRAvatarPosition>(), &CP2P_VRAvatarPosition::ByteSizeLong,
              &CP2P_VRAvatarPosition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_._cached_size_),
          false,
      },
      &CP2P_VRAvatarPosition::kDescriptorMethods,
      &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CP2P_VRAvatarPosition_class_data_ =
            CP2P_VRAvatarPosition::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CP2P_VRAvatarPosition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CP2P_VRAvatarPosition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CP2P_VRAvatarPosition_class_data_.tc_table);
  return CP2P_VRAvatarPosition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
CP2P_VRAvatarPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CP2P_VRAvatarPosition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CP2P_VRAvatarPosition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 world_scale = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_VRAvatarPosition, _impl_.world_scale_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.world_scale_)}},
    // repeated .CP2P_VRAvatarPosition.COrientation body_parts = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.body_parts_)}},
    // optional int32 hat_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_VRAvatarPosition, _impl_.hat_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.hat_id_)}},
    // optional int32 scene_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_VRAvatarPosition, _impl_.scene_id_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.scene_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CP2P_VRAvatarPosition.COrientation body_parts = 1;
    {PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.body_parts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 hat_id = 2;
    {PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.hat_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 scene_id = 3;
    {PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.scene_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 world_scale = 4;
    {PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.world_scale_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CP2P_VRAvatarPosition_COrientation>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CP2P_VRAvatarPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CP2P_VRAvatarPosition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.body_parts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.hat_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.world_scale_) -
        reinterpret_cast<char*>(&_impl_.hat_id_)) + sizeof(_impl_.world_scale_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CP2P_VRAvatarPosition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CP2P_VRAvatarPosition& this_ = static_cast<const CP2P_VRAvatarPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CP2P_VRAvatarPosition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CP2P_VRAvatarPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CP2P_VRAvatarPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CP2P_VRAvatarPosition.COrientation body_parts = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_body_parts_size());
       i < n; i++) {
    const auto& repfield = this_._internal_body_parts().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 hat_id = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_hat_id(), target);
  }

  // optional int32 scene_id = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_scene_id(), target);
  }

  // optional int32 world_scale = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_world_scale(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2P_VRAvatarPosition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CP2P_VRAvatarPosition::ByteSizeLong(const MessageLite& base) {
  const CP2P_VRAvatarPosition& this_ = static_cast<const CP2P_VRAvatarPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CP2P_VRAvatarPosition::ByteSizeLong() const {
  const CP2P_VRAvatarPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CP2P_VRAvatarPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CP2P_VRAvatarPosition.COrientation body_parts = 1;
    {
      total_size += 1UL * this_._internal_body_parts_size();
      for (const auto& msg : this_._internal_body_parts()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional int32 hat_id = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_hat_id());
    }
    // optional int32 scene_id = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_scene_id());
    }
    // optional int32 world_scale = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_world_scale());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CP2P_VRAvatarPosition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CP2P_VRAvatarPosition*>(&to_msg);
  auto& from = static_cast<const CP2P_VRAvatarPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CP2P_VRAvatarPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_body_parts()->MergeFrom(
      from._internal_body_parts());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.hat_id_ = from._impl_.hat_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.scene_id_ = from._impl_.scene_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.world_scale_ = from._impl_.world_scale_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CP2P_VRAvatarPosition::CopyFrom(const CP2P_VRAvatarPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CP2P_VRAvatarPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CP2P_VRAvatarPosition::InternalSwap(CP2P_VRAvatarPosition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.body_parts_.InternalSwap(&other->_impl_.body_parts_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.world_scale_)
      + sizeof(CP2P_VRAvatarPosition::_impl_.world_scale_)
      - PROTOBUF_FIELD_OFFSET(CP2P_VRAvatarPosition, _impl_.hat_id_)>(
          reinterpret_cast<char*>(&_impl_.hat_id_),
          reinterpret_cast<char*>(&other->_impl_.hat_id_));
}

::google::protobuf::Metadata CP2P_VRAvatarPosition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CP2P_WatchSynchronization::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CP2P_WatchSynchronization>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_._has_bits_);
};

CP2P_WatchSynchronization::CP2P_WatchSynchronization(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_WatchSynchronization_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CP2P_WatchSynchronization)
}
CP2P_WatchSynchronization::CP2P_WatchSynchronization(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CP2P_WatchSynchronization& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CP2P_WatchSynchronization_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CP2P_WatchSynchronization::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CP2P_WatchSynchronization::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, demo_tick_),
           0,
           offsetof(Impl_, dota_replay_speed_) -
               offsetof(Impl_, demo_tick_) +
               sizeof(Impl_::dota_replay_speed_));
}
CP2P_WatchSynchronization::~CP2P_WatchSynchronization() {
  // @@protoc_insertion_point(destructor:CP2P_WatchSynchronization)
  SharedDtor(*this);
}
inline void CP2P_WatchSynchronization::SharedDtor(MessageLite& self) {
  CP2P_WatchSynchronization& this_ = static_cast<CP2P_WatchSynchronization&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CP2P_WatchSynchronization::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CP2P_WatchSynchronization(arena);
}
constexpr auto CP2P_WatchSynchronization::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CP2P_WatchSynchronization),
                                            alignof(CP2P_WatchSynchronization));
}
constexpr auto CP2P_WatchSynchronization::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CP2P_WatchSynchronization_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CP2P_WatchSynchronization::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CP2P_WatchSynchronization>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CP2P_WatchSynchronization::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CP2P_WatchSynchronization>(), &CP2P_WatchSynchronization::ByteSizeLong,
              &CP2P_WatchSynchronization::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_._cached_size_),
          false,
      },
      &CP2P_WatchSynchronization::kDescriptorMethods,
      &descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CP2P_WatchSynchronization_class_data_ =
            CP2P_WatchSynchronization::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CP2P_WatchSynchronization::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CP2P_WatchSynchronization_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CP2P_WatchSynchronization_class_data_.tc_table);
  return CP2P_WatchSynchronization_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2>
CP2P_WatchSynchronization::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CP2P_WatchSynchronization_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CP2P_WatchSynchronization>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 dota_replay_speed = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_WatchSynchronization, _impl_.dota_replay_speed_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_replay_speed_)}},
    // optional int32 demo_tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_WatchSynchronization, _impl_.demo_tick_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.demo_tick_)}},
    // optional bool paused = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CP2P_WatchSynchronization, _impl_.paused_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.paused_)}},
    // optional uint64 tv_listen_voice_indices = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CP2P_WatchSynchronization, _impl_.tv_listen_voice_indices_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.tv_listen_voice_indices_)}},
    // optional int32 dota_spectator_mode = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_WatchSynchronization, _impl_.dota_spectator_mode_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_mode_)}},
    // optional bool dota_spectator_watching_broadcaster = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CP2P_WatchSynchronization, _impl_.dota_spectator_watching_broadcaster_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_watching_broadcaster_)}},
    // optional int32 dota_spectator_hero_index = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_WatchSynchronization, _impl_.dota_spectator_hero_index_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_hero_index_)}},
    // optional int32 dota_spectator_autospeed = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CP2P_WatchSynchronization, _impl_.dota_spectator_autospeed_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_autospeed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 demo_tick = 1;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.demo_tick_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool paused = 2;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.paused_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint64 tv_listen_voice_indices = 3;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.tv_listen_voice_indices_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 dota_spectator_mode = 4;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_mode_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool dota_spectator_watching_broadcaster = 5;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_watching_broadcaster_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 dota_spectator_hero_index = 6;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_hero_index_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dota_spectator_autospeed = 7;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_spectator_autospeed_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dota_replay_speed = 8;
    {PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_replay_speed_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CP2P_WatchSynchronization::Clear() {
// @@protoc_insertion_point(message_clear_start:CP2P_WatchSynchronization)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.demo_tick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dota_replay_speed_) -
        reinterpret_cast<char*>(&_impl_.demo_tick_)) + sizeof(_impl_.dota_replay_speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CP2P_WatchSynchronization::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CP2P_WatchSynchronization& this_ = static_cast<const CP2P_WatchSynchronization&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CP2P_WatchSynchronization::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CP2P_WatchSynchronization& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CP2P_WatchSynchronization)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 demo_tick = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_demo_tick(), target);
  }

  // optional bool paused = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_paused(), target);
  }

  // optional uint64 tv_listen_voice_indices = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_tv_listen_voice_indices(), target);
  }

  // optional int32 dota_spectator_mode = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_dota_spectator_mode(), target);
  }

  // optional bool dota_spectator_watching_broadcaster = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this_._internal_dota_spectator_watching_broadcaster(), target);
  }

  // optional int32 dota_spectator_hero_index = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_dota_spectator_hero_index(), target);
  }

  // optional int32 dota_spectator_autospeed = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
            stream, this_._internal_dota_spectator_autospeed(), target);
  }

  // optional int32 dota_replay_speed = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
            stream, this_._internal_dota_replay_speed(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CP2P_WatchSynchronization)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CP2P_WatchSynchronization::ByteSizeLong(const MessageLite& base) {
  const CP2P_WatchSynchronization& this_ = static_cast<const CP2P_WatchSynchronization&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CP2P_WatchSynchronization::ByteSizeLong() const {
  const CP2P_WatchSynchronization& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CP2P_WatchSynchronization)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000006u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000f9u) != 0) {
    // optional int32 demo_tick = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_demo_tick());
    }
    // optional uint64 tv_listen_voice_indices = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tv_listen_voice_indices());
    }
    // optional int32 dota_spectator_mode = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_dota_spectator_mode());
    }
    // optional int32 dota_spectator_hero_index = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_dota_spectator_hero_index());
    }
    // optional int32 dota_spectator_autospeed = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_dota_spectator_autospeed());
    }
    // optional int32 dota_replay_speed = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_dota_replay_speed());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CP2P_WatchSynchronization::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CP2P_WatchSynchronization*>(&to_msg);
  auto& from = static_cast<const CP2P_WatchSynchronization&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CP2P_WatchSynchronization)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.demo_tick_ = from._impl_.demo_tick_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.paused_ = from._impl_.paused_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.dota_spectator_watching_broadcaster_ = from._impl_.dota_spectator_watching_broadcaster_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.tv_listen_voice_indices_ = from._impl_.tv_listen_voice_indices_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.dota_spectator_mode_ = from._impl_.dota_spectator_mode_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.dota_spectator_hero_index_ = from._impl_.dota_spectator_hero_index_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.dota_spectator_autospeed_ = from._impl_.dota_spectator_autospeed_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.dota_replay_speed_ = from._impl_.dota_replay_speed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CP2P_WatchSynchronization::CopyFrom(const CP2P_WatchSynchronization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CP2P_WatchSynchronization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CP2P_WatchSynchronization::InternalSwap(CP2P_WatchSynchronization* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.dota_replay_speed_)
      + sizeof(CP2P_WatchSynchronization::_impl_.dota_replay_speed_)
      - PROTOBUF_FIELD_OFFSET(CP2P_WatchSynchronization, _impl_.demo_tick_)>(
          reinterpret_cast<char*>(&_impl_.demo_tick_),
          reinterpret_cast<char*>(&other->_impl_.demo_tick_));
}

::google::protobuf::Metadata CP2P_WatchSynchronization::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_c_5fpeer2peer_5fnetmessages_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

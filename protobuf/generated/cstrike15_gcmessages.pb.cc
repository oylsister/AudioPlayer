// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cstrike15_gcmessages.proto
// Protobuf C++ Version: 6.30.0-rc1

#include "cstrike15_gcmessages.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr XpProgressData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        xp_points_{0u},
        xp_category_{0} {}

template <typename>
PROTOBUF_CONSTEXPR XpProgressData::XpProgressData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(XpProgressData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct XpProgressDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR XpProgressDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~XpProgressDataDefaultTypeInternal() {}
  union {
    XpProgressData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 XpProgressDataDefaultTypeInternal _XpProgressData_default_instance_;

inline constexpr WatchableMatchInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tv_watch_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        game_mapgroup_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        game_map_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_ip_{0u},
        tv_port_{0u},
        tv_spectators_{0u},
        tv_time_{0u},
        cl_decryptdata_key_{::uint64_t{0u}},
        cl_decryptdata_key_pub_{::uint64_t{0u}},
        server_id_{::uint64_t{0u}},
        match_id_{::uint64_t{0u}},
        reservation_id_{::uint64_t{0u}},
        game_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR WatchableMatchInfo::WatchableMatchInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WatchableMatchInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchableMatchInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchableMatchInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchableMatchInfoDefaultTypeInternal() {}
  union {
    WatchableMatchInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchableMatchInfoDefaultTypeInternal _WatchableMatchInfo_default_instance_;

inline constexpr TournamentPlayer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_nick_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_flag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_{0u},
        player_dob_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TournamentPlayer::TournamentPlayer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TournamentPlayer_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TournamentPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TournamentPlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TournamentPlayerDefaultTypeInternal() {}
  union {
    TournamentPlayer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TournamentPlayerDefaultTypeInternal _TournamentPlayer_default_instance_;

inline constexpr TournamentMatchSetup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_id_{0},
        team_id_ct_{0},
        team_id_t_{0},
        event_stage_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TournamentMatchSetup::TournamentMatchSetup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TournamentMatchSetup_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TournamentMatchSetupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TournamentMatchSetupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TournamentMatchSetupDefaultTypeInternal() {}
  union {
    TournamentMatchSetup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TournamentMatchSetupDefaultTypeInternal _TournamentMatchSetup_default_instance_;

inline constexpr TournamentEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_stage_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_id_{0},
        event_time_start_{0u},
        event_time_end_{0u},
        event_public_{0},
        event_stage_id_{0},
        active_section_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TournamentEvent::TournamentEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TournamentEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TournamentEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TournamentEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TournamentEventDefaultTypeInternal() {}
  union {
    TournamentEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TournamentEventDefaultTypeInternal _TournamentEvent_default_instance_;

inline constexpr ServerHltvInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        game_mapgroup_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        game_map_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tv_watch_key_{::uint64_t{0u}},
        tv_udp_port_{0u},
        tv_slots_{0u},
        tv_clients_{0u},
        tv_proxies_{0u},
        tv_time_{0u},
        game_type_{0u},
        tv_master_steamid_{::uint64_t{0u}},
        tv_local_slots_{0u},
        tv_local_clients_{0u},
        tv_local_proxies_{0u},
        tv_relay_slots_{0u},
        tv_relay_clients_{0u},
        tv_relay_proxies_{0u},
        tv_relay_address_{0u},
        tv_relay_port_{0u},
        tv_relay_steamid_{::uint64_t{0u}},
        flags_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ServerHltvInfo::ServerHltvInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ServerHltvInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerHltvInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerHltvInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerHltvInfoDefaultTypeInternal() {}
  union {
    ServerHltvInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerHltvInfoDefaultTypeInternal _ServerHltvInfo_default_instance_;

inline constexpr ScoreLeaderboardData_Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_{0u},
        val_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ScoreLeaderboardData_Entry::ScoreLeaderboardData_Entry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ScoreLeaderboardData_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScoreLeaderboardData_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScoreLeaderboardData_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScoreLeaderboardData_EntryDefaultTypeInternal() {}
  union {
    ScoreLeaderboardData_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScoreLeaderboardData_EntryDefaultTypeInternal _ScoreLeaderboardData_Entry_default_instance_;

inline constexpr PlayerRankingInfo_PerMapRank::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        map_id_{0u},
        rank_id_{0u},
        wins_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerRankingInfo_PerMapRank::PlayerRankingInfo_PerMapRank(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlayerRankingInfo_PerMapRank_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerRankingInfo_PerMapRankDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerRankingInfo_PerMapRankDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerRankingInfo_PerMapRankDefaultTypeInternal() {}
  union {
    PlayerRankingInfo_PerMapRank _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerRankingInfo_PerMapRankDefaultTypeInternal _PlayerRankingInfo_PerMapRank_default_instance_;

inline constexpr PlayerQuestData_QuestItemData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        quest_id_{::uint64_t{0u}},
        quest_normal_points_earned_{0},
        quest_bonus_points_earned_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerQuestData_QuestItemData::PlayerQuestData_QuestItemData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlayerQuestData_QuestItemData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerQuestData_QuestItemDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerQuestData_QuestItemDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerQuestData_QuestItemDataDefaultTypeInternal() {}
  union {
    PlayerQuestData_QuestItemData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerQuestData_QuestItemDataDefaultTypeInternal _PlayerQuestData_QuestItemData_default_instance_;

inline constexpr PlayerMedalsInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        display_items_defidx_{},
        featured_display_item_defidx_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerMedalsInfo::PlayerMedalsInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlayerMedalsInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerMedalsInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerMedalsInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerMedalsInfoDefaultTypeInternal() {}
  union {
    PlayerMedalsInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerMedalsInfoDefaultTypeInternal _PlayerMedalsInfo_default_instance_;

inline constexpr PlayerDecalDigitalSignature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        endpos_{},
        startpos_{},
        left_{},
        normal_{},
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accountid_{0u},
        rtime_{0u},
        tx_defidx_{0u},
        entindex_{0},
        hitbox_{0u},
        creationtime_{0},
        equipslot_{0u},
        trace_id_{0u},
        tint_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerDecalDigitalSignature::PlayerDecalDigitalSignature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlayerDecalDigitalSignature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDecalDigitalSignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDecalDigitalSignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDecalDigitalSignatureDefaultTypeInternal() {}
  union {
    PlayerDecalDigitalSignature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDecalDigitalSignatureDefaultTypeInternal _PlayerDecalDigitalSignature_default_instance_;

inline constexpr PlayerCommendationInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cmd_friendly_{0u},
        cmd_teaching_{0u},
        cmd_leader_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerCommendationInfo::PlayerCommendationInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlayerCommendationInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerCommendationInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerCommendationInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerCommendationInfoDefaultTypeInternal() {}
  union {
    PlayerCommendationInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerCommendationInfoDefaultTypeInternal _PlayerCommendationInfo_default_instance_;

inline constexpr OperationalVarValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        svalue_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ivalue_{0},
        fvalue_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationalVarValue::OperationalVarValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OperationalVarValue_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationalVarValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationalVarValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationalVarValueDefaultTypeInternal() {}
  union {
    OperationalVarValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationalVarValueDefaultTypeInternal _OperationalVarValue_default_instance_;

inline constexpr OperationalStatisticElement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        values_{},
        idkey_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR OperationalStatisticElement::OperationalStatisticElement(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OperationalStatisticElement_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationalStatisticElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationalStatisticElementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationalStatisticElementDefaultTypeInternal() {}
  union {
    OperationalStatisticElement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationalStatisticElementDefaultTypeInternal _OperationalStatisticElement_default_instance_;

inline constexpr OperationalStatisticDescription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        idkey_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR OperationalStatisticDescription::OperationalStatisticDescription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OperationalStatisticDescription_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationalStatisticDescriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationalStatisticDescriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationalStatisticDescriptionDefaultTypeInternal() {}
  union {
    OperationalStatisticDescription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationalStatisticDescriptionDefaultTypeInternal _OperationalStatisticDescription_default_instance_;

inline constexpr MatchEndItemUpdates::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_{::uint64_t{0u}},
        item_attr_defidx_{0u},
        item_attr_delta_value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MatchEndItemUpdates::MatchEndItemUpdates(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MatchEndItemUpdates_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatchEndItemUpdatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatchEndItemUpdatesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatchEndItemUpdatesDefaultTypeInternal() {}
  union {
    MatchEndItemUpdates _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatchEndItemUpdatesDefaultTypeInternal _MatchEndItemUpdates_default_instance_;

inline constexpr IpAddressMask::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a_{0u},
        b_{0u},
        c_{0u},
        d_{0u},
        bits_{0u},
        token_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR IpAddressMask::IpAddressMask(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(IpAddressMask_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IpAddressMaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IpAddressMaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IpAddressMaskDefaultTypeInternal() {}
  union {
    IpAddressMask _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IpAddressMaskDefaultTypeInternal _IpAddressMask_default_instance_;

inline constexpr GameServerPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ping_{0},
        ip_{0u},
        instances_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GameServerPing::GameServerPing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GameServerPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameServerPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameServerPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameServerPingDefaultTypeInternal() {}
  union {
    GameServerPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameServerPingDefaultTypeInternal _GameServerPing_default_instance_;

inline constexpr DetailedSearchStatistic::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        game_type_{0u},
        search_time_avg_{0u},
        players_searching_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR DetailedSearchStatistic::DetailedSearchStatistic(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DetailedSearchStatistic_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DetailedSearchStatisticDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DetailedSearchStatisticDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DetailedSearchStatisticDefaultTypeInternal() {}
  union {
    DetailedSearchStatistic _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DetailedSearchStatisticDefaultTypeInternal _DetailedSearchStatistic_default_instance_;

inline constexpr DeepPlayerStatsEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mates_{},
        match_id_{::uint64_t{0u}},
        accountid_{0u},
        mm_game_mode_{0u},
        mapid_{0u},
        b_starting_ct_{false},
        match_outcome_{0u},
        rounds_won_{0u},
        rounds_lost_{0u},
        stat_score_{0u},
        stat_deaths_{0u},
        stat_mvps_{0u},
        enemy_kills_{0u},
        enemy_headshots_{0u},
        enemy_2ks_{0u},
        enemy_3ks_{0u},
        enemy_4ks_{0u},
        total_damage_{0u},
        engagements_entry_count_{0u},
        engagements_entry_wins_{0u},
        engagements_1v1_count_{0u},
        engagements_1v1_wins_{0u},
        engagements_1v2_count_{0u},
        engagements_1v2_wins_{0u},
        utility_count_{0u},
        utility_success_{0u},
        flash_count_{0u},
        flash_success_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR DeepPlayerStatsEntry::DeepPlayerStatsEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeepPlayerStatsEntry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeepPlayerStatsEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeepPlayerStatsEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeepPlayerStatsEntryDefaultTypeInternal() {}
  union {
    DeepPlayerStatsEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeepPlayerStatsEntryDefaultTypeInternal _DeepPlayerStatsEntry_default_instance_;

inline constexpr DeepPlayerMatchEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        match_id_{::uint64_t{0u}},
        accountid_{0u},
        event_id_{0u},
        event_type_{0u},
        b_playing_ct_{false},
        user_pos_x_{0},
        user_pos_y_{0},
        user_defidx_{0u},
        other_pos_x_{0},
        other_pos_y_{0},
        other_defidx_{0u},
        user_pos_z_{0},
        other_pos_z_{0},
        event_data_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeepPlayerMatchEvent::DeepPlayerMatchEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeepPlayerMatchEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeepPlayerMatchEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeepPlayerMatchEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeepPlayerMatchEventDefaultTypeInternal() {}
  union {
    DeepPlayerMatchEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeepPlayerMatchEventDefaultTypeInternal _DeepPlayerMatchEvent_default_instance_;

inline constexpr DataCenterPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_center_id_{0u},
        ping_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataCenterPing::DataCenterPing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DataCenterPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DataCenterPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataCenterPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataCenterPingDefaultTypeInternal() {}
  union {
    DataCenterPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataCenterPingDefaultTypeInternal _DataCenterPing_default_instance_;

inline constexpr CVDiagnostic::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        string_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        extended_{0u},
        value_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CVDiagnostic::CVDiagnostic(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CVDiagnostic_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CVDiagnosticDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CVDiagnosticDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CVDiagnosticDefaultTypeInternal() {}
  union {
    CVDiagnostic _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CVDiagnosticDefaultTypeInternal _CVDiagnostic_default_instance_;

inline constexpr CSOQuestProgress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        questid_{0u},
        points_remaining_{0u},
        bonus_points_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOQuestProgress::CSOQuestProgress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOQuestProgress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOQuestProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOQuestProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOQuestProgressDefaultTypeInternal() {}
  union {
    CSOQuestProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOQuestProgressDefaultTypeInternal _CSOQuestProgress_default_instance_;

inline constexpr CSOEconCoupon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entryid_{0u},
        defidx_{0u},
        expiration_date_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOEconCoupon::CSOEconCoupon(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOEconCoupon_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOEconCouponDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOEconCouponDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOEconCouponDefaultTypeInternal() {}
  union {
    CSOEconCoupon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOEconCouponDefaultTypeInternal _CSOEconCoupon_default_instance_;

inline constexpr CSOAccountXpShop::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        xp_tracks_{},
        generation_time_{0u},
        redeemable_balance_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOAccountXpShop::CSOAccountXpShop(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOAccountXpShop_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOAccountXpShopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOAccountXpShopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOAccountXpShopDefaultTypeInternal() {}
  union {
    CSOAccountXpShop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOAccountXpShopDefaultTypeInternal _CSOAccountXpShop_default_instance_;

inline constexpr CSOAccountSeasonalOperation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        season_value_{0u},
        tier_unlocked_{0u},
        premium_tiers_{0u},
        mission_id_{0u},
        missions_completed_{0u},
        redeemable_balance_{0u},
        season_pass_time_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOAccountSeasonalOperation::CSOAccountSeasonalOperation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOAccountSeasonalOperation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOAccountSeasonalOperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOAccountSeasonalOperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOAccountSeasonalOperationDefaultTypeInternal() {}
  union {
    CSOAccountSeasonalOperation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOAccountSeasonalOperationDefaultTypeInternal _CSOAccountSeasonalOperation_default_instance_;

inline constexpr CSOAccountRecurringSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_next_cycle_{0u},
        time_initiated_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOAccountRecurringSubscription::CSOAccountRecurringSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOAccountRecurringSubscription_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOAccountRecurringSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOAccountRecurringSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOAccountRecurringSubscriptionDefaultTypeInternal() {}
  union {
    CSOAccountRecurringSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOAccountRecurringSubscriptionDefaultTypeInternal _CSOAccountRecurringSubscription_default_instance_;

inline constexpr CSOAccountKeychainRemoveToolCharges::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        charges_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOAccountKeychainRemoveToolCharges::CSOAccountKeychainRemoveToolCharges(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOAccountKeychainRemoveToolCharges_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOAccountKeychainRemoveToolChargesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOAccountKeychainRemoveToolChargesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOAccountKeychainRemoveToolChargesDefaultTypeInternal() {}
  union {
    CSOAccountKeychainRemoveToolCharges _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOAccountKeychainRemoveToolChargesDefaultTypeInternal _CSOAccountKeychainRemoveToolCharges_default_instance_;

inline constexpr CSOAccountItemPersonalStore::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        generation_time_{0u},
        redeemable_balance_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOAccountItemPersonalStore::CSOAccountItemPersonalStore(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOAccountItemPersonalStore_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOAccountItemPersonalStoreDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOAccountItemPersonalStoreDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOAccountItemPersonalStoreDefaultTypeInternal() {}
  union {
    CSOAccountItemPersonalStore _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOAccountItemPersonalStoreDefaultTypeInternal _CSOAccountItemPersonalStore_default_instance_;

inline constexpr CPreMatchInfoData_TeamStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        match_info_teams_{},
        match_info_txt_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        match_info_idxtxt_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CPreMatchInfoData_TeamStats::CPreMatchInfoData_TeamStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CPreMatchInfoData_TeamStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CPreMatchInfoData_TeamStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CPreMatchInfoData_TeamStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CPreMatchInfoData_TeamStatsDefaultTypeInternal() {}
  union {
    CPreMatchInfoData_TeamStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CPreMatchInfoData_TeamStatsDefaultTypeInternal _CPreMatchInfoData_TeamStats_default_instance_;

inline constexpr CMsgLegacySource1ClientWelcome_Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        latitude_{0},
        longitude_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgLegacySource1ClientWelcome_Location::CMsgLegacySource1ClientWelcome_Location(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgLegacySource1ClientWelcome_Location_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgLegacySource1ClientWelcome_LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgLegacySource1ClientWelcome_LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgLegacySource1ClientWelcome_LocationDefaultTypeInternal() {}
  union {
    CMsgLegacySource1ClientWelcome_Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgLegacySource1ClientWelcome_LocationDefaultTypeInternal _CMsgLegacySource1ClientWelcome_Location_default_instance_;

inline constexpr CMsgGC_GlobalGame_Unsubscribe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timeleft_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGC_GlobalGame_Unsubscribe::CMsgGC_GlobalGame_Unsubscribe(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGC_GlobalGame_Unsubscribe_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGC_GlobalGame_UnsubscribeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGC_GlobalGame_UnsubscribeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGC_GlobalGame_UnsubscribeDefaultTypeInternal() {}
  union {
    CMsgGC_GlobalGame_Unsubscribe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGC_GlobalGame_UnsubscribeDefaultTypeInternal _CMsgGC_GlobalGame_Unsubscribe_default_instance_;

inline constexpr CMsgGC_GlobalGame_Subscribe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ticket_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGC_GlobalGame_Subscribe::CMsgGC_GlobalGame_Subscribe(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGC_GlobalGame_Subscribe_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGC_GlobalGame_SubscribeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGC_GlobalGame_SubscribeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGC_GlobalGame_SubscribeDefaultTypeInternal() {}
  union {
    CMsgGC_GlobalGame_Subscribe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGC_GlobalGame_SubscribeDefaultTypeInternal _CMsgGC_GlobalGame_Subscribe_default_instance_;

inline constexpr CMsgGC_GlobalGame_Play::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ticket_{::uint64_t{0u}},
        gametimems_{0u},
        msperpoint_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGC_GlobalGame_Play::CMsgGC_GlobalGame_Play(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGC_GlobalGame_Play_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGC_GlobalGame_PlayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGC_GlobalGame_PlayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGC_GlobalGame_PlayDefaultTypeInternal() {}
  union {
    CMsgGC_GlobalGame_Play _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGC_GlobalGame_PlayDefaultTypeInternal _CMsgGC_GlobalGame_Play_default_instance_;

inline constexpr CMsgGCToClientSteamDatagramTicket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        serialized_ticket_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCToClientSteamDatagramTicket::CMsgGCToClientSteamDatagramTicket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCToClientSteamDatagramTicket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCToClientSteamDatagramTicketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCToClientSteamDatagramTicketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCToClientSteamDatagramTicketDefaultTypeInternal() {}
  union {
    CMsgGCToClientSteamDatagramTicket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCToClientSteamDatagramTicketDefaultTypeInternal _CMsgGCToClientSteamDatagramTicket_default_instance_;

inline constexpr CMsgGCCstrike15_v2_ClientRequestNewMission::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_id_{0u},
        campaign_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_ClientRequestNewMission::CMsgGCCstrike15_v2_ClientRequestNewMission(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCstrike15_v2_ClientRequestNewMissionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_ClientRequestNewMissionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCstrike15_v2_ClientRequestNewMissionDefaultTypeInternal() {}
  union {
    CMsgGCCstrike15_v2_ClientRequestNewMission _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCstrike15_v2_ClientRequestNewMissionDefaultTypeInternal _CMsgGCCstrike15_v2_ClientRequestNewMission_default_instance_;

inline constexpr CMsgGCCstrike15_v2_ClientRedeemMissionReward::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        campaign_id_{0u},
        redeem_id_{0u},
        redeemable_balance_{0u},
        expected_cost_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_ClientRedeemMissionReward::CMsgGCCstrike15_v2_ClientRedeemMissionReward(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCstrike15_v2_ClientRedeemMissionRewardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_ClientRedeemMissionRewardDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCstrike15_v2_ClientRedeemMissionRewardDefaultTypeInternal() {}
  union {
    CMsgGCCstrike15_v2_ClientRedeemMissionReward _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCstrike15_v2_ClientRedeemMissionRewardDefaultTypeInternal _CMsgGCCstrike15_v2_ClientRedeemMissionReward_default_instance_;

inline constexpr CMsgGCCstrike15_v2_ClientRedeemFreeReward::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        generation_time_{0u},
        redeemable_balance_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_ClientRedeemFreeReward::CMsgGCCstrike15_v2_ClientRedeemFreeReward(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCstrike15_v2_ClientRedeemFreeRewardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_ClientRedeemFreeRewardDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCstrike15_v2_ClientRedeemFreeRewardDefaultTypeInternal() {}
  union {
    CMsgGCCstrike15_v2_ClientRedeemFreeReward _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCstrike15_v2_ClientRedeemFreeRewardDefaultTypeInternal _CMsgGCCstrike15_v2_ClientRedeemFreeReward_default_instance_;

inline constexpr CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        leaderboard_safe_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeNameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeNameDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeNameDefaultTypeInternal _CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_default_instance_;

inline constexpr CMsgGCCStrike15_v2_SetEventFavorite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        eventid_{::uint64_t{0u}},
        is_favorite_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_SetEventFavorite::CMsgGCCStrike15_v2_SetEventFavorite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_SetEventFavorite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_SetEventFavoriteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_SetEventFavoriteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_SetEventFavoriteDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_SetEventFavorite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_SetEventFavoriteDefaultTypeInternal _CMsgGCCStrike15_v2_SetEventFavorite_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewangles_{},
        userdata_{},
        accountid_{0u},
        type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ServerVarValueNotificationInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ServerVarValueNotificationInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ServerVarValueNotificationInfoDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ServerVarValueNotificationInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ServerVarValueNotificationInfoDefaultTypeInternal _CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_{0u},
        reason_{0u},
        seconds_{0u},
        communication_cooldown_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ServerNotificationForUserPenaltyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ServerNotificationForUserPenaltyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ServerNotificationForUserPenaltyDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ServerNotificationForUserPenalty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ServerNotificationForUserPenaltyDefaultTypeInternal _CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Server2GCClientValidate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Server2GCClientValidate::CMsgGCCStrike15_v2_Server2GCClientValidate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Server2GCClientValidateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Server2GCClientValidateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Server2GCClientValidateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Server2GCClientValidate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Server2GCClientValidateDefaultTypeInternal _CMsgGCCStrike15_v2_Server2GCClientValidate_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sectionid_{0},
        groupid_{0},
        index_{0},
        teamid_{0},
        itemid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPickDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPickDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPickDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPickDefaultTypeInternal _CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_default_instance_;

inline constexpr CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        caseid_{::uint64_t{0u}},
        suspectid_{0u},
        fractionid_{0u},
        rpt_aimbot_{0u},
        rpt_wallhack_{0u},
        rpt_speedhack_{0u},
        rpt_teamharm_{0u},
        reason_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdateDefaultTypeInternal _CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_default_instance_;

inline constexpr CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        caseid_{::uint64_t{0u}},
        statusid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_PlayerOverwatchCaseStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayerOverwatchCaseStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_PlayerOverwatchCaseStatusDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_PlayerOverwatchCaseStatusDefaultTypeInternal _CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_default_instance_;

inline constexpr CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        caseurl_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        caseid_{::uint64_t{0u}},
        verdict_{0u},
        timestamp_{0u},
        throttleseconds_{0u},
        suspectid_{0u},
        fractionid_{0u},
        numrounds_{0u},
        fractionrounds_{0u},
        streakconvictions_{0},
        reason_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignmentDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignmentDefaultTypeInternal _CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Party_SearchResults_Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u},
        grp_{0u},
        game_type_{0u},
        apr_{0u},
        ark_{0u},
        loc_{0u},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_SearchResults_Entry::CMsgGCCStrike15_v2_Party_SearchResults_Entry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Party_SearchResults_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_SearchResults_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Party_SearchResults_EntryDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Party_SearchResults_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Party_SearchResults_EntryDefaultTypeInternal _CMsgGCCStrike15_v2_Party_SearchResults_Entry_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Party_Search::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        grps_{},
        ver_{0u},
        apr_{0u},
        ark_{0u},
        launcher_{0u},
        game_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_Search::CMsgGCCStrike15_v2_Party_Search(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Party_Search_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Party_SearchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_SearchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Party_SearchDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Party_Search _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Party_SearchDefaultTypeInternal _CMsgGCCStrike15_v2_Party_Search_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Party_Register::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u},
        ver_{0u},
        apr_{0u},
        ark_{0u},
        nby_{0u},
        grp_{0u},
        slots_{0u},
        launcher_{0u},
        game_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_Register::CMsgGCCStrike15_v2_Party_Register(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Party_Register_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Party_RegisterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_RegisterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Party_RegisterDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Party_Register _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Party_RegisterDefaultTypeInternal _CMsgGCCStrike15_v2_Party_Register_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Party_Invite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_{0u},
        lobbyid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_Invite::CMsgGCCStrike15_v2_Party_Invite(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Party_Invite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Party_InviteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_InviteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Party_InviteDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Party_Invite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Party_InviteDefaultTypeInternal _CMsgGCCStrike15_v2_Party_Invite_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingStop::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        abandon_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingStop::CMsgGCCStrike15_v2_MatchmakingStop(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingStop_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingStopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingStopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingStopDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingStop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingStopDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingStop_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_mvp_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfoDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfoDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        main_post_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdateDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        token_{0u},
        stamp_{0u},
        exchange_{::uint64_t{0u}},
        retry_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirmDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirmDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirmDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirmDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{0},
        region_id_{0},
        region_r_{0},
        distance_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_NoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_NoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_NoteDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_NoteDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingClient2GCHello::CMsgGCCStrike15_v2_MatchmakingClient2GCHello(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CMsgGCCStrike15_v2_MatchmakingClient2GCHelloDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingClient2GCHelloDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingClient2GCHelloDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingClient2GCHello _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingClient2GCHelloDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingClient2GCHello_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchListRequestTournamentGames::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        eventid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestTournamentGames::CMsgGCCStrike15_v2_MatchListRequestTournamentGames(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchListRequestTournamentGamesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestTournamentGamesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchListRequestTournamentGamesDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchListRequestTournamentGames _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchListRequestTournamentGamesDefaultTypeInternal _CMsgGCCStrike15_v2_MatchListRequestTournamentGames_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchListRequestRecentUserGamesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestRecentUserGamesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchListRequestRecentUserGamesDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchListRequestRecentUserGames _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchListRequestRecentUserGamesDefaultTypeInternal _CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchListRequestLiveGameForUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestLiveGameForUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchListRequestLiveGameForUserDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchListRequestLiveGameForUserDefaultTypeInternal _CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        matchid_{::uint64_t{0u}},
        outcomeid_{::uint64_t{0u}},
        token_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchListRequestFullGameInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestFullGameInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchListRequestFullGameInfoDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchListRequestFullGameInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchListRequestFullGameInfoDefaultTypeInternal _CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGamesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGamesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGamesDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGamesDefaultTypeInternal _CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_{0u},
        gifts_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntryDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntryDefaultTypeInternal _CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GiftsLeaderboardRequest::CMsgGCCStrike15_v2_GiftsLeaderboardRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CMsgGCCStrike15_v2_GiftsLeaderboardRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GiftsLeaderboardRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GiftsLeaderboardRequestDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GiftsLeaderboardRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GiftsLeaderboardRequestDefaultTypeInternal _CMsgGCCStrike15_v2_GiftsLeaderboardRequest_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GetEventFavorites_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        json_favorites_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        json_featured_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        all_events_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GetEventFavorites_Response::CMsgGCCStrike15_v2_GetEventFavorites_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GetEventFavorites_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GetEventFavorites_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GetEventFavorites_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GetEventFavorites_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GetEventFavorites_ResponseDefaultTypeInternal _CMsgGCCStrike15_v2_GetEventFavorites_Response_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GetEventFavorites_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        all_events_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GetEventFavorites_Request::CMsgGCCStrike15_v2_GetEventFavorites_Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GetEventFavorites_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GetEventFavorites_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GetEventFavorites_RequestDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GetEventFavorites_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GetEventFavorites_RequestDefaultTypeInternal _CMsgGCCStrike15_v2_GetEventFavorites_Request_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GCToClientChat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GCToClientChat::CMsgGCCStrike15_v2_GCToClientChat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GCToClientChat_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GCToClientChatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GCToClientChatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GCToClientChatDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GCToClientChat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GCToClientChatDefaultTypeInternal _CMsgGCCStrike15_v2_GCToClientChat_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ServerReservationUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        viewers_external_total_{0u},
        viewers_external_steam_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ServerReservationUpdate::CMsgGCCStrike15_v2_GC2ServerReservationUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ServerReservationUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ServerReservationUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ServerReservationUpdateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ServerReservationUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ServerReservationUpdateDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ServerReservationUpdate_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ClientTournamentInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        teamids_{},
        eventid_{0u},
        stageid_{0u},
        game_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientTournamentInfo::CMsgGCCStrike15_v2_GC2ClientTournamentInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ClientTournamentInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientTournamentInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ClientTournamentInfoDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ClientTournamentInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ClientTournamentInfoDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ClientTournamentInfo_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ClientTextMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientTextMsg::CMsgGCCStrike15_v2_GC2ClientTextMsg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ClientTextMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientTextMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ClientTextMsgDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ClientTextMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ClientTextMsgDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ClientTextMsg_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ClientRequestValidation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        module_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        full_report_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientRequestValidation::CMsgGCCStrike15_v2_GC2ClientRequestValidation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ClientRequestValidationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientRequestValidationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ClientRequestValidationDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ClientRequestValidation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ClientRequestValidationDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ClientRequestValidation_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        file_report_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        files_prevented_trusted_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offer_insecure_mode_{false},
        offer_secure_mode_{false},
        show_unsigned_ui_{false},
        kick_user_{false},
        show_trusted_ui_{false},
        show_warning_not_trusted_{false},
        show_warning_not_trusted_2_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ClientRefuseSecureModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientRefuseSecureModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ClientRefuseSecureModeDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ClientRefuseSecureModeDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        diagnostic_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sha_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        response_{0},
        error_code1_{0},
        error_code2_{0},
        handle_{::int64_t{0}},
        einit_result_{static_cast< ::EInitSystemResult >(0)},
        aux_system1_{0},
        aux_system2_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ClientInitSystem_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientInitSystem_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ClientInitSystem_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ClientInitSystem_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ClientInitSystem_ResponseDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ClientInitSystem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outputname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sha_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        manifest_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        system_package_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        load_{false},
        load_system_{false},
        cookie_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientInitSystem::CMsgGCCStrike15_v2_GC2ClientInitSystem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ClientInitSystemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientInitSystemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ClientInitSystemDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ClientInitSystem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ClientInitSystemDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ClientInitSystem_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Fantasy_FantasySlot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{0},
        pick_{0},
        itemid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Fantasy_FantasySlot::CMsgGCCStrike15_v2_Fantasy_FantasySlot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Fantasy_FantasySlotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Fantasy_FantasySlotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Fantasy_FantasySlotDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Fantasy_FantasySlot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Fantasy_FantasySlotDefaultTypeInternal _CMsgGCCStrike15_v2_Fantasy_FantasySlot_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choked_blocks_{},
        value_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_int_{0},
        server_addr_{0u},
        server_port_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientVarValueNotificationInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientVarValueNotificationInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientVarValueNotificationInfoDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientVarValueNotificationInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientVarValueNotificationInfoDefaultTypeInternal _CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientToGCRequestTicket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gameserver_sdr_routing_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authorized_steam_id_{::uint64_t{0u}},
        gameserver_steam_id_{::uint64_t{0u}},
        authorized_public_ip_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientToGCRequestTicket::CMsgGCCStrike15_v2_ClientToGCRequestTicket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientToGCRequestTicketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientToGCRequestTicketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientToGCRequestTicketDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientToGCRequestTicket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientToGCRequestTicketDefaultTypeInternal _CMsgGCCStrike15_v2_ClientToGCRequestTicket_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientToGCRequestElevate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stage_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientToGCRequestElevate::CMsgGCCStrike15_v2_ClientToGCRequestElevate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientToGCRequestElevateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientToGCRequestElevateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientToGCRequestElevateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientToGCRequestElevate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientToGCRequestElevateDefaultTypeInternal _CMsgGCCStrike15_v2_ClientToGCRequestElevate_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientToGCChat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        match_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientToGCChat::CMsgGCCStrike15_v2_ClientToGCChat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientToGCChat_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientToGCChatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientToGCChatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientToGCChatDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientToGCChat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientToGCChatDefaultTypeInternal _CMsgGCCStrike15_v2_ClientToGCChat_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientSubmitSurveyVote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        survey_id_{0u},
        vote_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientSubmitSurveyVote::CMsgGCCStrike15_v2_ClientSubmitSurveyVote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientSubmitSurveyVoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientSubmitSurveyVoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientSubmitSurveyVoteDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientSubmitSurveyVote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientSubmitSurveyVoteDefaultTypeInternal _CMsgGCCStrike15_v2_ClientSubmitSurveyVote_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientRequestSouvenir::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        itemid_{::uint64_t{0u}},
        matchid_{::uint64_t{0u}},
        eventid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestSouvenir::CMsgGCCStrike15_v2_ClientRequestSouvenir(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientRequestSouvenirDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestSouvenirDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientRequestSouvenirDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientRequestSouvenir _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientRequestSouvenirDefaultTypeInternal _CMsgGCCStrike15_v2_ClientRequestSouvenir_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientRequestPlayersProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_ids__deprecated_{},
        request_id__deprecated_{0u},
        account_id_{0u},
        request_level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestPlayersProfile::CMsgGCCStrike15_v2_ClientRequestPlayersProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientRequestPlayersProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestPlayersProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientRequestPlayersProfileDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientRequestPlayersProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientRequestPlayersProfileDefaultTypeInternal _CMsgGCCStrike15_v2_ClientRequestPlayersProfile_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestOffers::CMsgGCCStrike15_v2_ClientRequestOffers(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(CMsgGCCStrike15_v2_ClientRequestOffers_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CMsgGCCStrike15_v2_ClientRequestOffersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestOffersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientRequestOffersDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientRequestOffers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientRequestOffersDefaultTypeInternal _CMsgGCCStrike15_v2_ClientRequestOffers_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientReportServer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpt_poorperf_{0u},
        rpt_abusivemodels_{0u},
        rpt_badmotd_{0u},
        rpt_listingabuse_{0u},
        match_id_{::uint64_t{0u}},
        rpt_inventoryabuse_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportServer::CMsgGCCStrike15_v2_ClientReportServer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientReportServer_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientReportServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportServerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientReportServerDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientReportServer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientReportServerDefaultTypeInternal _CMsgGCCStrike15_v2_ClientReportServer_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confirmation_id_{::uint64_t{0u}},
        account_id_{0u},
        server_ip_{0u},
        response_type_{0u},
        response_result_{0u},
        tokens_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportResponse::CMsgGCCStrike15_v2_ClientReportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientReportResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientReportResponseDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientReportResponseDefaultTypeInternal _CMsgGCCStrike15_v2_ClientReportResponse_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientReportPlayer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_{0u},
        rpt_aimbot_{0u},
        rpt_wallhack_{0u},
        rpt_speedhack_{0u},
        rpt_teamharm_{0u},
        rpt_textabuse_{0u},
        match_id_{::uint64_t{0u}},
        rpt_voiceabuse_{0u},
        report_from_demo_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportPlayer::CMsgGCCStrike15_v2_ClientReportPlayer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientReportPlayer_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientReportPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportPlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientReportPlayerDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientReportPlayer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientReportPlayerDefaultTypeInternal _CMsgGCCStrike15_v2_ClientReportPlayer_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientPollState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        names_{},
        values_{},
        pollid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPollState::CMsgGCCStrike15_v2_ClientPollState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientPollState_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientPollStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPollStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientPollStateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientPollState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientPollStateDefaultTypeInternal _CMsgGCCStrike15_v2_ClientPollState_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientPerfReport_Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        actual_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        perfcounter_{0u},
        length_{0u},
        sourceid_{0u},
        status_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPerfReport_Entry::CMsgGCCStrike15_v2_ClientPerfReport_Entry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientPerfReport_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPerfReport_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientPerfReport_EntryDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientPerfReport_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientPerfReport_EntryDefaultTypeInternal _CMsgGCCStrike15_v2_ClientPerfReport_Entry_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientPartyWarning_Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_{0u},
        warntype_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPartyWarning_Entry::CMsgGCCStrike15_v2_ClientPartyWarning_Entry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientPartyWarning_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPartyWarning_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientPartyWarning_EntryDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientPartyWarning_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientPartyWarning_EntryDefaultTypeInternal _CMsgGCCStrike15_v2_ClientPartyWarning_Entry_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientPartyJoinRelay::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lobbyid_{::uint64_t{0u}},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPartyJoinRelay::CMsgGCCStrike15_v2_ClientPartyJoinRelay(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientPartyJoinRelayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPartyJoinRelayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientPartyJoinRelayDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientPartyJoinRelay _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientPartyJoinRelayDefaultTypeInternal _CMsgGCCStrike15_v2_ClientPartyJoinRelay_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientNetworkConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientNetworkConfig::CMsgGCCStrike15_v2_ClientNetworkConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientNetworkConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientNetworkConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientNetworkConfigDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientNetworkConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientNetworkConfigDefaultTypeInternal _CMsgGCCStrike15_v2_ClientNetworkConfig_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientLogonFatalError::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        errorcode_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientLogonFatalError::CMsgGCCStrike15_v2_ClientLogonFatalError(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientLogonFatalErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientLogonFatalErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientLogonFatalErrorDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientLogonFatalError _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientLogonFatalErrorDefaultTypeInternal _CMsgGCCStrike15_v2_ClientLogonFatalError_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientAuthKeyCode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        eventid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientAuthKeyCode::CMsgGCCStrike15_v2_ClientAuthKeyCode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientAuthKeyCodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientAuthKeyCodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientAuthKeyCodeDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientAuthKeyCode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientAuthKeyCodeDefaultTypeInternal _CMsgGCCStrike15_v2_ClientAuthKeyCode_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientAccountBalance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientAccountBalance::CMsgGCCStrike15_v2_ClientAccountBalance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientAccountBalance_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientAccountBalanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientAccountBalanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientAccountBalanceDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientAccountBalance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientAccountBalanceDefaultTypeInternal _CMsgGCCStrike15_v2_ClientAccountBalance_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CMsgGCCStrike15_v2_Client2GcAckXPShopTracksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GcAckXPShopTracksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Client2GcAckXPShopTracksDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Client2GcAckXPShopTracks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Client2GcAckXPShopTracksDefaultTypeInternal _CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Client2GCTextMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        args_{},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCTextMsg::CMsgGCCStrike15_v2_Client2GCTextMsg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Client2GCTextMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCTextMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Client2GCTextMsgDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Client2GCTextMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Client2GCTextMsgDefaultTypeInternal _CMsgGCCStrike15_v2_Client2GCTextMsg_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Client2GCStreamUnlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ticket_{::uint64_t{0u}},
        os_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCStreamUnlock::CMsgGCCStrike15_v2_Client2GCStreamUnlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Client2GCStreamUnlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCStreamUnlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Client2GCStreamUnlockDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Client2GCStreamUnlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Client2GCStreamUnlockDefaultTypeInternal _CMsgGCCStrike15_v2_Client2GCStreamUnlock_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        upgradeid_{::uint64_t{0u}},
        defindex_{0u},
        hours_{0u},
        prestigetime_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoinDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoinDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoinDefaultTypeInternal _CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        param_s_{::uint64_t{0u}},
        param_a_{::uint64_t{0u}},
        param_d_{::uint64_t{0u}},
        param_m_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequestDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequestDefaultTypeInternal _CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_default_instance_;

inline constexpr CMsgGCCStrike15_v2_BetaEnrollment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        eresult_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_BetaEnrollment::CMsgGCCStrike15_v2_BetaEnrollment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_BetaEnrollment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_BetaEnrollmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_BetaEnrollmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_BetaEnrollmentDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_BetaEnrollment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_BetaEnrollmentDefaultTypeInternal _CMsgGCCStrike15_v2_BetaEnrollment_default_instance_;

inline constexpr CMsgGCCStrike15_v2_AcknowledgePenalty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        acknowledged_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_AcknowledgePenalty::CMsgGCCStrike15_v2_AcknowledgePenalty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_AcknowledgePenaltyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_AcknowledgePenaltyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_AcknowledgePenaltyDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_AcknowledgePenalty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_AcknowledgePenaltyDefaultTypeInternal _CMsgGCCStrike15_v2_AcknowledgePenalty_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountid_{0u},
        rtcoplay_{0u},
        online_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Account_RequestCoPlays_PlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Account_RequestCoPlays_PlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Account_RequestCoPlays_PlayerDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Account_RequestCoPlays_Player _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Account_RequestCoPlays_PlayerDefaultTypeInternal _CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_default_instance_;

inline constexpr CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        setting_type_{0u},
        setting_value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_AccountPrivacySettings_SettingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_AccountPrivacySettings_SettingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_AccountPrivacySettings_SettingDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_AccountPrivacySettings_Setting _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_AccountPrivacySettings_SettingDefaultTypeInternal _CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_default_instance_;

inline constexpr CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        begin_{0u},
        end_{0u},
        frozen_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_ClientDeepStats_DeepStatsRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_ClientDeepStats_DeepStatsRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_ClientDeepStats_DeepStatsRangeDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_ClientDeepStats_DeepStatsRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_ClientDeepStats_DeepStatsRangeDefaultTypeInternal _CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_default_instance_;

inline constexpr CMsgCsgoSteamUserStatChange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ecsgosteamuserstat_{0},
        delta_{0},
        absolute_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgCsgoSteamUserStatChange::CMsgCsgoSteamUserStatChange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgCsgoSteamUserStatChange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgCsgoSteamUserStatChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgCsgoSteamUserStatChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgCsgoSteamUserStatChangeDefaultTypeInternal() {}
  union {
    CMsgCsgoSteamUserStatChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgCsgoSteamUserStatChangeDefaultTypeInternal _CMsgCsgoSteamUserStatChange_default_instance_;

inline constexpr CMsgCStrike15Welcome::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        store_item_hash_{0u},
        timeplayedconsecutively_{0u},
        time_first_played_{0u},
        last_time_played_{0u},
        gscookieid_{::uint64_t{0u}},
        uniqueid_{::uint64_t{0u}},
        last_ip_address_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgCStrike15Welcome::CMsgCStrike15Welcome(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgCStrike15Welcome_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgCStrike15WelcomeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgCStrike15WelcomeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgCStrike15WelcomeDefaultTypeInternal() {}
  union {
    CMsgCStrike15Welcome _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgCStrike15WelcomeDefaultTypeInternal _CMsgCStrike15Welcome_default_instance_;

inline constexpr CEconItemPreviewDataBlock_Sticker::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slot_{0u},
        sticker_id_{0u},
        wear_{0},
        scale_{0},
        rotation_{0},
        tint_id_{0u},
        offset_x_{0},
        offset_y_{0},
        offset_z_{0},
        pattern_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CEconItemPreviewDataBlock_Sticker::CEconItemPreviewDataBlock_Sticker(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CEconItemPreviewDataBlock_Sticker_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CEconItemPreviewDataBlock_StickerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CEconItemPreviewDataBlock_StickerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CEconItemPreviewDataBlock_StickerDefaultTypeInternal() {}
  union {
    CEconItemPreviewDataBlock_Sticker _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CEconItemPreviewDataBlock_StickerDefaultTypeInternal _CEconItemPreviewDataBlock_Sticker_default_instance_;

inline constexpr CDataGCCStrike15_v2_TournamentMatchDraft_Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mapid_{0},
        team_id_ct_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentMatchDraft_Entry::CDataGCCStrike15_v2_TournamentMatchDraft_Entry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_TournamentMatchDraft_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentMatchDraft_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_TournamentMatchDraft_EntryDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_TournamentMatchDraft_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_TournamentMatchDraft_EntryDefaultTypeInternal _CDataGCCStrike15_v2_TournamentMatchDraft_Entry_default_instance_;

inline constexpr CDataGCCStrike15_v2_TournamentGroupTeam::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        team_id_{0},
        score_{0},
        correctpick_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentGroupTeam::CDataGCCStrike15_v2_TournamentGroupTeam(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_TournamentGroupTeam_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_TournamentGroupTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentGroupTeamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_TournamentGroupTeamDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_TournamentGroupTeam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_TournamentGroupTeamDefaultTypeInternal _CDataGCCStrike15_v2_TournamentGroupTeam_default_instance_;

inline constexpr CDataGCCStrike15_v2_TournamentGroup_Picks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pickids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentGroup_Picks::CDataGCCStrike15_v2_TournamentGroup_Picks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_TournamentGroup_PicksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentGroup_PicksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_TournamentGroup_PicksDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_TournamentGroup_Picks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_TournamentGroup_PicksDefaultTypeInternal _CDataGCCStrike15_v2_TournamentGroup_Picks_default_instance_;

inline constexpr CClientHeaderOverwatchEvidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        caseid_{::uint64_t{0u}},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CClientHeaderOverwatchEvidence::CClientHeaderOverwatchEvidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CClientHeaderOverwatchEvidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CClientHeaderOverwatchEvidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CClientHeaderOverwatchEvidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CClientHeaderOverwatchEvidenceDefaultTypeInternal() {}
  union {
    CClientHeaderOverwatchEvidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CClientHeaderOverwatchEvidenceDefaultTypeInternal _CClientHeaderOverwatchEvidence_default_instance_;

inline constexpr CAttribute_String::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CAttribute_String::CAttribute_String(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CAttribute_String_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CAttribute_StringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CAttribute_StringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CAttribute_StringDefaultTypeInternal() {}
  union {
    CAttribute_String _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CAttribute_StringDefaultTypeInternal _CAttribute_String_default_instance_;

inline constexpr AccountActivity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        activity_{0u},
        mode_{0u},
        matchid_{::uint64_t{0u}},
        map_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AccountActivity::AccountActivity(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AccountActivity_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccountActivityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountActivityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountActivityDefaultTypeInternal() {}
  union {
    AccountActivity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountActivityDefaultTypeInternal _AccountActivity_default_instance_;

inline constexpr TournamentTeam::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        players_{},
        team_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        team_flag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        team_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        team_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TournamentTeam::TournamentTeam(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TournamentTeam_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TournamentTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TournamentTeamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TournamentTeamDefaultTypeInternal() {}
  union {
    TournamentTeam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TournamentTeamDefaultTypeInternal _TournamentTeam_default_instance_;

inline constexpr ScoreLeaderboardData_AccountEntries::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entries_{},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ScoreLeaderboardData_AccountEntries::ScoreLeaderboardData_AccountEntries(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ScoreLeaderboardData_AccountEntries_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScoreLeaderboardData_AccountEntriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScoreLeaderboardData_AccountEntriesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScoreLeaderboardData_AccountEntriesDefaultTypeInternal() {}
  union {
    ScoreLeaderboardData_AccountEntries _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScoreLeaderboardData_AccountEntriesDefaultTypeInternal _ScoreLeaderboardData_AccountEntries_default_instance_;

inline constexpr PlayerRankingInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        per_map_rank_{},
        leaderboard_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_{0u},
        rank_id_{0u},
        wins_{0u},
        rank_change_{0},
        rank_type_id_{0u},
        tv_control_{0u},
        rank_window_stats_{::uint64_t{0u}},
        rank_if_win_{0u},
        rank_if_lose_{0u},
        rank_if_tie_{0u},
        leaderboard_name_status_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerRankingInfo::PlayerRankingInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlayerRankingInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerRankingInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerRankingInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerRankingInfoDefaultTypeInternal() {}
  union {
    PlayerRankingInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerRankingInfoDefaultTypeInternal _PlayerRankingInfo_default_instance_;

inline constexpr PlayerQuestData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        quest_item_data_{},
        xp_progress_data_{},
        item_updates_{},
        userstatchanges_{},
        quester_account_id_{0u},
        time_played_{0u},
        mm_game_mode_{0u},
        operation_points_eligible_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerQuestData::PlayerQuestData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlayerQuestData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerQuestDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerQuestDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerQuestDataDefaultTypeInternal() {}
  union {
    PlayerQuestData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerQuestDataDefaultTypeInternal _PlayerQuestData_default_instance_;

inline constexpr OperationalStatisticsPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        values_{},
        packetid_{0},
        mstimestamp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationalStatisticsPacket::OperationalStatisticsPacket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OperationalStatisticsPacket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationalStatisticsPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationalStatisticsPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationalStatisticsPacketDefaultTypeInternal() {}
  union {
    OperationalStatisticsPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationalStatisticsPacketDefaultTypeInternal _OperationalStatisticsPacket_default_instance_;

inline constexpr GlobalStatistics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        search_statistics_{},
        main_post_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        players_online_{0u},
        servers_online_{0u},
        players_searching_{0u},
        servers_available_{0u},
        ongoing_matches_{0u},
        search_time_avg_{0u},
        required_appid_version_{0u},
        pricesheet_version_{0u},
        twitch_streams_version_{0u},
        active_tournament_eventid_{0u},
        active_survey_id_{0u},
        rtime32_cur_{0u},
        rtime32_event_start_{0u},
        required_appid_version2_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GlobalStatistics::GlobalStatistics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GlobalStatistics_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GlobalStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GlobalStatisticsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GlobalStatisticsDefaultTypeInternal() {}
  union {
    GlobalStatistics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GlobalStatisticsDefaultTypeInternal _GlobalStatistics_default_instance_;

inline constexpr CSOPersonaDataPublic::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commendation_{nullptr},
        player_level_{0},
        elevated_state_{false},
        xp_trail_timestamp_refresh_{0u},
        xp_trail_level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CSOPersonaDataPublic::CSOPersonaDataPublic(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CSOPersonaDataPublic_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSOPersonaDataPublicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSOPersonaDataPublicDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSOPersonaDataPublicDefaultTypeInternal() {}
  union {
    CSOPersonaDataPublic _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSOPersonaDataPublicDefaultTypeInternal _CSOPersonaDataPublic_default_instance_;

inline constexpr CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        xp_progress_data_{},
        account_id_{0u},
        current_xp_{0u},
        current_level_{0u},
        upgraded_defidx_{0u},
        operation_points_awarded_{0u},
        free_rewards_{0u},
        xp_trail_remaining_{0u},
        xp_trail_xp_needed_{0},
        xp_trail_level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedDefaultTypeInternal() {}
  union {
    CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedDefaultTypeInternal _CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_default_instance_;

inline constexpr CMsgGCCStrike15_v2_WatchInfoUsers::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_ids_{},
        watchable_match_infos_{},
        request_id_{0u},
        extended_timeout_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_WatchInfoUsers::CMsgGCCStrike15_v2_WatchInfoUsers(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_WatchInfoUsers_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_WatchInfoUsersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_WatchInfoUsersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_WatchInfoUsersDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_WatchInfoUsers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_WatchInfoUsersDefaultTypeInternal _CMsgGCCStrike15_v2_WatchInfoUsers_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Predictions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        group_match_team_picks_{},
        event_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Predictions::CMsgGCCStrike15_v2_Predictions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Predictions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_PredictionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PredictionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_PredictionsDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Predictions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_PredictionsDefaultTypeInternal _CMsgGCCStrike15_v2_Predictions_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Party_SearchResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_SearchResults::CMsgGCCStrike15_v2_Party_SearchResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Party_SearchResults_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Party_SearchResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Party_SearchResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Party_SearchResultsDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Party_SearchResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Party_SearchResultsDefaultTypeInternal _CMsgGCCStrike15_v2_Party_SearchResults_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingStart::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_ids_{},
        ticket_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tournament_match_{nullptr},
        game_type_{0u},
        client_version_{0u},
        prime_only_{false},
        tv_control_{0u},
        lobby_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingStart::CMsgGCCStrike15_v2_MatchmakingStart(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingStart_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingStartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingStartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingStartDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingStart _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingStartDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingStart_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gameserverpings_{},
        data_center_pings_{},
        notes_{},
        search_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        debug_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_index_{0},
        final_batch_{0},
        max_ping_{0u},
        test_token_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingClient2ServerPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingClient2ServerPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingClient2ServerPingDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingClient2ServerPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingClient2ServerPingDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GiftsLeaderboardResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entries_{},
        servertime_{0u},
        time_period_seconds_{0u},
        total_gifts_given_{0u},
        total_givers_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GiftsLeaderboardResponse::CMsgGCCStrike15_v2_GiftsLeaderboardResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GiftsLeaderboardResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GiftsLeaderboardResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GiftsLeaderboardResponseDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GiftsLeaderboardResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GiftsLeaderboardResponseDefaultTypeInternal _CMsgGCCStrike15_v2_GiftsLeaderboardResponse_default_instance_;

inline constexpr CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        prematch_{nullptr},
        postmatch_{nullptr},
        current_xp_{0u},
        current_level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_GC2ClientNotifyXPShopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_GC2ClientNotifyXPShopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_GC2ClientNotifyXPShopDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_GC2ClientNotifyXPShop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_GC2ClientNotifyXPShopDefaultTypeInternal _CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Fantasy_FantasyTeam::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slots_{},
        sectionid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Fantasy_FantasyTeam::CMsgGCCStrike15_v2_Fantasy_FantasyTeam(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Fantasy_FantasyTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Fantasy_FantasyTeamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Fantasy_FantasyTeamDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Fantasy_FantasyTeam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Fantasy_FantasyTeamDefaultTypeInternal _CMsgGCCStrike15_v2_Fantasy_FantasyTeam_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_ids_{},
        data_center_pings_{},
        serverid_{::uint64_t{0u}},
        request_id_{0u},
        client_launcher_{0u},
        matchid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientRequestWatchInfoFriendsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestWatchInfoFriendsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientRequestWatchInfoFriendsDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientRequestWatchInfoFriendsDefaultTypeInternal _CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientReportValidation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        diagnostics_{},
        file_report_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        command_line_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_launch_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_files_{0u},
        internal_error_{0u},
        trust_time_{0u},
        count_pending_{0u},
        count_completed_{0u},
        process_id_{0u},
        osversion_{0},
        clientreportversion_{0u},
        status_id_{0u},
        diagnostic1_{0u},
        diagnostic2_{::uint64_t{0u}},
        diagnostic3_{::uint64_t{0u}},
        client_time_{::uint64_t{0u}},
        diagnostic4_{::uint64_t{0u}},
        diagnostic5_{::uint64_t{0u}},
        report_count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportValidation::CMsgGCCStrike15_v2_ClientReportValidation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientReportValidation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientReportValidationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientReportValidationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientReportValidationDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientReportValidation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientReportValidationDefaultTypeInternal _CMsgGCCStrike15_v2_ClientReportValidation_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientPlayerDecalSign::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr},
        itemid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPlayerDecalSign::CMsgGCCStrike15_v2_ClientPlayerDecalSign(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientPlayerDecalSignDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPlayerDecalSignDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientPlayerDecalSignDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientPlayerDecalSign _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientPlayerDecalSignDefaultTypeInternal _CMsgGCCStrike15_v2_ClientPlayerDecalSign_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientPerfReport::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPerfReport::CMsgGCCStrike15_v2_ClientPerfReport(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientPerfReport_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientPerfReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPerfReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientPerfReportDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientPerfReport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientPerfReportDefaultTypeInternal _CMsgGCCStrike15_v2_ClientPerfReport_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientPartyWarning::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPartyWarning::CMsgGCCStrike15_v2_ClientPartyWarning(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientPartyWarning_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientPartyWarningDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientPartyWarningDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientPartyWarningDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientPartyWarning _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientPartyWarningDefaultTypeInternal _CMsgGCCStrike15_v2_ClientPartyWarning_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientCommendPlayer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commendation_{nullptr},
        account_id_{0u},
        tokens_{0u},
        match_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientCommendPlayer::CMsgGCCStrike15_v2_ClientCommendPlayer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientCommendPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientCommendPlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientCommendPlayerDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientCommendPlayer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientCommendPlayerDefaultTypeInternal _CMsgGCCStrike15_v2_ClientCommendPlayer_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Account_RequestCoPlays::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        players_{},
        servertime_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Account_RequestCoPlays::CMsgGCCStrike15_v2_Account_RequestCoPlays(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Account_RequestCoPlaysDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Account_RequestCoPlaysDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Account_RequestCoPlaysDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Account_RequestCoPlays _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Account_RequestCoPlaysDefaultTypeInternal _CMsgGCCStrike15_v2_Account_RequestCoPlays_default_instance_;

inline constexpr CMsgGCCStrike15_v2_AccountPrivacySettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : settings_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_AccountPrivacySettings::CMsgGCCStrike15_v2_AccountPrivacySettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_AccountPrivacySettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_AccountPrivacySettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_AccountPrivacySettingsDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_AccountPrivacySettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_AccountPrivacySettingsDefaultTypeInternal _CMsgGCCStrike15_v2_AccountPrivacySettings_default_instance_;

inline constexpr CMsgGCCStrike15_GotvSyncPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_GotvSyncPacket::CMsgGCCStrike15_GotvSyncPacket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_GotvSyncPacket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_GotvSyncPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_GotvSyncPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_GotvSyncPacketDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_GotvSyncPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_GotvSyncPacketDefaultTypeInternal _CMsgGCCStrike15_GotvSyncPacket_default_instance_;

inline constexpr CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        events_{},
        player_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_ClientDeepStats_DeepStatsMatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_ClientDeepStats_DeepStatsMatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_ClientDeepStats_DeepStatsMatchDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_ClientDeepStats_DeepStatsMatchDefaultTypeInternal _CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_default_instance_;

inline constexpr CEconItemPreviewDataBlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stickers_{},
        keychains_{},
        customname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        itemid_{::uint64_t{0u}},
        accountid_{0u},
        defindex_{0u},
        paintindex_{0u},
        rarity_{0u},
        quality_{0u},
        paintwear_{0u},
        paintseed_{0u},
        killeaterscoretype_{0u},
        killeatervalue_{0u},
        inventory_{0u},
        origin_{0u},
        questid_{0u},
        dropreason_{0u},
        musicindex_{0u},
        entindex_{0},
        petindex_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CEconItemPreviewDataBlock::CEconItemPreviewDataBlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CEconItemPreviewDataBlock_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CEconItemPreviewDataBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CEconItemPreviewDataBlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CEconItemPreviewDataBlockDefaultTypeInternal() {}
  union {
    CEconItemPreviewDataBlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CEconItemPreviewDataBlockDefaultTypeInternal _CEconItemPreviewDataBlock_default_instance_;

inline constexpr CDataGCCStrike15_v2_TournamentMatchDraft::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        drafts_{},
        vote_mapid_0_{},
        vote_mapid_1_{},
        vote_mapid_2_{},
        vote_mapid_3_{},
        vote_mapid_4_{},
        vote_mapid_5_{},
        vote_starting_side_{},
        event_id_{0},
        event_stage_id_{0},
        team_id_0_{0},
        team_id_1_{0},
        maps_count_{0},
        maps_current_{0},
        team_id_start_{0},
        team_id_veto1_{0},
        team_id_pickn_{0},
        vote_phase_{0},
        vote_phase_start_{0},
        vote_phase_length_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentMatchDraft::CDataGCCStrike15_v2_TournamentMatchDraft(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_TournamentMatchDraft_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_TournamentMatchDraftDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentMatchDraftDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_TournamentMatchDraftDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_TournamentMatchDraft _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_TournamentMatchDraftDefaultTypeInternal _CDataGCCStrike15_v2_TournamentMatchDraft_default_instance_;

inline constexpr CDataGCCStrike15_v2_TournamentGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        teams_{},
        stage_ids_{},
        picks_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        groupid_{0u},
        picks__deprecated_{0u},
        picklockuntiltime_{0u},
        pickableteams_{0u},
        points_per_pick_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentGroup::CDataGCCStrike15_v2_TournamentGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_TournamentGroup_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_TournamentGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_TournamentGroupDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_TournamentGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_TournamentGroupDefaultTypeInternal _CDataGCCStrike15_v2_TournamentGroup_default_instance_;

inline constexpr ScoreLeaderboardData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accountentries_{},
        matchentries_{},
        leaderboard_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quest_id_{::uint64_t{0u}},
        score_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ScoreLeaderboardData::ScoreLeaderboardData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ScoreLeaderboardData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScoreLeaderboardDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScoreLeaderboardDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScoreLeaderboardDataDefaultTypeInternal() {}
  union {
    ScoreLeaderboardData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScoreLeaderboardDataDefaultTypeInternal _ScoreLeaderboardData_default_instance_;

inline constexpr CPreMatchInfoData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stats_{},
        wins_{},
        draft_{nullptr},
        predictions_pct_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CPreMatchInfoData::CPreMatchInfoData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CPreMatchInfoData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CPreMatchInfoDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CPreMatchInfoDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CPreMatchInfoDataDefaultTypeInternal() {}
  union {
    CPreMatchInfoData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CPreMatchInfoDataDefaultTypeInternal _CPreMatchInfoData_default_instance_;

inline constexpr CMsgLegacySource1ClientWelcome::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        outofdate_subscribed_caches_{},
        uptodate_subscribed_caches_{},
        game_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        game_data2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        balance_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        txn_country_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_{nullptr},
        version_{0u},
        rtime32_gc_welcome_timestamp_{0u},
        currency_{0u},
        balance_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgLegacySource1ClientWelcome::CMsgLegacySource1ClientWelcome(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgLegacySource1ClientWelcome_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgLegacySource1ClientWelcomeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgLegacySource1ClientWelcomeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgLegacySource1ClientWelcomeDefaultTypeInternal() {}
  union {
    CMsgLegacySource1ClientWelcome _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgLegacySource1ClientWelcomeDefaultTypeInternal _CMsgLegacySource1ClientWelcome_default_instance_;

inline constexpr CMsgItemAcknowledged::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        iteminfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgItemAcknowledged::CMsgItemAcknowledged(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgItemAcknowledged_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgItemAcknowledgedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgItemAcknowledgedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgItemAcknowledgedDefaultTypeInternal() {}
  union {
    CMsgItemAcknowledged _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgItemAcknowledgedDefaultTypeInternal _CMsgItemAcknowledged_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        waiting_account_id_sessions_{},
        ongoingmatch_account_id_sessions_{},
        failping_account_id_sessions_{},
        penalty_account_id_sessions_{},
        failready_account_id_sessions_{},
        vacbanned_account_id_sessions_{},
        notes_{},
        penalty_account_id_sessions_green_{},
        insufficientlevel_sessions_{},
        vsncheck_account_id_sessions_{},
        launcher_mismatch_sessions_{},
        insecure_account_id_sessions_{},
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        global_stats_{nullptr},
        server_ipaddress_mask_{nullptr},
        matchmaking_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdateDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        iteminfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchEndRewardDropsNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchEndRewardDropsNotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchEndRewardDropsNotificationDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchEndRewardDropsNotification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchEndRewardDropsNotificationDefaultTypeInternal _CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Fantasy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        teams_{},
        event_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Fantasy::CMsgGCCStrike15_v2_Fantasy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Fantasy_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_FantasyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_FantasyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_FantasyDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Fantasy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_FantasyDefaultTypeInternal _CMsgGCCStrike15_v2_Fantasy_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientGCRankUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rankings_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientGCRankUpdate::CMsgGCCStrike15_v2_ClientGCRankUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientGCRankUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientGCRankUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientGCRankUpdateDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientGCRankUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientGCRankUpdateDefaultTypeInternal _CMsgGCCStrike15_v2_ClientGCRankUpdate_default_instance_;

inline constexpr CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        iteminfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponseDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponseDefaultTypeInternal _CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_default_instance_;

inline constexpr CMsgGCCStrike15_ClientDeepStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        matches_{},
        range_{nullptr},
        account_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_ClientDeepStats::CMsgGCCStrike15_ClientDeepStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_ClientDeepStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_ClientDeepStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_ClientDeepStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_ClientDeepStatsDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_ClientDeepStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_ClientDeepStatsDefaultTypeInternal _CMsgGCCStrike15_ClientDeepStats_default_instance_;

inline constexpr CDataGCCStrike15_v2_TournamentSection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        groups_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sectionid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentSection::CDataGCCStrike15_v2_TournamentSection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_TournamentSection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_TournamentSectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentSectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_TournamentSectionDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_TournamentSection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_TournamentSectionDefaultTypeInternal _CDataGCCStrike15_v2_TournamentSection_default_instance_;

inline constexpr CMsgGC_ServerQuestUpdateData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_quest_data_{},
        binary_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        missionlbsdata_{nullptr},
        mm_game_mode_{0u},
        flags_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGC_ServerQuestUpdateData::CMsgGC_ServerQuestUpdateData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGC_ServerQuestUpdateData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGC_ServerQuestUpdateDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGC_ServerQuestUpdateDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGC_ServerQuestUpdateDataDefaultTypeInternal() {}
  union {
    CMsgGC_ServerQuestUpdateData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGC_ServerQuestUpdateDataDefaultTypeInternal _CMsgGC_ServerQuestUpdateData_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_ids_{},
        rankings_{},
        party_ids_{},
        whitelist_{},
        tournament_teams_{},
        tournament_casters_account_ids_{},
        op_var_values_{},
        teammate_colors_{},
        tournament_event_{nullptr},
        pre_match_data_{nullptr},
        match_id_{::uint64_t{0u}},
        game_type_{0u},
        server_version_{0u},
        encryption_key_{::uint64_t{0u}},
        encryption_key_pub_{::uint64_t{0u}},
        tv_master_steamid_{::uint64_t{0u}},
        tv_relay_steamid_{::uint64_t{0u}},
        rtime32_event_start_{0u},
        tv_control_{0u},
        flags_{0u},
        socache_control_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_default_instance_;

inline constexpr CDataGCCStrike15_v2_TournamentInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sections_{},
        tournament_teams_{},
        tournament_event_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentInfo::CDataGCCStrike15_v2_TournamentInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_TournamentInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_TournamentInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_TournamentInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_TournamentInfoDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_TournamentInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_TournamentInfoDefaultTypeInternal _CDataGCCStrike15_v2_TournamentInfo_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingServerRoundStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        kills_{},
        assists_{},
        deaths_{},
        scores_{},
        pings_{},
        team_scores_{},
        enemy_kills_{},
        enemy_headshots_{},
        enemy_3ks_{},
        enemy_4ks_{},
        enemy_5ks_{},
        mvps_{},
        enemy_kills_agg_{},
        enemy_2ks_{},
        player_spawned_{},
        team_spawn_count_{},
        map_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reservation_{nullptr},
        confirm_{nullptr},
        drop_info_{nullptr},
        reservationid_{::uint64_t{0u}},
        round_{0},
        round_result_{0},
        match_result_{0},
        reservation_stage_{0},
        match_duration_{0},
        spectators_count_{0u},
        spectators_count_tv_{0u},
        spectators_count_lnk_{0u},
        b_switched_teams_{false},
        max_rounds_{0u},
        map_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingServerRoundStats::CMsgGCCStrike15_v2_MatchmakingServerRoundStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingServerRoundStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingServerRoundStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingServerRoundStatsDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingServerRoundStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingServerRoundStatsDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingServerRoundStats_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reward_player_accounts_{},
        idle_player_accounts_{},
        map_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tournament_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reservation_{nullptr},
        tv_info_{nullptr},
        reservationid_{::uint64_t{0u}},
        gc_reservation_sent_{::uint64_t{0u}},
        server_version_{0u},
        reward_item_attr_def_idx_{0u},
        reward_item_attr_value_{0u},
        reward_item_attr_reward_idx_{0u},
        reward_drop_list_{0u},
        legacy_steamdatagram_port_{0u},
        test_token_{0u},
        flags_{0u},
        steamdatagram_routing_{0u},
        system_load_{0u},
        cpus_online_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingServerReservationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingServerReservationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingServerReservationResponseDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingServerReservationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingServerReservationResponseDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        map_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reservation_{nullptr},
        gs_ping_{nullptr},
        serverid_{::uint64_t{0u}},
        direct_udp_ip_{0u},
        direct_udp_port_{0u},
        reservationid_{::uint64_t{0u}},
        gs_location_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingGC2ClientReserveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientReserveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingGC2ClientReserveDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingGC2ClientReserveDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        my_current_event_teams_{},
        my_current_event_stages_{},
        rankings_{},
        ongoingmatch_{nullptr},
        global_stats_{nullptr},
        ranking_{nullptr},
        commendation_{nullptr},
        medals_{nullptr},
        my_current_event_{nullptr},
        my_current_team_{nullptr},
        activity_{nullptr},
        account_id_{0u},
        penalty_seconds_{0u},
        penalty_reason_{0u},
        vac_banned_{0},
        survey_vote_{0u},
        player_level_{0},
        player_cur_xp_{0},
        player_xp_bonus_flags_{0},
        owcaseid_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingGC2ClientHelloDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientHelloDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingGC2ClientHelloDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingGC2ClientHello _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingGC2ClientHelloDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        abandoned_match_{nullptr},
        account_id_{0u},
        penalty_seconds_{0u},
        penalty_reason_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandonDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandonDefaultTypeInternal _CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchEndRunRewardDrops::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        serverinfo_{nullptr},
        match_end_quest_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchEndRunRewardDrops::CMsgGCCStrike15_v2_MatchEndRunRewardDrops(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchEndRunRewardDropsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchEndRunRewardDropsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchEndRunRewardDropsDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchEndRunRewardDrops _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchEndRunRewardDropsDefaultTypeInternal _CMsgGCCStrike15_v2_MatchEndRunRewardDrops_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientRequestJoinServerData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errormsg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        res_{nullptr},
        version_{0u},
        account_id_{0u},
        serverid_{::uint64_t{0u}},
        server_ip_{0u},
        server_port_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestJoinServerData::CMsgGCCStrike15_v2_ClientRequestJoinServerData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientRequestJoinServerDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestJoinServerDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientRequestJoinServerDataDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientRequestJoinServerData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientRequestJoinServerDataDefaultTypeInternal _CMsgGCCStrike15_v2_ClientRequestJoinServerData_default_instance_;

inline constexpr CMsgGCCStrike15_v2_ClientRequestJoinFriendData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errormsg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        res_{nullptr},
        version_{0u},
        account_id_{0u},
        join_token_{0u},
        join_ipp_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestJoinFriendData::CMsgGCCStrike15_v2_ClientRequestJoinFriendData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_ClientRequestJoinFriendDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_ClientRequestJoinFriendDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_ClientRequestJoinFriendDataDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_ClientRequestJoinFriendData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_ClientRequestJoinFriendDataDefaultTypeInternal _CMsgGCCStrike15_v2_ClientRequestJoinFriendData_default_instance_;

inline constexpr CDataGCCStrike15_v2_MatchInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roundstatsall_{},
        watchablematchinfo_{nullptr},
        roundstats_legacy_{nullptr},
        matchid_{::uint64_t{0u}},
        matchtime_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_MatchInfo::CDataGCCStrike15_v2_MatchInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CDataGCCStrike15_v2_MatchInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CDataGCCStrike15_v2_MatchInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDataGCCStrike15_v2_MatchInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDataGCCStrike15_v2_MatchInfoDefaultTypeInternal() {}
  union {
    CDataGCCStrike15_v2_MatchInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDataGCCStrike15_v2_MatchInfoDefaultTypeInternal _CDataGCCStrike15_v2_MatchInfo_default_instance_;

inline constexpr CMsgGCCStrike15_v2_PlayersProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_profiles_{},
        request_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayersProfile::CMsgGCCStrike15_v2_PlayersProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_PlayersProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_PlayersProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_PlayersProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_PlayersProfileDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_PlayersProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_PlayersProfileDefaultTypeInternal _CMsgGCCStrike15_v2_PlayersProfile_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        matches_{},
        eventid_{0},
        accountid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmtDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmtDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmtDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmtDefaultTypeInternal _CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_default_instance_;

inline constexpr CMsgGCCStrike15_v2_MatchList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        matches_{},
        streams_{},
        tournamentinfo_{nullptr},
        msgrequestid_{0u},
        accountid_{0u},
        servertime_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchList::CMsgGCCStrike15_v2_MatchList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgGCCStrike15_v2_MatchList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgGCCStrike15_v2_MatchListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCStrike15_v2_MatchListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCStrike15_v2_MatchListDefaultTypeInternal() {}
  union {
    CMsgGCCStrike15_v2_MatchList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCStrike15_v2_MatchListDefaultTypeInternal _CMsgGCCStrike15_v2_MatchList_default_instance_;
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_cstrike15_5fgcmessages_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_cstrike15_5fgcmessages_2eproto = nullptr;
const ::uint32_t
    TableStruct_cstrike15_5fgcmessages_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::GameServerPing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GameServerPing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GameServerPing, _impl_.ping_),
        PROTOBUF_FIELD_OFFSET(::GameServerPing, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::GameServerPing, _impl_.instances_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::DataCenterPing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DataCenterPing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DataCenterPing, _impl_.data_center_id_),
        PROTOBUF_FIELD_OFFSET(::DataCenterPing, _impl_.ping_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::DetailedSearchStatistic, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DetailedSearchStatistic, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DetailedSearchStatistic, _impl_.game_type_),
        PROTOBUF_FIELD_OFFSET(::DetailedSearchStatistic, _impl_.search_time_avg_),
        PROTOBUF_FIELD_OFFSET(::DetailedSearchStatistic, _impl_.players_searching_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_.player_nick_),
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_.player_name_),
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_.player_dob_),
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_.player_flag_),
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_.player_location_),
        PROTOBUF_FIELD_OFFSET(::TournamentPlayer, _impl_.player_desc_),
        5,
        0,
        1,
        6,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::TournamentTeam, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TournamentTeam, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TournamentTeam, _impl_.team_id_),
        PROTOBUF_FIELD_OFFSET(::TournamentTeam, _impl_.team_tag_),
        PROTOBUF_FIELD_OFFSET(::TournamentTeam, _impl_.team_flag_),
        PROTOBUF_FIELD_OFFSET(::TournamentTeam, _impl_.team_name_),
        PROTOBUF_FIELD_OFFSET(::TournamentTeam, _impl_.players_),
        3,
        0,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_tag_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_name_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_time_start_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_time_end_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_public_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_stage_id_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.event_stage_name_),
        PROTOBUF_FIELD_OFFSET(::TournamentEvent, _impl_.active_section_id_),
        3,
        0,
        1,
        4,
        5,
        6,
        7,
        2,
        8,
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.players_online_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.servers_online_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.players_searching_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.servers_available_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.ongoing_matches_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.search_time_avg_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.search_statistics_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.main_post_url_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.required_appid_version_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.pricesheet_version_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.twitch_streams_version_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.active_tournament_eventid_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.active_survey_id_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.rtime32_cur_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.rtime32_event_start_),
        PROTOBUF_FIELD_OFFSET(::GlobalStatistics, _impl_.required_appid_version2_),
        1,
        2,
        3,
        4,
        5,
        6,
        ~0u,
        0,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticDescription, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticDescription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticDescription, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticDescription, _impl_.idkey_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticElement, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticElement, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticElement, _impl_.idkey_),
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticElement, _impl_.values_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticsPacket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticsPacket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticsPacket, _impl_.packetid_),
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticsPacket, _impl_.mstimestamp_),
        PROTOBUF_FIELD_OFFSET(::OperationalStatisticsPacket, _impl_.values_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::OperationalVarValue, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::OperationalVarValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::OperationalVarValue, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::OperationalVarValue, _impl_.ivalue_),
        PROTOBUF_FIELD_OFFSET(::OperationalVarValue, _impl_.fvalue_),
        PROTOBUF_FIELD_OFFSET(::OperationalVarValue, _impl_.svalue_),
        0,
        2,
        3,
        1,
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo_PerMapRank, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo_PerMapRank, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo_PerMapRank, _impl_.map_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo_PerMapRank, _impl_.rank_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo_PerMapRank, _impl_.wins_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.rank_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.wins_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.rank_change_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.rank_type_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.tv_control_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.rank_window_stats_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.leaderboard_name_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.rank_if_win_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.rank_if_lose_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.rank_if_tie_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.per_map_rank_),
        PROTOBUF_FIELD_OFFSET(::PlayerRankingInfo, _impl_.leaderboard_name_status_),
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        0,
        8,
        9,
        10,
        ~0u,
        11,
        PROTOBUF_FIELD_OFFSET(::PlayerCommendationInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerCommendationInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerCommendationInfo, _impl_.cmd_friendly_),
        PROTOBUF_FIELD_OFFSET(::PlayerCommendationInfo, _impl_.cmd_teaching_),
        PROTOBUF_FIELD_OFFSET(::PlayerCommendationInfo, _impl_.cmd_leader_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::PlayerMedalsInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerMedalsInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerMedalsInfo, _impl_.display_items_defidx_),
        PROTOBUF_FIELD_OFFSET(::PlayerMedalsInfo, _impl_.featured_display_item_defidx_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::AccountActivity, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::AccountActivity, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::AccountActivity, _impl_.activity_),
        PROTOBUF_FIELD_OFFSET(::AccountActivity, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::AccountActivity, _impl_.map_),
        PROTOBUF_FIELD_OFFSET(::AccountActivity, _impl_.matchid_),
        0,
        1,
        3,
        2,
        PROTOBUF_FIELD_OFFSET(::TournamentMatchSetup, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TournamentMatchSetup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TournamentMatchSetup, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::TournamentMatchSetup, _impl_.team_id_ct_),
        PROTOBUF_FIELD_OFFSET(::TournamentMatchSetup, _impl_.team_id_t_),
        PROTOBUF_FIELD_OFFSET(::TournamentMatchSetup, _impl_.event_stage_id_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_udp_port_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_watch_key_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_slots_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_clients_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_proxies_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_time_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.game_type_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.game_mapgroup_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.game_map_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_master_steamid_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_local_slots_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_local_clients_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_local_proxies_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_relay_slots_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_relay_clients_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_relay_proxies_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_relay_address_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_relay_port_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.tv_relay_steamid_),
        PROTOBUF_FIELD_OFFSET(::ServerHltvInfo, _impl_.flags_),
        3,
        2,
        4,
        5,
        6,
        7,
        8,
        0,
        1,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _impl_.b_),
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _impl_.c_),
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _impl_.d_),
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _impl_.bits_),
        PROTOBUF_FIELD_OFFSET(::IpAddressMask, _impl_.token_),
        0,
        1,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::CMsgCsgoSteamUserStatChange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgCsgoSteamUserStatChange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgCsgoSteamUserStatChange, _impl_.ecsgosteamuserstat_),
        PROTOBUF_FIELD_OFFSET(::CMsgCsgoSteamUserStatChange, _impl_.delta_),
        PROTOBUF_FIELD_OFFSET(::CMsgCsgoSteamUserStatChange, _impl_.absolute_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::XpProgressData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::XpProgressData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::XpProgressData, _impl_.xp_points_),
        PROTOBUF_FIELD_OFFSET(::XpProgressData, _impl_.xp_category_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::MatchEndItemUpdates, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MatchEndItemUpdates, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MatchEndItemUpdates, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::MatchEndItemUpdates, _impl_.item_attr_defidx_),
        PROTOBUF_FIELD_OFFSET(::MatchEndItemUpdates, _impl_.item_attr_delta_value_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_Entry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_Entry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_Entry, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_Entry, _impl_.val_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_AccountEntries, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_AccountEntries, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_AccountEntries, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData_AccountEntries, _impl_.entries_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData, _impl_.quest_id_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData, _impl_.score_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData, _impl_.accountentries_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData, _impl_.matchentries_),
        PROTOBUF_FIELD_OFFSET(::ScoreLeaderboardData, _impl_.leaderboard_name_),
        1,
        2,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData_QuestItemData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData_QuestItemData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData_QuestItemData, _impl_.quest_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData_QuestItemData, _impl_.quest_normal_points_earned_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData_QuestItemData, _impl_.quest_bonus_points_earned_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.quester_account_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.quest_item_data_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.xp_progress_data_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.time_played_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.mm_game_mode_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.item_updates_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.operation_points_eligible_),
        PROTOBUF_FIELD_OFFSET(::PlayerQuestData, _impl_.userstatchanges_),
        0,
        ~0u,
        ~0u,
        1,
        2,
        ~0u,
        3,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.mm_game_mode_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.mapid_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.b_starting_ct_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.match_outcome_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.rounds_won_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.rounds_lost_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.stat_score_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.stat_deaths_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.stat_mvps_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.enemy_kills_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.enemy_headshots_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.enemy_2ks_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.enemy_3ks_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.enemy_4ks_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.total_damage_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.engagements_entry_count_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.engagements_entry_wins_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.engagements_1v1_count_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.engagements_1v1_wins_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.engagements_1v2_count_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.engagements_1v2_wins_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.utility_count_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.utility_success_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.flash_count_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.flash_success_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerStatsEntry, _impl_.mates_),
        1,
        0,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.event_type_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.b_playing_ct_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.user_pos_x_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.user_pos_y_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.user_pos_z_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.user_defidx_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.other_pos_x_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.other_pos_y_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.other_pos_z_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.other_defidx_),
        PROTOBUF_FIELD_OFFSET(::DeepPlayerMatchEvent, _impl_.event_data_),
        1,
        0,
        2,
        3,
        4,
        5,
        6,
        11,
        7,
        8,
        9,
        12,
        10,
        13,
        PROTOBUF_FIELD_OFFSET(::CMsgGC_ServerQuestUpdateData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_ServerQuestUpdateData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGC_ServerQuestUpdateData, _impl_.player_quest_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_ServerQuestUpdateData, _impl_.binary_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_ServerQuestUpdateData, _impl_.mm_game_mode_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_ServerQuestUpdateData, _impl_.missionlbsdata_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_ServerQuestUpdateData, _impl_.flags_),
        ~0u,
        0,
        2,
        1,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.token_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.stamp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.retry_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_total_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_steam_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.account_ids_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.game_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.ticket_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.client_version_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tournament_match_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.prime_only_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tv_control_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStart, _impl_.lobby_id_),
        ~0u,
        2,
        0,
        3,
        1,
        4,
        5,
        6,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStop, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStop, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingStop, _impl_.abandon_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.region_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.region_r_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.distance_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.gameserverpings_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.offset_index_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.final_batch_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.data_center_pings_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.max_ping_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.test_token_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.search_key_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.notes_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.debug_message_),
        ~0u,
        2,
        3,
        ~0u,
        4,
        5,
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.matchmaking_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.waiting_account_id_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.ongoingmatch_account_id_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.global_stats_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failping_account_id_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failready_account_id_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vacbanned_account_id_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.server_ipaddress_mask_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.notes_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_green_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insufficientlevel_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vsncheck_account_id_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.launcher_mismatch_sessions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insecure_account_id_sessions_),
        3,
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.mapid_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.team_id_ct_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_stage_id_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_0_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_1_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_count_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_current_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_start_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_veto1_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_pickn_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.drafts_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_0_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_1_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_2_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_3_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_4_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_5_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_starting_side_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_start_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_length_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        9,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData_TeamStats, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData_TeamStats, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData_TeamStats, _impl_.match_info_idxtxt_),
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData_TeamStats, _impl_.match_info_txt_),
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData_TeamStats, _impl_.match_info_teams_),
        1,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData, _impl_.predictions_pct_),
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData, _impl_.stats_),
        PROTOBUF_FIELD_OFFSET(::CPreMatchInfoData, _impl_.wins_),
        1,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.account_ids_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.game_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.server_version_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.rankings_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_pub_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.party_ids_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.whitelist_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_master_steamid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_event_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_teams_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_casters_account_ids_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_relay_steamid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.pre_match_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.rtime32_event_start_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_control_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.op_var_values_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.socache_control_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.teammate_colors_),
        ~0u,
        3,
        2,
        4,
        11,
        ~0u,
        5,
        6,
        ~0u,
        ~0u,
        7,
        0,
        ~0u,
        ~0u,
        8,
        1,
        9,
        10,
        ~0u,
        12,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservationid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservation_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.map_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.gc_reservation_sent_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.server_version_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.tv_info_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_player_accounts_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.idle_player_accounts_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_def_idx_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_value_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_reward_idx_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_drop_list_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.tournament_tag_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.legacy_steamdatagram_port_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.steamdatagram_routing_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.test_token_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.system_load_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.cpus_online_),
        4,
        2,
        0,
        5,
        6,
        3,
        ~0u,
        ~0u,
        7,
        8,
        9,
        10,
        1,
        11,
        14,
        12,
        13,
        15,
        16,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.serverid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_ip_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_port_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservationid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservation_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.map_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.server_address_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_ping_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_location_id_),
        4,
        5,
        6,
        7,
        2,
        0,
        1,
        3,
        8,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_.account_mvp_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservationid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.map_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.kills_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.assists_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.deaths_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.scores_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.pings_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_result_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_result_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_scores_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.confirm_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_stage_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_duration_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_headshots_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_3ks_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_4ks_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_5ks_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.mvps_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_tv_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_lnk_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_agg_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.drop_info_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.b_switched_teams_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_2ks_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.player_spawned_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_spawn_count_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.max_rounds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.map_id_),
        4,
        1,
        0,
        5,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        6,
        7,
        ~0u,
        2,
        8,
        9,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        10,
        11,
        12,
        ~0u,
        3,
        13,
        ~0u,
        ~0u,
        ~0u,
        14,
        15,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingClient2GCHello, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.ongoingmatch_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.global_stats_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_seconds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_reason_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.vac_banned_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.ranking_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.commendation_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.medals_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_teams_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_team_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_stages_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.survey_vote_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.activity_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_level_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_cur_xp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_xp_bonus_flags_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.rankings_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.owcaseid_),
        8,
        0,
        1,
        9,
        10,
        11,
        2,
        3,
        4,
        5,
        ~0u,
        6,
        ~0u,
        12,
        7,
        13,
        14,
        15,
        ~0u,
        16,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AccountPrivacySettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AccountPrivacySettings, _impl_.settings_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.abandoned_match_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_seconds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_reason_),
        1,
        0,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientGCRankUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientGCRankUpdate, _impl_.rankings_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _impl_.main_post_url_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.seconds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.communication_cooldown_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_aimbot_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_wallhack_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_speedhack_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_teamharm_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_textabuse_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_voiceabuse_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.report_from_demo_),
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        6,
        8,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientCommendPlayer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.commendation_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.tokens_),
        1,
        3,
        0,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_poorperf_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_abusivemodels_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_badmotd_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_listingabuse_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_inventoryabuse_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportServer, _impl_.match_id_),
        0,
        1,
        2,
        3,
        5,
        4,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _impl_.confirmation_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _impl_.server_ip_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_result_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportResponse, _impl_.tokens_),
        0,
        1,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.account_ids_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.serverid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.matchid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.client_launcher_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.data_center_pings_),
        1,
        ~0u,
        0,
        3,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.server_ip_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.tv_port_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.tv_spectators_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.tv_time_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.tv_watch_password_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.cl_decryptdata_key_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.cl_decryptdata_key_pub_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.game_type_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.game_mapgroup_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.game_map_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.server_id_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::WatchableMatchInfo, _impl_.reservation_id_),
        3,
        4,
        5,
        6,
        0,
        7,
        8,
        12,
        1,
        2,
        9,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_token_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_ipp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.res_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.errormsg_),
        2,
        3,
        4,
        5,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.serverid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_ip_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_port_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.res_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.errormsg_),
        2,
        3,
        4,
        5,
        6,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRequestNewMission, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.mission_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.campaign_id_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemMissionReward, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.campaign_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeem_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeemable_balance_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.expected_cost_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemFreeReward, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.generation_time_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.redeemable_balance_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.items_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_progress_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_xp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_level_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.upgraded_defidx_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.operation_points_awarded_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.free_rewards_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_remaining_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_xp_needed_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_level_),
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientNetworkConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientNetworkConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientNetworkConfig, _impl_.data_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.begin_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.end_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.frozen_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_.events_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats, _impl_.range_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_ClientDeepStats, _impl_.matches_),
        1,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_WatchInfoUsers, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_WatchInfoUsers, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.account_ids_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.watchable_match_infos_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.extended_timeout_),
        0,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_id__deprecated_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_ids__deprecated_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_level_),
        0,
        ~0u,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayersProfile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayersProfile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayersProfile, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayersProfile, _impl_.account_profiles_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.caseid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.suspectid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.fractionid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_aimbot_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_wallhack_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_speedhack_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_teamharm_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.reason_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseurl_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.verdict_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.throttleseconds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.suspectid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.numrounds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionrounds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.streakconvictions_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.reason_),
        1,
        0,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.caseid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.statusid_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CClientHeaderOverwatchEvidence, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CClientHeaderOverwatchEvidence, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CClientHeaderOverwatchEvidence, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CClientHeaderOverwatchEvidence, _impl_.caseid_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTextMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.payload_),
        1,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCTextMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.args_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.serverinfo_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.match_end_quest_data_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.sticker_id_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.wear_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.scale_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.rotation_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.tint_id_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.offset_x_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.offset_y_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.offset_z_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock_Sticker, _impl_.pattern_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.itemid_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.defindex_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.paintindex_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.rarity_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.quality_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.paintwear_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.paintseed_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.killeaterscoretype_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.killeatervalue_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.customname_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.stickers_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.inventory_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.questid_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.dropreason_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.musicindex_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.entindex_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.petindex_),
        PROTOBUF_FIELD_OFFSET(::CEconItemPreviewDataBlock, _impl_.keychains_),
        2,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        0,
        ~0u,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _impl_.iteminfo_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgItemAcknowledged, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgItemAcknowledged, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgItemAcknowledged, _impl_.iteminfo_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_s_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_a_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_d_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_m_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _impl_.iteminfo_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_.accountid_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_.accountid_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_.eventid_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.matchid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.outcomeid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.token_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_MatchInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_MatchInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_MatchInfo, _impl_.matchid_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_MatchInfo, _impl_.matchtime_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_MatchInfo, _impl_.watchablematchinfo_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_MatchInfo, _impl_.roundstats_legacy_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_MatchInfo, _impl_.roundstatsall_),
        2,
        3,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroupTeam, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroupTeam, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.team_id_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.score_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.correctpick_),
        0,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup_Picks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup_Picks, _impl_.pickids_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.groupid_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.desc_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.picks__deprecated_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.teams_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.stage_ids_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.picklockuntiltime_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.pickableteams_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.points_per_pick_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentGroup, _impl_.picks_),
        2,
        0,
        1,
        3,
        ~0u,
        ~0u,
        4,
        5,
        6,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentSection, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentSection, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentSection, _impl_.sectionid_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentSection, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentSection, _impl_.desc_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentSection, _impl_.groups_),
        2,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentInfo, _impl_.sections_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentInfo, _impl_.tournament_event_),
        PROTOBUF_FIELD_OFFSET(::CDataGCCStrike15_v2_TournamentInfo, _impl_.tournament_teams_),
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _impl_.msgrequestid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _impl_.servertime_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _impl_.matches_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _impl_.streams_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchList, _impl_.tournamentinfo_),
        1,
        2,
        3,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.eventid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.matches_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.accountid_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.sectionid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.groupid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.teamid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.itemid_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Predictions, _impl_.group_match_team_picks_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasySlot, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.pick_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.itemid_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.sectionid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.slots_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Fantasy, _impl_.teams_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CAttribute_String, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CAttribute_String, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CAttribute_String, _impl_.value_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome_Location, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome_Location, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome_Location, _impl_.latitude_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome_Location, _impl_.longitude_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome_Location, _impl_.country_),
        1,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.game_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.outofdate_subscribed_caches_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.uptodate_subscribed_caches_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.game_data2_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.rtime32_gc_welcome_timestamp_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.balance_url_),
        PROTOBUF_FIELD_OFFSET(::CMsgLegacySource1ClientWelcome, _impl_.txn_country_code_),
        5,
        0,
        ~0u,
        ~0u,
        4,
        1,
        6,
        7,
        8,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_.store_item_hash_),
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_.timeplayedconsecutively_),
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_.time_first_played_),
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_.last_time_played_),
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_.last_ip_address_),
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_.gscookieid_),
        PROTOBUF_FIELD_OFFSET(::CMsgCStrike15Welcome, _impl_.uniqueid_),
        0,
        1,
        2,
        3,
        6,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_name_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_int_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_addr_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_port_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.choked_blocks_),
        0,
        1,
        2,
        3,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.viewangles_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.userdata_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.gifts_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.servertime_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.time_period_seconds_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_gifts_given_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_givers_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.entries_),
        0,
        1,
        2,
        3,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.survey_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.vote_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Server2GCClientValidate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_.accountid_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.eventid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.stageid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.game_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.teamids_),
        0,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CSOEconCoupon, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOEconCoupon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOEconCoupon, _impl_.entryid_),
        PROTOBUF_FIELD_OFFSET(::CSOEconCoupon, _impl_.defidx_),
        PROTOBUF_FIELD_OFFSET(::CSOEconCoupon, _impl_.expiration_date_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CSOAccountItemPersonalStore, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountItemPersonalStore, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOAccountItemPersonalStore, _impl_.generation_time_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountItemPersonalStore, _impl_.redeemable_balance_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountItemPersonalStore, _impl_.items_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CSOAccountXpShop, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountXpShop, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOAccountXpShop, _impl_.generation_time_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountXpShop, _impl_.redeemable_balance_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountXpShop, _impl_.xp_tracks_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CSOAccountKeychainRemoveToolCharges, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountKeychainRemoveToolCharges, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOAccountKeychainRemoveToolCharges, _impl_.charges_),
        0,
        PROTOBUF_FIELD_OFFSET(::CSOQuestProgress, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOQuestProgress, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOQuestProgress, _impl_.questid_),
        PROTOBUF_FIELD_OFFSET(::CSOQuestProgress, _impl_.points_remaining_),
        PROTOBUF_FIELD_OFFSET(::CSOQuestProgress, _impl_.bonus_points_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_.season_value_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_.tier_unlocked_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_.premium_tiers_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_.mission_id_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_.missions_completed_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_.redeemable_balance_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountSeasonalOperation, _impl_.season_pass_time_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        PROTOBUF_FIELD_OFFSET(::CSOAccountRecurringSubscription, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountRecurringSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOAccountRecurringSubscription, _impl_.time_next_cycle_),
        PROTOBUF_FIELD_OFFSET(::CSOAccountRecurringSubscription, _impl_.time_initiated_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CSOPersonaDataPublic, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSOPersonaDataPublic, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSOPersonaDataPublic, _impl_.player_level_),
        PROTOBUF_FIELD_OFFSET(::CSOPersonaDataPublic, _impl_.commendation_),
        PROTOBUF_FIELD_OFFSET(::CSOPersonaDataPublic, _impl_.elevated_state_),
        PROTOBUF_FIELD_OFFSET(::CSOPersonaDataPublic, _impl_.xp_trail_timestamp_refresh_),
        PROTOBUF_FIELD_OFFSET(::CSOPersonaDataPublic, _impl_.xp_trail_level_),
        1,
        0,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.prematch_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.postmatch_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_xp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_level_),
        0,
        1,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Subscribe, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Subscribe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Subscribe, _impl_.ticket_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Unsubscribe, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Unsubscribe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Unsubscribe, _impl_.timeleft_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Play, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Play, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Play, _impl_.ticket_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Play, _impl_.gametimems_),
        PROTOBUF_FIELD_OFFSET(::CMsgGC_GlobalGame_Play, _impl_.msperpoint_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AcknowledgePenalty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_.acknowledged_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.defindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.upgradeid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.hours_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.prestigetime_),
        1,
        0,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCStreamUnlock, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.ticket_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.os_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestElevate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_.stage_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCChat, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCChat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCChat, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCChat, _impl_.text_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GCToClientChat, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GCToClientChat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GCToClientChat, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GCToClientChat, _impl_.text_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAuthKeyCode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_.eventid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_.code_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_GotvSyncPacket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_GotvSyncPacket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_GotvSyncPacket, _impl_.data_),
        0,
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.rtime_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.endpos_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.startpos_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.left_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.tx_defidx_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.entindex_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.hitbox_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.creationtime_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.equipslot_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.trace_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.normal_),
        PROTOBUF_FIELD_OFFSET(::PlayerDecalDigitalSignature, _impl_.tint_id_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        3,
        4,
        5,
        6,
        7,
        8,
        ~0u,
        9,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPlayerDecalSign, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.itemid_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_BetaEnrollment, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_BetaEnrollment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_BetaEnrollment, _impl_.eresult_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientLogonFatalError, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.errorcode_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.country_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPollState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPollState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPollState, _impl_.pollid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPollState, _impl_.names_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPollState, _impl_.values_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.ver_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.apr_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.ark_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.nby_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.grp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.slots_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.launcher_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Register, _impl_.game_type_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _impl_.ver_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _impl_.apr_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _impl_.ark_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _impl_.grps_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _impl_.launcher_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Search, _impl_.game_type_),
        0,
        1,
        2,
        ~0u,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.grp_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.game_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.apr_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.ark_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.loc_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.accountid_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_SearchResults, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Invite, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Invite, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Invite, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Party_Invite, _impl_.lobbyid_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.rtcoplay_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.online_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.players_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.servertime_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestTicket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_steam_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_public_ip_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.gameserver_steam_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.gameserver_sdr_routing_),
        1,
        3,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCToClientSteamDatagramTicket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCToClientSteamDatagramTicket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCToClientSteamDatagramTicket, _impl_.serialized_ticket_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestOffers, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestSouvenir, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.itemid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.matchid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.eventid_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAccountBalance, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAccountBalance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAccountBalance, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientAccountBalance, _impl_.url_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyJoinRelay, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.lobbyid_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.warntype_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyWarning, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPartyWarning, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_SetEventFavorite, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_SetEventFavorite, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_SetEventFavorite, _impl_.eventid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_SetEventFavorite, _impl_.is_favorite_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_.all_events_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.all_events_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.json_favorites_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.json_featured_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.perfcounter_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.length_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.reference_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.actual_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.sourceid_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.status_),
        2,
        3,
        0,
        1,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientPerfReport, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::CVDiagnostic, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CVDiagnostic, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CVDiagnostic, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::CVDiagnostic, _impl_.extended_),
        PROTOBUF_FIELD_OFFSET(::CVDiagnostic, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::CVDiagnostic, _impl_.string_value_),
        1,
        2,
        3,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.file_report_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.command_line_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.total_files_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.internal_error_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.trust_time_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_pending_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_completed_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.process_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.osversion_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.clientreportversion_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.status_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic1_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic2_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic3_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.last_launch_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.report_count_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.client_time_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic4_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic5_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostics_),
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        2,
        18,
        15,
        16,
        17,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.file_report_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_insecure_mode_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_secure_mode_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_unsigned_ui_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.kick_user_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_trusted_ui_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_2_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.files_prevented_trusted_),
        0,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRequestValidation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_.full_report_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_.module_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.outputname_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.key_data_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.sha_hash_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.cookie_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.manifest_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.system_package_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_system_),
        6,
        0,
        1,
        2,
        3,
        8,
        4,
        5,
        7,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.diagnostic_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.sha_hash_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.response_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code1_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code2_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.handle_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.einit_result_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system1_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system2_),
        2,
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _impl_.leaderboard_safe_name_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::GameServerPing)},
        {14, 24, -1, sizeof(::DataCenterPing)},
        {26, 37, -1, sizeof(::DetailedSearchStatistic)},
        {40, 55, -1, sizeof(::TournamentPlayer)},
        {62, 75, -1, sizeof(::TournamentTeam)},
        {80, 97, -1, sizeof(::TournamentEvent)},
        {106, 130, -1, sizeof(::GlobalStatistics)},
        {146, 156, -1, sizeof(::OperationalStatisticDescription)},
        {158, 168, -1, sizeof(::OperationalStatisticElement)},
        {170, 181, -1, sizeof(::OperationalStatisticsPacket)},
        {184, 196, -1, sizeof(::OperationalVarValue)},
        {200, 211, -1, sizeof(::PlayerRankingInfo_PerMapRank)},
        {214, 235, -1, sizeof(::PlayerRankingInfo)},
        {248, 259, -1, sizeof(::PlayerCommendationInfo)},
        {262, 272, -1, sizeof(::PlayerMedalsInfo)},
        {274, 286, -1, sizeof(::AccountActivity)},
        {290, 302, -1, sizeof(::TournamentMatchSetup)},
        {306, 334, -1, sizeof(::ServerHltvInfo)},
        {354, 368, -1, sizeof(::IpAddressMask)},
        {374, 385, -1, sizeof(::CMsgCsgoSteamUserStatChange)},
        {388, 398, -1, sizeof(::XpProgressData)},
        {400, 411, -1, sizeof(::MatchEndItemUpdates)},
        {414, 424, -1, sizeof(::ScoreLeaderboardData_Entry)},
        {426, 436, -1, sizeof(::ScoreLeaderboardData_AccountEntries)},
        {438, 451, -1, sizeof(::ScoreLeaderboardData)},
        {456, 467, -1, sizeof(::PlayerQuestData_QuestItemData)},
        {470, 486, -1, sizeof(::PlayerQuestData)},
        {494, 530, -1, sizeof(::DeepPlayerStatsEntry)},
        {558, 580, -1, sizeof(::DeepPlayerMatchEvent)},
        {594, 607, -1, sizeof(::CMsgGC_ServerQuestUpdateData)},
        {612, 624, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)},
        {628, 638, -1, sizeof(::CMsgGCCStrike15_v2_GC2ServerReservationUpdate)},
        {640, 656, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingStart)},
        {664, 673, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingStop)},
        {674, 686, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)},
        {690, 707, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)},
        {716, 740, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)},
        {756, 766, -1, sizeof(::CDataGCCStrike15_v2_TournamentMatchDraft_Entry)},
        {768, 796, -1, sizeof(::CDataGCCStrike15_v2_TournamentMatchDraft)},
        {816, 827, -1, sizeof(::CPreMatchInfoData_TeamStats)},
        {830, 842, -1, sizeof(::CPreMatchInfoData)},
        {846, 875, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)},
        {896, 923, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)},
        {942, 959, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)},
        {968, 977, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo)},
        {978, 1018, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingServerRoundStats)},
        {1050, -1, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingClient2GCHello)},
        {1058, 1086, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)},
        {1106, 1116, -1, sizeof(::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting)},
        {1118, -1, -1, sizeof(::CMsgGCCStrike15_v2_AccountPrivacySettings)},
        {1127, 1139, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)},
        {1143, -1, -1, sizeof(::CMsgGCCStrike15_v2_ClientGCRankUpdate)},
        {1152, 1161, -1, sizeof(::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)},
        {1162, 1174, -1, sizeof(::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)},
        {1178, 1195, -1, sizeof(::CMsgGCCStrike15_v2_ClientReportPlayer)},
        {1204, 1216, -1, sizeof(::CMsgGCCStrike15_v2_ClientCommendPlayer)},
        {1220, 1234, -1, sizeof(::CMsgGCCStrike15_v2_ClientReportServer)},
        {1240, 1254, -1, sizeof(::CMsgGCCStrike15_v2_ClientReportResponse)},
        {1260, 1274, -1, sizeof(::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)},
        {1280, 1301, -1, sizeof(::WatchableMatchInfo)},
        {1314, 1328, -1, sizeof(::CMsgGCCStrike15_v2_ClientRequestJoinFriendData)},
        {1334, 1349, -1, sizeof(::CMsgGCCStrike15_v2_ClientRequestJoinServerData)},
        {1356, 1366, -1, sizeof(::CMsgGCCstrike15_v2_ClientRequestNewMission)},
        {1368, 1380, -1, sizeof(::CMsgGCCstrike15_v2_ClientRedeemMissionReward)},
        {1384, 1395, -1, sizeof(::CMsgGCCstrike15_v2_ClientRedeemFreeReward)},
        {1398, 1416, -1, sizeof(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)},
        {1426, 1435, -1, sizeof(::CMsgGCCStrike15_v2_ClientNetworkConfig)},
        {1436, 1447, -1, sizeof(::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange)},
        {1450, 1460, -1, sizeof(::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch)},
        {1462, 1473, -1, sizeof(::CMsgGCCStrike15_ClientDeepStats)},
        {1476, 1488, -1, sizeof(::CMsgGCCStrike15_v2_WatchInfoUsers)},
        {1492, 1504, -1, sizeof(::CMsgGCCStrike15_v2_ClientRequestPlayersProfile)},
        {1508, 1518, -1, sizeof(::CMsgGCCStrike15_v2_PlayersProfile)},
        {1520, 1536, -1, sizeof(::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)},
        {1544, 1563, -1, sizeof(::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)},
        {1574, 1584, -1, sizeof(::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)},
        {1586, 1596, -1, sizeof(::CClientHeaderOverwatchEvidence)},
        {1598, 1609, -1, sizeof(::CMsgGCCStrike15_v2_GC2ClientTextMsg)},
        {1612, 1622, -1, sizeof(::CMsgGCCStrike15_v2_Client2GCTextMsg)},
        {1624, 1634, -1, sizeof(::CMsgGCCStrike15_v2_MatchEndRunRewardDrops)},
        {1636, 1654, -1, sizeof(::CEconItemPreviewDataBlock_Sticker)},
        {1664, 1692, -1, sizeof(::CEconItemPreviewDataBlock)},
        {1712, 1721, -1, sizeof(::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)},
        {1722, 1731, -1, sizeof(::CMsgItemAcknowledged)},
        {1732, 1744, -1, sizeof(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)},
        {1748, 1757, -1, sizeof(::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)},
        {1758, -1, -1, sizeof(::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames)},
        {1766, 1775, -1, sizeof(::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)},
        {1776, 1785, -1, sizeof(::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)},
        {1786, 1795, -1, sizeof(::CMsgGCCStrike15_v2_MatchListRequestTournamentGames)},
        {1796, 1807, -1, sizeof(::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)},
        {1810, 1823, -1, sizeof(::CDataGCCStrike15_v2_MatchInfo)},
        {1828, 1839, -1, sizeof(::CDataGCCStrike15_v2_TournamentGroupTeam)},
        {1842, -1, -1, sizeof(::CDataGCCStrike15_v2_TournamentGroup_Picks)},
        {1851, 1869, -1, sizeof(::CDataGCCStrike15_v2_TournamentGroup)},
        {1879, 1891, -1, sizeof(::CDataGCCStrike15_v2_TournamentSection)},
        {1895, 1906, -1, sizeof(::CDataGCCStrike15_v2_TournamentInfo)},
        {1909, 1923, -1, sizeof(::CMsgGCCStrike15_v2_MatchList)},
        {1929, 1940, -1, sizeof(::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)},
        {1943, 1956, -1, sizeof(::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick)},
        {1961, 1971, -1, sizeof(::CMsgGCCStrike15_v2_Predictions)},
        {1973, 1984, -1, sizeof(::CMsgGCCStrike15_v2_Fantasy_FantasySlot)},
        {1987, 1997, -1, sizeof(::CMsgGCCStrike15_v2_Fantasy_FantasyTeam)},
        {1999, 2009, -1, sizeof(::CMsgGCCStrike15_v2_Fantasy)},
        {2011, 2020, -1, sizeof(::CAttribute_String)},
        {2021, 2032, -1, sizeof(::CMsgLegacySource1ClientWelcome_Location)},
        {2035, 2054, -1, sizeof(::CMsgLegacySource1ClientWelcome)},
        {2065, 2080, -1, sizeof(::CMsgCStrike15Welcome)},
        {2087, 2100, -1, sizeof(::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)},
        {2105, 2117, -1, sizeof(::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)},
        {2121, -1, -1, sizeof(::CMsgGCCStrike15_v2_GiftsLeaderboardRequest)},
        {2129, 2139, -1, sizeof(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry)},
        {2141, 2154, -1, sizeof(::CMsgGCCStrike15_v2_GiftsLeaderboardResponse)},
        {2159, 2169, -1, sizeof(::CMsgGCCStrike15_v2_ClientSubmitSurveyVote)},
        {2171, 2180, -1, sizeof(::CMsgGCCStrike15_v2_Server2GCClientValidate)},
        {2181, 2193, -1, sizeof(::CMsgGCCStrike15_v2_GC2ClientTournamentInfo)},
        {2197, 2208, -1, sizeof(::CSOEconCoupon)},
        {2211, 2222, -1, sizeof(::CSOAccountItemPersonalStore)},
        {2225, 2236, -1, sizeof(::CSOAccountXpShop)},
        {2239, 2248, -1, sizeof(::CSOAccountKeychainRemoveToolCharges)},
        {2249, 2260, -1, sizeof(::CSOQuestProgress)},
        {2263, 2278, -1, sizeof(::CSOAccountSeasonalOperation)},
        {2285, 2295, -1, sizeof(::CSOAccountRecurringSubscription)},
        {2297, 2310, -1, sizeof(::CSOPersonaDataPublic)},
        {2315, 2327, -1, sizeof(::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)},
        {2331, -1, -1, sizeof(::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks)},
        {2339, 2348, -1, sizeof(::CMsgGC_GlobalGame_Subscribe)},
        {2349, 2358, -1, sizeof(::CMsgGC_GlobalGame_Unsubscribe)},
        {2359, 2370, -1, sizeof(::CMsgGC_GlobalGame_Play)},
        {2373, 2382, -1, sizeof(::CMsgGCCStrike15_v2_AcknowledgePenalty)},
        {2383, 2395, -1, sizeof(::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)},
        {2399, 2409, -1, sizeof(::CMsgGCCStrike15_v2_Client2GCStreamUnlock)},
        {2411, 2420, -1, sizeof(::CMsgGCCStrike15_v2_ClientToGCRequestElevate)},
        {2421, 2431, -1, sizeof(::CMsgGCCStrike15_v2_ClientToGCChat)},
        {2433, 2443, -1, sizeof(::CMsgGCCStrike15_v2_GCToClientChat)},
        {2445, 2455, -1, sizeof(::CMsgGCCStrike15_v2_ClientAuthKeyCode)},
        {2457, 2466, -1, sizeof(::CMsgGCCStrike15_GotvSyncPacket)},
        {2467, 2489, -1, sizeof(::PlayerDecalDigitalSignature)},
        {2503, 2513, -1, sizeof(::CMsgGCCStrike15_v2_ClientPlayerDecalSign)},
        {2515, 2524, -1, sizeof(::CMsgGCCStrike15_v2_BetaEnrollment)},
        {2525, 2536, -1, sizeof(::CMsgGCCStrike15_v2_ClientLogonFatalError)},
        {2539, 2550, -1, sizeof(::CMsgGCCStrike15_v2_ClientPollState)},
        {2553, 2570, -1, sizeof(::CMsgGCCStrike15_v2_Party_Register)},
        {2579, 2593, -1, sizeof(::CMsgGCCStrike15_v2_Party_Search)},
        {2599, 2614, -1, sizeof(::CMsgGCCStrike15_v2_Party_SearchResults_Entry)},
        {2621, -1, -1, sizeof(::CMsgGCCStrike15_v2_Party_SearchResults)},
        {2630, 2640, -1, sizeof(::CMsgGCCStrike15_v2_Party_Invite)},
        {2642, 2653, -1, sizeof(::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player)},
        {2656, 2666, -1, sizeof(::CMsgGCCStrike15_v2_Account_RequestCoPlays)},
        {2668, 2680, -1, sizeof(::CMsgGCCStrike15_v2_ClientToGCRequestTicket)},
        {2684, 2693, -1, sizeof(::CMsgGCToClientSteamDatagramTicket)},
        {2694, -1, -1, sizeof(::CMsgGCCStrike15_v2_ClientRequestOffers)},
        {2702, 2713, -1, sizeof(::CMsgGCCStrike15_v2_ClientRequestSouvenir)},
        {2716, 2726, -1, sizeof(::CMsgGCCStrike15_v2_ClientAccountBalance)},
        {2728, 2738, -1, sizeof(::CMsgGCCStrike15_v2_ClientPartyJoinRelay)},
        {2740, 2750, -1, sizeof(::CMsgGCCStrike15_v2_ClientPartyWarning_Entry)},
        {2752, -1, -1, sizeof(::CMsgGCCStrike15_v2_ClientPartyWarning)},
        {2761, 2771, -1, sizeof(::CMsgGCCStrike15_v2_SetEventFavorite)},
        {2773, 2782, -1, sizeof(::CMsgGCCStrike15_v2_GetEventFavorites_Request)},
        {2783, 2794, -1, sizeof(::CMsgGCCStrike15_v2_GetEventFavorites_Response)},
        {2797, 2811, -1, sizeof(::CMsgGCCStrike15_v2_ClientPerfReport_Entry)},
        {2817, -1, -1, sizeof(::CMsgGCCStrike15_v2_ClientPerfReport)},
        {2826, 2838, -1, sizeof(::CVDiagnostic)},
        {2842, 2870, -1, sizeof(::CMsgGCCStrike15_v2_ClientReportValidation)},
        {2890, 2907, -1, sizeof(::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)},
        {2916, 2926, -1, sizeof(::CMsgGCCStrike15_v2_GC2ClientRequestValidation)},
        {2928, 2945, -1, sizeof(::CMsgGCCStrike15_v2_GC2ClientInitSystem)},
        {2954, 2972, -1, sizeof(::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)},
        {2982, 2991, -1, sizeof(::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_GameServerPing_default_instance_._instance,
    &::_DataCenterPing_default_instance_._instance,
    &::_DetailedSearchStatistic_default_instance_._instance,
    &::_TournamentPlayer_default_instance_._instance,
    &::_TournamentTeam_default_instance_._instance,
    &::_TournamentEvent_default_instance_._instance,
    &::_GlobalStatistics_default_instance_._instance,
    &::_OperationalStatisticDescription_default_instance_._instance,
    &::_OperationalStatisticElement_default_instance_._instance,
    &::_OperationalStatisticsPacket_default_instance_._instance,
    &::_OperationalVarValue_default_instance_._instance,
    &::_PlayerRankingInfo_PerMapRank_default_instance_._instance,
    &::_PlayerRankingInfo_default_instance_._instance,
    &::_PlayerCommendationInfo_default_instance_._instance,
    &::_PlayerMedalsInfo_default_instance_._instance,
    &::_AccountActivity_default_instance_._instance,
    &::_TournamentMatchSetup_default_instance_._instance,
    &::_ServerHltvInfo_default_instance_._instance,
    &::_IpAddressMask_default_instance_._instance,
    &::_CMsgCsgoSteamUserStatChange_default_instance_._instance,
    &::_XpProgressData_default_instance_._instance,
    &::_MatchEndItemUpdates_default_instance_._instance,
    &::_ScoreLeaderboardData_Entry_default_instance_._instance,
    &::_ScoreLeaderboardData_AccountEntries_default_instance_._instance,
    &::_ScoreLeaderboardData_default_instance_._instance,
    &::_PlayerQuestData_QuestItemData_default_instance_._instance,
    &::_PlayerQuestData_default_instance_._instance,
    &::_DeepPlayerStatsEntry_default_instance_._instance,
    &::_DeepPlayerMatchEvent_default_instance_._instance,
    &::_CMsgGC_ServerQuestUpdateData_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ServerReservationUpdate_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingStart_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingStop_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_default_instance_._instance,
    &::_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_default_instance_._instance,
    &::_CDataGCCStrike15_v2_TournamentMatchDraft_default_instance_._instance,
    &::_CPreMatchInfoData_TeamStats_default_instance_._instance,
    &::_CPreMatchInfoData_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingServerRoundStats_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingClient2GCHello_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_AccountPrivacySettings_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientGCRankUpdate_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientReportPlayer_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientCommendPlayer_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientReportServer_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientReportResponse_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_default_instance_._instance,
    &::_WatchableMatchInfo_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientRequestJoinFriendData_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientRequestJoinServerData_default_instance_._instance,
    &::_CMsgGCCstrike15_v2_ClientRequestNewMission_default_instance_._instance,
    &::_CMsgGCCstrike15_v2_ClientRedeemMissionReward_default_instance_._instance,
    &::_CMsgGCCstrike15_v2_ClientRedeemFreeReward_default_instance_._instance,
    &::_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientNetworkConfig_default_instance_._instance,
    &::_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_default_instance_._instance,
    &::_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_default_instance_._instance,
    &::_CMsgGCCStrike15_ClientDeepStats_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_WatchInfoUsers_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientRequestPlayersProfile_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_PlayersProfile_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_default_instance_._instance,
    &::_CClientHeaderOverwatchEvidence_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ClientTextMsg_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Client2GCTextMsg_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchEndRunRewardDrops_default_instance_._instance,
    &::_CEconItemPreviewDataBlock_Sticker_default_instance_._instance,
    &::_CEconItemPreviewDataBlock_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_default_instance_._instance,
    &::_CMsgItemAcknowledged_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchListRequestTournamentGames_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_default_instance_._instance,
    &::_CDataGCCStrike15_v2_MatchInfo_default_instance_._instance,
    &::_CDataGCCStrike15_v2_TournamentGroupTeam_default_instance_._instance,
    &::_CDataGCCStrike15_v2_TournamentGroup_Picks_default_instance_._instance,
    &::_CDataGCCStrike15_v2_TournamentGroup_default_instance_._instance,
    &::_CDataGCCStrike15_v2_TournamentSection_default_instance_._instance,
    &::_CDataGCCStrike15_v2_TournamentInfo_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchList_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Predictions_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Fantasy_FantasySlot_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Fantasy_FantasyTeam_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Fantasy_default_instance_._instance,
    &::_CAttribute_String_default_instance_._instance,
    &::_CMsgLegacySource1ClientWelcome_Location_default_instance_._instance,
    &::_CMsgLegacySource1ClientWelcome_default_instance_._instance,
    &::_CMsgCStrike15Welcome_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GiftsLeaderboardRequest_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GiftsLeaderboardResponse_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientSubmitSurveyVote_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Server2GCClientValidate_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ClientTournamentInfo_default_instance_._instance,
    &::_CSOEconCoupon_default_instance_._instance,
    &::_CSOAccountItemPersonalStore_default_instance_._instance,
    &::_CSOAccountXpShop_default_instance_._instance,
    &::_CSOAccountKeychainRemoveToolCharges_default_instance_._instance,
    &::_CSOQuestProgress_default_instance_._instance,
    &::_CSOAccountSeasonalOperation_default_instance_._instance,
    &::_CSOAccountRecurringSubscription_default_instance_._instance,
    &::_CSOPersonaDataPublic_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_default_instance_._instance,
    &::_CMsgGC_GlobalGame_Subscribe_default_instance_._instance,
    &::_CMsgGC_GlobalGame_Unsubscribe_default_instance_._instance,
    &::_CMsgGC_GlobalGame_Play_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_AcknowledgePenalty_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Client2GCStreamUnlock_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientToGCRequestElevate_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientToGCChat_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GCToClientChat_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientAuthKeyCode_default_instance_._instance,
    &::_CMsgGCCStrike15_GotvSyncPacket_default_instance_._instance,
    &::_PlayerDecalDigitalSignature_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientPlayerDecalSign_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_BetaEnrollment_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientLogonFatalError_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientPollState_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Party_Register_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Party_Search_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Party_SearchResults_Entry_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Party_SearchResults_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Party_Invite_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_Account_RequestCoPlays_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientToGCRequestTicket_default_instance_._instance,
    &::_CMsgGCToClientSteamDatagramTicket_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientRequestOffers_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientRequestSouvenir_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientAccountBalance_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientPartyJoinRelay_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientPartyWarning_Entry_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientPartyWarning_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_SetEventFavorite_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GetEventFavorites_Request_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GetEventFavorites_Response_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientPerfReport_Entry_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientPerfReport_default_instance_._instance,
    &::_CVDiagnostic_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_ClientReportValidation_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ClientRequestValidation_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ClientInitSystem_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_default_instance_._instance,
    &::_CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_default_instance_._instance,
};
const char descriptor_table_protodef_cstrike15_5fgcmessages_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\032cstrike15_gcmessages.proto\032\023steammessa"
    "ges.proto\032\027engine_gcmessages.proto\032\026gcsd"
    "k_gcmessages.proto\"=\n\016GameServerPing\022\014\n\004"
    "ping\030\002 \001(\005\022\n\n\002ip\030\003 \001(\r\022\021\n\tinstances\030\005 \001("
    "\r\"6\n\016DataCenterPing\022\026\n\016data_center_id\030\001 "
    "\001(\007\022\014\n\004ping\030\002 \001(\021\"`\n\027DetailedSearchStati"
    "stic\022\021\n\tgame_type\030\001 \001(\r\022\027\n\017search_time_a"
    "vg\030\002 \001(\r\022\031\n\021players_searching\030\004 \001(\r\"\247\001\n\020"
    "TournamentPlayer\022\022\n\naccount_id\030\001 \001(\r\022\023\n\013"
    "player_nick\030\002 \001(\t\022\023\n\013player_name\030\003 \001(\t\022\022"
    "\n\nplayer_dob\030\004 \001(\r\022\023\n\013player_flag\030\005 \001(\t\022"
    "\027\n\017player_location\030\006 \001(\t\022\023\n\013player_desc\030"
    "\007 \001(\t\"}\n\016TournamentTeam\022\017\n\007team_id\030\001 \001(\005"
    "\022\020\n\010team_tag\030\002 \001(\t\022\021\n\tteam_flag\030\003 \001(\t\022\021\n"
    "\tteam_name\030\004 \001(\t\022\"\n\007players\030\005 \003(\0132\021.Tour"
    "namentPlayer\"\337\001\n\017TournamentEvent\022\020\n\010even"
    "t_id\030\001 \001(\005\022\021\n\tevent_tag\030\002 \001(\t\022\022\n\nevent_n"
    "ame\030\003 \001(\t\022\030\n\020event_time_start\030\004 \001(\r\022\026\n\016e"
    "vent_time_end\030\005 \001(\r\022\024\n\014event_public\030\006 \001("
    "\005\022\026\n\016event_stage_id\030\007 \001(\005\022\030\n\020event_stage"
    "_name\030\010 \001(\t\022\031\n\021active_section_id\030\t \001(\r\"\342"
    "\003\n\020GlobalStatistics\022\026\n\016players_online\030\001 "
    "\001(\r\022\026\n\016servers_online\030\002 \001(\r\022\031\n\021players_s"
    "earching\030\003 \001(\r\022\031\n\021servers_available\030\004 \001("
    "\r\022\027\n\017ongoing_matches\030\005 \001(\r\022\027\n\017search_tim"
    "e_avg\030\006 \001(\r\0223\n\021search_statistics\030\007 \003(\0132\030"
    ".DetailedSearchStatistic\022\025\n\rmain_post_ur"
    "l\030\010 \001(\t\022\036\n\026required_appid_version\030\t \001(\r\022"
    "\032\n\022pricesheet_version\030\n \001(\r\022\036\n\026twitch_st"
    "reams_version\030\013 \001(\r\022!\n\031active_tournament"
    "_eventid\030\014 \001(\r\022\030\n\020active_survey_id\030\r \001(\r"
    "\022\023\n\013rtime32_cur\030\016 \001(\r\022\033\n\023rtime32_event_s"
    "tart\030\017 \001(\r\022\037\n\027required_appid_version2\030\020 "
    "\001(\r\">\n\037OperationalStatisticDescription\022\014"
    "\n\004name\030\001 \001(\t\022\r\n\005idkey\030\002 \001(\r\"<\n\033Operation"
    "alStatisticElement\022\r\n\005idkey\030\001 \001(\r\022\016\n\006val"
    "ues\030\002 \003(\005\"r\n\033OperationalStatisticsPacket"
    "\022\020\n\010packetid\030\001 \001(\005\022\023\n\013mstimestamp\030\002 \001(\005\022"
    ",\n\006values\030\003 \003(\0132\034.OperationalStatisticEl"
    "ement\"S\n\023OperationalVarValue\022\014\n\004name\030\001 \001"
    "(\t\022\016\n\006ivalue\030\002 \001(\005\022\016\n\006fvalue\030\003 \001(\002\022\016\n\006sv"
    "alue\030\004 \001(\014\"\215\003\n\021PlayerRankingInfo\022\022\n\nacco"
    "unt_id\030\001 \001(\r\022\017\n\007rank_id\030\002 \001(\r\022\014\n\004wins\030\003 "
    "\001(\r\022\023\n\013rank_change\030\004 \001(\002\022\024\n\014rank_type_id"
    "\030\006 \001(\r\022\022\n\ntv_control\030\007 \001(\r\022\031\n\021rank_windo"
    "w_stats\030\010 \001(\004\022\030\n\020leaderboard_name\030\t \001(\t\022"
    "\023\n\013rank_if_win\030\n \001(\r\022\024\n\014rank_if_lose\030\013 \001"
    "(\r\022\023\n\013rank_if_tie\030\014 \001(\r\0223\n\014per_map_rank\030"
    "\r \003(\0132\035.PlayerRankingInfo.PerMapRank\022\037\n\027"
    "leaderboard_name_status\030\016 \001(\r\032;\n\nPerMapR"
    "ank\022\016\n\006map_id\030\001 \001(\r\022\017\n\007rank_id\030\002 \001(\r\022\014\n\004"
    "wins\030\003 \001(\r\"X\n\026PlayerCommendationInfo\022\024\n\014"
    "cmd_friendly\030\001 \001(\r\022\024\n\014cmd_teaching\030\002 \001(\r"
    "\022\022\n\ncmd_leader\030\004 \001(\r\"V\n\020PlayerMedalsInfo"
    "\022\034\n\024display_items_defidx\030\007 \003(\r\022$\n\034featur"
    "ed_display_item_defidx\030\010 \001(\r\"O\n\017AccountA"
    "ctivity\022\020\n\010activity\030\001 \001(\r\022\014\n\004mode\030\002 \001(\r\022"
    "\013\n\003map\030\003 \001(\r\022\017\n\007matchid\030\004 \001(\004\"g\n\024Tournam"
    "entMatchSetup\022\020\n\010event_id\030\001 \001(\005\022\022\n\nteam_"
    "id_ct\030\002 \001(\005\022\021\n\tteam_id_t\030\003 \001(\005\022\026\n\016event_"
    "stage_id\030\004 \001(\005\"\317\003\n\016ServerHltvInfo\022\023\n\013tv_"
    "udp_port\030\001 \001(\r\022\024\n\014tv_watch_key\030\002 \001(\004\022\020\n\010"
    "tv_slots\030\003 \001(\r\022\022\n\ntv_clients\030\004 \001(\r\022\022\n\ntv"
    "_proxies\030\005 \001(\r\022\017\n\007tv_time\030\006 \001(\r\022\021\n\tgame_"
    "type\030\010 \001(\r\022\025\n\rgame_mapgroup\030\t \001(\t\022\020\n\010gam"
    "e_map\030\n \001(\t\022\031\n\021tv_master_steamid\030\013 \001(\004\022\026"
    "\n\016tv_local_slots\030\014 \001(\r\022\030\n\020tv_local_clien"
    "ts\030\r \001(\r\022\030\n\020tv_local_proxies\030\016 \001(\r\022\026\n\016tv"
    "_relay_slots\030\017 \001(\r\022\030\n\020tv_relay_clients\030\020"
    " \001(\r\022\030\n\020tv_relay_proxies\030\021 \001(\r\022\030\n\020tv_rel"
    "ay_address\030\022 \001(\r\022\025\n\rtv_relay_port\030\023 \001(\r\022"
    "\030\n\020tv_relay_steamid\030\024 \001(\004\022\r\n\005flags\030\025 \001(\r"
    "\"X\n\rIpAddressMask\022\t\n\001a\030\001 \001(\r\022\t\n\001b\030\002 \001(\r\022"
    "\t\n\001c\030\003 \001(\r\022\t\n\001d\030\004 \001(\r\022\014\n\004bits\030\005 \001(\r\022\r\n\005t"
    "oken\030\006 \001(\r\"Z\n\033CMsgCsgoSteamUserStatChang"
    "e\022\032\n\022ecsgosteamuserstat\030\001 \001(\005\022\r\n\005delta\030\002"
    " \001(\005\022\020\n\010absolute\030\003 \001(\010\"8\n\016XpProgressData"
    "\022\021\n\txp_points\030\001 \001(\r\022\023\n\013xp_category\030\002 \001(\005"
    "\"_\n\023MatchEndItemUpdates\022\017\n\007item_id\030\001 \001(\004"
    "\022\030\n\020item_attr_defidx\030\002 \001(\r\022\035\n\025item_attr_"
    "delta_value\030\003 \001(\r\"\270\002\n\024ScoreLeaderboardDa"
    "ta\022\020\n\010quest_id\030\001 \001(\004\022\r\n\005score\030\002 \001(\r\022<\n\016a"
    "ccountentries\030\003 \003(\0132$.ScoreLeaderboardDa"
    "ta.AccountEntries\0221\n\014matchentries\030\005 \003(\0132"
    "\033.ScoreLeaderboardData.Entry\022\030\n\020leaderbo"
    "ard_name\030\006 \001(\t\032!\n\005Entry\022\013\n\003tag\030\001 \001(\r\022\013\n\003"
    "val\030\002 \001(\r\032Q\n\016AccountEntries\022\021\n\taccountid"
    "\030\001 \001(\r\022,\n\007entries\030\002 \003(\0132\033.ScoreLeaderboa"
    "rdData.Entry\"\254\003\n\017PlayerQuestData\022\032\n\022ques"
    "ter_account_id\030\001 \001(\r\0227\n\017quest_item_data\030"
    "\002 \003(\0132\036.PlayerQuestData.QuestItemData\022)\n"
    "\020xp_progress_data\030\003 \003(\0132\017.XpProgressData"
    "\022\023\n\013time_played\030\004 \001(\r\022\024\n\014mm_game_mode\030\005 "
    "\001(\r\022*\n\014item_updates\030\006 \003(\0132\024.MatchEndItem"
    "Updates\022!\n\031operation_points_eligible\030\007 \001"
    "(\010\0225\n\017userstatchanges\030\010 \003(\0132\034.CMsgCsgoSt"
    "eamUserStatChange\032h\n\rQuestItemData\022\020\n\010qu"
    "est_id\030\001 \001(\004\022\"\n\032quest_normal_points_earn"
    "ed\030\002 \001(\005\022!\n\031quest_bonus_points_earned\030\003 "
    "\001(\005\"\226\005\n\024DeepPlayerStatsEntry\022\021\n\taccounti"
    "d\030\001 \001(\r\022\020\n\010match_id\030\002 \001(\004\022\024\n\014mm_game_mod"
    "e\030\003 \001(\r\022\r\n\005mapid\030\004 \001(\r\022\025\n\rb_starting_ct\030"
    "\005 \001(\010\022\025\n\rmatch_outcome\030\006 \001(\r\022\022\n\nrounds_w"
    "on\030\007 \001(\r\022\023\n\013rounds_lost\030\010 \001(\r\022\022\n\nstat_sc"
    "ore\030\t \001(\r\022\023\n\013stat_deaths\030\014 \001(\r\022\021\n\tstat_m"
    "vps\030\r \001(\r\022\023\n\013enemy_kills\030\016 \001(\r\022\027\n\017enemy_"
    "headshots\030\017 \001(\r\022\021\n\tenemy_2ks\030\020 \001(\r\022\021\n\ten"
    "emy_3ks\030\021 \001(\r\022\021\n\tenemy_4ks\030\022 \001(\r\022\024\n\014tota"
    "l_damage\030\023 \001(\r\022\037\n\027engagements_entry_coun"
    "t\030\027 \001(\r\022\036\n\026engagements_entry_wins\030\030 \001(\r\022"
    "\035\n\025engagements_1v1_count\030\031 \001(\r\022\034\n\024engage"
    "ments_1v1_wins\030\032 \001(\r\022\035\n\025engagements_1v2_"
    "count\030\033 \001(\r\022\034\n\024engagements_1v2_wins\030\034 \001("
    "\r\022\025\n\rutility_count\030\035 \001(\r\022\027\n\017utility_succ"
    "ess\030\036 \001(\r\022\023\n\013flash_count\030  \001(\r\022\025\n\rflash_"
    "success\030! \001(\r\022\r\n\005mates\030\" \003(\r\"\261\002\n\024DeepPla"
    "yerMatchEvent\022\021\n\taccountid\030\001 \001(\r\022\020\n\010matc"
    "h_id\030\002 \001(\004\022\020\n\010event_id\030\003 \001(\r\022\022\n\nevent_ty"
    "pe\030\004 \001(\r\022\024\n\014b_playing_ct\030\005 \001(\010\022\022\n\nuser_p"
    "os_x\030\006 \001(\005\022\022\n\nuser_pos_y\030\007 \001(\005\022\022\n\nuser_p"
    "os_z\030\014 \001(\005\022\023\n\013user_defidx\030\010 \001(\r\022\023\n\013other"
    "_pos_x\030\t \001(\005\022\023\n\013other_pos_y\030\n \001(\005\022\023\n\013oth"
    "er_pos_z\030\r \001(\005\022\024\n\014other_defidx\030\013 \001(\r\022\022\n\n"
    "event_data\030\016 \001(\005\"\264\001\n\034CMsgGC_ServerQuestU"
    "pdateData\022+\n\021player_quest_data\030\001 \003(\0132\020.P"
    "layerQuestData\022\023\n\013binary_data\030\002 \001(\014\022\024\n\014m"
    "m_game_mode\030\003 \001(\r\022-\n\016missionlbsdata\030\004 \001("
    "\0132\025.ScoreLeaderboardData\022\r\n\005flags\030\005 \001(\r\""
    "o\n.CMsgGCCStrike15_v2_MatchmakingGC2Serv"
    "erConfirm\022\r\n\005token\030\001 \001(\r\022\r\n\005stamp\030\002 \001(\r\022"
    "\020\n\010exchange\030\003 \001(\004\022\r\n\005retry\030\004 \001(\r\"o\n-CMsg"
    "GCCStrike15_v2_GC2ServerReservationUpdat"
    "e\022\036\n\026viewers_external_total\030\001 \001(\r\022\036\n\026vie"
    "wers_external_steam\030\002 \001(\r\"\345\001\n#CMsgGCCStr"
    "ike15_v2_MatchmakingStart\022\023\n\013account_ids"
    "\030\001 \003(\r\022\021\n\tgame_type\030\002 \001(\r\022\023\n\013ticket_data"
    "\030\003 \001(\t\022\026\n\016client_version\030\004 \001(\r\022/\n\020tourna"
    "ment_match\030\005 \001(\0132\025.TournamentMatchSetup\022"
    "\022\n\nprime_only\030\006 \001(\010\022\022\n\ntv_control\030\007 \001(\r\022"
    "\020\n\010lobby_id\030\010 \001(\004\"5\n\"CMsgGCCStrike15_v2_"
    "MatchmakingStop\022\017\n\007abandon\030\001 \001(\005\"y\n2CMsg"
    "GCCStrike15_v2_MatchmakingGC2ClientUpdat"
    "e_Note\022\014\n\004type\030\001 \001(\005\022\021\n\tregion_id\030\002 \001(\005\022"
    "\020\n\010region_r\030\003 \001(\002\022\020\n\010distance\030\004 \001(\002\"\307\002\n/"
    "CMsgGCCStrike15_v2_MatchmakingClient2Ser"
    "verPing\022(\n\017gameserverpings\030\001 \003(\0132\017.GameS"
    "erverPing\022\024\n\014offset_index\030\002 \001(\005\022\023\n\013final"
    "_batch\030\003 \001(\005\022*\n\021data_center_pings\030\004 \003(\0132"
    "\017.DataCenterPing\022\020\n\010max_ping\030\005 \001(\r\022\022\n\nte"
    "st_token\030\006 \001(\007\022\022\n\nsearch_key\030\007 \001(\014\022B\n\005no"
    "tes\030\010 \003(\01323.CMsgGCCStrike15_v2_Matchmaki"
    "ngGC2ClientUpdate_Note\022\025\n\rdebug_message\030"
    "\t \001(\t\"\226\005\n-CMsgGCCStrike15_v2_Matchmaking"
    "GC2ClientUpdate\022\023\n\013matchmaking\030\001 \001(\005\022#\n\033"
    "waiting_account_id_sessions\030\002 \003(\r\022\r\n\005err"
    "or\030\003 \001(\t\022(\n ongoingmatch_account_id_sess"
    "ions\030\006 \003(\r\022\'\n\014global_stats\030\007 \001(\0132\021.Globa"
    "lStatistics\022$\n\034failping_account_id_sessi"
    "ons\030\010 \003(\r\022#\n\033penalty_account_id_sessions"
    "\030\t \003(\r\022%\n\035failready_account_id_sessions\030"
    "\n \003(\r\022%\n\035vacbanned_account_id_sessions\030\013"
    " \003(\r\022-\n\025server_ipaddress_mask\030\014 \001(\0132\016.Ip"
    "AddressMask\022B\n\005notes\030\r \003(\01323.CMsgGCCStri"
    "ke15_v2_MatchmakingGC2ClientUpdate_Note\022"
    ")\n!penalty_account_id_sessions_green\030\016 \003"
    "(\r\022\"\n\032insufficientlevel_sessions\030\017 \003(\r\022$"
    "\n\034vsncheck_account_id_sessions\030\020 \003(\r\022\"\n\032"
    "launcher_mismatch_sessions\030\021 \003(\r\022$\n\034inse"
    "cure_account_id_sessions\030\022 \003(\r\"\277\004\n(CData"
    "GCCStrike15_v2_TournamentMatchDraft\022\020\n\010e"
    "vent_id\030\001 \001(\005\022\026\n\016event_stage_id\030\002 \001(\005\022\021\n"
    "\tteam_id_0\030\003 \001(\005\022\021\n\tteam_id_1\030\004 \001(\005\022\022\n\nm"
    "aps_count\030\005 \001(\005\022\024\n\014maps_current\030\006 \001(\005\022\025\n"
    "\rteam_id_start\030\007 \001(\005\022\025\n\rteam_id_veto1\030\010 "
    "\001(\005\022\025\n\rteam_id_pickn\030\t \001(\005\022\?\n\006drafts\030\n \003"
    "(\0132/.CDataGCCStrike15_v2_TournamentMatch"
    "Draft.Entry\022\024\n\014vote_mapid_0\030\013 \003(\005\022\024\n\014vot"
    "e_mapid_1\030\014 \003(\005\022\024\n\014vote_mapid_2\030\r \003(\005\022\024\n"
    "\014vote_mapid_3\030\016 \003(\005\022\024\n\014vote_mapid_4\030\017 \003("
    "\005\022\024\n\014vote_mapid_5\030\020 \003(\005\022\032\n\022vote_starting"
    "_side\030\021 \003(\005\022\022\n\nvote_phase\030\022 \001(\005\022\030\n\020vote_"
    "phase_start\030\023 \001(\002\022\031\n\021vote_phase_length\030\024"
    " \001(\002\032*\n\005Entry\022\r\n\005mapid\030\001 \001(\005\022\022\n\nteam_id_"
    "ct\030\002 \001(\005\"\373\001\n\021CPreMatchInfoData\022\027\n\017predic"
    "tions_pct\030\001 \001(\005\0228\n\005draft\030\004 \001(\0132).CDataGC"
    "CStrike15_v2_TournamentMatchDraft\022+\n\005sta"
    "ts\030\005 \003(\0132\034.CPreMatchInfoData.TeamStats\022\014"
    "\n\004wins\030\006 \003(\005\032X\n\tTeamStats\022\031\n\021match_info_"
    "idxtxt\030\001 \001(\005\022\026\n\016match_info_txt\030\002 \001(\t\022\030\n\020"
    "match_info_teams\030\003 \003(\t\"\221\005\n.CMsgGCCStrike"
    "15_v2_MatchmakingGC2ServerReserve\022\023\n\013acc"
    "ount_ids\030\001 \003(\r\022\021\n\tgame_type\030\002 \001(\r\022\020\n\010mat"
    "ch_id\030\003 \001(\004\022\026\n\016server_version\030\004 \001(\r\022\r\n\005f"
    "lags\030\022 \001(\r\022$\n\010rankings\030\005 \003(\0132\022.PlayerRan"
    "kingInfo\022\026\n\016encryption_key\030\006 \001(\004\022\032\n\022encr"
    "yption_key_pub\030\007 \001(\004\022\021\n\tparty_ids\030\010 \003(\r\022"
    "!\n\twhitelist\030\t \003(\0132\016.IpAddressMask\022\031\n\021tv"
    "_master_steamid\030\n \001(\004\022*\n\020tournament_even"
    "t\030\013 \001(\0132\020.TournamentEvent\022)\n\020tournament_"
    "teams\030\014 \003(\0132\017.TournamentTeam\022&\n\036tourname"
    "nt_casters_account_ids\030\r \003(\r\022\030\n\020tv_relay"
    "_steamid\030\016 \001(\004\022*\n\016pre_match_data\030\017 \001(\0132\022"
    ".CPreMatchInfoData\022\033\n\023rtime32_event_star"
    "t\030\020 \001(\r\022\022\n\ntv_control\030\021 \001(\r\022+\n\rop_var_va"
    "lues\030\023 \003(\0132\024.OperationalVarValue\022\027\n\017soca"
    "che_control\030\024 \001(\r\022\027\n\017teammate_colors\030\025 \003"
    "(\005\"\340\004\n7CMsgGCCStrike15_v2_MatchmakingSer"
    "verReservationResponse\022\025\n\rreservationid\030"
    "\001 \001(\004\022D\n\013reservation\030\002 \001(\0132/.CMsgGCCStri"
    "ke15_v2_MatchmakingGC2ServerReserve\022\013\n\003m"
    "ap\030\003 \001(\t\022\033\n\023gc_reservation_sent\030\004 \001(\004\022\026\n"
    "\016server_version\030\005 \001(\r\022 \n\007tv_info\030\006 \001(\0132\017"
    ".ServerHltvInfo\022\036\n\026reward_player_account"
    "s\030\007 \003(\r\022\034\n\024idle_player_accounts\030\010 \003(\r\022 \n"
    "\030reward_item_attr_def_idx\030\t \001(\r\022\036\n\026rewar"
    "d_item_attr_value\030\n \001(\r\022#\n\033reward_item_a"
    "ttr_reward_idx\030\013 \001(\r\022\030\n\020reward_drop_list"
    "\030\014 \001(\r\022\026\n\016tournament_tag\030\r \001(\t\022!\n\031legacy"
    "_steamdatagram_port\030\016 \001(\r\022\035\n\025steamdatagr"
    "am_routing\030\021 \001(\r\022\022\n\ntest_token\030\017 \001(\007\022\r\n\005"
    "flags\030\020 \001(\r\022\023\n\013system_load\030\022 \001(\r\022\023\n\013cpus"
    "_online\030\023 \001(\r\"\256\002\n.CMsgGCCStrike15_v2_Mat"
    "chmakingGC2ClientReserve\022\020\n\010serverid\030\001 \001"
    "(\004\022\025\n\rdirect_udp_ip\030\002 \001(\r\022\027\n\017direct_udp_"
    "port\030\003 \001(\r\022\025\n\rreservationid\030\004 \001(\004\022D\n\013res"
    "ervation\030\005 \001(\0132/.CMsgGCCStrike15_v2_Matc"
    "hmakingGC2ServerReserve\022\013\n\003map\030\006 \001(\t\022\026\n\016"
    "server_address\030\007 \001(\t\022 \n\007gs_ping\030\010 \001(\0132\017."
    "DataCenterPing\022\026\n\016gs_location_id\030\t \001(\r\"\202"
    "\007\n.CMsgGCCStrike15_v2_MatchmakingServerR"
    "oundStats\022\025\n\rreservationid\030\001 \001(\004\022D\n\013rese"
    "rvation\030\002 \001(\0132/.CMsgGCCStrike15_v2_Match"
    "makingGC2ServerReserve\022\013\n\003map\030\003 \001(\t\022\r\n\005r"
    "ound\030\004 \001(\005\022\r\n\005kills\030\005 \003(\005\022\017\n\007assists\030\006 \003"
    "(\005\022\016\n\006deaths\030\007 \003(\005\022\016\n\006scores\030\010 \003(\005\022\r\n\005pi"
    "ngs\030\t \003(\005\022\024\n\014round_result\030\n \001(\005\022\024\n\014match"
    "_result\030\013 \001(\005\022\023\n\013team_scores\030\014 \003(\005\022@\n\007co"
    "nfirm\030\r \001(\0132/.CMsgGCCStrike15_v2_Matchma"
    "kingGC2ServerConfirm\022\031\n\021reservation_stag"
    "e\030\016 \001(\005\022\026\n\016match_duration\030\017 \001(\005\022\023\n\013enemy"
    "_kills\030\020 \003(\005\022\027\n\017enemy_headshots\030\021 \003(\005\022\021\n"
    "\tenemy_3ks\030\022 \003(\005\022\021\n\tenemy_4ks\030\023 \003(\005\022\021\n\te"
    "nemy_5ks\030\024 \003(\005\022\014\n\004mvps\030\025 \003(\005\022\030\n\020spectato"
    "rs_count\030\026 \001(\r\022\033\n\023spectators_count_tv\030\027 "
    "\001(\r\022\034\n\024spectators_count_lnk\030\030 \001(\r\022\027\n\017ene"
    "my_kills_agg\030\031 \003(\005\022K\n\tdrop_info\030\032 \001(\01328."
    "CMsgGCCStrike15_v2_MatchmakingServerRoun"
    "dStats.DropInfo\022\030\n\020b_switched_teams\030\033 \001("
    "\010\022\021\n\tenemy_2ks\030\034 \003(\005\022\026\n\016player_spawned\030\035"
    " \003(\005\022\030\n\020team_spawn_count\030\036 \003(\005\022\022\n\nmax_ro"
    "unds\030\037 \001(\r\022\016\n\006map_id\030  \001(\005\032\037\n\010DropInfo\022\023"
    "\n\013account_mvp\030\001 \001(\r\".\n,CMsgGCCStrike15_v"
    "2_MatchmakingClient2GCHello\"\345\005\n,CMsgGCCS"
    "trike15_v2_MatchmakingGC2ClientHello\022\022\n\n"
    "account_id\030\001 \001(\r\022E\n\014ongoingmatch\030\002 \001(\0132/"
    ".CMsgGCCStrike15_v2_MatchmakingGC2Client"
    "Reserve\022\'\n\014global_stats\030\003 \001(\0132\021.GlobalSt"
    "atistics\022\027\n\017penalty_seconds\030\004 \001(\r\022\026\n\016pen"
    "alty_reason\030\005 \001(\r\022\022\n\nvac_banned\030\006 \001(\005\022#\n"
    "\007ranking\030\007 \001(\0132\022.PlayerRankingInfo\022-\n\014co"
    "mmendation\030\010 \001(\0132\027.PlayerCommendationInf"
    "o\022!\n\006medals\030\t \001(\0132\021.PlayerMedalsInfo\022*\n\020"
    "my_current_event\030\n \001(\0132\020.TournamentEvent"
    "\022/\n\026my_current_event_teams\030\013 \003(\0132\017.Tourn"
    "amentTeam\022(\n\017my_current_team\030\014 \001(\0132\017.Tou"
    "rnamentTeam\0221\n\027my_current_event_stages\030\r"
    " \003(\0132\020.TournamentEvent\022\023\n\013survey_vote\030\016 "
    "\001(\r\022\"\n\010activity\030\017 \001(\0132\020.AccountActivity\022"
    "\024\n\014player_level\030\021 \001(\005\022\025\n\rplayer_cur_xp\030\022"
    " \001(\005\022\035\n\025player_xp_bonus_flags\030\023 \001(\005\022$\n\010r"
    "ankings\030\024 \003(\0132\022.PlayerRankingInfo\022\020\n\010owc"
    "aseid\030\025 \001(\004\"\251\001\n)CMsgGCCStrike15_v2_Accou"
    "ntPrivacySettings\022D\n\010settings\030\001 \003(\01322.CM"
    "sgGCCStrike15_v2_AccountPrivacySettings."
    "Setting\0326\n\007Setting\022\024\n\014setting_type\030\001 \001(\r"
    "\022\025\n\rsetting_value\030\002 \001(\r\"\277\001\n.CMsgGCCStrik"
    "e15_v2_MatchmakingGC2ClientAbandon\022\022\n\nac"
    "count_id\030\001 \001(\r\022H\n\017abandoned_match\030\002 \001(\0132"
    "/.CMsgGCCStrike15_v2_MatchmakingGC2Clien"
    "tReserve\022\027\n\017penalty_seconds\030\003 \001(\r\022\026\n\016pen"
    "alty_reason\030\004 \001(\r\"M\n%CMsgGCCStrike15_v2_"
    "ClientGCRankUpdate\022$\n\010rankings\030\001 \003(\0132\022.P"
    "layerRankingInfo\"L\n3CMsgGCCStrike15_v2_M"
    "atchmakingOperator2GCBlogUpdate\022\025\n\rmain_"
    "post_url\030\001 \001(\t\"\212\001\n3CMsgGCCStrike15_v2_Se"
    "rverNotificationForUserPenalty\022\022\n\naccoun"
    "t_id\030\001 \001(\r\022\016\n\006reason\030\002 \001(\r\022\017\n\007seconds\030\003 "
    "\001(\r\022\036\n\026communication_cooldown\030\004 \001(\010\"\355\001\n%"
    "CMsgGCCStrike15_v2_ClientReportPlayer\022\022\n"
    "\naccount_id\030\001 \001(\r\022\022\n\nrpt_aimbot\030\002 \001(\r\022\024\n"
    "\014rpt_wallhack\030\003 \001(\r\022\025\n\rrpt_speedhack\030\004 \001"
    "(\r\022\024\n\014rpt_teamharm\030\005 \001(\r\022\025\n\rrpt_textabus"
    "e\030\006 \001(\r\022\026\n\016rpt_voiceabuse\030\007 \001(\r\022\020\n\010match"
    "_id\030\010 \001(\004\022\030\n\020report_from_demo\030\t \001(\010\"\215\001\n&"
    "CMsgGCCStrike15_v2_ClientCommendPlayer\022\022"
    "\n\naccount_id\030\001 \001(\r\022\020\n\010match_id\030\010 \001(\004\022-\n\014"
    "commendation\030\t \001(\0132\027.PlayerCommendationI"
    "nfo\022\016\n\006tokens\030\n \001(\r\"\265\001\n%CMsgGCCStrike15_"
    "v2_ClientReportServer\022\024\n\014rpt_poorperf\030\001 "
    "\001(\r\022\031\n\021rpt_abusivemodels\030\002 \001(\r\022\023\n\013rpt_ba"
    "dmotd\030\003 \001(\r\022\030\n\020rpt_listingabuse\030\004 \001(\r\022\032\n"
    "\022rpt_inventoryabuse\030\005 \001(\r\022\020\n\010match_id\030\010 "
    "\001(\004\"\251\001\n\'CMsgGCCStrike15_v2_ClientReportR"
    "esponse\022\027\n\017confirmation_id\030\001 \001(\004\022\022\n\nacco"
    "unt_id\030\002 \001(\r\022\021\n\tserver_ip\030\003 \001(\r\022\025\n\rrespo"
    "nse_type\030\004 \001(\r\022\027\n\017response_result\030\005 \001(\r\022"
    "\016\n\006tokens\030\006 \001(\r\"\303\001\n0CMsgGCCStrike15_v2_C"
    "lientRequestWatchInfoFriends\022\022\n\nrequest_"
    "id\030\001 \001(\r\022\023\n\013account_ids\030\002 \003(\r\022\020\n\010serveri"
    "d\030\003 \001(\004\022\017\n\007matchid\030\004 \001(\004\022\027\n\017client_launc"
    "her\030\005 \001(\r\022*\n\021data_center_pings\030\006 \003(\0132\017.D"
    "ataCenterPing\"\260\002\n\022WatchableMatchInfo\022\021\n\t"
    "server_ip\030\001 \001(\r\022\017\n\007tv_port\030\002 \001(\r\022\025\n\rtv_s"
    "pectators\030\003 \001(\r\022\017\n\007tv_time\030\004 \001(\r\022\031\n\021tv_w"
    "atch_password\030\005 \001(\014\022\032\n\022cl_decryptdata_ke"
    "y\030\006 \001(\004\022\036\n\026cl_decryptdata_key_pub\030\007 \001(\004\022"
    "\021\n\tgame_type\030\010 \001(\r\022\025\n\rgame_mapgroup\030\t \001("
    "\t\022\020\n\010game_map\030\n \001(\t\022\021\n\tserver_id\030\013 \001(\004\022\020"
    "\n\010match_id\030\014 \001(\004\022\026\n\016reservation_id\030\r \001(\004"
    "\"\313\001\n.CMsgGCCStrike15_v2_ClientRequestJoi"
    "nFriendData\022\017\n\007version\030\001 \001(\r\022\022\n\naccount_"
    "id\030\002 \001(\r\022\022\n\njoin_token\030\003 \001(\r\022\020\n\010join_ipp"
    "\030\004 \001(\r\022<\n\003res\030\005 \001(\0132/.CMsgGCCStrike15_v2"
    "_MatchmakingGC2ClientReserve\022\020\n\010errormsg"
    "\030\006 \001(\t\"\337\001\n.CMsgGCCStrike15_v2_ClientRequ"
    "estJoinServerData\022\017\n\007version\030\001 \001(\r\022\022\n\nac"
    "count_id\030\002 \001(\r\022\020\n\010serverid\030\003 \001(\004\022\021\n\tserv"
    "er_ip\030\004 \001(\r\022\023\n\013server_port\030\005 \001(\r\022<\n\003res\030"
    "\006 \001(\0132/.CMsgGCCStrike15_v2_MatchmakingGC"
    "2ClientReserve\022\020\n\010errormsg\030\007 \001(\t\"U\n*CMsg"
    "GCCstrike15_v2_ClientRequestNewMission\022\022"
    "\n\nmission_id\030\002 \001(\r\022\023\n\013campaign_id\030\003 \001(\r\""
    "\211\001\n,CMsgGCCstrike15_v2_ClientRedeemMissi"
    "onReward\022\023\n\013campaign_id\030\001 \001(\r\022\021\n\tredeem_"
    "id\030\002 \001(\r\022\032\n\022redeemable_balance\030\003 \001(\r\022\025\n\r"
    "expected_cost\030\004 \001(\r\"o\n)CMsgGCCstrike15_v"
    "2_ClientRedeemFreeReward\022\027\n\017generation_t"
    "ime\030\001 \001(\r\022\032\n\022redeemable_balance\030\002 \001(\r\022\r\n"
    "\005items\030\003 \003(\004\"\271\002\n,CMsgGCCstrike15_v2_GC2S"
    "erverNotifyXPRewarded\022)\n\020xp_progress_dat"
    "a\030\001 \003(\0132\017.XpProgressData\022\022\n\naccount_id\030\002"
    " \001(\r\022\022\n\ncurrent_xp\030\003 \001(\r\022\025\n\rcurrent_leve"
    "l\030\004 \001(\r\022\027\n\017upgraded_defidx\030\005 \001(\r\022 \n\030oper"
    "ation_points_awarded\030\006 \001(\r\022\024\n\014free_rewar"
    "ds\030\007 \001(\r\022\032\n\022xp_trail_remaining\030\010 \001(\r\022\032\n\022"
    "xp_trail_xp_needed\030\t \001(\005\022\026\n\016xp_trail_lev"
    "el\030\n \001(\r\"6\n&CMsgGCCStrike15_v2_ClientNet"
    "workConfig\022\014\n\004data\030\001 \001(\014\"\325\002\n\037CMsgGCCStri"
    "ke15_ClientDeepStats\022\022\n\naccount_id\030\001 \001(\r"
    "\022>\n\005range\030\002 \001(\0132/.CMsgGCCStrike15_Client"
    "DeepStats.DeepStatsRange\022@\n\007matches\030\003 \003("
    "\0132/.CMsgGCCStrike15_ClientDeepStats.Deep"
    "StatsMatch\032<\n\016DeepStatsRange\022\r\n\005begin\030\001 "
    "\001(\r\022\013\n\003end\030\002 \001(\r\022\016\n\006frozen\030\003 \001(\010\032^\n\016Deep"
    "StatsMatch\022%\n\006player\030\001 \001(\0132\025.DeepPlayerS"
    "tatsEntry\022%\n\006events\030\002 \003(\0132\025.DeepPlayerMa"
    "tchEvent\"\232\001\n!CMsgGCCStrike15_v2_WatchInf"
    "oUsers\022\022\n\nrequest_id\030\001 \001(\r\022\023\n\013account_id"
    "s\030\002 \003(\r\0222\n\025watchable_match_infos\030\003 \003(\0132\023"
    ".WatchableMatchInfo\022\030\n\020extended_timeout\030"
    "\005 \001(\r\"\234\001\n.CMsgGCCStrike15_v2_ClientReque"
    "stPlayersProfile\022\036\n\026request_id__deprecat"
    "ed\030\001 \001(\r\022\037\n\027account_ids__deprecated\030\002 \003("
    "\r\022\022\n\naccount_id\030\003 \001(\r\022\025\n\rrequest_level\030\004"
    " \001(\r\"\200\001\n!CMsgGCCStrike15_v2_PlayersProfi"
    "le\022\022\n\nrequest_id\030\001 \001(\r\022G\n\020account_profil"
    "es\030\002 \003(\0132-.CMsgGCCStrike15_v2_Matchmakin"
    "gGC2ClientHello\"\314\001\n,CMsgGCCStrike15_v2_P"
    "layerOverwatchCaseUpdate\022\016\n\006caseid\030\001 \001(\004"
    "\022\021\n\tsuspectid\030\003 \001(\r\022\022\n\nfractionid\030\004 \001(\r\022"
    "\022\n\nrpt_aimbot\030\005 \001(\r\022\024\n\014rpt_wallhack\030\006 \001("
    "\r\022\025\n\rrpt_speedhack\030\007 \001(\r\022\024\n\014rpt_teamharm"
    "\030\010 \001(\r\022\016\n\006reason\030\t \001(\r\"\215\002\n0CMsgGCCStrike"
    "15_v2_PlayerOverwatchCaseAssignment\022\016\n\006c"
    "aseid\030\001 \001(\004\022\017\n\007caseurl\030\002 \001(\t\022\017\n\007verdict\030"
    "\003 \001(\r\022\021\n\ttimestamp\030\004 \001(\r\022\027\n\017throttleseco"
    "nds\030\005 \001(\r\022\021\n\tsuspectid\030\006 \001(\r\022\022\n\nfraction"
    "id\030\007 \001(\r\022\021\n\tnumrounds\030\010 \001(\r\022\026\n\016fractionr"
    "ounds\030\t \001(\r\022\031\n\021streakconvictions\030\n \001(\005\022\016"
    "\n\006reason\030\013 \001(\r\"P\n,CMsgGCCStrike15_v2_Pla"
    "yerOverwatchCaseStatus\022\016\n\006caseid\030\001 \001(\004\022\020"
    "\n\010statusid\030\002 \001(\r\"C\n\036CClientHeaderOverwat"
    "chEvidence\022\021\n\taccountid\030\001 \001(\r\022\016\n\006caseid\030"
    "\002 \001(\004\"P\n#CMsgGCCStrike15_v2_GC2ClientTex"
    "tMsg\022\n\n\002id\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\017\n\007payloa"
    "d\030\003 \001(\014\"\?\n#CMsgGCCStrike15_v2_Client2GCT"
    "extMsg\022\n\n\002id\030\001 \001(\r\022\014\n\004args\030\002 \003(\014\"\266\001\n)CMs"
    "gGCCStrike15_v2_MatchEndRunRewardDrops\022L"
    "\n\nserverinfo\030\003 \001(\01328.CMsgGCCStrike15_v2_"
    "MatchmakingServerReservationResponse\022;\n\024"
    "match_end_quest_data\030\004 \001(\0132\035.CMsgGC_Serv"
    "erQuestUpdateData\"\225\005\n\031CEconItemPreviewDa"
    "taBlock\022\021\n\taccountid\030\001 \001(\r\022\016\n\006itemid\030\002 \001"
    "(\004\022\020\n\010defindex\030\003 \001(\r\022\022\n\npaintindex\030\004 \001(\r"
    "\022\016\n\006rarity\030\005 \001(\r\022\017\n\007quality\030\006 \001(\r\022\021\n\tpai"
    "ntwear\030\007 \001(\r\022\021\n\tpaintseed\030\010 \001(\r\022\032\n\022kille"
    "aterscoretype\030\t \001(\r\022\026\n\016killeatervalue\030\n "
    "\001(\r\022\022\n\ncustomname\030\013 \001(\t\0224\n\010stickers\030\014 \003("
    "\0132\".CEconItemPreviewDataBlock.Sticker\022\021\n"
    "\tinventory\030\r \001(\r\022\016\n\006origin\030\016 \001(\r\022\017\n\007ques"
    "tid\030\017 \001(\r\022\022\n\ndropreason\030\020 \001(\r\022\022\n\nmusicin"
    "dex\030\021 \001(\r\022\020\n\010entindex\030\022 \001(\005\022\020\n\010petindex\030"
    "\023 \001(\r\0225\n\tkeychains\030\024 \003(\0132\".CEconItemPrev"
    "iewDataBlock.Sticker\032\262\001\n\007Sticker\022\014\n\004slot"
    "\030\001 \001(\r\022\022\n\nsticker_id\030\002 \001(\r\022\014\n\004wear\030\003 \001(\002"
    "\022\r\n\005scale\030\004 \001(\002\022\020\n\010rotation\030\005 \001(\002\022\017\n\007tin"
    "t_id\030\006 \001(\r\022\020\n\010offset_x\030\007 \001(\002\022\020\n\010offset_y"
    "\030\010 \001(\002\022\020\n\010offset_z\030\t \001(\002\022\017\n\007pattern\030\n \001("
    "\r\"b\n2CMsgGCCStrike15_v2_MatchEndRewardDr"
    "opsNotification\022,\n\010iteminfo\030\006 \001(\0132\032.CEco"
    "nItemPreviewDataBlock\"D\n\024CMsgItemAcknowl"
    "edged\022,\n\010iteminfo\030\001 \001(\0132\032.CEconItemPrevi"
    "ewDataBlock\"}\n7CMsgGCCStrike15_v2_Client"
    "2GCEconPreviewDataBlockRequest\022\017\n\007param_"
    "s\030\001 \001(\004\022\017\n\007param_a\030\002 \001(\004\022\017\n\007param_d\030\003 \001("
    "\004\022\017\n\007param_m\030\004 \001(\004\"h\n8CMsgGCCStrike15_v2"
    "_Client2GCEconPreviewDataBlockResponse\022,"
    "\n\010iteminfo\030\001 \001(\0132\032.CEconItemPreviewDataB"
    "lock\"5\n3CMsgGCCStrike15_v2_MatchListRequ"
    "estCurrentLiveGames\"G\n2CMsgGCCStrike15_v"
    "2_MatchListRequestLiveGameForUser\022\021\n\tacc"
    "ountid\030\001 \001(\r\"G\n2CMsgGCCStrike15_v2_Match"
    "ListRequestRecentUserGames\022\021\n\taccountid\030"
    "\001 \001(\r\"E\n2CMsgGCCStrike15_v2_MatchListReq"
    "uestTournamentGames\022\017\n\007eventid\030\001 \001(\005\"d\n/"
    "CMsgGCCStrike15_v2_MatchListRequestFullG"
    "ameInfo\022\017\n\007matchid\030\001 \001(\004\022\021\n\toutcomeid\030\002 "
    "\001(\004\022\r\n\005token\030\003 \001(\r\"\210\002\n\035CDataGCCStrike15_"
    "v2_MatchInfo\022\017\n\007matchid\030\001 \001(\004\022\021\n\tmatchti"
    "me\030\002 \001(\r\022/\n\022watchablematchinfo\030\003 \001(\0132\023.W"
    "atchableMatchInfo\022J\n\021roundstats_legacy\030\004"
    " \001(\0132/.CMsgGCCStrike15_v2_MatchmakingSer"
    "verRoundStats\022F\n\rroundstatsall\030\005 \003(\0132/.C"
    "MsgGCCStrike15_v2_MatchmakingServerRound"
    "Stats\"^\n\'CDataGCCStrike15_v2_TournamentG"
    "roupTeam\022\017\n\007team_id\030\001 \001(\005\022\r\n\005score\030\002 \001(\005"
    "\022\023\n\013correctpick\030\003 \001(\010\"\331\002\n#CDataGCCStrike"
    "15_v2_TournamentGroup\022\017\n\007groupid\030\001 \001(\r\022\014"
    "\n\004name\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\022\031\n\021picks__dep"
    "recated\030\004 \001(\r\0227\n\005teams\030\005 \003(\0132(.CDataGCCS"
    "trike15_v2_TournamentGroupTeam\022\021\n\tstage_"
    "ids\030\006 \003(\005\022\031\n\021picklockuntiltime\030\007 \001(\r\022\025\n\r"
    "pickableteams\030\010 \001(\r\022\027\n\017points_per_pick\030\t"
    " \001(\r\0229\n\005picks\030\n \003(\0132*.CDataGCCStrike15_v"
    "2_TournamentGroup.Picks\032\030\n\005Picks\022\017\n\007pick"
    "ids\030\001 \003(\005\"\214\001\n%CDataGCCStrike15_v2_Tourna"
    "mentSection\022\021\n\tsectionid\030\001 \001(\r\022\014\n\004name\030\002"
    " \001(\t\022\014\n\004desc\030\003 \001(\t\0224\n\006groups\030\004 \003(\0132$.CDa"
    "taGCCStrike15_v2_TournamentGroup\"\265\001\n\"CDa"
    "taGCCStrike15_v2_TournamentInfo\0228\n\010secti"
    "ons\030\001 \003(\0132&.CDataGCCStrike15_v2_Tourname"
    "ntSection\022*\n\020tournament_event\030\002 \001(\0132\020.To"
    "urnamentEvent\022)\n\020tournament_teams\030\003 \003(\0132"
    "\017.TournamentTeam\"\353\001\n\034CMsgGCCStrike15_v2_"
    "MatchList\022\024\n\014msgrequestid\030\001 \001(\r\022\021\n\taccou"
    "ntid\030\002 \001(\r\022\022\n\nservertime\030\003 \001(\r\022/\n\007matche"
    "s\030\004 \003(\0132\036.CDataGCCStrike15_v2_MatchInfo\022"
    " \n\007streams\030\005 \003(\0132\017.TournamentTeam\022;\n\016tou"
    "rnamentinfo\030\006 \001(\0132#.CDataGCCStrike15_v2_"
    "TournamentInfo\"\211\001\n2CMsgGCCStrike15_v2_Ma"
    "tchListTournamentOperatorMgmt\022\017\n\007eventid"
    "\030\001 \001(\005\022/\n\007matches\030\002 \003(\0132\036.CDataGCCStrike"
    "15_v2_MatchInfo\022\021\n\taccountid\030\003 \001(\r\"\357\001\n\036C"
    "MsgGCCStrike15_v2_Predictions\022\020\n\010event_i"
    "d\030\001 \001(\r\022R\n\026group_match_team_picks\030\002 \003(\0132"
    "2.CMsgGCCStrike15_v2_Predictions.GroupMa"
    "tchTeamPick\032g\n\022GroupMatchTeamPick\022\021\n\tsec"
    "tionid\030\001 \001(\005\022\017\n\007groupid\030\002 \001(\005\022\r\n\005index\030\003"
    " \001(\005\022\016\n\006teamid\030\004 \001(\005\022\016\n\006itemid\030\005 \001(\004\"\373\001\n"
    "\032CMsgGCCStrike15_v2_Fantasy\022\020\n\010event_id\030"
    "\001 \001(\r\0226\n\005teams\030\002 \003(\0132\'.CMsgGCCStrike15_v"
    "2_Fantasy.FantasyTeam\0329\n\013FantasySlot\022\014\n\004"
    "type\030\001 \001(\005\022\014\n\004pick\030\002 \001(\005\022\016\n\006itemid\030\003 \001(\004"
    "\032X\n\013FantasyTeam\022\021\n\tsectionid\030\001 \001(\005\0226\n\005sl"
    "ots\030\002 \003(\0132\'.CMsgGCCStrike15_v2_Fantasy.F"
    "antasySlot\"\"\n\021CAttribute_String\022\r\n\005value"
    "\030\001 \001(\t\"\316\003\n\036CMsgLegacySource1ClientWelcom"
    "e\022\017\n\007version\030\001 \001(\r\022\021\n\tgame_data\030\002 \001(\014\022;\n"
    "\033outofdate_subscribed_caches\030\003 \003(\0132\026.CMs"
    "gSOCacheSubscribed\022A\n\032uptodate_subscribe"
    "d_caches\030\004 \003(\0132\035.CMsgSOCacheSubscription"
    "Check\022:\n\010location\030\005 \001(\0132(.CMsgLegacySour"
    "ce1ClientWelcome.Location\022\022\n\ngame_data2\030"
    "\006 \001(\014\022$\n\034rtime32_gc_welcome_timestamp\030\007 "
    "\001(\r\022\020\n\010currency\030\010 \001(\r\022\017\n\007balance\030\t \001(\r\022\023"
    "\n\013balance_url\030\n \001(\t\022\030\n\020txn_country_code\030"
    "\013 \001(\t\032@\n\010Location\022\020\n\010latitude\030\001 \001(\002\022\021\n\tl"
    "ongitude\030\002 \001(\002\022\017\n\007country\030\003 \001(\t\"\304\001\n\024CMsg"
    "CStrike15Welcome\022\027\n\017store_item_hash\030\005 \001("
    "\r\022\037\n\027timeplayedconsecutively\030\006 \001(\r\022\031\n\021ti"
    "me_first_played\030\n \001(\r\022\030\n\020last_time_playe"
    "d\030\014 \001(\r\022\027\n\017last_ip_address\030\r \001(\r\022\022\n\ngsco"
    "okieid\030\022 \001(\004\022\020\n\010uniqueid\030\023 \001(\004\"\233\001\n1CMsgG"
    "CCStrike15_v2_ClientVarValueNotification"
    "Info\022\022\n\nvalue_name\030\001 \001(\t\022\021\n\tvalue_int\030\002 "
    "\001(\005\022\023\n\013server_addr\030\003 \001(\r\022\023\n\013server_port\030"
    "\004 \001(\r\022\025\n\rchoked_blocks\030\005 \003(\t\"z\n1CMsgGCCS"
    "trike15_v2_ServerVarValueNotificationInf"
    "o\022\021\n\taccountid\030\001 \001(\r\022\022\n\nviewangles\030\002 \003(\r"
    "\022\014\n\004type\030\003 \001(\r\022\020\n\010userdata\030\004 \003(\r\",\n*CMsg"
    "GCCStrike15_v2_GiftsLeaderboardRequest\"\235"
    "\002\n+CMsgGCCStrike15_v2_GiftsLeaderboardRe"
    "sponse\022\022\n\nservertime\030\001 \001(\r\022\033\n\023time_perio"
    "d_seconds\030\002 \001(\r\022\031\n\021total_gifts_given\030\003 \001"
    "(\r\022\024\n\014total_givers\030\004 \001(\r\022R\n\007entries\030\005 \003("
    "\0132A.CMsgGCCStrike15_v2_GiftsLeaderboardR"
    "esponse.GiftLeaderboardEntry\0328\n\024GiftLead"
    "erboardEntry\022\021\n\taccountid\030\001 \001(\r\022\r\n\005gifts"
    "\030\002 \001(\r\"L\n)CMsgGCCStrike15_v2_ClientSubmi"
    "tSurveyVote\022\021\n\tsurvey_id\030\001 \001(\r\022\014\n\004vote\030\002"
    " \001(\r\"\?\n*CMsgGCCStrike15_v2_Server2GCClie"
    "ntValidate\022\021\n\taccountid\030\001 \001(\r\"r\n*CMsgGCC"
    "Strike15_v2_GC2ClientTournamentInfo\022\017\n\007e"
    "ventid\030\001 \001(\r\022\017\n\007stageid\030\002 \001(\r\022\021\n\tgame_ty"
    "pe\030\003 \001(\r\022\017\n\007teamids\030\004 \003(\r\"O\n\rCSOEconCoup"
    "on\022\025\n\007entryid\030\001 \001(\rB\004\200\246\035\001\022\016\n\006defidx\030\002 \001("
    "\r\022\027\n\017expiration_date\030\003 \001(\007\"a\n\033CSOAccount"
    "ItemPersonalStore\022\027\n\017generation_time\030\001 \001"
    "(\r\022\032\n\022redeemable_balance\030\002 \001(\r\022\r\n\005items\030"
    "\003 \003(\004\"Z\n\020CSOAccountXpShop\022\027\n\017generation_"
    "time\030\001 \001(\r\022\032\n\022redeemable_balance\030\002 \001(\r\022\021"
    "\n\txp_tracks\030\003 \003(\r\"6\n#CSOAccountKeychainR"
    "emoveToolCharges\022\017\n\007charges\030\001 \001(\r\"Y\n\020CSO"
    "QuestProgress\022\025\n\007questid\030\001 \001(\rB\004\200\246\035\001\022\030\n\020"
    "points_remaining\030\002 \001(\r\022\024\n\014bonus_points\030\003"
    " \001(\r\"\315\001\n\033CSOAccountSeasonalOperation\022\032\n\014"
    "season_value\030\001 \001(\rB\004\200\246\035\001\022\025\n\rtier_unlocke"
    "d\030\002 \001(\r\022\025\n\rpremium_tiers\030\003 \001(\r\022\022\n\nmissio"
    "n_id\030\004 \001(\r\022\032\n\022missions_completed\030\005 \001(\r\022\032"
    "\n\022redeemable_balance\030\006 \001(\r\022\030\n\020season_pas"
    "s_time\030\007 \001(\r\"R\n\037CSOAccountRecurringSubsc"
    "ription\022\027\n\017time_next_cycle\030\001 \001(\r\022\026\n\016time"
    "_initiated\030\002 \001(\r\"\257\001\n\024CSOPersonaDataPubli"
    "c\022\024\n\014player_level\030\001 \001(\005\022-\n\014commendation\030"
    "\002 \001(\0132\027.PlayerCommendationInfo\022\026\n\016elevat"
    "ed_state\030\003 \001(\010\022\"\n\032xp_trail_timestamp_ref"
    "resh\030\004 \001(\r\022\026\n\016xp_trail_level\030\005 \001(\r\"\240\001\n(C"
    "MsgGCCStrike15_v2_GC2ClientNotifyXPShop\022"
    "#\n\010prematch\030\001 \001(\0132\021.CSOAccountXpShop\022$\n\t"
    "postmatch\030\002 \001(\0132\021.CSOAccountXpShop\022\022\n\ncu"
    "rrent_xp\030\003 \001(\r\022\025\n\rcurrent_level\030\004 \001(\r\"-\n"
    "+CMsgGCCStrike15_v2_Client2GcAckXPShopTr"
    "acks\"-\n\033CMsgGC_GlobalGame_Subscribe\022\016\n\006t"
    "icket\030\001 \001(\004\"1\n\035CMsgGC_GlobalGame_Unsubsc"
    "ribe\022\020\n\010timeleft\030\001 \001(\005\"P\n\026CMsgGC_GlobalG"
    "ame_Play\022\016\n\006ticket\030\001 \001(\004\022\022\n\ngametimems\030\002"
    " \001(\r\022\022\n\nmsperpoint\030\003 \001(\r\"=\n%CMsgGCCStrik"
    "e15_v2_AcknowledgePenalty\022\024\n\014acknowledge"
    "d\030\001 \001(\005\"{\n/CMsgGCCStrike15_v2_Client2GCR"
    "equestPrestigeCoin\022\020\n\010defindex\030\001 \001(\r\022\021\n\t"
    "upgradeid\030\002 \001(\004\022\r\n\005hours\030\003 \001(\r\022\024\n\014presti"
    "getime\030\004 \001(\r\"F\n(CMsgGCCStrike15_v2_Clien"
    "t2GCStreamUnlock\022\016\n\006ticket\030\001 \001(\004\022\n\n\002os\030\002"
    " \001(\005\"<\n+CMsgGCCStrike15_v2_ClientToGCReq"
    "uestElevate\022\r\n\005stage\030\001 \001(\r\"C\n!CMsgGCCStr"
    "ike15_v2_ClientToGCChat\022\020\n\010match_id\030\001 \001("
    "\004\022\014\n\004text\030\002 \001(\t\"E\n!CMsgGCCStrike15_v2_GC"
    "ToClientChat\022\022\n\naccount_id\030\001 \001(\r\022\014\n\004text"
    "\030\002 \001(\t\"E\n$CMsgGCCStrike15_v2_ClientAuthK"
    "eyCode\022\017\n\007eventid\030\001 \001(\r\022\014\n\004code\030\002 \001(\t\"F\n"
    "\036CMsgGCCStrike15_GotvSyncPacket\022$\n\004data\030"
    "\001 \001(\0132\026.CEngineGotvSyncPacket\"\223\002\n\033Player"
    "DecalDigitalSignature\022\021\n\tsignature\030\001 \001(\014"
    "\022\021\n\taccountid\030\002 \001(\r\022\r\n\005rtime\030\003 \001(\r\022\016\n\006en"
    "dpos\030\004 \003(\002\022\020\n\010startpos\030\005 \003(\002\022\014\n\004left\030\006 \003"
    "(\002\022\021\n\ttx_defidx\030\007 \001(\r\022\020\n\010entindex\030\010 \001(\005\022"
    "\016\n\006hitbox\030\t \001(\r\022\024\n\014creationtime\030\n \001(\002\022\021\n"
    "\tequipslot\030\013 \001(\r\022\020\n\010trace_id\030\014 \001(\r\022\016\n\006no"
    "rmal\030\r \003(\002\022\017\n\007tint_id\030\016 \001(\r\"f\n(CMsgGCCSt"
    "rike15_v2_ClientPlayerDecalSign\022*\n\004data\030"
    "\001 \001(\0132\034.PlayerDecalDigitalSignature\022\016\n\006i"
    "temid\030\002 \001(\004\"4\n!CMsgGCCStrike15_v2_BetaEn"
    "rollment\022\017\n\007eresult\030\001 \001(\r\"_\n(CMsgGCCStri"
    "ke15_v2_ClientLogonFatalError\022\021\n\terrorco"
    "de\030\001 \001(\r\022\017\n\007message\030\002 \001(\t\022\017\n\007country\030\003 \001"
    "(\t\"S\n\"CMsgGCCStrike15_v2_ClientPollState"
    "\022\016\n\006pollid\030\001 \001(\r\022\r\n\005names\030\002 \003(\t\022\016\n\006value"
    "s\030\003 \003(\005\"\244\001\n!CMsgGCCStrike15_v2_Party_Reg"
    "ister\022\n\n\002id\030\001 \001(\r\022\013\n\003ver\030\002 \001(\r\022\013\n\003apr\030\003 "
    "\001(\r\022\013\n\003ark\030\004 \001(\r\022\013\n\003nby\030\005 \001(\r\022\013\n\003grp\030\006 \001"
    "(\r\022\r\n\005slots\030\007 \001(\r\022\020\n\010launcher\030\010 \001(\r\022\021\n\tg"
    "ame_type\030\t \001(\r\"{\n\037CMsgGCCStrike15_v2_Par"
    "ty_Search\022\013\n\003ver\030\001 \001(\r\022\013\n\003apr\030\002 \001(\r\022\013\n\003a"
    "rk\030\003 \001(\r\022\014\n\004grps\030\004 \003(\r\022\020\n\010launcher\030\005 \001(\r"
    "\022\021\n\tgame_type\030\006 \001(\r\"\327\001\n&CMsgGCCStrike15_"
    "v2_Party_SearchResults\022>\n\007entries\030\001 \003(\0132"
    "-.CMsgGCCStrike15_v2_Party_SearchResults"
    ".Entry\032m\n\005Entry\022\n\n\002id\030\001 \001(\r\022\013\n\003grp\030\002 \001(\r"
    "\022\021\n\tgame_type\030\003 \001(\r\022\013\n\003apr\030\004 \001(\r\022\013\n\003ark\030"
    "\005 \001(\r\022\013\n\003loc\030\006 \001(\r\022\021\n\taccountid\030\007 \001(\r\"E\n"
    "\037CMsgGCCStrike15_v2_Party_Invite\022\021\n\tacco"
    "untid\030\001 \001(\r\022\017\n\007lobbyid\030\002 \001(\r\"\302\001\n)CMsgGCC"
    "Strike15_v2_Account_RequestCoPlays\022B\n\007pl"
    "ayers\030\001 \003(\01321.CMsgGCCStrike15_v2_Account"
    "_RequestCoPlays.Player\022\022\n\nservertime\030\002 \001"
    "(\r\032=\n\006Player\022\021\n\taccountid\030\001 \001(\r\022\020\n\010rtcop"
    "lay\030\002 \001(\r\022\016\n\006online\030\003 \001(\010\"\244\001\n*CMsgGCCStr"
    "ike15_v2_ClientToGCRequestTicket\022\033\n\023auth"
    "orized_steam_id\030\001 \001(\006\022\034\n\024authorized_publ"
    "ic_ip\030\002 \001(\007\022\033\n\023gameserver_steam_id\030\003 \001(\006"
    "\022\036\n\026gameserver_sdr_routing\030\005 \001(\t\">\n!CMsg"
    "GCToClientSteamDatagramTicket\022\031\n\021seriali"
    "zed_ticket\030\020 \001(\014\"(\n&CMsgGCCStrike15_v2_C"
    "lientRequestOffers\"\\\n(CMsgGCCStrike15_v2"
    "_ClientRequestSouvenir\022\016\n\006itemid\030\001 \001(\004\022\017"
    "\n\007matchid\030\002 \001(\004\022\017\n\007eventid\030\003 \001(\005\"F\n\'CMsg"
    "GCCStrike15_v2_ClientAccountBalance\022\016\n\006a"
    "mount\030\001 \001(\004\022\013\n\003url\030\002 \001(\t\"M\n\'CMsgGCCStrik"
    "e15_v2_ClientPartyJoinRelay\022\021\n\taccountid"
    "\030\001 \001(\r\022\017\n\007lobbyid\030\002 \001(\004\"\224\001\n%CMsgGCCStrik"
    "e15_v2_ClientPartyWarning\022=\n\007entries\030\001 \003"
    "(\0132,.CMsgGCCStrike15_v2_ClientPartyWarni"
    "ng.Entry\032,\n\005Entry\022\021\n\taccountid\030\001 \001(\r\022\020\n\010"
    "warntype\030\002 \001(\r\"K\n#CMsgGCCStrike15_v2_Set"
    "EventFavorite\022\017\n\007eventid\030\001 \001(\004\022\023\n\013is_fav"
    "orite\030\002 \001(\010\"B\n,CMsgGCCStrike15_v2_GetEve"
    "ntFavorites_Request\022\022\n\nall_events\030\001 \001(\010\""
    "r\n-CMsgGCCStrike15_v2_GetEventFavorites_"
    "Response\022\022\n\nall_events\030\001 \001(\010\022\026\n\016json_fav"
    "orites\030\002 \001(\t\022\025\n\rjson_featured\030\003 \001(\t\"\325\001\n#"
    "CMsgGCCStrike15_v2_ClientPerfReport\022;\n\007e"
    "ntries\030\001 \003(\0132*.CMsgGCCStrike15_v2_Client"
    "PerfReport.Entry\032q\n\005Entry\022\023\n\013perfcounter"
    "\030\001 \001(\r\022\016\n\006length\030\002 \001(\r\022\021\n\treference\030\003 \001("
    "\014\022\016\n\006actual\030\004 \001(\014\022\020\n\010sourceid\030\005 \001(\r\022\016\n\006s"
    "tatus\030\006 \001(\r\"Q\n\014CVDiagnostic\022\n\n\002id\030\001 \001(\r\022"
    "\020\n\010extended\030\002 \001(\r\022\r\n\005value\030\003 \001(\004\022\024\n\014stri"
    "ng_value\030\004 \001(\t\"\360\003\n)CMsgGCCStrike15_v2_Cl"
    "ientReportValidation\022\023\n\013file_report\030\001 \001("
    "\t\022\024\n\014command_line\030\002 \001(\t\022\023\n\013total_files\030\003"
    " \001(\r\022\026\n\016internal_error\030\004 \001(\r\022\022\n\ntrust_ti"
    "me\030\005 \001(\r\022\025\n\rcount_pending\030\006 \001(\r\022\027\n\017count"
    "_completed\030\007 \001(\r\022\022\n\nprocess_id\030\010 \001(\r\022\021\n\t"
    "osversion\030\t \001(\005\022\033\n\023clientreportversion\030\n"
    " \001(\r\022\021\n\tstatus_id\030\013 \001(\r\022\023\n\013diagnostic1\030\014"
    " \001(\r\022\023\n\013diagnostic2\030\r \001(\004\022\023\n\013diagnostic3"
    "\030\016 \001(\004\022\030\n\020last_launch_data\030\017 \001(\t\022\024\n\014repo"
    "rt_count\030\020 \001(\r\022\023\n\013client_time\030\021 \001(\004\022\023\n\013d"
    "iagnostic4\030\022 \001(\004\022\023\n\013diagnostic5\030\023 \001(\004\022\"\n"
    "\013diagnostics\030\024 \003(\0132\r.CVDiagnostic\"\250\002\n,CM"
    "sgGCCStrike15_v2_GC2ClientRefuseSecureMo"
    "de\022\023\n\013file_report\030\001 \001(\t\022\033\n\023offer_insecur"
    "e_mode\030\002 \001(\010\022\031\n\021offer_secure_mode\030\003 \001(\010\022"
    "\030\n\020show_unsigned_ui\030\004 \001(\010\022\021\n\tkick_user\030\005"
    " \001(\010\022\027\n\017show_trusted_ui\030\006 \001(\010\022 \n\030show_wa"
    "rning_not_trusted\030\007 \001(\010\022\"\n\032show_warning_"
    "not_trusted_2\030\010 \001(\010\022\037\n\027files_prevented_t"
    "rusted\030\t \001(\t\"T\n-CMsgGCCStrike15_v2_GC2Cl"
    "ientRequestValidation\022\023\n\013full_report\030\001 \001"
    "(\010\022\016\n\006module\030\002 \001(\t\"\313\001\n&CMsgGCCStrike15_v"
    "2_GC2ClientInitSystem\022\014\n\004load\030\001 \001(\010\022\014\n\004n"
    "ame\030\002 \001(\t\022\022\n\noutputname\030\003 \001(\t\022\020\n\010key_dat"
    "a\030\004 \001(\014\022\020\n\010sha_hash\030\005 \001(\014\022\016\n\006cookie\030\006 \001("
    "\005\022\020\n\010manifest\030\007 \001(\t\022\026\n\016system_package\030\010 "
    "\001(\014\022\023\n\013load_system\030\t \001(\010\"\245\002\n/CMsgGCCStri"
    "ke15_v2_GC2ClientInitSystem_Response\022\017\n\007"
    "success\030\001 \001(\010\022\022\n\ndiagnostic\030\002 \001(\t\022\020\n\010sha"
    "_hash\030\003 \001(\014\022\020\n\010response\030\004 \001(\005\022\023\n\013error_c"
    "ode1\030\005 \001(\005\022\023\n\013error_code2\030\006 \001(\005\022\016\n\006handl"
    "e\030\007 \001(\003\022E\n\014einit_result\030\010 \001(\0162\022.EInitSys"
    "temResult:\033k_EInitSystemResult_Invalid\022\023"
    "\n\013aux_system1\030\t \001(\005\022\023\n\013aux_system2\030\n \001(\005"
    "\"P\n/CMsgGCCStrike15_v2_SetPlayerLeaderbo"
    "ardSafeName\022\035\n\025leaderboard_safe_name\030\001 \001"
    "(\t*\361(\n\nECsgoGCMsg\022\036\n\031k_EMsgGCCStrike15_v"
    "2_Base\020\214G\022*\n%k_EMsgGCCStrike15_v2_Matchm"
    "akingStart\020\215G\022)\n$k_EMsgGCCStrike15_v2_Ma"
    "tchmakingStop\020\216G\0226\n1k_EMsgGCCStrike15_v2"
    "_MatchmakingClient2ServerPing\020\217G\0224\n/k_EM"
    "sgGCCStrike15_v2_MatchmakingGC2ClientUpd"
    "ate\020\220G\022>\n9k_EMsgGCCStrike15_v2_Matchmaki"
    "ngServerReservationResponse\020\222G\0225\n0k_EMsg"
    "GCCStrike15_v2_MatchmakingGC2ClientReser"
    "ve\020\223G\0223\n.k_EMsgGCCStrike15_v2_Matchmakin"
    "gClient2GCHello\020\225G\0223\n.k_EMsgGCCStrike15_"
    "v2_MatchmakingGC2ClientHello\020\226G\0225\n0k_EMs"
    "gGCCStrike15_v2_MatchmakingGC2ClientAban"
    "don\020\230G\022:\n5k_EMsgGCCStrike15_v2_Matchmaki"
    "ngOperator2GCBlogUpdate\020\235G\022:\n5k_EMsgGCCS"
    "trike15_v2_ServerNotificationForUserPena"
    "lty\020\236G\022,\n\'k_EMsgGCCStrike15_v2_ClientRep"
    "ortPlayer\020\237G\022,\n\'k_EMsgGCCStrike15_v2_Cli"
    "entReportServer\020\240G\022-\n(k_EMsgGCCStrike15_"
    "v2_ClientCommendPlayer\020\241G\022.\n)k_EMsgGCCSt"
    "rike15_v2_ClientReportResponse\020\242G\0222\n-k_E"
    "MsgGCCStrike15_v2_ClientCommendPlayerQue"
    "ry\020\243G\022:\n5k_EMsgGCCStrike15_v2_ClientComm"
    "endPlayerQueryResponse\020\244G\022(\n#k_EMsgGCCSt"
    "rike15_v2_WatchInfoUsers\020\246G\0225\n0k_EMsgGCC"
    "Strike15_v2_ClientRequestPlayersProfile\020"
    "\247G\022(\n#k_EMsgGCCStrike15_v2_PlayersProfil"
    "e\020\250G\0223\n.k_EMsgGCCStrike15_v2_PlayerOverw"
    "atchCaseUpdate\020\253G\0227\n2k_EMsgGCCStrike15_v"
    "2_PlayerOverwatchCaseAssignment\020\254G\0223\n.k_"
    "EMsgGCCStrike15_v2_PlayerOverwatchCaseSt"
    "atus\020\255G\022*\n%k_EMsgGCCStrike15_v2_GC2Clien"
    "tTextMsg\020\256G\022*\n%k_EMsgGCCStrike15_v2_Clie"
    "nt2GCTextMsg\020\257G\0220\n+k_EMsgGCCStrike15_v2_"
    "MatchEndRunRewardDrops\020\260G\0229\n4k_EMsgGCCSt"
    "rike15_v2_MatchEndRewardDropsNotificatio"
    "n\020\261G\0228\n3k_EMsgGCCStrike15_v2_ClientReque"
    "stWatchInfoFriends2\020\262G\022#\n\036k_EMsgGCCStrik"
    "e15_v2_MatchList\020\263G\022:\n5k_EMsgGCCStrike15"
    "_v2_MatchListRequestCurrentLiveGames\020\264G\022"
    "9\n4k_EMsgGCCStrike15_v2_MatchListRequest"
    "RecentUserGames\020\265G\0224\n/k_EMsgGCCStrike15_"
    "v2_GC2ServerReservationUpdate\020\266G\0228\n3k_EM"
    "sgGCCStrike15_v2_ClientVarValueNotificat"
    "ionInfo\020\270G\0229\n4k_EMsgGCCStrike15_v2_Match"
    "ListRequestTournamentGames\020\272G\0226\n1k_EMsgG"
    "CCStrike15_v2_MatchListRequestFullGameIn"
    "fo\020\273G\0221\n,k_EMsgGCCStrike15_v2_GiftsLeade"
    "rboardRequest\020\274G\0222\n-k_EMsgGCCStrike15_v2"
    "_GiftsLeaderboardResponse\020\275G\0228\n3k_EMsgGC"
    "CStrike15_v2_ServerVarValueNotificationI"
    "nfo\020\276G\0220\n+k_EMsgGCCStrike15_v2_ClientSub"
    "mitSurveyVote\020\300G\0221\n,k_EMsgGCCStrike15_v2"
    "_Server2GCClientValidate\020\301G\0229\n4k_EMsgGCC"
    "Strike15_v2_MatchListRequestLiveGameForU"
    "ser\020\302G\022>\n9k_EMsgGCCStrike15_v2_Client2GC"
    "EconPreviewDataBlockRequest\020\304G\022\?\n:k_EMsg"
    "GCCStrike15_v2_Client2GCEconPreviewDataB"
    "lockResponse\020\305G\0220\n+k_EMsgGCCStrike15_v2_"
    "AccountPrivacySettings\020\306G\022+\n&k_EMsgGCCSt"
    "rike15_v2_SetMyActivityInfo\020\307G\022\?\n:k_EMsg"
    "GCCStrike15_v2_MatchListRequestTournamen"
    "tPredictions\020\310G\022>\n9k_EMsgGCCStrike15_v2_"
    "MatchListUploadTournamentPredictions\020\311G\022"
    "&\n!k_EMsgGCCStrike15_v2_DraftSummary\020\312G\022"
    "5\n0k_EMsgGCCStrike15_v2_ClientRequestJoi"
    "nFriendData\020\313G\0225\n0k_EMsgGCCStrike15_v2_C"
    "lientRequestJoinServerData\020\314G\0221\n,k_EMsgG"
    "CCStrike15_v2_ClientRequestNewMission\020\315G"
    "\0221\n,k_EMsgGCCStrike15_v2_GC2ClientTourna"
    "mentInfo\020\317G\022\"\n\035k_EMsgGC_GlobalGame_Subsc"
    "ribe\020\320G\022$\n\037k_EMsgGC_GlobalGame_Unsubscri"
    "be\020\321G\022\035\n\030k_EMsgGC_GlobalGame_Play\020\322G\022,\n\'"
    "k_EMsgGCCStrike15_v2_AcknowledgePenalty\020"
    "\323G\0226\n1k_EMsgGCCStrike15_v2_Client2GCRequ"
    "estPrestigeCoin\020\324G\022.\n)k_EMsgGCCStrike15_"
    "v2_GC2ClientGlobalStats\020\325G\022/\n*k_EMsgGCCS"
    "trike15_v2_Client2GCStreamUnlock\020\326G\0222\n-k"
    "_EMsgGCCStrike15_v2_FantasyRequestClient"
    "Data\020\327G\0221\n,k_EMsgGCCStrike15_v2_FantasyU"
    "pdateClientData\020\330G\0227\n2k_EMsgGCCStrike15_"
    "v2_GCToClientSteamdatagramTicket\020\331G\0221\n,k"
    "_EMsgGCCStrike15_v2_ClientToGCRequestTic"
    "ket\020\332G\0222\n-k_EMsgGCCStrike15_v2_ClientToG"
    "CRequestElevate\020\333G\022$\n\037k_EMsgGCCStrike15_"
    "v2_GlobalChat\020\334G\022.\n)k_EMsgGCCStrike15_v2"
    "_GlobalChat_Subscribe\020\335G\0220\n+k_EMsgGCCStr"
    "ike15_v2_GlobalChat_Unsubscribe\020\336G\022+\n&k_"
    "EMsgGCCStrike15_v2_ClientAuthKeyCode\020\337G\022"
    "(\n#k_EMsgGCCStrike15_v2_GotvSyncPacket\020\340"
    "G\022/\n*k_EMsgGCCStrike15_v2_ClientPlayerDe"
    "calSign\020\341G\022/\n*k_EMsgGCCStrike15_v2_Clien"
    "tLogonFatalError\020\343G\022)\n$k_EMsgGCCStrike15"
    "_v2_ClientPollState\020\344G\022(\n#k_EMsgGCCStrik"
    "e15_v2_Party_Register\020\345G\022*\n%k_EMsgGCCStr"
    "ike15_v2_Party_Unregister\020\346G\022&\n!k_EMsgGC"
    "CStrike15_v2_Party_Search\020\347G\022&\n!k_EMsgGC"
    "CStrike15_v2_Party_Invite\020\350G\0220\n+k_EMsgGC"
    "CStrike15_v2_Account_RequestCoPlays\020\351G\022,"
    "\n\'k_EMsgGCCStrike15_v2_ClientGCRankUpdat"
    "e\020\352G\022-\n(k_EMsgGCCStrike15_v2_ClientReque"
    "stOffers\020\353G\022.\n)k_EMsgGCCStrike15_v2_Clie"
    "ntAccountBalance\020\354G\022.\n)k_EMsgGCCStrike15"
    "_v2_ClientPartyJoinRelay\020\355G\022,\n\'k_EMsgGCC"
    "Strike15_v2_ClientPartyWarning\020\356G\022*\n%k_E"
    "MsgGCCStrike15_v2_SetEventFavorite\020\360G\0223\n"
    ".k_EMsgGCCStrike15_v2_GetEventFavorites_"
    "Request\020\361G\022*\n%k_EMsgGCCStrike15_v2_Clien"
    "tPerfReport\020\362G\0224\n/k_EMsgGCCStrike15_v2_G"
    "etEventFavorites_Response\020\363G\022/\n*k_EMsgGC"
    "CStrike15_v2_ClientRequestSouvenir\020\364G\0220\n"
    "+k_EMsgGCCStrike15_v2_ClientReportValida"
    "tion\020\365G\0223\n.k_EMsgGCCStrike15_v2_GC2Clien"
    "tRefuseSecureMode\020\366G\0224\n/k_EMsgGCCStrike1"
    "5_v2_GC2ClientRequestValidation\020\367G\0223\n.k_"
    "EMsgGCCStrike15_v2_ClientRedeemMissionRe"
    "ward\020\371G\022&\n!k_EMsgGCCStrike15_ClientDeepS"
    "tats\020\372G\0222\n-k_EMsgGCCStrike15_StartAgreem"
    "entSessionInGame\020\373G\022-\n(k_EMsgGCCStrike15"
    "_v2_GC2ClientInitSystem\020\374G\0226\n1k_EMsgGCCS"
    "trike15_v2_GC2ClientInitSystem_Response\020"
    "\375G\022\'\n\"k_EMsgGCCStrike15_v2_PrivateQueues"
    "\020\376G\0229\n4k_EMsgGCCStrike15_v2_MatchListTou"
    "rnamentOperatorMgmt\020\377G\022(\n#k_EMsgGCCStrik"
    "e15_v2_BetaEnrollment\020\201H\0226\n1k_EMsgGCCStr"
    "ike15_v2_SetPlayerLeaderboardSafeName\020\202H"
    "\0220\n+k_EMsgGCCStrike15_v2_ClientRedeemFre"
    "eReward\020\203H\022-\n(k_EMsgGCCStrike15_v2_Clien"
    "tNetworkConfig\020\204H\022/\n*k_EMsgGCCStrike15_v"
    "2_GC2ClientNotifyXPShop\020\205H\0222\n-k_EMsgGCCS"
    "trike15_v2_Client2GcAckXPShopTracks\020\206H*\230"
    "\001\n\022ECsgoSteamUserStat\022&\n\"k_ECsgoSteamUse"
    "rStat_XpEarnedGames\020\001\022-\n)k_ECsgoSteamUse"
    "rStat_MatchWinsCompetitive\020\002\022+\n\'k_ECsgoS"
    "teamUserStat_SurvivedDangerZone\020\003*\241\001\n\027EC"
    "lientReportingVersion\022(\n$k_EClientReport"
    "ingVersion_OldVersion\020\000\022)\n%k_EClientRepo"
    "rtingVersion_BetaVersion\020\001\0221\n-k_EClientR"
    "eportingVersion_SupportsTrustedMode\020\002*\276\002"
    "\n\021EInitSystemResult\022\037\n\033k_EInitSystemResu"
    "lt_Invalid\020\000\022\037\n\033k_EInitSystemResult_Succ"
    "ess\020\001\022\034\n\030k_EInitSystemResult_None\020\002\022 \n\034k"
    "_EInitSystemResult_NotFound\020\003\022 \n\034k_EInit"
    "SystemResult_Existing\020\004\022\"\n\036k_EInitSystem"
    "Result_FailedOpen\020\005\022 \n\034k_EInitSystemResu"
    "lt_Mismatch\020\006\022\"\n\036k_EInitSystemResult_Fai"
    "ledInit\020\007\022\033\n\027k_EInitSystemResult_Max\020\010"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_cstrike15_5fgcmessages_2eproto_deps[3] = {
        &::descriptor_table_engine_5fgcmessages_2eproto,
        &::descriptor_table_gcsdk_5fgcmessages_2eproto,
        &::descriptor_table_steammessages_2eproto,
};
static ::absl::once_flag descriptor_table_cstrike15_5fgcmessages_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cstrike15_5fgcmessages_2eproto = {
    false,
    false,
    32438,
    descriptor_table_protodef_cstrike15_5fgcmessages_2eproto,
    "cstrike15_gcmessages.proto",
    &descriptor_table_cstrike15_5fgcmessages_2eproto_once,
    descriptor_table_cstrike15_5fgcmessages_2eproto_deps,
    3,
    169,
    schemas,
    file_default_instances,
    TableStruct_cstrike15_5fgcmessages_2eproto::offsets,
    file_level_enum_descriptors_cstrike15_5fgcmessages_2eproto,
    file_level_service_descriptors_cstrike15_5fgcmessages_2eproto,
};
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ECsgoGCMsg_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cstrike15_5fgcmessages_2eproto);
  return file_level_enum_descriptors_cstrike15_5fgcmessages_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ECsgoGCMsg_internal_data_[] = {
    336780u, 128u, 4243583158u, 3757817535u, 3221094399u, 4161407u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ECsgoSteamUserStat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cstrike15_5fgcmessages_2eproto);
  return file_level_enum_descriptors_cstrike15_5fgcmessages_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ECsgoSteamUserStat_internal_data_[] = {
    196609u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EClientReportingVersion_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cstrike15_5fgcmessages_2eproto);
  return file_level_enum_descriptors_cstrike15_5fgcmessages_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t EClientReportingVersion_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EInitSystemResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cstrike15_5fgcmessages_2eproto);
  return file_level_enum_descriptors_cstrike15_5fgcmessages_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t EInitSystemResult_internal_data_[] = {
    589824u, 0u, };
// ===================================================================

class GameServerPing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GameServerPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_._has_bits_);
};

GameServerPing::GameServerPing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GameServerPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GameServerPing)
}
GameServerPing::GameServerPing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GameServerPing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GameServerPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GameServerPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GameServerPing::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ping_),
           0,
           offsetof(Impl_, instances_) -
               offsetof(Impl_, ping_) +
               sizeof(Impl_::instances_));
}
GameServerPing::~GameServerPing() {
  // @@protoc_insertion_point(destructor:GameServerPing)
  SharedDtor(*this);
}
inline void GameServerPing::SharedDtor(MessageLite& self) {
  GameServerPing& this_ = static_cast<GameServerPing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GameServerPing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GameServerPing(arena);
}
constexpr auto GameServerPing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GameServerPing),
                                            alignof(GameServerPing));
}
constexpr auto GameServerPing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GameServerPing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GameServerPing::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GameServerPing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GameServerPing::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GameServerPing>(), &GameServerPing::ByteSizeLong,
              &GameServerPing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_._cached_size_),
          false,
      },
      &GameServerPing::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        GameServerPing_class_data_ =
            GameServerPing::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GameServerPing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GameServerPing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GameServerPing_class_data_.tc_table);
  return GameServerPing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
GameServerPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967273,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GameServerPing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GameServerPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 instances = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameServerPing, _impl_.instances_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.instances_)}},
    // optional int32 ping = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameServerPing, _impl_.ping_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.ping_)}},
    // optional uint32 ip = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameServerPing, _impl_.ip_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.ip_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 ping = 2;
    {PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.ping_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 ip = 3;
    {PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.ip_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 instances = 5;
    {PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.instances_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GameServerPing::Clear() {
// @@protoc_insertion_point(message_clear_start:GameServerPing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.ping_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.instances_) -
        reinterpret_cast<char*>(&_impl_.ping_)) + sizeof(_impl_.instances_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GameServerPing::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GameServerPing& this_ = static_cast<const GameServerPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GameServerPing::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GameServerPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:GameServerPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 ping = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_ping(), target);
  }

  // optional uint32 ip = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_ip(), target);
  }

  // optional uint32 instances = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_instances(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameServerPing)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GameServerPing::ByteSizeLong(const MessageLite& base) {
  const GameServerPing& this_ = static_cast<const GameServerPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GameServerPing::ByteSizeLong() const {
  const GameServerPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:GameServerPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional int32 ping = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_ping());
    }
    // optional uint32 ip = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ip());
    }
    // optional uint32 instances = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_instances());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GameServerPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameServerPing*>(&to_msg);
  auto& from = static_cast<const GameServerPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GameServerPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.ping_ = from._impl_.ping_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.ip_ = from._impl_.ip_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.instances_ = from._impl_.instances_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameServerPing::CopyFrom(const GameServerPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameServerPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameServerPing::InternalSwap(GameServerPing* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.instances_)
      + sizeof(GameServerPing::_impl_.instances_)
      - PROTOBUF_FIELD_OFFSET(GameServerPing, _impl_.ping_)>(
          reinterpret_cast<char*>(&_impl_.ping_),
          reinterpret_cast<char*>(&other->_impl_.ping_));
}

::google::protobuf::Metadata GameServerPing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DataCenterPing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DataCenterPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_._has_bits_);
};

DataCenterPing::DataCenterPing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DataCenterPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DataCenterPing)
}
DataCenterPing::DataCenterPing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DataCenterPing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DataCenterPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE DataCenterPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DataCenterPing::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_center_id_),
           0,
           offsetof(Impl_, ping_) -
               offsetof(Impl_, data_center_id_) +
               sizeof(Impl_::ping_));
}
DataCenterPing::~DataCenterPing() {
  // @@protoc_insertion_point(destructor:DataCenterPing)
  SharedDtor(*this);
}
inline void DataCenterPing::SharedDtor(MessageLite& self) {
  DataCenterPing& this_ = static_cast<DataCenterPing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DataCenterPing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DataCenterPing(arena);
}
constexpr auto DataCenterPing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DataCenterPing),
                                            alignof(DataCenterPing));
}
constexpr auto DataCenterPing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DataCenterPing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DataCenterPing::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DataCenterPing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DataCenterPing::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DataCenterPing>(), &DataCenterPing::ByteSizeLong,
              &DataCenterPing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_._cached_size_),
          false,
      },
      &DataCenterPing::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        DataCenterPing_class_data_ =
            DataCenterPing::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL DataCenterPing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DataCenterPing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DataCenterPing_class_data_.tc_table);
  return DataCenterPing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
DataCenterPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DataCenterPing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DataCenterPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional sint32 ping = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_.ping_)}},
    // optional fixed32 data_center_id = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_.data_center_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed32 data_center_id = 1;
    {PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_.data_center_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional sint32 ping = 2;
    {PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_.ping_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void DataCenterPing::Clear() {
// @@protoc_insertion_point(message_clear_start:DataCenterPing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.data_center_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ping_) -
        reinterpret_cast<char*>(&_impl_.data_center_id_)) + sizeof(_impl_.ping_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DataCenterPing::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DataCenterPing& this_ = static_cast<const DataCenterPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DataCenterPing::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DataCenterPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:DataCenterPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional fixed32 data_center_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this_._internal_data_center_id(), target);
  }

  // optional sint32 ping = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        2, this_._internal_ping(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataCenterPing)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DataCenterPing::ByteSizeLong(const MessageLite& base) {
  const DataCenterPing& this_ = static_cast<const DataCenterPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DataCenterPing::ByteSizeLong() const {
  const DataCenterPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:DataCenterPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000001u & cached_has_bits) * 5;
   {
    // optional sint32 ping = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this_._internal_ping());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DataCenterPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataCenterPing*>(&to_msg);
  auto& from = static_cast<const DataCenterPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DataCenterPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.data_center_id_ = from._impl_.data_center_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.ping_ = from._impl_.ping_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataCenterPing::CopyFrom(const DataCenterPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataCenterPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DataCenterPing::InternalSwap(DataCenterPing* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_.ping_)
      + sizeof(DataCenterPing::_impl_.ping_)
      - PROTOBUF_FIELD_OFFSET(DataCenterPing, _impl_.data_center_id_)>(
          reinterpret_cast<char*>(&_impl_.data_center_id_),
          reinterpret_cast<char*>(&other->_impl_.data_center_id_));
}

::google::protobuf::Metadata DataCenterPing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DetailedSearchStatistic::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DetailedSearchStatistic>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_._has_bits_);
};

DetailedSearchStatistic::DetailedSearchStatistic(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DetailedSearchStatistic_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DetailedSearchStatistic)
}
DetailedSearchStatistic::DetailedSearchStatistic(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DetailedSearchStatistic& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DetailedSearchStatistic_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE DetailedSearchStatistic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DetailedSearchStatistic::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, game_type_),
           0,
           offsetof(Impl_, players_searching_) -
               offsetof(Impl_, game_type_) +
               sizeof(Impl_::players_searching_));
}
DetailedSearchStatistic::~DetailedSearchStatistic() {
  // @@protoc_insertion_point(destructor:DetailedSearchStatistic)
  SharedDtor(*this);
}
inline void DetailedSearchStatistic::SharedDtor(MessageLite& self) {
  DetailedSearchStatistic& this_ = static_cast<DetailedSearchStatistic&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DetailedSearchStatistic::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DetailedSearchStatistic(arena);
}
constexpr auto DetailedSearchStatistic::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DetailedSearchStatistic),
                                            alignof(DetailedSearchStatistic));
}
constexpr auto DetailedSearchStatistic::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DetailedSearchStatistic_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DetailedSearchStatistic::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DetailedSearchStatistic>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DetailedSearchStatistic::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DetailedSearchStatistic>(), &DetailedSearchStatistic::ByteSizeLong,
              &DetailedSearchStatistic::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_._cached_size_),
          false,
      },
      &DetailedSearchStatistic::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        DetailedSearchStatistic_class_data_ =
            DetailedSearchStatistic::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL DetailedSearchStatistic::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DetailedSearchStatistic_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DetailedSearchStatistic_class_data_.tc_table);
  return DetailedSearchStatistic_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
DetailedSearchStatistic::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DetailedSearchStatistic_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DetailedSearchStatistic>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 players_searching = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DetailedSearchStatistic, _impl_.players_searching_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.players_searching_)}},
    // optional uint32 game_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DetailedSearchStatistic, _impl_.game_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.game_type_)}},
    // optional uint32 search_time_avg = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DetailedSearchStatistic, _impl_.search_time_avg_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.search_time_avg_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 game_type = 1;
    {PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.game_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 search_time_avg = 2;
    {PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.search_time_avg_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 players_searching = 4;
    {PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.players_searching_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void DetailedSearchStatistic::Clear() {
// @@protoc_insertion_point(message_clear_start:DetailedSearchStatistic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.game_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.players_searching_) -
        reinterpret_cast<char*>(&_impl_.game_type_)) + sizeof(_impl_.players_searching_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DetailedSearchStatistic::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DetailedSearchStatistic& this_ = static_cast<const DetailedSearchStatistic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DetailedSearchStatistic::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DetailedSearchStatistic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:DetailedSearchStatistic)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 game_type = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_game_type(), target);
  }

  // optional uint32 search_time_avg = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_search_time_avg(), target);
  }

  // optional uint32 players_searching = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_players_searching(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DetailedSearchStatistic)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DetailedSearchStatistic::ByteSizeLong(const MessageLite& base) {
  const DetailedSearchStatistic& this_ = static_cast<const DetailedSearchStatistic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DetailedSearchStatistic::ByteSizeLong() const {
  const DetailedSearchStatistic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:DetailedSearchStatistic)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 game_type = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
    // optional uint32 search_time_avg = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_search_time_avg());
    }
    // optional uint32 players_searching = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_players_searching());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DetailedSearchStatistic::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DetailedSearchStatistic*>(&to_msg);
  auto& from = static_cast<const DetailedSearchStatistic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DetailedSearchStatistic)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.search_time_avg_ = from._impl_.search_time_avg_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.players_searching_ = from._impl_.players_searching_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DetailedSearchStatistic::CopyFrom(const DetailedSearchStatistic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DetailedSearchStatistic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DetailedSearchStatistic::InternalSwap(DetailedSearchStatistic* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.players_searching_)
      + sizeof(DetailedSearchStatistic::_impl_.players_searching_)
      - PROTOBUF_FIELD_OFFSET(DetailedSearchStatistic, _impl_.game_type_)>(
          reinterpret_cast<char*>(&_impl_.game_type_),
          reinterpret_cast<char*>(&other->_impl_.game_type_));
}

::google::protobuf::Metadata DetailedSearchStatistic::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TournamentPlayer::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TournamentPlayer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_._has_bits_);
};

TournamentPlayer::TournamentPlayer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentPlayer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TournamentPlayer)
}
PROTOBUF_NDEBUG_INLINE TournamentPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::TournamentPlayer& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        player_nick_(arena, from.player_nick_),
        player_name_(arena, from.player_name_),
        player_flag_(arena, from.player_flag_),
        player_location_(arena, from.player_location_),
        player_desc_(arena, from.player_desc_) {}

TournamentPlayer::TournamentPlayer(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TournamentPlayer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentPlayer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TournamentPlayer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, account_id_),
           offsetof(Impl_, player_dob_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::player_dob_));

  // @@protoc_insertion_point(copy_constructor:TournamentPlayer)
}
PROTOBUF_NDEBUG_INLINE TournamentPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        player_nick_(arena),
        player_name_(arena),
        player_flag_(arena),
        player_location_(arena),
        player_desc_(arena) {}

inline void TournamentPlayer::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           0,
           offsetof(Impl_, player_dob_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::player_dob_));
}
TournamentPlayer::~TournamentPlayer() {
  // @@protoc_insertion_point(destructor:TournamentPlayer)
  SharedDtor(*this);
}
inline void TournamentPlayer::SharedDtor(MessageLite& self) {
  TournamentPlayer& this_ = static_cast<TournamentPlayer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.player_nick_.Destroy();
  this_._impl_.player_name_.Destroy();
  this_._impl_.player_flag_.Destroy();
  this_._impl_.player_location_.Destroy();
  this_._impl_.player_desc_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TournamentPlayer::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TournamentPlayer(arena);
}
constexpr auto TournamentPlayer::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TournamentPlayer),
                                            alignof(TournamentPlayer));
}
constexpr auto TournamentPlayer::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TournamentPlayer_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TournamentPlayer::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TournamentPlayer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TournamentPlayer::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TournamentPlayer>(), &TournamentPlayer::ByteSizeLong,
              &TournamentPlayer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_._cached_size_),
          false,
      },
      &TournamentPlayer::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        TournamentPlayer_class_data_ =
            TournamentPlayer::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL TournamentPlayer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TournamentPlayer_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TournamentPlayer_class_data_.tc_table);
  return TournamentPlayer_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 84, 2>
TournamentPlayer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TournamentPlayer_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TournamentPlayer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentPlayer, _impl_.account_id_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.account_id_)}},
    // optional string player_nick = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_nick_)}},
    // optional string player_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_name_)}},
    // optional uint32 player_dob = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentPlayer, _impl_.player_dob_), 6>(),
     {32, 6, 0, PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_dob_)}},
    // optional string player_flag = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_flag_)}},
    // optional string player_location = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_location_)}},
    // optional string player_desc = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 4, 0, PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_desc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.account_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string player_nick = 2;
    {PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_nick_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string player_name = 3;
    {PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 player_dob = 4;
    {PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_dob_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string player_flag = 5;
    {PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_flag_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string player_location = 6;
    {PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_location_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string player_desc = 7;
    {PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_desc_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\13\13\0\13\17\13"
    "TournamentPlayer"
    "player_nick"
    "player_name"
    "player_flag"
    "player_location"
    "player_desc"
  }},
};
PROTOBUF_NOINLINE void TournamentPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:TournamentPlayer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.player_nick_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.player_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.player_flag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.player_location_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.player_desc_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000060u) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.player_dob_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.player_dob_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TournamentPlayer::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TournamentPlayer& this_ = static_cast<const TournamentPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TournamentPlayer::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TournamentPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:TournamentPlayer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional string player_nick = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_player_nick();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentPlayer.player_nick");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string player_name = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_player_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentPlayer.player_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 player_dob = 4;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_player_dob(), target);
  }

  // optional string player_flag = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_player_flag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentPlayer.player_flag");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string player_location = 6;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const std::string& _s = this_._internal_player_location();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentPlayer.player_location");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string player_desc = 7;
  if ((cached_has_bits & 0x00000010u) != 0) {
    const std::string& _s = this_._internal_player_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentPlayer.player_desc");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TournamentPlayer)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TournamentPlayer::ByteSizeLong(const MessageLite& base) {
  const TournamentPlayer& this_ = static_cast<const TournamentPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TournamentPlayer::ByteSizeLong() const {
  const TournamentPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:TournamentPlayer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // optional string player_nick = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_player_nick());
    }
    // optional string player_name = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_player_name());
    }
    // optional string player_flag = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_player_flag());
    }
    // optional string player_location = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_player_location());
    }
    // optional string player_desc = 7;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_player_desc());
    }
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 player_dob = 4;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_player_dob());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TournamentPlayer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TournamentPlayer*>(&to_msg);
  auto& from = static_cast<const TournamentPlayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TournamentPlayer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_player_nick(from._internal_player_nick());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_player_name(from._internal_player_name());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_player_flag(from._internal_player_flag());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_player_location(from._internal_player_location());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_internal_set_player_desc(from._internal_player_desc());
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.player_dob_ = from._impl_.player_dob_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TournamentPlayer::CopyFrom(const TournamentPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TournamentPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TournamentPlayer::InternalSwap(TournamentPlayer* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_nick_, &other->_impl_.player_nick_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_name_, &other->_impl_.player_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_flag_, &other->_impl_.player_flag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_location_, &other->_impl_.player_location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_desc_, &other->_impl_.player_desc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.player_dob_)
      + sizeof(TournamentPlayer::_impl_.player_dob_)
      - PROTOBUF_FIELD_OFFSET(TournamentPlayer, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::google::protobuf::Metadata TournamentPlayer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TournamentTeam::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TournamentTeam>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_._has_bits_);
};

TournamentTeam::TournamentTeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentTeam_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TournamentTeam)
}
PROTOBUF_NDEBUG_INLINE TournamentTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::TournamentTeam& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        players_{visibility, arena, from.players_},
        team_tag_(arena, from.team_tag_),
        team_flag_(arena, from.team_flag_),
        team_name_(arena, from.team_name_) {}

TournamentTeam::TournamentTeam(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TournamentTeam& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentTeam_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TournamentTeam* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.team_id_ = from._impl_.team_id_;

  // @@protoc_insertion_point(copy_constructor:TournamentTeam)
}
PROTOBUF_NDEBUG_INLINE TournamentTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        players_{visibility, arena},
        team_tag_(arena),
        team_flag_(arena),
        team_name_(arena) {}

inline void TournamentTeam::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.team_id_ = {};
}
TournamentTeam::~TournamentTeam() {
  // @@protoc_insertion_point(destructor:TournamentTeam)
  SharedDtor(*this);
}
inline void TournamentTeam::SharedDtor(MessageLite& self) {
  TournamentTeam& this_ = static_cast<TournamentTeam&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.team_tag_.Destroy();
  this_._impl_.team_flag_.Destroy();
  this_._impl_.team_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TournamentTeam::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TournamentTeam(arena);
}
constexpr auto TournamentTeam::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.players_) +
          decltype(TournamentTeam::_impl_.players_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TournamentTeam), alignof(TournamentTeam), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TournamentTeam::PlacementNew_,
                                 sizeof(TournamentTeam),
                                 alignof(TournamentTeam));
  }
}
constexpr auto TournamentTeam::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TournamentTeam_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TournamentTeam::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TournamentTeam>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TournamentTeam::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TournamentTeam>(), &TournamentTeam::ByteSizeLong,
              &TournamentTeam::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_._cached_size_),
          false,
      },
      &TournamentTeam::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        TournamentTeam_class_data_ =
            TournamentTeam::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL TournamentTeam::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TournamentTeam_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TournamentTeam_class_data_.tc_table);
  return TournamentTeam_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 49, 2>
TournamentTeam::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TournamentTeam_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TournamentTeam>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 team_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentTeam, _impl_.team_id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_id_)}},
    // optional string team_tag = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_tag_)}},
    // optional string team_flag = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_flag_)}},
    // optional string team_name = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_name_)}},
    // repeated .TournamentPlayer players = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.players_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 team_id = 1;
    {PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string team_tag = 2;
    {PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string team_flag = 3;
    {PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_flag_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string team_name = 4;
    {PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.team_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .TournamentPlayer players = 5;
    {PROTOBUF_FIELD_OFFSET(TournamentTeam, _impl_.players_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::TournamentPlayer>()},
  }},
  {{
    "\16\0\10\11\11\0\0\0"
    "TournamentTeam"
    "team_tag"
    "team_flag"
    "team_name"
  }},
};
PROTOBUF_NOINLINE void TournamentTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:TournamentTeam)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.team_tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.team_flag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.team_name_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.team_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TournamentTeam::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TournamentTeam& this_ = static_cast<const TournamentTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TournamentTeam::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TournamentTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:TournamentTeam)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 team_id = 1;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_team_id(), target);
  }

  // optional string team_tag = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_team_tag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentTeam.team_tag");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string team_flag = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_team_flag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentTeam.team_flag");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string team_name = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_team_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentTeam.team_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated .TournamentPlayer players = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_players_size());
       i < n; i++) {
    const auto& repfield = this_._internal_players().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TournamentTeam)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TournamentTeam::ByteSizeLong(const MessageLite& base) {
  const TournamentTeam& this_ = static_cast<const TournamentTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TournamentTeam::ByteSizeLong() const {
  const TournamentTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:TournamentTeam)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .TournamentPlayer players = 5;
    {
      total_size += 1UL * this_._internal_players_size();
      for (const auto& msg : this_._internal_players()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional string team_tag = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_team_tag());
    }
    // optional string team_flag = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_team_flag());
    }
    // optional string team_name = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_team_name());
    }
    // optional int32 team_id = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TournamentTeam::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TournamentTeam*>(&to_msg);
  auto& from = static_cast<const TournamentTeam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TournamentTeam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_team_tag(from._internal_team_tag());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_team_flag(from._internal_team_flag());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_team_name(from._internal_team_name());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.team_id_ = from._impl_.team_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TournamentTeam::CopyFrom(const TournamentTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TournamentTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TournamentTeam::InternalSwap(TournamentTeam* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.team_tag_, &other->_impl_.team_tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.team_flag_, &other->_impl_.team_flag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.team_name_, &other->_impl_.team_name_, arena);
  swap(_impl_.team_id_, other->_impl_.team_id_);
}

::google::protobuf::Metadata TournamentTeam::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TournamentEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TournamentEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_._has_bits_);
};

TournamentEvent::TournamentEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TournamentEvent)
}
PROTOBUF_NDEBUG_INLINE TournamentEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::TournamentEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_tag_(arena, from.event_tag_),
        event_name_(arena, from.event_name_),
        event_stage_name_(arena, from.event_stage_name_) {}

TournamentEvent::TournamentEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TournamentEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TournamentEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, event_id_),
           offsetof(Impl_, active_section_id_) -
               offsetof(Impl_, event_id_) +
               sizeof(Impl_::active_section_id_));

  // @@protoc_insertion_point(copy_constructor:TournamentEvent)
}
PROTOBUF_NDEBUG_INLINE TournamentEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        event_tag_(arena),
        event_name_(arena),
        event_stage_name_(arena) {}

inline void TournamentEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_id_),
           0,
           offsetof(Impl_, active_section_id_) -
               offsetof(Impl_, event_id_) +
               sizeof(Impl_::active_section_id_));
}
TournamentEvent::~TournamentEvent() {
  // @@protoc_insertion_point(destructor:TournamentEvent)
  SharedDtor(*this);
}
inline void TournamentEvent::SharedDtor(MessageLite& self) {
  TournamentEvent& this_ = static_cast<TournamentEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_tag_.Destroy();
  this_._impl_.event_name_.Destroy();
  this_._impl_.event_stage_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TournamentEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TournamentEvent(arena);
}
constexpr auto TournamentEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TournamentEvent),
                                            alignof(TournamentEvent));
}
constexpr auto TournamentEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TournamentEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TournamentEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TournamentEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TournamentEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TournamentEvent>(), &TournamentEvent::ByteSizeLong,
              &TournamentEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_._cached_size_),
          false,
      },
      &TournamentEvent::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        TournamentEvent_class_data_ =
            TournamentEvent::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL TournamentEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TournamentEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TournamentEvent_class_data_.tc_table);
  return TournamentEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 67, 2>
TournamentEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TournamentEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TournamentEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 event_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentEvent, _impl_.event_id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_id_)}},
    // optional string event_tag = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_tag_)}},
    // optional string event_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_name_)}},
    // optional uint32 event_time_start = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentEvent, _impl_.event_time_start_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_time_start_)}},
    // optional uint32 event_time_end = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentEvent, _impl_.event_time_end_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_time_end_)}},
    // optional int32 event_public = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentEvent, _impl_.event_public_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_public_)}},
    // optional int32 event_stage_id = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentEvent, _impl_.event_stage_id_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_stage_id_)}},
    // optional string event_stage_name = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_stage_name_)}},
    // optional uint32 active_section_id = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentEvent, _impl_.active_section_id_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.active_section_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 event_id = 1;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string event_tag = 2;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string event_name = 3;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 event_time_start = 4;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_time_start_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 event_time_end = 5;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_time_end_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 event_public = 6;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_public_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 event_stage_id = 7;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_stage_id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string event_stage_name = 8;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_stage_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 active_section_id = 9;
    {PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.active_section_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\17\0\11\12\0\0\0\0\20\0\0\0\0\0\0\0"
    "TournamentEvent"
    "event_tag"
    "event_name"
    "event_stage_name"
  }},
};
PROTOBUF_NOINLINE void TournamentEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:TournamentEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.event_tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.event_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.event_stage_name_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f8u) != 0) {
    ::memset(&_impl_.event_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.event_stage_id_) -
        reinterpret_cast<char*>(&_impl_.event_id_)) + sizeof(_impl_.event_stage_id_));
  }
  _impl_.active_section_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TournamentEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TournamentEvent& this_ = static_cast<const TournamentEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TournamentEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TournamentEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:TournamentEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 event_id = 1;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_event_id(), target);
  }

  // optional string event_tag = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_event_tag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentEvent.event_tag");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string event_name = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_event_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentEvent.event_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 event_time_start = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_event_time_start(), target);
  }

  // optional uint32 event_time_end = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_event_time_end(), target);
  }

  // optional int32 event_public = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_event_public(), target);
  }

  // optional int32 event_stage_id = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
            stream, this_._internal_event_stage_id(), target);
  }

  // optional string event_stage_name = 8;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_event_stage_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "TournamentEvent.event_stage_name");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional uint32 active_section_id = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_active_section_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TournamentEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TournamentEvent::ByteSizeLong(const MessageLite& base) {
  const TournamentEvent& this_ = static_cast<const TournamentEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TournamentEvent::ByteSizeLong() const {
  const TournamentEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:TournamentEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string event_tag = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_event_tag());
    }
    // optional string event_name = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_event_name());
    }
    // optional string event_stage_name = 8;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_event_stage_name());
    }
    // optional int32 event_id = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_id());
    }
    // optional uint32 event_time_start = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_event_time_start());
    }
    // optional uint32 event_time_end = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_event_time_end());
    }
    // optional int32 event_public = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_public());
    }
    // optional int32 event_stage_id = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_stage_id());
    }
  }
   {
    // optional uint32 active_section_id = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_active_section_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TournamentEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TournamentEvent*>(&to_msg);
  auto& from = static_cast<const TournamentEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TournamentEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_event_tag(from._internal_event_tag());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_event_name(from._internal_event_name());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_event_stage_name(from._internal_event_stage_name());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.event_id_ = from._impl_.event_id_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.event_time_start_ = from._impl_.event_time_start_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.event_time_end_ = from._impl_.event_time_end_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.event_public_ = from._impl_.event_public_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.event_stage_id_ = from._impl_.event_stage_id_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.active_section_id_ = from._impl_.active_section_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TournamentEvent::CopyFrom(const TournamentEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TournamentEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TournamentEvent::InternalSwap(TournamentEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_tag_, &other->_impl_.event_tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_name_, &other->_impl_.event_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_stage_name_, &other->_impl_.event_stage_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.active_section_id_)
      + sizeof(TournamentEvent::_impl_.active_section_id_)
      - PROTOBUF_FIELD_OFFSET(TournamentEvent, _impl_.event_id_)>(
          reinterpret_cast<char*>(&_impl_.event_id_),
          reinterpret_cast<char*>(&other->_impl_.event_id_));
}

::google::protobuf::Metadata TournamentEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GlobalStatistics::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GlobalStatistics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_._has_bits_);
};

GlobalStatistics::GlobalStatistics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GlobalStatistics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GlobalStatistics)
}
PROTOBUF_NDEBUG_INLINE GlobalStatistics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::GlobalStatistics& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        search_statistics_{visibility, arena, from.search_statistics_},
        main_post_url_(arena, from.main_post_url_) {}

GlobalStatistics::GlobalStatistics(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GlobalStatistics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GlobalStatistics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GlobalStatistics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, players_online_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, players_online_),
           offsetof(Impl_, required_appid_version2_) -
               offsetof(Impl_, players_online_) +
               sizeof(Impl_::required_appid_version2_));

  // @@protoc_insertion_point(copy_constructor:GlobalStatistics)
}
PROTOBUF_NDEBUG_INLINE GlobalStatistics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        search_statistics_{visibility, arena},
        main_post_url_(arena) {}

inline void GlobalStatistics::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, players_online_),
           0,
           offsetof(Impl_, required_appid_version2_) -
               offsetof(Impl_, players_online_) +
               sizeof(Impl_::required_appid_version2_));
}
GlobalStatistics::~GlobalStatistics() {
  // @@protoc_insertion_point(destructor:GlobalStatistics)
  SharedDtor(*this);
}
inline void GlobalStatistics::SharedDtor(MessageLite& self) {
  GlobalStatistics& this_ = static_cast<GlobalStatistics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.main_post_url_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GlobalStatistics::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GlobalStatistics(arena);
}
constexpr auto GlobalStatistics::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.search_statistics_) +
          decltype(GlobalStatistics::_impl_.search_statistics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GlobalStatistics), alignof(GlobalStatistics), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GlobalStatistics::PlacementNew_,
                                 sizeof(GlobalStatistics),
                                 alignof(GlobalStatistics));
  }
}
constexpr auto GlobalStatistics::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GlobalStatistics_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GlobalStatistics::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GlobalStatistics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GlobalStatistics::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GlobalStatistics>(), &GlobalStatistics::ByteSizeLong,
              &GlobalStatistics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_._cached_size_),
          false,
      },
      &GlobalStatistics::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        GlobalStatistics_class_data_ =
            GlobalStatistics::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GlobalStatistics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GlobalStatistics_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GlobalStatistics_class_data_.tc_table);
  return GlobalStatistics_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 1, 54, 2>
GlobalStatistics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GlobalStatistics_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GlobalStatistics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 required_appid_version2 = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 14, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.required_appid_version2_)}},
    // optional uint32 players_online = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.players_online_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.players_online_)}},
    // optional uint32 servers_online = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.servers_online_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.servers_online_)}},
    // optional uint32 players_searching = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.players_searching_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.players_searching_)}},
    // optional uint32 servers_available = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.servers_available_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.servers_available_)}},
    // optional uint32 ongoing_matches = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.ongoing_matches_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.ongoing_matches_)}},
    // optional uint32 search_time_avg = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.search_time_avg_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.search_time_avg_)}},
    // repeated .DetailedSearchStatistic search_statistics = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.search_statistics_)}},
    // optional string main_post_url = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.main_post_url_)}},
    // optional uint32 required_appid_version = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.required_appid_version_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.required_appid_version_)}},
    // optional uint32 pricesheet_version = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.pricesheet_version_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.pricesheet_version_)}},
    // optional uint32 twitch_streams_version = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.twitch_streams_version_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.twitch_streams_version_)}},
    // optional uint32 active_tournament_eventid = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.active_tournament_eventid_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.active_tournament_eventid_)}},
    // optional uint32 active_survey_id = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.active_survey_id_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.active_survey_id_)}},
    // optional uint32 rtime32_cur = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.rtime32_cur_), 12>(),
     {112, 12, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.rtime32_cur_)}},
    // optional uint32 rtime32_event_start = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GlobalStatistics, _impl_.rtime32_event_start_), 13>(),
     {120, 13, 0, PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.rtime32_event_start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 players_online = 1;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.players_online_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 servers_online = 2;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.servers_online_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 players_searching = 3;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.players_searching_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 servers_available = 4;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.servers_available_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ongoing_matches = 5;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.ongoing_matches_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 search_time_avg = 6;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.search_time_avg_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .DetailedSearchStatistic search_statistics = 7;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.search_statistics_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string main_post_url = 8;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.main_post_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 required_appid_version = 9;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.required_appid_version_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 pricesheet_version = 10;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.pricesheet_version_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 twitch_streams_version = 11;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.twitch_streams_version_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 active_tournament_eventid = 12;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.active_tournament_eventid_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 active_survey_id = 13;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.active_survey_id_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rtime32_cur = 14;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.rtime32_cur_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rtime32_event_start = 15;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.rtime32_event_start_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 required_appid_version2 = 16;
    {PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.required_appid_version2_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::DetailedSearchStatistic>()},
  }},
  {{
    "\20\0\0\0\0\0\0\0\15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "GlobalStatistics"
    "main_post_url"
  }},
};
PROTOBUF_NOINLINE void GlobalStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:GlobalStatistics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.search_statistics_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.main_post_url_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.players_online_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.required_appid_version_) -
        reinterpret_cast<char*>(&_impl_.players_online_)) + sizeof(_impl_.required_appid_version_));
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    ::memset(&_impl_.pricesheet_version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.required_appid_version2_) -
        reinterpret_cast<char*>(&_impl_.pricesheet_version_)) + sizeof(_impl_.required_appid_version2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GlobalStatistics::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GlobalStatistics& this_ = static_cast<const GlobalStatistics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GlobalStatistics::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GlobalStatistics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:GlobalStatistics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 players_online = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_players_online(), target);
  }

  // optional uint32 servers_online = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_servers_online(), target);
  }

  // optional uint32 players_searching = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_players_searching(), target);
  }

  // optional uint32 servers_available = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_servers_available(), target);
  }

  // optional uint32 ongoing_matches = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_ongoing_matches(), target);
  }

  // optional uint32 search_time_avg = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_search_time_avg(), target);
  }

  // repeated .DetailedSearchStatistic search_statistics = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_search_statistics_size());
       i < n; i++) {
    const auto& repfield = this_._internal_search_statistics().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string main_post_url = 8;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_main_post_url();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "GlobalStatistics.main_post_url");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional uint32 required_appid_version = 9;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_required_appid_version(), target);
  }

  // optional uint32 pricesheet_version = 10;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_pricesheet_version(), target);
  }

  // optional uint32 twitch_streams_version = 11;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_twitch_streams_version(), target);
  }

  // optional uint32 active_tournament_eventid = 12;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_active_tournament_eventid(), target);
  }

  // optional uint32 active_survey_id = 13;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this_._internal_active_survey_id(), target);
  }

  // optional uint32 rtime32_cur = 14;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_rtime32_cur(), target);
  }

  // optional uint32 rtime32_event_start = 15;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this_._internal_rtime32_event_start(), target);
  }

  // optional uint32 required_appid_version2 = 16;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_required_appid_version2(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GlobalStatistics)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GlobalStatistics::ByteSizeLong(const MessageLite& base) {
  const GlobalStatistics& this_ = static_cast<const GlobalStatistics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GlobalStatistics::ByteSizeLong() const {
  const GlobalStatistics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:GlobalStatistics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .DetailedSearchStatistic search_statistics = 7;
    {
      total_size += 1UL * this_._internal_search_statistics_size();
      for (const auto& msg : this_._internal_search_statistics()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string main_post_url = 8;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_main_post_url());
    }
    // optional uint32 players_online = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_players_online());
    }
    // optional uint32 servers_online = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_servers_online());
    }
    // optional uint32 players_searching = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_players_searching());
    }
    // optional uint32 servers_available = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_servers_available());
    }
    // optional uint32 ongoing_matches = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ongoing_matches());
    }
    // optional uint32 search_time_avg = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_search_time_avg());
    }
    // optional uint32 required_appid_version = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_required_appid_version());
    }
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    // optional uint32 pricesheet_version = 10;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_pricesheet_version());
    }
    // optional uint32 twitch_streams_version = 11;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_twitch_streams_version());
    }
    // optional uint32 active_tournament_eventid = 12;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_active_tournament_eventid());
    }
    // optional uint32 active_survey_id = 13;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_active_survey_id());
    }
    // optional uint32 rtime32_cur = 14;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rtime32_cur());
    }
    // optional uint32 rtime32_event_start = 15;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rtime32_event_start());
    }
    // optional uint32 required_appid_version2 = 16;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_required_appid_version2());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GlobalStatistics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GlobalStatistics*>(&to_msg);
  auto& from = static_cast<const GlobalStatistics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GlobalStatistics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_search_statistics()->MergeFrom(
      from._internal_search_statistics());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_main_post_url(from._internal_main_post_url());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.players_online_ = from._impl_.players_online_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.servers_online_ = from._impl_.servers_online_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.players_searching_ = from._impl_.players_searching_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.servers_available_ = from._impl_.servers_available_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.ongoing_matches_ = from._impl_.ongoing_matches_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.search_time_avg_ = from._impl_.search_time_avg_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.required_appid_version_ = from._impl_.required_appid_version_;
    }
  }
  if ((cached_has_bits & 0x00007f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.pricesheet_version_ = from._impl_.pricesheet_version_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.twitch_streams_version_ = from._impl_.twitch_streams_version_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.active_tournament_eventid_ = from._impl_.active_tournament_eventid_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.active_survey_id_ = from._impl_.active_survey_id_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.rtime32_cur_ = from._impl_.rtime32_cur_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.rtime32_event_start_ = from._impl_.rtime32_event_start_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.required_appid_version2_ = from._impl_.required_appid_version2_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GlobalStatistics::CopyFrom(const GlobalStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GlobalStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GlobalStatistics::InternalSwap(GlobalStatistics* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.search_statistics_.InternalSwap(&other->_impl_.search_statistics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.main_post_url_, &other->_impl_.main_post_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.required_appid_version2_)
      + sizeof(GlobalStatistics::_impl_.required_appid_version2_)
      - PROTOBUF_FIELD_OFFSET(GlobalStatistics, _impl_.players_online_)>(
          reinterpret_cast<char*>(&_impl_.players_online_),
          reinterpret_cast<char*>(&other->_impl_.players_online_));
}

::google::protobuf::Metadata GlobalStatistics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationalStatisticDescription::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationalStatisticDescription>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationalStatisticDescription, _impl_._has_bits_);
};

OperationalStatisticDescription::OperationalStatisticDescription(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalStatisticDescription_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:OperationalStatisticDescription)
}
PROTOBUF_NDEBUG_INLINE OperationalStatisticDescription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::OperationalStatisticDescription& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

OperationalStatisticDescription::OperationalStatisticDescription(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OperationalStatisticDescription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalStatisticDescription_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationalStatisticDescription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.idkey_ = from._impl_.idkey_;

  // @@protoc_insertion_point(copy_constructor:OperationalStatisticDescription)
}
PROTOBUF_NDEBUG_INLINE OperationalStatisticDescription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void OperationalStatisticDescription::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.idkey_ = {};
}
OperationalStatisticDescription::~OperationalStatisticDescription() {
  // @@protoc_insertion_point(destructor:OperationalStatisticDescription)
  SharedDtor(*this);
}
inline void OperationalStatisticDescription::SharedDtor(MessageLite& self) {
  OperationalStatisticDescription& this_ = static_cast<OperationalStatisticDescription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OperationalStatisticDescription::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OperationalStatisticDescription(arena);
}
constexpr auto OperationalStatisticDescription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OperationalStatisticDescription),
                                            alignof(OperationalStatisticDescription));
}
constexpr auto OperationalStatisticDescription::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OperationalStatisticDescription_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OperationalStatisticDescription::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OperationalStatisticDescription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OperationalStatisticDescription::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OperationalStatisticDescription>(), &OperationalStatisticDescription::ByteSizeLong,
              &OperationalStatisticDescription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OperationalStatisticDescription, _impl_._cached_size_),
          false,
      },
      &OperationalStatisticDescription::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        OperationalStatisticDescription_class_data_ =
            OperationalStatisticDescription::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL OperationalStatisticDescription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OperationalStatisticDescription_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OperationalStatisticDescription_class_data_.tc_table);
  return OperationalStatisticDescription_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2>
OperationalStatisticDescription::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationalStatisticDescription, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OperationalStatisticDescription_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::OperationalStatisticDescription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 idkey = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperationalStatisticDescription, _impl_.idkey_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(OperationalStatisticDescription, _impl_.idkey_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OperationalStatisticDescription, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(OperationalStatisticDescription, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 idkey = 2;
    {PROTOBUF_FIELD_OFFSET(OperationalStatisticDescription, _impl_.idkey_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "OperationalStatisticDescription"
    "name"
  }},
};
PROTOBUF_NOINLINE void OperationalStatisticDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:OperationalStatisticDescription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.idkey_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OperationalStatisticDescription::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OperationalStatisticDescription& this_ = static_cast<const OperationalStatisticDescription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OperationalStatisticDescription::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OperationalStatisticDescription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:OperationalStatisticDescription)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "OperationalStatisticDescription.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 idkey = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_idkey(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperationalStatisticDescription)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OperationalStatisticDescription::ByteSizeLong(const MessageLite& base) {
  const OperationalStatisticDescription& this_ = static_cast<const OperationalStatisticDescription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OperationalStatisticDescription::ByteSizeLong() const {
  const OperationalStatisticDescription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:OperationalStatisticDescription)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional uint32 idkey = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_idkey());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OperationalStatisticDescription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationalStatisticDescription*>(&to_msg);
  auto& from = static_cast<const OperationalStatisticDescription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:OperationalStatisticDescription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.idkey_ = from._impl_.idkey_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationalStatisticDescription::CopyFrom(const OperationalStatisticDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OperationalStatisticDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationalStatisticDescription::InternalSwap(OperationalStatisticDescription* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.idkey_, other->_impl_.idkey_);
}

::google::protobuf::Metadata OperationalStatisticDescription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationalStatisticElement::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationalStatisticElement>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_._has_bits_);
};

OperationalStatisticElement::OperationalStatisticElement(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalStatisticElement_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:OperationalStatisticElement)
}
PROTOBUF_NDEBUG_INLINE OperationalStatisticElement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::OperationalStatisticElement& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        values_{visibility, arena, from.values_} {}

OperationalStatisticElement::OperationalStatisticElement(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OperationalStatisticElement& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalStatisticElement_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationalStatisticElement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.idkey_ = from._impl_.idkey_;

  // @@protoc_insertion_point(copy_constructor:OperationalStatisticElement)
}
PROTOBUF_NDEBUG_INLINE OperationalStatisticElement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        values_{visibility, arena} {}

inline void OperationalStatisticElement::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.idkey_ = {};
}
OperationalStatisticElement::~OperationalStatisticElement() {
  // @@protoc_insertion_point(destructor:OperationalStatisticElement)
  SharedDtor(*this);
}
inline void OperationalStatisticElement::SharedDtor(MessageLite& self) {
  OperationalStatisticElement& this_ = static_cast<OperationalStatisticElement&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OperationalStatisticElement::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OperationalStatisticElement(arena);
}
constexpr auto OperationalStatisticElement::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_.values_) +
          decltype(OperationalStatisticElement::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OperationalStatisticElement), alignof(OperationalStatisticElement), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OperationalStatisticElement::PlacementNew_,
                                 sizeof(OperationalStatisticElement),
                                 alignof(OperationalStatisticElement));
  }
}
constexpr auto OperationalStatisticElement::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OperationalStatisticElement_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OperationalStatisticElement::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OperationalStatisticElement>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OperationalStatisticElement::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OperationalStatisticElement>(), &OperationalStatisticElement::ByteSizeLong,
              &OperationalStatisticElement::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_._cached_size_),
          false,
      },
      &OperationalStatisticElement::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        OperationalStatisticElement_class_data_ =
            OperationalStatisticElement::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL OperationalStatisticElement::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OperationalStatisticElement_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OperationalStatisticElement_class_data_.tc_table);
  return OperationalStatisticElement_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
OperationalStatisticElement::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OperationalStatisticElement_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::OperationalStatisticElement>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 values = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_.values_)}},
    // optional uint32 idkey = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperationalStatisticElement, _impl_.idkey_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_.idkey_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 idkey = 1;
    {PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_.idkey_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated int32 values = 2;
    {PROTOBUF_FIELD_OFFSET(OperationalStatisticElement, _impl_.values_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void OperationalStatisticElement::Clear() {
// @@protoc_insertion_point(message_clear_start:OperationalStatisticElement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _impl_.idkey_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OperationalStatisticElement::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OperationalStatisticElement& this_ = static_cast<const OperationalStatisticElement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OperationalStatisticElement::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OperationalStatisticElement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:OperationalStatisticElement)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 idkey = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_idkey(), target);
  }

  // repeated int32 values = 2;
  for (int i = 0, n = this_._internal_values_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this_._internal_values().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperationalStatisticElement)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OperationalStatisticElement::ByteSizeLong(const MessageLite& base) {
  const OperationalStatisticElement& this_ = static_cast<const OperationalStatisticElement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OperationalStatisticElement::ByteSizeLong() const {
  const OperationalStatisticElement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:OperationalStatisticElement)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 values = 2;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_values());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_values_size());
      total_size += tag_size + data_size;
    }
  }
   {
    // optional uint32 idkey = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_idkey());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OperationalStatisticElement::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationalStatisticElement*>(&to_msg);
  auto& from = static_cast<const OperationalStatisticElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:OperationalStatisticElement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.idkey_ = from._impl_.idkey_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationalStatisticElement::CopyFrom(const OperationalStatisticElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OperationalStatisticElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationalStatisticElement::InternalSwap(OperationalStatisticElement* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  swap(_impl_.idkey_, other->_impl_.idkey_);
}

::google::protobuf::Metadata OperationalStatisticElement::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationalStatisticsPacket::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationalStatisticsPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_._has_bits_);
};

OperationalStatisticsPacket::OperationalStatisticsPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalStatisticsPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:OperationalStatisticsPacket)
}
PROTOBUF_NDEBUG_INLINE OperationalStatisticsPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::OperationalStatisticsPacket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        values_{visibility, arena, from.values_} {}

OperationalStatisticsPacket::OperationalStatisticsPacket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OperationalStatisticsPacket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalStatisticsPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationalStatisticsPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, packetid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, packetid_),
           offsetof(Impl_, mstimestamp_) -
               offsetof(Impl_, packetid_) +
               sizeof(Impl_::mstimestamp_));

  // @@protoc_insertion_point(copy_constructor:OperationalStatisticsPacket)
}
PROTOBUF_NDEBUG_INLINE OperationalStatisticsPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        values_{visibility, arena} {}

inline void OperationalStatisticsPacket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, packetid_),
           0,
           offsetof(Impl_, mstimestamp_) -
               offsetof(Impl_, packetid_) +
               sizeof(Impl_::mstimestamp_));
}
OperationalStatisticsPacket::~OperationalStatisticsPacket() {
  // @@protoc_insertion_point(destructor:OperationalStatisticsPacket)
  SharedDtor(*this);
}
inline void OperationalStatisticsPacket::SharedDtor(MessageLite& self) {
  OperationalStatisticsPacket& this_ = static_cast<OperationalStatisticsPacket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OperationalStatisticsPacket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OperationalStatisticsPacket(arena);
}
constexpr auto OperationalStatisticsPacket::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.values_) +
          decltype(OperationalStatisticsPacket::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OperationalStatisticsPacket), alignof(OperationalStatisticsPacket), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OperationalStatisticsPacket::PlacementNew_,
                                 sizeof(OperationalStatisticsPacket),
                                 alignof(OperationalStatisticsPacket));
  }
}
constexpr auto OperationalStatisticsPacket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OperationalStatisticsPacket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OperationalStatisticsPacket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OperationalStatisticsPacket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OperationalStatisticsPacket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OperationalStatisticsPacket>(), &OperationalStatisticsPacket::ByteSizeLong,
              &OperationalStatisticsPacket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_._cached_size_),
          false,
      },
      &OperationalStatisticsPacket::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        OperationalStatisticsPacket_class_data_ =
            OperationalStatisticsPacket::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL OperationalStatisticsPacket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OperationalStatisticsPacket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OperationalStatisticsPacket_class_data_.tc_table);
  return OperationalStatisticsPacket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
OperationalStatisticsPacket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OperationalStatisticsPacket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::OperationalStatisticsPacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 packetid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperationalStatisticsPacket, _impl_.packetid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.packetid_)}},
    // optional int32 mstimestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperationalStatisticsPacket, _impl_.mstimestamp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.mstimestamp_)}},
    // repeated .OperationalStatisticElement values = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 packetid = 1;
    {PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.packetid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 mstimestamp = 2;
    {PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.mstimestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .OperationalStatisticElement values = 3;
    {PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.values_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::OperationalStatisticElement>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void OperationalStatisticsPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:OperationalStatisticsPacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.packetid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mstimestamp_) -
        reinterpret_cast<char*>(&_impl_.packetid_)) + sizeof(_impl_.mstimestamp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OperationalStatisticsPacket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OperationalStatisticsPacket& this_ = static_cast<const OperationalStatisticsPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OperationalStatisticsPacket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OperationalStatisticsPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:OperationalStatisticsPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 packetid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_packetid(), target);
  }

  // optional int32 mstimestamp = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_mstimestamp(), target);
  }

  // repeated .OperationalStatisticElement values = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_values_size());
       i < n; i++) {
    const auto& repfield = this_._internal_values().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperationalStatisticsPacket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OperationalStatisticsPacket::ByteSizeLong(const MessageLite& base) {
  const OperationalStatisticsPacket& this_ = static_cast<const OperationalStatisticsPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OperationalStatisticsPacket::ByteSizeLong() const {
  const OperationalStatisticsPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:OperationalStatisticsPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .OperationalStatisticElement values = 3;
    {
      total_size += 1UL * this_._internal_values_size();
      for (const auto& msg : this_._internal_values()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional int32 packetid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_packetid());
    }
    // optional int32 mstimestamp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_mstimestamp());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OperationalStatisticsPacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationalStatisticsPacket*>(&to_msg);
  auto& from = static_cast<const OperationalStatisticsPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:OperationalStatisticsPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(
      from._internal_values());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.packetid_ = from._impl_.packetid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.mstimestamp_ = from._impl_.mstimestamp_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationalStatisticsPacket::CopyFrom(const OperationalStatisticsPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OperationalStatisticsPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationalStatisticsPacket::InternalSwap(OperationalStatisticsPacket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.mstimestamp_)
      + sizeof(OperationalStatisticsPacket::_impl_.mstimestamp_)
      - PROTOBUF_FIELD_OFFSET(OperationalStatisticsPacket, _impl_.packetid_)>(
          reinterpret_cast<char*>(&_impl_.packetid_),
          reinterpret_cast<char*>(&other->_impl_.packetid_));
}

::google::protobuf::Metadata OperationalStatisticsPacket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationalVarValue::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationalVarValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_._has_bits_);
};

OperationalVarValue::OperationalVarValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalVarValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:OperationalVarValue)
}
PROTOBUF_NDEBUG_INLINE OperationalVarValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::OperationalVarValue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        svalue_(arena, from.svalue_) {}

OperationalVarValue::OperationalVarValue(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OperationalVarValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationalVarValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationalVarValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ivalue_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ivalue_),
           offsetof(Impl_, fvalue_) -
               offsetof(Impl_, ivalue_) +
               sizeof(Impl_::fvalue_));

  // @@protoc_insertion_point(copy_constructor:OperationalVarValue)
}
PROTOBUF_NDEBUG_INLINE OperationalVarValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        svalue_(arena) {}

inline void OperationalVarValue::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ivalue_),
           0,
           offsetof(Impl_, fvalue_) -
               offsetof(Impl_, ivalue_) +
               sizeof(Impl_::fvalue_));
}
OperationalVarValue::~OperationalVarValue() {
  // @@protoc_insertion_point(destructor:OperationalVarValue)
  SharedDtor(*this);
}
inline void OperationalVarValue::SharedDtor(MessageLite& self) {
  OperationalVarValue& this_ = static_cast<OperationalVarValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.svalue_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OperationalVarValue::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OperationalVarValue(arena);
}
constexpr auto OperationalVarValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OperationalVarValue),
                                            alignof(OperationalVarValue));
}
constexpr auto OperationalVarValue::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OperationalVarValue_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OperationalVarValue::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OperationalVarValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OperationalVarValue::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OperationalVarValue>(), &OperationalVarValue::ByteSizeLong,
              &OperationalVarValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_._cached_size_),
          false,
      },
      &OperationalVarValue::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        OperationalVarValue_class_data_ =
            OperationalVarValue::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL OperationalVarValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OperationalVarValue_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OperationalVarValue_class_data_.tc_table);
  return OperationalVarValue_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 32, 2>
OperationalVarValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OperationalVarValue_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::OperationalVarValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes svalue = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.svalue_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.name_)}},
    // optional int32 ivalue = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperationalVarValue, _impl_.ivalue_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.ivalue_)}},
    // optional float fvalue = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.fvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 ivalue = 2;
    {PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.ivalue_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float fvalue = 3;
    {PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.fvalue_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bytes svalue = 4;
    {PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.svalue_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\4\0\0\0\0\0\0"
    "OperationalVarValue"
    "name"
  }},
};
PROTOBUF_NOINLINE void OperationalVarValue::Clear() {
// @@protoc_insertion_point(message_clear_start:OperationalVarValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.svalue_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.ivalue_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fvalue_) -
        reinterpret_cast<char*>(&_impl_.ivalue_)) + sizeof(_impl_.fvalue_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OperationalVarValue::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OperationalVarValue& this_ = static_cast<const OperationalVarValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OperationalVarValue::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OperationalVarValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:OperationalVarValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "OperationalVarValue.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 ivalue = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_ivalue(), target);
  }

  // optional float fvalue = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_fvalue(), target);
  }

  // optional bytes svalue = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_svalue();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperationalVarValue)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OperationalVarValue::ByteSizeLong(const MessageLite& base) {
  const OperationalVarValue& this_ = static_cast<const OperationalVarValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OperationalVarValue::ByteSizeLong() const {
  const OperationalVarValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:OperationalVarValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional bytes svalue = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_svalue());
    }
    // optional int32 ivalue = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_ivalue());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OperationalVarValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationalVarValue*>(&to_msg);
  auto& from = static_cast<const OperationalVarValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:OperationalVarValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_svalue(from._internal_svalue());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.ivalue_ = from._impl_.ivalue_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.fvalue_ = from._impl_.fvalue_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationalVarValue::CopyFrom(const OperationalVarValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OperationalVarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationalVarValue::InternalSwap(OperationalVarValue* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.svalue_, &other->_impl_.svalue_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.fvalue_)
      + sizeof(OperationalVarValue::_impl_.fvalue_)
      - PROTOBUF_FIELD_OFFSET(OperationalVarValue, _impl_.ivalue_)>(
          reinterpret_cast<char*>(&_impl_.ivalue_),
          reinterpret_cast<char*>(&other->_impl_.ivalue_));
}

::google::protobuf::Metadata OperationalVarValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerRankingInfo_PerMapRank::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerRankingInfo_PerMapRank>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_._has_bits_);
};

PlayerRankingInfo_PerMapRank::PlayerRankingInfo_PerMapRank(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerRankingInfo_PerMapRank_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerRankingInfo.PerMapRank)
}
PlayerRankingInfo_PerMapRank::PlayerRankingInfo_PerMapRank(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerRankingInfo_PerMapRank& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerRankingInfo_PerMapRank_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PlayerRankingInfo_PerMapRank::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PlayerRankingInfo_PerMapRank::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, map_id_),
           0,
           offsetof(Impl_, wins_) -
               offsetof(Impl_, map_id_) +
               sizeof(Impl_::wins_));
}
PlayerRankingInfo_PerMapRank::~PlayerRankingInfo_PerMapRank() {
  // @@protoc_insertion_point(destructor:PlayerRankingInfo.PerMapRank)
  SharedDtor(*this);
}
inline void PlayerRankingInfo_PerMapRank::SharedDtor(MessageLite& self) {
  PlayerRankingInfo_PerMapRank& this_ = static_cast<PlayerRankingInfo_PerMapRank&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlayerRankingInfo_PerMapRank::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlayerRankingInfo_PerMapRank(arena);
}
constexpr auto PlayerRankingInfo_PerMapRank::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerRankingInfo_PerMapRank),
                                            alignof(PlayerRankingInfo_PerMapRank));
}
constexpr auto PlayerRankingInfo_PerMapRank::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlayerRankingInfo_PerMapRank_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlayerRankingInfo_PerMapRank::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlayerRankingInfo_PerMapRank>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlayerRankingInfo_PerMapRank::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlayerRankingInfo_PerMapRank>(), &PlayerRankingInfo_PerMapRank::ByteSizeLong,
              &PlayerRankingInfo_PerMapRank::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_._cached_size_),
          false,
      },
      &PlayerRankingInfo_PerMapRank::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PlayerRankingInfo_PerMapRank_class_data_ =
            PlayerRankingInfo_PerMapRank::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PlayerRankingInfo_PerMapRank::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlayerRankingInfo_PerMapRank_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlayerRankingInfo_PerMapRank_class_data_.tc_table);
  return PlayerRankingInfo_PerMapRank_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
PlayerRankingInfo_PerMapRank::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlayerRankingInfo_PerMapRank_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerRankingInfo_PerMapRank>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 map_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo_PerMapRank, _impl_.map_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.map_id_)}},
    // optional uint32 rank_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo_PerMapRank, _impl_.rank_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.rank_id_)}},
    // optional uint32 wins = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo_PerMapRank, _impl_.wins_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.wins_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 map_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.map_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rank_id = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.rank_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 wins = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.wins_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PlayerRankingInfo_PerMapRank::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerRankingInfo.PerMapRank)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.map_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.wins_) -
        reinterpret_cast<char*>(&_impl_.map_id_)) + sizeof(_impl_.wins_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlayerRankingInfo_PerMapRank::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlayerRankingInfo_PerMapRank& this_ = static_cast<const PlayerRankingInfo_PerMapRank&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlayerRankingInfo_PerMapRank::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlayerRankingInfo_PerMapRank& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:PlayerRankingInfo.PerMapRank)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 map_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_map_id(), target);
  }

  // optional uint32 rank_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_rank_id(), target);
  }

  // optional uint32 wins = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_wins(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerRankingInfo.PerMapRank)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlayerRankingInfo_PerMapRank::ByteSizeLong(const MessageLite& base) {
  const PlayerRankingInfo_PerMapRank& this_ = static_cast<const PlayerRankingInfo_PerMapRank&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlayerRankingInfo_PerMapRank::ByteSizeLong() const {
  const PlayerRankingInfo_PerMapRank& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:PlayerRankingInfo.PerMapRank)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 map_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_map_id());
    }
    // optional uint32 rank_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rank_id());
    }
    // optional uint32 wins = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_wins());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlayerRankingInfo_PerMapRank::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerRankingInfo_PerMapRank*>(&to_msg);
  auto& from = static_cast<const PlayerRankingInfo_PerMapRank&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerRankingInfo.PerMapRank)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.map_id_ = from._impl_.map_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.rank_id_ = from._impl_.rank_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.wins_ = from._impl_.wins_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerRankingInfo_PerMapRank::CopyFrom(const PlayerRankingInfo_PerMapRank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerRankingInfo.PerMapRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerRankingInfo_PerMapRank::InternalSwap(PlayerRankingInfo_PerMapRank* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.wins_)
      + sizeof(PlayerRankingInfo_PerMapRank::_impl_.wins_)
      - PROTOBUF_FIELD_OFFSET(PlayerRankingInfo_PerMapRank, _impl_.map_id_)>(
          reinterpret_cast<char*>(&_impl_.map_id_),
          reinterpret_cast<char*>(&other->_impl_.map_id_));
}

::google::protobuf::Metadata PlayerRankingInfo_PerMapRank::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerRankingInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerRankingInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_._has_bits_);
};

PlayerRankingInfo::PlayerRankingInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerRankingInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerRankingInfo)
}
PROTOBUF_NDEBUG_INLINE PlayerRankingInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::PlayerRankingInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        per_map_rank_{visibility, arena, from.per_map_rank_},
        leaderboard_name_(arena, from.leaderboard_name_) {}

PlayerRankingInfo::PlayerRankingInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PlayerRankingInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerRankingInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerRankingInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, account_id_),
           offsetof(Impl_, leaderboard_name_status_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::leaderboard_name_status_));

  // @@protoc_insertion_point(copy_constructor:PlayerRankingInfo)
}
PROTOBUF_NDEBUG_INLINE PlayerRankingInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        per_map_rank_{visibility, arena},
        leaderboard_name_(arena) {}

inline void PlayerRankingInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           0,
           offsetof(Impl_, leaderboard_name_status_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::leaderboard_name_status_));
}
PlayerRankingInfo::~PlayerRankingInfo() {
  // @@protoc_insertion_point(destructor:PlayerRankingInfo)
  SharedDtor(*this);
}
inline void PlayerRankingInfo::SharedDtor(MessageLite& self) {
  PlayerRankingInfo& this_ = static_cast<PlayerRankingInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.leaderboard_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlayerRankingInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlayerRankingInfo(arena);
}
constexpr auto PlayerRankingInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.per_map_rank_) +
          decltype(PlayerRankingInfo::_impl_.per_map_rank_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PlayerRankingInfo), alignof(PlayerRankingInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PlayerRankingInfo::PlacementNew_,
                                 sizeof(PlayerRankingInfo),
                                 alignof(PlayerRankingInfo));
  }
}
constexpr auto PlayerRankingInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlayerRankingInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlayerRankingInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlayerRankingInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlayerRankingInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlayerRankingInfo>(), &PlayerRankingInfo::ByteSizeLong,
              &PlayerRankingInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_._cached_size_),
          false,
      },
      &PlayerRankingInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PlayerRankingInfo_class_data_ =
            PlayerRankingInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PlayerRankingInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlayerRankingInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlayerRankingInfo_class_data_.tc_table);
  return PlayerRankingInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 50, 2>
PlayerRankingInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950928,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PlayerRankingInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerRankingInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.account_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.account_id_)}},
    // optional uint32 rank_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.rank_id_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_id_)}},
    // optional uint32 wins = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.wins_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.wins_)}},
    // optional float rank_change = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 4, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_change_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 rank_type_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.rank_type_id_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_type_id_)}},
    // optional uint32 tv_control = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.tv_control_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.tv_control_)}},
    // optional uint64 rank_window_stats = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerRankingInfo, _impl_.rank_window_stats_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_window_stats_)}},
    // optional string leaderboard_name = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.leaderboard_name_)}},
    // optional uint32 rank_if_win = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.rank_if_win_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_if_win_)}},
    // optional uint32 rank_if_lose = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.rank_if_lose_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_if_lose_)}},
    // optional uint32 rank_if_tie = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.rank_if_tie_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_if_tie_)}},
    // repeated .PlayerRankingInfo.PerMapRank per_map_rank = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.per_map_rank_)}},
    // optional uint32 leaderboard_name_status = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerRankingInfo, _impl_.leaderboard_name_status_), 11>(),
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.leaderboard_name_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rank_id = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 wins = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.wins_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float rank_change = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_change_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 rank_type_id = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_type_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_control = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.tv_control_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 rank_window_stats = 8;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_window_stats_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string leaderboard_name = 9;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.leaderboard_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 rank_if_win = 10;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_if_win_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rank_if_lose = 11;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_if_lose_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rank_if_tie = 12;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.rank_if_tie_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .PlayerRankingInfo.PerMapRank per_map_rank = 13;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.per_map_rank_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 leaderboard_name_status = 14;
    {PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.leaderboard_name_status_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerRankingInfo_PerMapRank>()},
  }},
  {{
    "\21\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0"
    "PlayerRankingInfo"
    "leaderboard_name"
  }},
};
PROTOBUF_NOINLINE void PlayerRankingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerRankingInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.per_map_rank_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.leaderboard_name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rank_window_stats_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.rank_window_stats_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.rank_if_win_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.leaderboard_name_status_) -
        reinterpret_cast<char*>(&_impl_.rank_if_win_)) + sizeof(_impl_.leaderboard_name_status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlayerRankingInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlayerRankingInfo& this_ = static_cast<const PlayerRankingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlayerRankingInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlayerRankingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:PlayerRankingInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional uint32 rank_id = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_rank_id(), target);
  }

  // optional uint32 wins = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_wins(), target);
  }

  // optional float rank_change = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this_._internal_rank_change(), target);
  }

  // optional uint32 rank_type_id = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_rank_type_id(), target);
  }

  // optional uint32 tv_control = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_tv_control(), target);
  }

  // optional uint64 rank_window_stats = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this_._internal_rank_window_stats(), target);
  }

  // optional string leaderboard_name = 9;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_leaderboard_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "PlayerRankingInfo.leaderboard_name");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional uint32 rank_if_win = 10;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_rank_if_win(), target);
  }

  // optional uint32 rank_if_lose = 11;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_rank_if_lose(), target);
  }

  // optional uint32 rank_if_tie = 12;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_rank_if_tie(), target);
  }

  // repeated .PlayerRankingInfo.PerMapRank per_map_rank = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_per_map_rank_size());
       i < n; i++) {
    const auto& repfield = this_._internal_per_map_rank().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 leaderboard_name_status = 14;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_leaderboard_name_status(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerRankingInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlayerRankingInfo::ByteSizeLong(const MessageLite& base) {
  const PlayerRankingInfo& this_ = static_cast<const PlayerRankingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlayerRankingInfo::ByteSizeLong() const {
  const PlayerRankingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:PlayerRankingInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .PlayerRankingInfo.PerMapRank per_map_rank = 13;
    {
      total_size += 1UL * this_._internal_per_map_rank_size();
      for (const auto& msg : this_._internal_per_map_rank()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000010u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x000000efu) != 0) {
    // optional string leaderboard_name = 9;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_leaderboard_name());
    }
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 rank_id = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rank_id());
    }
    // optional uint32 wins = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_wins());
    }
    // optional uint32 rank_type_id = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rank_type_id());
    }
    // optional uint32 tv_control = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_control());
    }
    // optional uint64 rank_window_stats = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_rank_window_stats());
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    // optional uint32 rank_if_win = 10;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rank_if_win());
    }
    // optional uint32 rank_if_lose = 11;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rank_if_lose());
    }
    // optional uint32 rank_if_tie = 12;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rank_if_tie());
    }
    // optional uint32 leaderboard_name_status = 14;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_leaderboard_name_status());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlayerRankingInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerRankingInfo*>(&to_msg);
  auto& from = static_cast<const PlayerRankingInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerRankingInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_per_map_rank()->MergeFrom(
      from._internal_per_map_rank());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_leaderboard_name(from._internal_leaderboard_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.rank_id_ = from._impl_.rank_id_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.wins_ = from._impl_.wins_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.rank_change_ = from._impl_.rank_change_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.rank_type_id_ = from._impl_.rank_type_id_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.tv_control_ = from._impl_.tv_control_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.rank_window_stats_ = from._impl_.rank_window_stats_;
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.rank_if_win_ = from._impl_.rank_if_win_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.rank_if_lose_ = from._impl_.rank_if_lose_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.rank_if_tie_ = from._impl_.rank_if_tie_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.leaderboard_name_status_ = from._impl_.leaderboard_name_status_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerRankingInfo::CopyFrom(const PlayerRankingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerRankingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerRankingInfo::InternalSwap(PlayerRankingInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.per_map_rank_.InternalSwap(&other->_impl_.per_map_rank_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leaderboard_name_, &other->_impl_.leaderboard_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.leaderboard_name_status_)
      + sizeof(PlayerRankingInfo::_impl_.leaderboard_name_status_)
      - PROTOBUF_FIELD_OFFSET(PlayerRankingInfo, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::google::protobuf::Metadata PlayerRankingInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerCommendationInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerCommendationInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_._has_bits_);
};

PlayerCommendationInfo::PlayerCommendationInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerCommendationInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerCommendationInfo)
}
PlayerCommendationInfo::PlayerCommendationInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerCommendationInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerCommendationInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PlayerCommendationInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PlayerCommendationInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cmd_friendly_),
           0,
           offsetof(Impl_, cmd_leader_) -
               offsetof(Impl_, cmd_friendly_) +
               sizeof(Impl_::cmd_leader_));
}
PlayerCommendationInfo::~PlayerCommendationInfo() {
  // @@protoc_insertion_point(destructor:PlayerCommendationInfo)
  SharedDtor(*this);
}
inline void PlayerCommendationInfo::SharedDtor(MessageLite& self) {
  PlayerCommendationInfo& this_ = static_cast<PlayerCommendationInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlayerCommendationInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlayerCommendationInfo(arena);
}
constexpr auto PlayerCommendationInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerCommendationInfo),
                                            alignof(PlayerCommendationInfo));
}
constexpr auto PlayerCommendationInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlayerCommendationInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlayerCommendationInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlayerCommendationInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlayerCommendationInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlayerCommendationInfo>(), &PlayerCommendationInfo::ByteSizeLong,
              &PlayerCommendationInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_._cached_size_),
          false,
      },
      &PlayerCommendationInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PlayerCommendationInfo_class_data_ =
            PlayerCommendationInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PlayerCommendationInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlayerCommendationInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlayerCommendationInfo_class_data_.tc_table);
  return PlayerCommendationInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
PlayerCommendationInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlayerCommendationInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerCommendationInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 cmd_leader = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerCommendationInfo, _impl_.cmd_leader_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_leader_)}},
    // optional uint32 cmd_friendly = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerCommendationInfo, _impl_.cmd_friendly_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_friendly_)}},
    // optional uint32 cmd_teaching = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerCommendationInfo, _impl_.cmd_teaching_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_teaching_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 cmd_friendly = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_friendly_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 cmd_teaching = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_teaching_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 cmd_leader = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_leader_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PlayerCommendationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerCommendationInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.cmd_friendly_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cmd_leader_) -
        reinterpret_cast<char*>(&_impl_.cmd_friendly_)) + sizeof(_impl_.cmd_leader_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlayerCommendationInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlayerCommendationInfo& this_ = static_cast<const PlayerCommendationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlayerCommendationInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlayerCommendationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:PlayerCommendationInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 cmd_friendly = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_cmd_friendly(), target);
  }

  // optional uint32 cmd_teaching = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_cmd_teaching(), target);
  }

  // optional uint32 cmd_leader = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_cmd_leader(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerCommendationInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlayerCommendationInfo::ByteSizeLong(const MessageLite& base) {
  const PlayerCommendationInfo& this_ = static_cast<const PlayerCommendationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlayerCommendationInfo::ByteSizeLong() const {
  const PlayerCommendationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:PlayerCommendationInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 cmd_friendly = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_cmd_friendly());
    }
    // optional uint32 cmd_teaching = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_cmd_teaching());
    }
    // optional uint32 cmd_leader = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_cmd_leader());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlayerCommendationInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerCommendationInfo*>(&to_msg);
  auto& from = static_cast<const PlayerCommendationInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerCommendationInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.cmd_friendly_ = from._impl_.cmd_friendly_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.cmd_teaching_ = from._impl_.cmd_teaching_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.cmd_leader_ = from._impl_.cmd_leader_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerCommendationInfo::CopyFrom(const PlayerCommendationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerCommendationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerCommendationInfo::InternalSwap(PlayerCommendationInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_leader_)
      + sizeof(PlayerCommendationInfo::_impl_.cmd_leader_)
      - PROTOBUF_FIELD_OFFSET(PlayerCommendationInfo, _impl_.cmd_friendly_)>(
          reinterpret_cast<char*>(&_impl_.cmd_friendly_),
          reinterpret_cast<char*>(&other->_impl_.cmd_friendly_));
}

::google::protobuf::Metadata PlayerCommendationInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerMedalsInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerMedalsInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_._has_bits_);
};

PlayerMedalsInfo::PlayerMedalsInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerMedalsInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerMedalsInfo)
}
PROTOBUF_NDEBUG_INLINE PlayerMedalsInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::PlayerMedalsInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        display_items_defidx_{visibility, arena, from.display_items_defidx_} {}

PlayerMedalsInfo::PlayerMedalsInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PlayerMedalsInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerMedalsInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerMedalsInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.featured_display_item_defidx_ = from._impl_.featured_display_item_defidx_;

  // @@protoc_insertion_point(copy_constructor:PlayerMedalsInfo)
}
PROTOBUF_NDEBUG_INLINE PlayerMedalsInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        display_items_defidx_{visibility, arena} {}

inline void PlayerMedalsInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.featured_display_item_defidx_ = {};
}
PlayerMedalsInfo::~PlayerMedalsInfo() {
  // @@protoc_insertion_point(destructor:PlayerMedalsInfo)
  SharedDtor(*this);
}
inline void PlayerMedalsInfo::SharedDtor(MessageLite& self) {
  PlayerMedalsInfo& this_ = static_cast<PlayerMedalsInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlayerMedalsInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlayerMedalsInfo(arena);
}
constexpr auto PlayerMedalsInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_.display_items_defidx_) +
          decltype(PlayerMedalsInfo::_impl_.display_items_defidx_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PlayerMedalsInfo), alignof(PlayerMedalsInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PlayerMedalsInfo::PlacementNew_,
                                 sizeof(PlayerMedalsInfo),
                                 alignof(PlayerMedalsInfo));
  }
}
constexpr auto PlayerMedalsInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlayerMedalsInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlayerMedalsInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlayerMedalsInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlayerMedalsInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlayerMedalsInfo>(), &PlayerMedalsInfo::ByteSizeLong,
              &PlayerMedalsInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_._cached_size_),
          false,
      },
      &PlayerMedalsInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PlayerMedalsInfo_class_data_ =
            PlayerMedalsInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PlayerMedalsInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlayerMedalsInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlayerMedalsInfo_class_data_.tc_table);
  return PlayerMedalsInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
PlayerMedalsInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967103,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlayerMedalsInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerMedalsInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 featured_display_item_defidx = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerMedalsInfo, _impl_.featured_display_item_defidx_), 0>(),
     {64, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_.featured_display_item_defidx_)}},
    // repeated uint32 display_items_defidx = 7;
    {::_pbi::TcParser::FastV32R1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_.display_items_defidx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 display_items_defidx = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_.display_items_defidx_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint32 featured_display_item_defidx = 8;
    {PROTOBUF_FIELD_OFFSET(PlayerMedalsInfo, _impl_.featured_display_item_defidx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PlayerMedalsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerMedalsInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.display_items_defidx_.Clear();
  _impl_.featured_display_item_defidx_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlayerMedalsInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlayerMedalsInfo& this_ = static_cast<const PlayerMedalsInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlayerMedalsInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlayerMedalsInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:PlayerMedalsInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 display_items_defidx = 7;
  for (int i = 0, n = this_._internal_display_items_defidx_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_display_items_defidx().Get(i), target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 featured_display_item_defidx = 8;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_featured_display_item_defidx(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerMedalsInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlayerMedalsInfo::ByteSizeLong(const MessageLite& base) {
  const PlayerMedalsInfo& this_ = static_cast<const PlayerMedalsInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlayerMedalsInfo::ByteSizeLong() const {
  const PlayerMedalsInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:PlayerMedalsInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 display_items_defidx = 7;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_display_items_defidx());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_display_items_defidx_size());
      total_size += tag_size + data_size;
    }
  }
   {
    // optional uint32 featured_display_item_defidx = 8;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_featured_display_item_defidx());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlayerMedalsInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerMedalsInfo*>(&to_msg);
  auto& from = static_cast<const PlayerMedalsInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerMedalsInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_display_items_defidx()->MergeFrom(from._internal_display_items_defidx());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.featured_display_item_defidx_ = from._impl_.featured_display_item_defidx_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerMedalsInfo::CopyFrom(const PlayerMedalsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerMedalsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerMedalsInfo::InternalSwap(PlayerMedalsInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.display_items_defidx_.InternalSwap(&other->_impl_.display_items_defidx_);
  swap(_impl_.featured_display_item_defidx_, other->_impl_.featured_display_item_defidx_);
}

::google::protobuf::Metadata PlayerMedalsInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccountActivity::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AccountActivity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_._has_bits_);
};

AccountActivity::AccountActivity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AccountActivity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AccountActivity)
}
AccountActivity::AccountActivity(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AccountActivity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AccountActivity_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE AccountActivity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AccountActivity::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, activity_),
           0,
           offsetof(Impl_, map_) -
               offsetof(Impl_, activity_) +
               sizeof(Impl_::map_));
}
AccountActivity::~AccountActivity() {
  // @@protoc_insertion_point(destructor:AccountActivity)
  SharedDtor(*this);
}
inline void AccountActivity::SharedDtor(MessageLite& self) {
  AccountActivity& this_ = static_cast<AccountActivity&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AccountActivity::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AccountActivity(arena);
}
constexpr auto AccountActivity::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AccountActivity),
                                            alignof(AccountActivity));
}
constexpr auto AccountActivity::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AccountActivity_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AccountActivity::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AccountActivity>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AccountActivity::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AccountActivity>(), &AccountActivity::ByteSizeLong,
              &AccountActivity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_._cached_size_),
          false,
      },
      &AccountActivity::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        AccountActivity_class_data_ =
            AccountActivity::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL AccountActivity::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AccountActivity_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AccountActivity_class_data_.tc_table);
  return AccountActivity_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
AccountActivity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AccountActivity_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::AccountActivity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 matchid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AccountActivity, _impl_.matchid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.matchid_)}},
    // optional uint32 activity = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountActivity, _impl_.activity_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.activity_)}},
    // optional uint32 mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountActivity, _impl_.mode_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.mode_)}},
    // optional uint32 map = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountActivity, _impl_.map_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.map_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 activity = 1;
    {PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.activity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 mode = 2;
    {PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.mode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 map = 3;
    {PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.map_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 matchid = 4;
    {PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.matchid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void AccountActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountActivity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.activity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.map_) -
        reinterpret_cast<char*>(&_impl_.activity_)) + sizeof(_impl_.map_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AccountActivity::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AccountActivity& this_ = static_cast<const AccountActivity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AccountActivity::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AccountActivity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:AccountActivity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 activity = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_activity(), target);
  }

  // optional uint32 mode = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_mode(), target);
  }

  // optional uint32 map = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_map(), target);
  }

  // optional uint64 matchid = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this_._internal_matchid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountActivity)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AccountActivity::ByteSizeLong(const MessageLite& base) {
  const AccountActivity& this_ = static_cast<const AccountActivity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AccountActivity::ByteSizeLong() const {
  const AccountActivity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:AccountActivity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional uint32 activity = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_activity());
    }
    // optional uint32 mode = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_mode());
    }
    // optional uint64 matchid = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_matchid());
    }
    // optional uint32 map = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_map());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AccountActivity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccountActivity*>(&to_msg);
  auto& from = static_cast<const AccountActivity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AccountActivity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.activity_ = from._impl_.activity_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.matchid_ = from._impl_.matchid_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.map_ = from._impl_.map_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountActivity::CopyFrom(const AccountActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccountActivity::InternalSwap(AccountActivity* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.map_)
      + sizeof(AccountActivity::_impl_.map_)
      - PROTOBUF_FIELD_OFFSET(AccountActivity, _impl_.activity_)>(
          reinterpret_cast<char*>(&_impl_.activity_),
          reinterpret_cast<char*>(&other->_impl_.activity_));
}

::google::protobuf::Metadata AccountActivity::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TournamentMatchSetup::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TournamentMatchSetup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_._has_bits_);
};

TournamentMatchSetup::TournamentMatchSetup(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentMatchSetup_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TournamentMatchSetup)
}
TournamentMatchSetup::TournamentMatchSetup(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TournamentMatchSetup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TournamentMatchSetup_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TournamentMatchSetup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TournamentMatchSetup::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_id_),
           0,
           offsetof(Impl_, event_stage_id_) -
               offsetof(Impl_, event_id_) +
               sizeof(Impl_::event_stage_id_));
}
TournamentMatchSetup::~TournamentMatchSetup() {
  // @@protoc_insertion_point(destructor:TournamentMatchSetup)
  SharedDtor(*this);
}
inline void TournamentMatchSetup::SharedDtor(MessageLite& self) {
  TournamentMatchSetup& this_ = static_cast<TournamentMatchSetup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TournamentMatchSetup::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TournamentMatchSetup(arena);
}
constexpr auto TournamentMatchSetup::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TournamentMatchSetup),
                                            alignof(TournamentMatchSetup));
}
constexpr auto TournamentMatchSetup::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TournamentMatchSetup_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TournamentMatchSetup::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TournamentMatchSetup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TournamentMatchSetup::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TournamentMatchSetup>(), &TournamentMatchSetup::ByteSizeLong,
              &TournamentMatchSetup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_._cached_size_),
          false,
      },
      &TournamentMatchSetup::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        TournamentMatchSetup_class_data_ =
            TournamentMatchSetup::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL TournamentMatchSetup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TournamentMatchSetup_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TournamentMatchSetup_class_data_.tc_table);
  return TournamentMatchSetup_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
TournamentMatchSetup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TournamentMatchSetup_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TournamentMatchSetup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 event_stage_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentMatchSetup, _impl_.event_stage_id_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.event_stage_id_)}},
    // optional int32 event_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentMatchSetup, _impl_.event_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.event_id_)}},
    // optional int32 team_id_ct = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentMatchSetup, _impl_.team_id_ct_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.team_id_ct_)}},
    // optional int32 team_id_t = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TournamentMatchSetup, _impl_.team_id_t_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.team_id_t_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 event_id = 1;
    {PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.event_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_ct = 2;
    {PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.team_id_ct_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_t = 3;
    {PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.team_id_t_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 event_stage_id = 4;
    {PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.event_stage_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TournamentMatchSetup::Clear() {
// @@protoc_insertion_point(message_clear_start:TournamentMatchSetup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.event_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.event_stage_id_) -
        reinterpret_cast<char*>(&_impl_.event_id_)) + sizeof(_impl_.event_stage_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TournamentMatchSetup::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TournamentMatchSetup& this_ = static_cast<const TournamentMatchSetup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TournamentMatchSetup::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TournamentMatchSetup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:TournamentMatchSetup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 event_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_event_id(), target);
  }

  // optional int32 team_id_ct = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_team_id_ct(), target);
  }

  // optional int32 team_id_t = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_team_id_t(), target);
  }

  // optional int32 event_stage_id = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_event_stage_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TournamentMatchSetup)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TournamentMatchSetup::ByteSizeLong(const MessageLite& base) {
  const TournamentMatchSetup& this_ = static_cast<const TournamentMatchSetup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TournamentMatchSetup::ByteSizeLong() const {
  const TournamentMatchSetup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:TournamentMatchSetup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional int32 event_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_id());
    }
    // optional int32 team_id_ct = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_ct());
    }
    // optional int32 team_id_t = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_t());
    }
    // optional int32 event_stage_id = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_stage_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TournamentMatchSetup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TournamentMatchSetup*>(&to_msg);
  auto& from = static_cast<const TournamentMatchSetup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TournamentMatchSetup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.event_id_ = from._impl_.event_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.team_id_ct_ = from._impl_.team_id_ct_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.team_id_t_ = from._impl_.team_id_t_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.event_stage_id_ = from._impl_.event_stage_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TournamentMatchSetup::CopyFrom(const TournamentMatchSetup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TournamentMatchSetup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TournamentMatchSetup::InternalSwap(TournamentMatchSetup* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.event_stage_id_)
      + sizeof(TournamentMatchSetup::_impl_.event_stage_id_)
      - PROTOBUF_FIELD_OFFSET(TournamentMatchSetup, _impl_.event_id_)>(
          reinterpret_cast<char*>(&_impl_.event_id_),
          reinterpret_cast<char*>(&other->_impl_.event_id_));
}

::google::protobuf::Metadata TournamentMatchSetup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerHltvInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ServerHltvInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_._has_bits_);
};

ServerHltvInfo::ServerHltvInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerHltvInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServerHltvInfo)
}
PROTOBUF_NDEBUG_INLINE ServerHltvInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ServerHltvInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        game_mapgroup_(arena, from.game_mapgroup_),
        game_map_(arena, from.game_map_) {}

ServerHltvInfo::ServerHltvInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ServerHltvInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerHltvInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerHltvInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tv_watch_key_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tv_watch_key_),
           offsetof(Impl_, flags_) -
               offsetof(Impl_, tv_watch_key_) +
               sizeof(Impl_::flags_));

  // @@protoc_insertion_point(copy_constructor:ServerHltvInfo)
}
PROTOBUF_NDEBUG_INLINE ServerHltvInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        game_mapgroup_(arena),
        game_map_(arena) {}

inline void ServerHltvInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tv_watch_key_),
           0,
           offsetof(Impl_, flags_) -
               offsetof(Impl_, tv_watch_key_) +
               sizeof(Impl_::flags_));
}
ServerHltvInfo::~ServerHltvInfo() {
  // @@protoc_insertion_point(destructor:ServerHltvInfo)
  SharedDtor(*this);
}
inline void ServerHltvInfo::SharedDtor(MessageLite& self) {
  ServerHltvInfo& this_ = static_cast<ServerHltvInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.game_mapgroup_.Destroy();
  this_._impl_.game_map_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ServerHltvInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ServerHltvInfo(arena);
}
constexpr auto ServerHltvInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ServerHltvInfo),
                                            alignof(ServerHltvInfo));
}
constexpr auto ServerHltvInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ServerHltvInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ServerHltvInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ServerHltvInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ServerHltvInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ServerHltvInfo>(), &ServerHltvInfo::ByteSizeLong,
              &ServerHltvInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_._cached_size_),
          false,
      },
      &ServerHltvInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ServerHltvInfo_class_data_ =
            ServerHltvInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ServerHltvInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ServerHltvInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ServerHltvInfo_class_data_.tc_table);
  return ServerHltvInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 0, 60, 2>
ServerHltvInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_._has_bits_),
    0, // no _extensions_
    21, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292870208,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ServerHltvInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ServerHltvInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 tv_udp_port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_udp_port_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_udp_port_)}},
    // optional uint64 tv_watch_key = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerHltvInfo, _impl_.tv_watch_key_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_watch_key_)}},
    // optional uint32 tv_slots = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_slots_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_slots_)}},
    // optional uint32 tv_clients = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_clients_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_clients_)}},
    // optional uint32 tv_proxies = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_proxies_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_proxies_)}},
    // optional uint32 tv_time = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_time_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 game_type = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.game_type_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.game_type_)}},
    // optional string game_mapgroup = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.game_mapgroup_)}},
    // optional string game_map = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 1, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.game_map_)}},
    // optional uint64 tv_master_steamid = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerHltvInfo, _impl_.tv_master_steamid_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_master_steamid_)}},
    // optional uint32 tv_local_slots = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_local_slots_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_local_slots_)}},
    // optional uint32 tv_local_clients = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_local_clients_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_local_clients_)}},
    // optional uint32 tv_local_proxies = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_local_proxies_), 12>(),
     {112, 12, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_local_proxies_)}},
    // optional uint32 tv_relay_slots = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerHltvInfo, _impl_.tv_relay_slots_), 13>(),
     {120, 13, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_slots_)}},
    // optional uint32 tv_relay_clients = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 14, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_clients_)}},
    // optional uint32 tv_relay_proxies = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 15, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_proxies_)}},
    // optional uint32 tv_relay_address = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 16, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_address_)}},
    // optional uint32 tv_relay_port = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 17, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_port_)}},
    // optional uint64 tv_relay_steamid = 20;
    {::_pbi::TcParser::FastV64S2,
     {416, 18, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_steamid_)}},
    // optional uint32 flags = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 19, 0, PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.flags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 tv_udp_port = 1;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_udp_port_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 tv_watch_key = 2;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_watch_key_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 tv_slots = 3;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_slots_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_clients = 4;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_clients_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_proxies = 5;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_proxies_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_time = 6;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_time_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 game_type = 8;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.game_type_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string game_mapgroup = 9;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.game_mapgroup_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string game_map = 10;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.game_map_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 tv_master_steamid = 11;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_master_steamid_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 tv_local_slots = 12;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_local_slots_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_local_clients = 13;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_local_clients_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_local_proxies = 14;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_local_proxies_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_relay_slots = 15;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_slots_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_relay_clients = 16;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_clients_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_relay_proxies = 17;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_proxies_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_relay_address = 18;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_address_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_relay_port = 19;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_port_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 tv_relay_steamid = 20;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_relay_steamid_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 flags = 21;
    {PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.flags_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\16\0\0\0\0\0\0\0\15\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "ServerHltvInfo"
    "game_mapgroup"
    "game_map"
  }},
};
PROTOBUF_NOINLINE void ServerHltvInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerHltvInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.game_mapgroup_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.game_map_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000fcu) != 0) {
    ::memset(&_impl_.tv_watch_key_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tv_time_) -
        reinterpret_cast<char*>(&_impl_.tv_watch_key_)) + sizeof(_impl_.tv_time_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.game_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tv_relay_proxies_) -
        reinterpret_cast<char*>(&_impl_.game_type_)) + sizeof(_impl_.tv_relay_proxies_));
  }
  if ((cached_has_bits & 0x000f0000u) != 0) {
    ::memset(&_impl_.tv_relay_address_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.flags_) -
        reinterpret_cast<char*>(&_impl_.tv_relay_address_)) + sizeof(_impl_.flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ServerHltvInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ServerHltvInfo& this_ = static_cast<const ServerHltvInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ServerHltvInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ServerHltvInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ServerHltvInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 tv_udp_port = 1;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_tv_udp_port(), target);
  }

  // optional uint64 tv_watch_key = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_tv_watch_key(), target);
  }

  // optional uint32 tv_slots = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_tv_slots(), target);
  }

  // optional uint32 tv_clients = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_tv_clients(), target);
  }

  // optional uint32 tv_proxies = 5;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_tv_proxies(), target);
  }

  // optional uint32 tv_time = 6;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_tv_time(), target);
  }

  // optional uint32 game_type = 8;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_game_type(), target);
  }

  // optional string game_mapgroup = 9;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_game_mapgroup();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "ServerHltvInfo.game_mapgroup");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string game_map = 10;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_game_map();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "ServerHltvInfo.game_map");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional uint64 tv_master_steamid = 11;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this_._internal_tv_master_steamid(), target);
  }

  // optional uint32 tv_local_slots = 12;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_tv_local_slots(), target);
  }

  // optional uint32 tv_local_clients = 13;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this_._internal_tv_local_clients(), target);
  }

  // optional uint32 tv_local_proxies = 14;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_tv_local_proxies(), target);
  }

  // optional uint32 tv_relay_slots = 15;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this_._internal_tv_relay_slots(), target);
  }

  // optional uint32 tv_relay_clients = 16;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_tv_relay_clients(), target);
  }

  // optional uint32 tv_relay_proxies = 17;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        17, this_._internal_tv_relay_proxies(), target);
  }

  // optional uint32 tv_relay_address = 18;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this_._internal_tv_relay_address(), target);
  }

  // optional uint32 tv_relay_port = 19;
  if ((cached_has_bits & 0x00020000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this_._internal_tv_relay_port(), target);
  }

  // optional uint64 tv_relay_steamid = 20;
  if ((cached_has_bits & 0x00040000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        20, this_._internal_tv_relay_steamid(), target);
  }

  // optional uint32 flags = 21;
  if ((cached_has_bits & 0x00080000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        21, this_._internal_flags(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerHltvInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ServerHltvInfo::ByteSizeLong(const MessageLite& base) {
  const ServerHltvInfo& this_ = static_cast<const ServerHltvInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ServerHltvInfo::ByteSizeLong() const {
  const ServerHltvInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ServerHltvInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string game_mapgroup = 9;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_game_mapgroup());
    }
    // optional string game_map = 10;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_game_map());
    }
    // optional uint64 tv_watch_key = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tv_watch_key());
    }
    // optional uint32 tv_udp_port = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_udp_port());
    }
    // optional uint32 tv_slots = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_slots());
    }
    // optional uint32 tv_clients = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_clients());
    }
    // optional uint32 tv_proxies = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_proxies());
    }
    // optional uint32 tv_time = 6;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_time());
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // optional uint32 game_type = 8;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
    // optional uint64 tv_master_steamid = 11;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tv_master_steamid());
    }
    // optional uint32 tv_local_slots = 12;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_local_slots());
    }
    // optional uint32 tv_local_clients = 13;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_local_clients());
    }
    // optional uint32 tv_local_proxies = 14;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_local_proxies());
    }
    // optional uint32 tv_relay_slots = 15;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_relay_slots());
    }
    // optional uint32 tv_relay_clients = 16;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_tv_relay_clients());
    }
    // optional uint32 tv_relay_proxies = 17;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_tv_relay_proxies());
    }
  }
  if ((cached_has_bits & 0x000f0000u) != 0) {
    // optional uint32 tv_relay_address = 18;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_tv_relay_address());
    }
    // optional uint32 tv_relay_port = 19;
    if ((cached_has_bits & 0x00020000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_tv_relay_port());
    }
    // optional uint64 tv_relay_steamid = 20;
    if ((cached_has_bits & 0x00040000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this_._internal_tv_relay_steamid());
    }
    // optional uint32 flags = 21;
    if ((cached_has_bits & 0x00080000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_flags());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ServerHltvInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerHltvInfo*>(&to_msg);
  auto& from = static_cast<const ServerHltvInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerHltvInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_game_mapgroup(from._internal_game_mapgroup());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_game_map(from._internal_game_map());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.tv_watch_key_ = from._impl_.tv_watch_key_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.tv_udp_port_ = from._impl_.tv_udp_port_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.tv_slots_ = from._impl_.tv_slots_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.tv_clients_ = from._impl_.tv_clients_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.tv_proxies_ = from._impl_.tv_proxies_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.tv_time_ = from._impl_.tv_time_;
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.tv_master_steamid_ = from._impl_.tv_master_steamid_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.tv_local_slots_ = from._impl_.tv_local_slots_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.tv_local_clients_ = from._impl_.tv_local_clients_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.tv_local_proxies_ = from._impl_.tv_local_proxies_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.tv_relay_slots_ = from._impl_.tv_relay_slots_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.tv_relay_clients_ = from._impl_.tv_relay_clients_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.tv_relay_proxies_ = from._impl_.tv_relay_proxies_;
    }
  }
  if ((cached_has_bits & 0x000f0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _this->_impl_.tv_relay_address_ = from._impl_.tv_relay_address_;
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _this->_impl_.tv_relay_port_ = from._impl_.tv_relay_port_;
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      _this->_impl_.tv_relay_steamid_ = from._impl_.tv_relay_steamid_;
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerHltvInfo::CopyFrom(const ServerHltvInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerHltvInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerHltvInfo::InternalSwap(ServerHltvInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_mapgroup_, &other->_impl_.game_mapgroup_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_map_, &other->_impl_.game_map_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.flags_)
      + sizeof(ServerHltvInfo::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(ServerHltvInfo, _impl_.tv_watch_key_)>(
          reinterpret_cast<char*>(&_impl_.tv_watch_key_),
          reinterpret_cast<char*>(&other->_impl_.tv_watch_key_));
}

::google::protobuf::Metadata ServerHltvInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IpAddressMask::_Internal {
 public:
  using HasBits =
      decltype(std::declval<IpAddressMask>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_._has_bits_);
};

IpAddressMask::IpAddressMask(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IpAddressMask_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IpAddressMask)
}
IpAddressMask::IpAddressMask(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const IpAddressMask& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IpAddressMask_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE IpAddressMask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void IpAddressMask::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, a_),
           0,
           offsetof(Impl_, token_) -
               offsetof(Impl_, a_) +
               sizeof(Impl_::token_));
}
IpAddressMask::~IpAddressMask() {
  // @@protoc_insertion_point(destructor:IpAddressMask)
  SharedDtor(*this);
}
inline void IpAddressMask::SharedDtor(MessageLite& self) {
  IpAddressMask& this_ = static_cast<IpAddressMask&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IpAddressMask::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IpAddressMask(arena);
}
constexpr auto IpAddressMask::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(IpAddressMask),
                                            alignof(IpAddressMask));
}
constexpr auto IpAddressMask::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_IpAddressMask_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IpAddressMask::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<IpAddressMask>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IpAddressMask::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<IpAddressMask>(), &IpAddressMask::ByteSizeLong,
              &IpAddressMask::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_._cached_size_),
          false,
      },
      &IpAddressMask::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        IpAddressMask_class_data_ =
            IpAddressMask::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL IpAddressMask::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&IpAddressMask_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(IpAddressMask_class_data_.tc_table);
  return IpAddressMask_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
IpAddressMask::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IpAddressMask_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::IpAddressMask>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IpAddressMask, _impl_.a_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.a_)}},
    // optional uint32 b = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IpAddressMask, _impl_.b_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.b_)}},
    // optional uint32 c = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IpAddressMask, _impl_.c_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.c_)}},
    // optional uint32 d = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IpAddressMask, _impl_.d_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.d_)}},
    // optional uint32 bits = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IpAddressMask, _impl_.bits_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.bits_)}},
    // optional uint32 token = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IpAddressMask, _impl_.token_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.token_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 a = 1;
    {PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 b = 2;
    {PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.b_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 c = 3;
    {PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.c_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 d = 4;
    {PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.d_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 bits = 5;
    {PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.bits_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 token = 6;
    {PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.token_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void IpAddressMask::Clear() {
// @@protoc_insertion_point(message_clear_start:IpAddressMask)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.token_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.token_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IpAddressMask::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IpAddressMask& this_ = static_cast<const IpAddressMask&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IpAddressMask::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IpAddressMask& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:IpAddressMask)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 a = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_a(), target);
  }

  // optional uint32 b = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_b(), target);
  }

  // optional uint32 c = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_c(), target);
  }

  // optional uint32 d = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_d(), target);
  }

  // optional uint32 bits = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_bits(), target);
  }

  // optional uint32 token = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_token(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IpAddressMask)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IpAddressMask::ByteSizeLong(const MessageLite& base) {
  const IpAddressMask& this_ = static_cast<const IpAddressMask&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IpAddressMask::ByteSizeLong() const {
  const IpAddressMask& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:IpAddressMask)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional uint32 a = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_a());
    }
    // optional uint32 b = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_b());
    }
    // optional uint32 c = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_c());
    }
    // optional uint32 d = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_d());
    }
    // optional uint32 bits = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_bits());
    }
    // optional uint32 token = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_token());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void IpAddressMask::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IpAddressMask*>(&to_msg);
  auto& from = static_cast<const IpAddressMask&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IpAddressMask)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.b_ = from._impl_.b_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.c_ = from._impl_.c_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.d_ = from._impl_.d_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.bits_ = from._impl_.bits_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.token_ = from._impl_.token_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IpAddressMask::CopyFrom(const IpAddressMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IpAddressMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IpAddressMask::InternalSwap(IpAddressMask* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.token_)
      + sizeof(IpAddressMask::_impl_.token_)
      - PROTOBUF_FIELD_OFFSET(IpAddressMask, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata IpAddressMask::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgCsgoSteamUserStatChange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgCsgoSteamUserStatChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_._has_bits_);
};

CMsgCsgoSteamUserStatChange::CMsgCsgoSteamUserStatChange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgCsgoSteamUserStatChange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgCsgoSteamUserStatChange)
}
CMsgCsgoSteamUserStatChange::CMsgCsgoSteamUserStatChange(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgCsgoSteamUserStatChange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgCsgoSteamUserStatChange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgCsgoSteamUserStatChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgCsgoSteamUserStatChange::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ecsgosteamuserstat_),
           0,
           offsetof(Impl_, absolute_) -
               offsetof(Impl_, ecsgosteamuserstat_) +
               sizeof(Impl_::absolute_));
}
CMsgCsgoSteamUserStatChange::~CMsgCsgoSteamUserStatChange() {
  // @@protoc_insertion_point(destructor:CMsgCsgoSteamUserStatChange)
  SharedDtor(*this);
}
inline void CMsgCsgoSteamUserStatChange::SharedDtor(MessageLite& self) {
  CMsgCsgoSteamUserStatChange& this_ = static_cast<CMsgCsgoSteamUserStatChange&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgCsgoSteamUserStatChange::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgCsgoSteamUserStatChange(arena);
}
constexpr auto CMsgCsgoSteamUserStatChange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgCsgoSteamUserStatChange),
                                            alignof(CMsgCsgoSteamUserStatChange));
}
constexpr auto CMsgCsgoSteamUserStatChange::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgCsgoSteamUserStatChange_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgCsgoSteamUserStatChange::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgCsgoSteamUserStatChange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgCsgoSteamUserStatChange::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgCsgoSteamUserStatChange>(), &CMsgCsgoSteamUserStatChange::ByteSizeLong,
              &CMsgCsgoSteamUserStatChange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_._cached_size_),
          false,
      },
      &CMsgCsgoSteamUserStatChange::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgCsgoSteamUserStatChange_class_data_ =
            CMsgCsgoSteamUserStatChange::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgCsgoSteamUserStatChange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgCsgoSteamUserStatChange_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgCsgoSteamUserStatChange_class_data_.tc_table);
  return CMsgCsgoSteamUserStatChange_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgCsgoSteamUserStatChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgCsgoSteamUserStatChange_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgCsgoSteamUserStatChange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 ecsgosteamuserstat = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgCsgoSteamUserStatChange, _impl_.ecsgosteamuserstat_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.ecsgosteamuserstat_)}},
    // optional int32 delta = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgCsgoSteamUserStatChange, _impl_.delta_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.delta_)}},
    // optional bool absolute = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgCsgoSteamUserStatChange, _impl_.absolute_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.absolute_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 ecsgosteamuserstat = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.ecsgosteamuserstat_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 delta = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.delta_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool absolute = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.absolute_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgCsgoSteamUserStatChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCsgoSteamUserStatChange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.ecsgosteamuserstat_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.absolute_) -
        reinterpret_cast<char*>(&_impl_.ecsgosteamuserstat_)) + sizeof(_impl_.absolute_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgCsgoSteamUserStatChange::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgCsgoSteamUserStatChange& this_ = static_cast<const CMsgCsgoSteamUserStatChange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgCsgoSteamUserStatChange::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgCsgoSteamUserStatChange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCsgoSteamUserStatChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 ecsgosteamuserstat = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_ecsgosteamuserstat(), target);
  }

  // optional int32 delta = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_delta(), target);
  }

  // optional bool absolute = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_absolute(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCsgoSteamUserStatChange)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgCsgoSteamUserStatChange::ByteSizeLong(const MessageLite& base) {
  const CMsgCsgoSteamUserStatChange& this_ = static_cast<const CMsgCsgoSteamUserStatChange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgCsgoSteamUserStatChange::ByteSizeLong() const {
  const CMsgCsgoSteamUserStatChange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgCsgoSteamUserStatChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional int32 ecsgosteamuserstat = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_ecsgosteamuserstat());
    }
    // optional int32 delta = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_delta());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgCsgoSteamUserStatChange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgCsgoSteamUserStatChange*>(&to_msg);
  auto& from = static_cast<const CMsgCsgoSteamUserStatChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgCsgoSteamUserStatChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.ecsgosteamuserstat_ = from._impl_.ecsgosteamuserstat_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.delta_ = from._impl_.delta_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.absolute_ = from._impl_.absolute_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgCsgoSteamUserStatChange::CopyFrom(const CMsgCsgoSteamUserStatChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCsgoSteamUserStatChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgCsgoSteamUserStatChange::InternalSwap(CMsgCsgoSteamUserStatChange* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.absolute_)
      + sizeof(CMsgCsgoSteamUserStatChange::_impl_.absolute_)
      - PROTOBUF_FIELD_OFFSET(CMsgCsgoSteamUserStatChange, _impl_.ecsgosteamuserstat_)>(
          reinterpret_cast<char*>(&_impl_.ecsgosteamuserstat_),
          reinterpret_cast<char*>(&other->_impl_.ecsgosteamuserstat_));
}

::google::protobuf::Metadata CMsgCsgoSteamUserStatChange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class XpProgressData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<XpProgressData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_._has_bits_);
};

XpProgressData::XpProgressData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, XpProgressData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:XpProgressData)
}
XpProgressData::XpProgressData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const XpProgressData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, XpProgressData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE XpProgressData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void XpProgressData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xp_points_),
           0,
           offsetof(Impl_, xp_category_) -
               offsetof(Impl_, xp_points_) +
               sizeof(Impl_::xp_category_));
}
XpProgressData::~XpProgressData() {
  // @@protoc_insertion_point(destructor:XpProgressData)
  SharedDtor(*this);
}
inline void XpProgressData::SharedDtor(MessageLite& self) {
  XpProgressData& this_ = static_cast<XpProgressData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL XpProgressData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) XpProgressData(arena);
}
constexpr auto XpProgressData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(XpProgressData),
                                            alignof(XpProgressData));
}
constexpr auto XpProgressData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_XpProgressData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &XpProgressData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<XpProgressData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &XpProgressData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<XpProgressData>(), &XpProgressData::ByteSizeLong,
              &XpProgressData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_._cached_size_),
          false,
      },
      &XpProgressData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        XpProgressData_class_data_ =
            XpProgressData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL XpProgressData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&XpProgressData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(XpProgressData_class_data_.tc_table);
  return XpProgressData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
XpProgressData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    XpProgressData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::XpProgressData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 xp_category = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XpProgressData, _impl_.xp_category_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_.xp_category_)}},
    // optional uint32 xp_points = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XpProgressData, _impl_.xp_points_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_.xp_points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 xp_points = 1;
    {PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_.xp_points_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 xp_category = 2;
    {PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_.xp_category_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void XpProgressData::Clear() {
// @@protoc_insertion_point(message_clear_start:XpProgressData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.xp_points_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.xp_category_) -
        reinterpret_cast<char*>(&_impl_.xp_points_)) + sizeof(_impl_.xp_category_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL XpProgressData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const XpProgressData& this_ = static_cast<const XpProgressData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL XpProgressData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const XpProgressData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:XpProgressData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 xp_points = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_xp_points(), target);
  }

  // optional int32 xp_category = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_xp_category(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XpProgressData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t XpProgressData::ByteSizeLong(const MessageLite& base) {
  const XpProgressData& this_ = static_cast<const XpProgressData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t XpProgressData::ByteSizeLong() const {
  const XpProgressData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:XpProgressData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 xp_points = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_xp_points());
    }
    // optional int32 xp_category = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_xp_category());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void XpProgressData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<XpProgressData*>(&to_msg);
  auto& from = static_cast<const XpProgressData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:XpProgressData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.xp_points_ = from._impl_.xp_points_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.xp_category_ = from._impl_.xp_category_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void XpProgressData::CopyFrom(const XpProgressData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XpProgressData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void XpProgressData::InternalSwap(XpProgressData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_.xp_category_)
      + sizeof(XpProgressData::_impl_.xp_category_)
      - PROTOBUF_FIELD_OFFSET(XpProgressData, _impl_.xp_points_)>(
          reinterpret_cast<char*>(&_impl_.xp_points_),
          reinterpret_cast<char*>(&other->_impl_.xp_points_));
}

::google::protobuf::Metadata XpProgressData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MatchEndItemUpdates::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MatchEndItemUpdates>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_._has_bits_);
};

MatchEndItemUpdates::MatchEndItemUpdates(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MatchEndItemUpdates_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MatchEndItemUpdates)
}
MatchEndItemUpdates::MatchEndItemUpdates(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MatchEndItemUpdates& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MatchEndItemUpdates_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MatchEndItemUpdates::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MatchEndItemUpdates::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_id_),
           0,
           offsetof(Impl_, item_attr_delta_value_) -
               offsetof(Impl_, item_id_) +
               sizeof(Impl_::item_attr_delta_value_));
}
MatchEndItemUpdates::~MatchEndItemUpdates() {
  // @@protoc_insertion_point(destructor:MatchEndItemUpdates)
  SharedDtor(*this);
}
inline void MatchEndItemUpdates::SharedDtor(MessageLite& self) {
  MatchEndItemUpdates& this_ = static_cast<MatchEndItemUpdates&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MatchEndItemUpdates::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MatchEndItemUpdates(arena);
}
constexpr auto MatchEndItemUpdates::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MatchEndItemUpdates),
                                            alignof(MatchEndItemUpdates));
}
constexpr auto MatchEndItemUpdates::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MatchEndItemUpdates_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MatchEndItemUpdates::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MatchEndItemUpdates>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MatchEndItemUpdates::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MatchEndItemUpdates>(), &MatchEndItemUpdates::ByteSizeLong,
              &MatchEndItemUpdates::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_._cached_size_),
          false,
      },
      &MatchEndItemUpdates::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        MatchEndItemUpdates_class_data_ =
            MatchEndItemUpdates::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL MatchEndItemUpdates::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MatchEndItemUpdates_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MatchEndItemUpdates_class_data_.tc_table);
  return MatchEndItemUpdates_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
MatchEndItemUpdates::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MatchEndItemUpdates_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MatchEndItemUpdates>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 item_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatchEndItemUpdates, _impl_.item_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_id_)}},
    // optional uint32 item_attr_defidx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchEndItemUpdates, _impl_.item_attr_defidx_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_attr_defidx_)}},
    // optional uint32 item_attr_delta_value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchEndItemUpdates, _impl_.item_attr_delta_value_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_attr_delta_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 item_id = 1;
    {PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 item_attr_defidx = 2;
    {PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_attr_defidx_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 item_attr_delta_value = 3;
    {PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_attr_delta_value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MatchEndItemUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:MatchEndItemUpdates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.item_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.item_attr_delta_value_) -
        reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.item_attr_delta_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MatchEndItemUpdates::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MatchEndItemUpdates& this_ = static_cast<const MatchEndItemUpdates&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MatchEndItemUpdates::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MatchEndItemUpdates& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:MatchEndItemUpdates)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 item_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_item_id(), target);
  }

  // optional uint32 item_attr_defidx = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_item_attr_defidx(), target);
  }

  // optional uint32 item_attr_delta_value = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_item_attr_delta_value(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MatchEndItemUpdates)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MatchEndItemUpdates::ByteSizeLong(const MessageLite& base) {
  const MatchEndItemUpdates& this_ = static_cast<const MatchEndItemUpdates&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MatchEndItemUpdates::ByteSizeLong() const {
  const MatchEndItemUpdates& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:MatchEndItemUpdates)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint64 item_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_item_id());
    }
    // optional uint32 item_attr_defidx = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_item_attr_defidx());
    }
    // optional uint32 item_attr_delta_value = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_item_attr_delta_value());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MatchEndItemUpdates::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MatchEndItemUpdates*>(&to_msg);
  auto& from = static_cast<const MatchEndItemUpdates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MatchEndItemUpdates)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.item_id_ = from._impl_.item_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.item_attr_defidx_ = from._impl_.item_attr_defidx_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.item_attr_delta_value_ = from._impl_.item_attr_delta_value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatchEndItemUpdates::CopyFrom(const MatchEndItemUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MatchEndItemUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MatchEndItemUpdates::InternalSwap(MatchEndItemUpdates* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_attr_delta_value_)
      + sizeof(MatchEndItemUpdates::_impl_.item_attr_delta_value_)
      - PROTOBUF_FIELD_OFFSET(MatchEndItemUpdates, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::google::protobuf::Metadata MatchEndItemUpdates::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScoreLeaderboardData_Entry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScoreLeaderboardData_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_._has_bits_);
};

ScoreLeaderboardData_Entry::ScoreLeaderboardData_Entry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreLeaderboardData_Entry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ScoreLeaderboardData.Entry)
}
ScoreLeaderboardData_Entry::ScoreLeaderboardData_Entry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ScoreLeaderboardData_Entry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreLeaderboardData_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ScoreLeaderboardData_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ScoreLeaderboardData_Entry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tag_),
           0,
           offsetof(Impl_, val_) -
               offsetof(Impl_, tag_) +
               sizeof(Impl_::val_));
}
ScoreLeaderboardData_Entry::~ScoreLeaderboardData_Entry() {
  // @@protoc_insertion_point(destructor:ScoreLeaderboardData.Entry)
  SharedDtor(*this);
}
inline void ScoreLeaderboardData_Entry::SharedDtor(MessageLite& self) {
  ScoreLeaderboardData_Entry& this_ = static_cast<ScoreLeaderboardData_Entry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ScoreLeaderboardData_Entry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ScoreLeaderboardData_Entry(arena);
}
constexpr auto ScoreLeaderboardData_Entry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ScoreLeaderboardData_Entry),
                                            alignof(ScoreLeaderboardData_Entry));
}
constexpr auto ScoreLeaderboardData_Entry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ScoreLeaderboardData_Entry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ScoreLeaderboardData_Entry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ScoreLeaderboardData_Entry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ScoreLeaderboardData_Entry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ScoreLeaderboardData_Entry>(), &ScoreLeaderboardData_Entry::ByteSizeLong,
              &ScoreLeaderboardData_Entry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_._cached_size_),
          false,
      },
      &ScoreLeaderboardData_Entry::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ScoreLeaderboardData_Entry_class_data_ =
            ScoreLeaderboardData_Entry::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ScoreLeaderboardData_Entry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ScoreLeaderboardData_Entry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ScoreLeaderboardData_Entry_class_data_.tc_table);
  return ScoreLeaderboardData_Entry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
ScoreLeaderboardData_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ScoreLeaderboardData_Entry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ScoreLeaderboardData_Entry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 val = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScoreLeaderboardData_Entry, _impl_.val_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_.val_)}},
    // optional uint32 tag = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScoreLeaderboardData_Entry, _impl_.tag_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_.tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 tag = 1;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_.tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 val = 2;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_.val_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ScoreLeaderboardData_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:ScoreLeaderboardData.Entry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.tag_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.val_) -
        reinterpret_cast<char*>(&_impl_.tag_)) + sizeof(_impl_.val_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ScoreLeaderboardData_Entry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ScoreLeaderboardData_Entry& this_ = static_cast<const ScoreLeaderboardData_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ScoreLeaderboardData_Entry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ScoreLeaderboardData_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ScoreLeaderboardData.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 tag = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_tag(), target);
  }

  // optional uint32 val = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_val(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScoreLeaderboardData.Entry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ScoreLeaderboardData_Entry::ByteSizeLong(const MessageLite& base) {
  const ScoreLeaderboardData_Entry& this_ = static_cast<const ScoreLeaderboardData_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ScoreLeaderboardData_Entry::ByteSizeLong() const {
  const ScoreLeaderboardData_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ScoreLeaderboardData.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 tag = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tag());
    }
    // optional uint32 val = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_val());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ScoreLeaderboardData_Entry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScoreLeaderboardData_Entry*>(&to_msg);
  auto& from = static_cast<const ScoreLeaderboardData_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ScoreLeaderboardData.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.tag_ = from._impl_.tag_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.val_ = from._impl_.val_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScoreLeaderboardData_Entry::CopyFrom(const ScoreLeaderboardData_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScoreLeaderboardData.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScoreLeaderboardData_Entry::InternalSwap(ScoreLeaderboardData_Entry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_.val_)
      + sizeof(ScoreLeaderboardData_Entry::_impl_.val_)
      - PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_Entry, _impl_.tag_)>(
          reinterpret_cast<char*>(&_impl_.tag_),
          reinterpret_cast<char*>(&other->_impl_.tag_));
}

::google::protobuf::Metadata ScoreLeaderboardData_Entry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScoreLeaderboardData_AccountEntries::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScoreLeaderboardData_AccountEntries>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_._has_bits_);
};

ScoreLeaderboardData_AccountEntries::ScoreLeaderboardData_AccountEntries(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreLeaderboardData_AccountEntries_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ScoreLeaderboardData.AccountEntries)
}
PROTOBUF_NDEBUG_INLINE ScoreLeaderboardData_AccountEntries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ScoreLeaderboardData_AccountEntries& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entries_{visibility, arena, from.entries_} {}

ScoreLeaderboardData_AccountEntries::ScoreLeaderboardData_AccountEntries(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ScoreLeaderboardData_AccountEntries& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreLeaderboardData_AccountEntries_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScoreLeaderboardData_AccountEntries* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accountid_ = from._impl_.accountid_;

  // @@protoc_insertion_point(copy_constructor:ScoreLeaderboardData.AccountEntries)
}
PROTOBUF_NDEBUG_INLINE ScoreLeaderboardData_AccountEntries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entries_{visibility, arena} {}

inline void ScoreLeaderboardData_AccountEntries::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
ScoreLeaderboardData_AccountEntries::~ScoreLeaderboardData_AccountEntries() {
  // @@protoc_insertion_point(destructor:ScoreLeaderboardData.AccountEntries)
  SharedDtor(*this);
}
inline void ScoreLeaderboardData_AccountEntries::SharedDtor(MessageLite& self) {
  ScoreLeaderboardData_AccountEntries& this_ = static_cast<ScoreLeaderboardData_AccountEntries&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ScoreLeaderboardData_AccountEntries::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ScoreLeaderboardData_AccountEntries(arena);
}
constexpr auto ScoreLeaderboardData_AccountEntries::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_.entries_) +
          decltype(ScoreLeaderboardData_AccountEntries::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ScoreLeaderboardData_AccountEntries), alignof(ScoreLeaderboardData_AccountEntries), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ScoreLeaderboardData_AccountEntries::PlacementNew_,
                                 sizeof(ScoreLeaderboardData_AccountEntries),
                                 alignof(ScoreLeaderboardData_AccountEntries));
  }
}
constexpr auto ScoreLeaderboardData_AccountEntries::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ScoreLeaderboardData_AccountEntries_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ScoreLeaderboardData_AccountEntries::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ScoreLeaderboardData_AccountEntries>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ScoreLeaderboardData_AccountEntries::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ScoreLeaderboardData_AccountEntries>(), &ScoreLeaderboardData_AccountEntries::ByteSizeLong,
              &ScoreLeaderboardData_AccountEntries::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_._cached_size_),
          false,
      },
      &ScoreLeaderboardData_AccountEntries::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ScoreLeaderboardData_AccountEntries_class_data_ =
            ScoreLeaderboardData_AccountEntries::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ScoreLeaderboardData_AccountEntries::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ScoreLeaderboardData_AccountEntries_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ScoreLeaderboardData_AccountEntries_class_data_.tc_table);
  return ScoreLeaderboardData_AccountEntries_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ScoreLeaderboardData_AccountEntries::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ScoreLeaderboardData_AccountEntries_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ScoreLeaderboardData_AccountEntries>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ScoreLeaderboardData.Entry entries = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_.entries_)}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScoreLeaderboardData_AccountEntries, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .ScoreLeaderboardData.Entry entries = 2;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData_AccountEntries, _impl_.entries_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ScoreLeaderboardData_Entry>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ScoreLeaderboardData_AccountEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:ScoreLeaderboardData.AccountEntries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.accountid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ScoreLeaderboardData_AccountEntries::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ScoreLeaderboardData_AccountEntries& this_ = static_cast<const ScoreLeaderboardData_AccountEntries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ScoreLeaderboardData_AccountEntries::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ScoreLeaderboardData_AccountEntries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ScoreLeaderboardData.AccountEntries)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // repeated .ScoreLeaderboardData.Entry entries = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScoreLeaderboardData.AccountEntries)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ScoreLeaderboardData_AccountEntries::ByteSizeLong(const MessageLite& base) {
  const ScoreLeaderboardData_AccountEntries& this_ = static_cast<const ScoreLeaderboardData_AccountEntries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ScoreLeaderboardData_AccountEntries::ByteSizeLong() const {
  const ScoreLeaderboardData_AccountEntries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ScoreLeaderboardData.AccountEntries)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ScoreLeaderboardData.Entry entries = 2;
    {
      total_size += 1UL * this_._internal_entries_size();
      for (const auto& msg : this_._internal_entries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional uint32 accountid = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ScoreLeaderboardData_AccountEntries::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScoreLeaderboardData_AccountEntries*>(&to_msg);
  auto& from = static_cast<const ScoreLeaderboardData_AccountEntries&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ScoreLeaderboardData.AccountEntries)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScoreLeaderboardData_AccountEntries::CopyFrom(const ScoreLeaderboardData_AccountEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScoreLeaderboardData.AccountEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScoreLeaderboardData_AccountEntries::InternalSwap(ScoreLeaderboardData_AccountEntries* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata ScoreLeaderboardData_AccountEntries::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScoreLeaderboardData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScoreLeaderboardData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_._has_bits_);
};

ScoreLeaderboardData::ScoreLeaderboardData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreLeaderboardData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ScoreLeaderboardData)
}
PROTOBUF_NDEBUG_INLINE ScoreLeaderboardData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ScoreLeaderboardData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accountentries_{visibility, arena, from.accountentries_},
        matchentries_{visibility, arena, from.matchentries_},
        leaderboard_name_(arena, from.leaderboard_name_) {}

ScoreLeaderboardData::ScoreLeaderboardData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ScoreLeaderboardData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ScoreLeaderboardData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScoreLeaderboardData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quest_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quest_id_),
           offsetof(Impl_, score_) -
               offsetof(Impl_, quest_id_) +
               sizeof(Impl_::score_));

  // @@protoc_insertion_point(copy_constructor:ScoreLeaderboardData)
}
PROTOBUF_NDEBUG_INLINE ScoreLeaderboardData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        accountentries_{visibility, arena},
        matchentries_{visibility, arena},
        leaderboard_name_(arena) {}

inline void ScoreLeaderboardData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quest_id_),
           0,
           offsetof(Impl_, score_) -
               offsetof(Impl_, quest_id_) +
               sizeof(Impl_::score_));
}
ScoreLeaderboardData::~ScoreLeaderboardData() {
  // @@protoc_insertion_point(destructor:ScoreLeaderboardData)
  SharedDtor(*this);
}
inline void ScoreLeaderboardData::SharedDtor(MessageLite& self) {
  ScoreLeaderboardData& this_ = static_cast<ScoreLeaderboardData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.leaderboard_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ScoreLeaderboardData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ScoreLeaderboardData(arena);
}
constexpr auto ScoreLeaderboardData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.accountentries_) +
          decltype(ScoreLeaderboardData::_impl_.accountentries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.matchentries_) +
          decltype(ScoreLeaderboardData::_impl_.matchentries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ScoreLeaderboardData), alignof(ScoreLeaderboardData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ScoreLeaderboardData::PlacementNew_,
                                 sizeof(ScoreLeaderboardData),
                                 alignof(ScoreLeaderboardData));
  }
}
constexpr auto ScoreLeaderboardData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ScoreLeaderboardData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ScoreLeaderboardData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ScoreLeaderboardData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ScoreLeaderboardData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ScoreLeaderboardData>(), &ScoreLeaderboardData::ByteSizeLong,
              &ScoreLeaderboardData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_._cached_size_),
          false,
      },
      &ScoreLeaderboardData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ScoreLeaderboardData_class_data_ =
            ScoreLeaderboardData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ScoreLeaderboardData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ScoreLeaderboardData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ScoreLeaderboardData_class_data_.tc_table);
  return ScoreLeaderboardData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 45, 2>
ScoreLeaderboardData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967240,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ScoreLeaderboardData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ScoreLeaderboardData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 quest_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ScoreLeaderboardData, _impl_.quest_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.quest_id_)}},
    // optional uint32 score = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScoreLeaderboardData, _impl_.score_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.score_)}},
    // repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.accountentries_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .ScoreLeaderboardData.Entry matchentries = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.matchentries_)}},
    // optional string leaderboard_name = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.leaderboard_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 quest_id = 1;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.quest_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 score = 2;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.score_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.accountentries_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ScoreLeaderboardData.Entry matchentries = 5;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.matchentries_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string leaderboard_name = 6;
    {PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.leaderboard_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ScoreLeaderboardData_AccountEntries>()},
      {::_pbi::TcParser::GetTable<::ScoreLeaderboardData_Entry>()},
  }},
  {{
    "\24\0\0\0\0\20\0\0"
    "ScoreLeaderboardData"
    "leaderboard_name"
  }},
};
PROTOBUF_NOINLINE void ScoreLeaderboardData::Clear() {
// @@protoc_insertion_point(message_clear_start:ScoreLeaderboardData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountentries_.Clear();
  _impl_.matchentries_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.leaderboard_name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.quest_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.score_) -
        reinterpret_cast<char*>(&_impl_.quest_id_)) + sizeof(_impl_.score_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ScoreLeaderboardData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ScoreLeaderboardData& this_ = static_cast<const ScoreLeaderboardData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ScoreLeaderboardData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ScoreLeaderboardData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ScoreLeaderboardData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 quest_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_quest_id(), target);
  }

  // optional uint32 score = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_score(), target);
  }

  // repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_accountentries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_accountentries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .ScoreLeaderboardData.Entry matchentries = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_matchentries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_matchentries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string leaderboard_name = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_leaderboard_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "ScoreLeaderboardData.leaderboard_name");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScoreLeaderboardData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ScoreLeaderboardData::ByteSizeLong(const MessageLite& base) {
  const ScoreLeaderboardData& this_ = static_cast<const ScoreLeaderboardData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ScoreLeaderboardData::ByteSizeLong() const {
  const ScoreLeaderboardData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ScoreLeaderboardData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;
    {
      total_size += 1UL * this_._internal_accountentries_size();
      for (const auto& msg : this_._internal_accountentries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .ScoreLeaderboardData.Entry matchentries = 5;
    {
      total_size += 1UL * this_._internal_matchentries_size();
      for (const auto& msg : this_._internal_matchentries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string leaderboard_name = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_leaderboard_name());
    }
    // optional uint64 quest_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_quest_id());
    }
    // optional uint32 score = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_score());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ScoreLeaderboardData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScoreLeaderboardData*>(&to_msg);
  auto& from = static_cast<const ScoreLeaderboardData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ScoreLeaderboardData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accountentries()->MergeFrom(
      from._internal_accountentries());
  _this->_internal_mutable_matchentries()->MergeFrom(
      from._internal_matchentries());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_leaderboard_name(from._internal_leaderboard_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.quest_id_ = from._impl_.quest_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.score_ = from._impl_.score_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScoreLeaderboardData::CopyFrom(const ScoreLeaderboardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScoreLeaderboardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScoreLeaderboardData::InternalSwap(ScoreLeaderboardData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accountentries_.InternalSwap(&other->_impl_.accountentries_);
  _impl_.matchentries_.InternalSwap(&other->_impl_.matchentries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leaderboard_name_, &other->_impl_.leaderboard_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.score_)
      + sizeof(ScoreLeaderboardData::_impl_.score_)
      - PROTOBUF_FIELD_OFFSET(ScoreLeaderboardData, _impl_.quest_id_)>(
          reinterpret_cast<char*>(&_impl_.quest_id_),
          reinterpret_cast<char*>(&other->_impl_.quest_id_));
}

::google::protobuf::Metadata ScoreLeaderboardData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerQuestData_QuestItemData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerQuestData_QuestItemData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_._has_bits_);
};

PlayerQuestData_QuestItemData::PlayerQuestData_QuestItemData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerQuestData_QuestItemData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerQuestData.QuestItemData)
}
PlayerQuestData_QuestItemData::PlayerQuestData_QuestItemData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerQuestData_QuestItemData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerQuestData_QuestItemData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PlayerQuestData_QuestItemData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PlayerQuestData_QuestItemData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quest_id_),
           0,
           offsetof(Impl_, quest_bonus_points_earned_) -
               offsetof(Impl_, quest_id_) +
               sizeof(Impl_::quest_bonus_points_earned_));
}
PlayerQuestData_QuestItemData::~PlayerQuestData_QuestItemData() {
  // @@protoc_insertion_point(destructor:PlayerQuestData.QuestItemData)
  SharedDtor(*this);
}
inline void PlayerQuestData_QuestItemData::SharedDtor(MessageLite& self) {
  PlayerQuestData_QuestItemData& this_ = static_cast<PlayerQuestData_QuestItemData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlayerQuestData_QuestItemData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlayerQuestData_QuestItemData(arena);
}
constexpr auto PlayerQuestData_QuestItemData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerQuestData_QuestItemData),
                                            alignof(PlayerQuestData_QuestItemData));
}
constexpr auto PlayerQuestData_QuestItemData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlayerQuestData_QuestItemData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlayerQuestData_QuestItemData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlayerQuestData_QuestItemData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlayerQuestData_QuestItemData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlayerQuestData_QuestItemData>(), &PlayerQuestData_QuestItemData::ByteSizeLong,
              &PlayerQuestData_QuestItemData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_._cached_size_),
          false,
      },
      &PlayerQuestData_QuestItemData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PlayerQuestData_QuestItemData_class_data_ =
            PlayerQuestData_QuestItemData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PlayerQuestData_QuestItemData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlayerQuestData_QuestItemData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlayerQuestData_QuestItemData_class_data_.tc_table);
  return PlayerQuestData_QuestItemData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
PlayerQuestData_QuestItemData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlayerQuestData_QuestItemData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerQuestData_QuestItemData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 quest_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerQuestData_QuestItemData, _impl_.quest_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_id_)}},
    // optional int32 quest_normal_points_earned = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerQuestData_QuestItemData, _impl_.quest_normal_points_earned_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_normal_points_earned_)}},
    // optional int32 quest_bonus_points_earned = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerQuestData_QuestItemData, _impl_.quest_bonus_points_earned_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_bonus_points_earned_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 quest_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 quest_normal_points_earned = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_normal_points_earned_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 quest_bonus_points_earned = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_bonus_points_earned_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PlayerQuestData_QuestItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerQuestData.QuestItemData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.quest_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.quest_bonus_points_earned_) -
        reinterpret_cast<char*>(&_impl_.quest_id_)) + sizeof(_impl_.quest_bonus_points_earned_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlayerQuestData_QuestItemData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlayerQuestData_QuestItemData& this_ = static_cast<const PlayerQuestData_QuestItemData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlayerQuestData_QuestItemData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlayerQuestData_QuestItemData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:PlayerQuestData.QuestItemData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 quest_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_quest_id(), target);
  }

  // optional int32 quest_normal_points_earned = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_quest_normal_points_earned(), target);
  }

  // optional int32 quest_bonus_points_earned = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_quest_bonus_points_earned(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerQuestData.QuestItemData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlayerQuestData_QuestItemData::ByteSizeLong(const MessageLite& base) {
  const PlayerQuestData_QuestItemData& this_ = static_cast<const PlayerQuestData_QuestItemData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlayerQuestData_QuestItemData::ByteSizeLong() const {
  const PlayerQuestData_QuestItemData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:PlayerQuestData.QuestItemData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint64 quest_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_quest_id());
    }
    // optional int32 quest_normal_points_earned = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_quest_normal_points_earned());
    }
    // optional int32 quest_bonus_points_earned = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_quest_bonus_points_earned());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlayerQuestData_QuestItemData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerQuestData_QuestItemData*>(&to_msg);
  auto& from = static_cast<const PlayerQuestData_QuestItemData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerQuestData.QuestItemData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.quest_id_ = from._impl_.quest_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.quest_normal_points_earned_ = from._impl_.quest_normal_points_earned_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.quest_bonus_points_earned_ = from._impl_.quest_bonus_points_earned_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerQuestData_QuestItemData::CopyFrom(const PlayerQuestData_QuestItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerQuestData.QuestItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerQuestData_QuestItemData::InternalSwap(PlayerQuestData_QuestItemData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_bonus_points_earned_)
      + sizeof(PlayerQuestData_QuestItemData::_impl_.quest_bonus_points_earned_)
      - PROTOBUF_FIELD_OFFSET(PlayerQuestData_QuestItemData, _impl_.quest_id_)>(
          reinterpret_cast<char*>(&_impl_.quest_id_),
          reinterpret_cast<char*>(&other->_impl_.quest_id_));
}

::google::protobuf::Metadata PlayerQuestData_QuestItemData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerQuestData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerQuestData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_._has_bits_);
};

PlayerQuestData::PlayerQuestData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerQuestData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerQuestData)
}
PROTOBUF_NDEBUG_INLINE PlayerQuestData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::PlayerQuestData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        quest_item_data_{visibility, arena, from.quest_item_data_},
        xp_progress_data_{visibility, arena, from.xp_progress_data_},
        item_updates_{visibility, arena, from.item_updates_},
        userstatchanges_{visibility, arena, from.userstatchanges_} {}

PlayerQuestData::PlayerQuestData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PlayerQuestData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerQuestData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerQuestData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quester_account_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quester_account_id_),
           offsetof(Impl_, operation_points_eligible_) -
               offsetof(Impl_, quester_account_id_) +
               sizeof(Impl_::operation_points_eligible_));

  // @@protoc_insertion_point(copy_constructor:PlayerQuestData)
}
PROTOBUF_NDEBUG_INLINE PlayerQuestData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        quest_item_data_{visibility, arena},
        xp_progress_data_{visibility, arena},
        item_updates_{visibility, arena},
        userstatchanges_{visibility, arena} {}

inline void PlayerQuestData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quester_account_id_),
           0,
           offsetof(Impl_, operation_points_eligible_) -
               offsetof(Impl_, quester_account_id_) +
               sizeof(Impl_::operation_points_eligible_));
}
PlayerQuestData::~PlayerQuestData() {
  // @@protoc_insertion_point(destructor:PlayerQuestData)
  SharedDtor(*this);
}
inline void PlayerQuestData::SharedDtor(MessageLite& self) {
  PlayerQuestData& this_ = static_cast<PlayerQuestData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlayerQuestData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlayerQuestData(arena);
}
constexpr auto PlayerQuestData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.quest_item_data_) +
          decltype(PlayerQuestData::_impl_.quest_item_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.xp_progress_data_) +
          decltype(PlayerQuestData::_impl_.xp_progress_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.item_updates_) +
          decltype(PlayerQuestData::_impl_.item_updates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.userstatchanges_) +
          decltype(PlayerQuestData::_impl_.userstatchanges_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PlayerQuestData), alignof(PlayerQuestData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PlayerQuestData::PlacementNew_,
                                 sizeof(PlayerQuestData),
                                 alignof(PlayerQuestData));
  }
}
constexpr auto PlayerQuestData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlayerQuestData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlayerQuestData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlayerQuestData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlayerQuestData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlayerQuestData>(), &PlayerQuestData::ByteSizeLong,
              &PlayerQuestData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_._cached_size_),
          false,
      },
      &PlayerQuestData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PlayerQuestData_class_data_ =
            PlayerQuestData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PlayerQuestData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlayerQuestData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlayerQuestData_class_data_.tc_table);
  return PlayerQuestData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 4, 0, 2>
PlayerQuestData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PlayerQuestData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerQuestData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgCsgoSteamUserStatChange userstatchanges = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 3, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.userstatchanges_)}},
    // optional uint32 quester_account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerQuestData, _impl_.quester_account_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.quester_account_id_)}},
    // repeated .PlayerQuestData.QuestItemData quest_item_data = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.quest_item_data_)}},
    // repeated .XpProgressData xp_progress_data = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.xp_progress_data_)}},
    // optional uint32 time_played = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerQuestData, _impl_.time_played_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.time_played_)}},
    // optional uint32 mm_game_mode = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerQuestData, _impl_.mm_game_mode_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.mm_game_mode_)}},
    // repeated .MatchEndItemUpdates item_updates = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.item_updates_)}},
    // optional bool operation_points_eligible = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerQuestData, _impl_.operation_points_eligible_), 3>(),
     {56, 3, 0, PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.operation_points_eligible_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 quester_account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.quester_account_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .PlayerQuestData.QuestItemData quest_item_data = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.quest_item_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .XpProgressData xp_progress_data = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.xp_progress_data_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 time_played = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.time_played_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 mm_game_mode = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.mm_game_mode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .MatchEndItemUpdates item_updates = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.item_updates_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool operation_points_eligible = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.operation_points_eligible_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .CMsgCsgoSteamUserStatChange userstatchanges = 8;
    {PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.userstatchanges_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerQuestData_QuestItemData>()},
      {::_pbi::TcParser::GetTable<::XpProgressData>()},
      {::_pbi::TcParser::GetTable<::MatchEndItemUpdates>()},
      {::_pbi::TcParser::GetTable<::CMsgCsgoSteamUserStatChange>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PlayerQuestData::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerQuestData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quest_item_data_.Clear();
  _impl_.xp_progress_data_.Clear();
  _impl_.item_updates_.Clear();
  _impl_.userstatchanges_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.quester_account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.operation_points_eligible_) -
        reinterpret_cast<char*>(&_impl_.quester_account_id_)) + sizeof(_impl_.operation_points_eligible_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlayerQuestData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlayerQuestData& this_ = static_cast<const PlayerQuestData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlayerQuestData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlayerQuestData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:PlayerQuestData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 quester_account_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_quester_account_id(), target);
  }

  // repeated .PlayerQuestData.QuestItemData quest_item_data = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_quest_item_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_quest_item_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .XpProgressData xp_progress_data = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_xp_progress_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_xp_progress_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 time_played = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_time_played(), target);
  }

  // optional uint32 mm_game_mode = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_mm_game_mode(), target);
  }

  // repeated .MatchEndItemUpdates item_updates = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_item_updates_size());
       i < n; i++) {
    const auto& repfield = this_._internal_item_updates().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional bool operation_points_eligible = 7;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this_._internal_operation_points_eligible(), target);
  }

  // repeated .CMsgCsgoSteamUserStatChange userstatchanges = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_userstatchanges_size());
       i < n; i++) {
    const auto& repfield = this_._internal_userstatchanges().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerQuestData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlayerQuestData::ByteSizeLong(const MessageLite& base) {
  const PlayerQuestData& this_ = static_cast<const PlayerQuestData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlayerQuestData::ByteSizeLong() const {
  const PlayerQuestData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:PlayerQuestData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .PlayerQuestData.QuestItemData quest_item_data = 2;
    {
      total_size += 1UL * this_._internal_quest_item_data_size();
      for (const auto& msg : this_._internal_quest_item_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .XpProgressData xp_progress_data = 3;
    {
      total_size += 1UL * this_._internal_xp_progress_data_size();
      for (const auto& msg : this_._internal_xp_progress_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .MatchEndItemUpdates item_updates = 6;
    {
      total_size += 1UL * this_._internal_item_updates_size();
      for (const auto& msg : this_._internal_item_updates()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .CMsgCsgoSteamUserStatChange userstatchanges = 8;
    {
      total_size += 1UL * this_._internal_userstatchanges_size();
      for (const auto& msg : this_._internal_userstatchanges()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 quester_account_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_quester_account_id());
    }
    // optional uint32 time_played = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_time_played());
    }
    // optional uint32 mm_game_mode = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_mm_game_mode());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlayerQuestData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerQuestData*>(&to_msg);
  auto& from = static_cast<const PlayerQuestData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerQuestData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_quest_item_data()->MergeFrom(
      from._internal_quest_item_data());
  _this->_internal_mutable_xp_progress_data()->MergeFrom(
      from._internal_xp_progress_data());
  _this->_internal_mutable_item_updates()->MergeFrom(
      from._internal_item_updates());
  _this->_internal_mutable_userstatchanges()->MergeFrom(
      from._internal_userstatchanges());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.quester_account_id_ = from._impl_.quester_account_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.time_played_ = from._impl_.time_played_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.mm_game_mode_ = from._impl_.mm_game_mode_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.operation_points_eligible_ = from._impl_.operation_points_eligible_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerQuestData::CopyFrom(const PlayerQuestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerQuestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerQuestData::InternalSwap(PlayerQuestData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.quest_item_data_.InternalSwap(&other->_impl_.quest_item_data_);
  _impl_.xp_progress_data_.InternalSwap(&other->_impl_.xp_progress_data_);
  _impl_.item_updates_.InternalSwap(&other->_impl_.item_updates_);
  _impl_.userstatchanges_.InternalSwap(&other->_impl_.userstatchanges_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.operation_points_eligible_)
      + sizeof(PlayerQuestData::_impl_.operation_points_eligible_)
      - PROTOBUF_FIELD_OFFSET(PlayerQuestData, _impl_.quester_account_id_)>(
          reinterpret_cast<char*>(&_impl_.quester_account_id_),
          reinterpret_cast<char*>(&other->_impl_.quester_account_id_));
}

::google::protobuf::Metadata PlayerQuestData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeepPlayerStatsEntry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeepPlayerStatsEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_._has_bits_);
};

DeepPlayerStatsEntry::DeepPlayerStatsEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeepPlayerStatsEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DeepPlayerStatsEntry)
}
PROTOBUF_NDEBUG_INLINE DeepPlayerStatsEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::DeepPlayerStatsEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mates_{visibility, arena, from.mates_} {}

DeepPlayerStatsEntry::DeepPlayerStatsEntry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeepPlayerStatsEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeepPlayerStatsEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeepPlayerStatsEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, match_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, match_id_),
           offsetof(Impl_, flash_success_) -
               offsetof(Impl_, match_id_) +
               sizeof(Impl_::flash_success_));

  // @@protoc_insertion_point(copy_constructor:DeepPlayerStatsEntry)
}
PROTOBUF_NDEBUG_INLINE DeepPlayerStatsEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        mates_{visibility, arena} {}

inline void DeepPlayerStatsEntry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, match_id_),
           0,
           offsetof(Impl_, flash_success_) -
               offsetof(Impl_, match_id_) +
               sizeof(Impl_::flash_success_));
}
DeepPlayerStatsEntry::~DeepPlayerStatsEntry() {
  // @@protoc_insertion_point(destructor:DeepPlayerStatsEntry)
  SharedDtor(*this);
}
inline void DeepPlayerStatsEntry::SharedDtor(MessageLite& self) {
  DeepPlayerStatsEntry& this_ = static_cast<DeepPlayerStatsEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeepPlayerStatsEntry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeepPlayerStatsEntry(arena);
}
constexpr auto DeepPlayerStatsEntry::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.mates_) +
          decltype(DeepPlayerStatsEntry::_impl_.mates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DeepPlayerStatsEntry), alignof(DeepPlayerStatsEntry), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeepPlayerStatsEntry::PlacementNew_,
                                 sizeof(DeepPlayerStatsEntry),
                                 alignof(DeepPlayerStatsEntry));
  }
}
constexpr auto DeepPlayerStatsEntry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeepPlayerStatsEntry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeepPlayerStatsEntry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeepPlayerStatsEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeepPlayerStatsEntry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeepPlayerStatsEntry>(), &DeepPlayerStatsEntry::ByteSizeLong,
              &DeepPlayerStatsEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_._cached_size_),
          false,
      },
      &DeepPlayerStatsEntry::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        DeepPlayerStatsEntry_class_data_ =
            DeepPlayerStatsEntry::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL DeepPlayerStatsEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeepPlayerStatsEntry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeepPlayerStatsEntry_class_data_.tc_table);
  return DeepPlayerStatsEntry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 28, 0, 0, 7>
DeepPlayerStatsEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_._has_bits_),
    0, // no _extensions_
    34, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    1077413376,  // skipmap
    offsetof(decltype(_table_), field_entries),
    28,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeepPlayerStatsEntry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DeepPlayerStatsEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.accountid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.accountid_)}},
    // optional uint64 match_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeepPlayerStatsEntry, _impl_.match_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.match_id_)}},
    // optional uint32 mm_game_mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.mm_game_mode_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.mm_game_mode_)}},
    // optional uint32 mapid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.mapid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.mapid_)}},
    // optional bool b_starting_ct = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeepPlayerStatsEntry, _impl_.b_starting_ct_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.b_starting_ct_)}},
    // optional uint32 match_outcome = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.match_outcome_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.match_outcome_)}},
    // optional uint32 rounds_won = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.rounds_won_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.rounds_won_)}},
    // optional uint32 rounds_lost = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.rounds_lost_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.rounds_lost_)}},
    // optional uint32 stat_score = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.stat_score_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.stat_score_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 stat_deaths = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.stat_deaths_), 9>(),
     {96, 9, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.stat_deaths_)}},
    // optional uint32 stat_mvps = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.stat_mvps_), 10>(),
     {104, 10, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.stat_mvps_)}},
    // optional uint32 enemy_kills = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.enemy_kills_), 11>(),
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_kills_)}},
    // optional uint32 enemy_headshots = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerStatsEntry, _impl_.enemy_headshots_), 12>(),
     {120, 12, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_headshots_)}},
    // optional uint32 enemy_2ks = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 13, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_2ks_)}},
    // optional uint32 enemy_3ks = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 14, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_3ks_)}},
    // optional uint32 enemy_4ks = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 15, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_4ks_)}},
    // optional uint32 total_damage = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 16, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.total_damage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 engagements_entry_count = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 17, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_entry_count_)}},
    // optional uint32 engagements_entry_wins = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 18, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_entry_wins_)}},
    // optional uint32 engagements_1v1_count = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 19, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v1_count_)}},
    // optional uint32 engagements_1v1_wins = 26;
    {::_pbi::TcParser::FastV32S2,
     {464, 20, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v1_wins_)}},
    // optional uint32 engagements_1v2_count = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 21, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v2_count_)}},
    // optional uint32 engagements_1v2_wins = 28;
    {::_pbi::TcParser::FastV32S2,
     {480, 22, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v2_wins_)}},
    // optional uint32 utility_count = 29;
    {::_pbi::TcParser::FastV32S2,
     {488, 23, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.utility_count_)}},
    // optional uint32 utility_success = 30;
    {::_pbi::TcParser::FastV32S2,
     {496, 24, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.utility_success_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    33, 0, 1,
    65532, 26,
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.accountid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 match_id = 2;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.match_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 mm_game_mode = 3;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.mm_game_mode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 mapid = 4;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.mapid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool b_starting_ct = 5;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.b_starting_ct_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 match_outcome = 6;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.match_outcome_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rounds_won = 7;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.rounds_won_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rounds_lost = 8;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.rounds_lost_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stat_score = 9;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.stat_score_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stat_deaths = 12;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.stat_deaths_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stat_mvps = 13;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.stat_mvps_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 enemy_kills = 14;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_kills_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 enemy_headshots = 15;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_headshots_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 enemy_2ks = 16;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_2ks_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 enemy_3ks = 17;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_3ks_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 enemy_4ks = 18;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.enemy_4ks_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total_damage = 19;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.total_damage_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 engagements_entry_count = 23;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_entry_count_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 engagements_entry_wins = 24;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_entry_wins_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 engagements_1v1_count = 25;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v1_count_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 engagements_1v1_wins = 26;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v1_wins_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 engagements_1v2_count = 27;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v2_count_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 engagements_1v2_wins = 28;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.engagements_1v2_wins_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 utility_count = 29;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.utility_count_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 utility_success = 30;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.utility_success_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flash_count = 32;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.flash_count_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flash_success = 33;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.flash_success_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 mates = 34;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.mates_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void DeepPlayerStatsEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:DeepPlayerStatsEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mates_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.match_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rounds_lost_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.rounds_lost_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.stat_score_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.enemy_4ks_) -
        reinterpret_cast<char*>(&_impl_.stat_score_)) + sizeof(_impl_.enemy_4ks_));
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    ::memset(&_impl_.total_damage_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.utility_count_) -
        reinterpret_cast<char*>(&_impl_.total_damage_)) + sizeof(_impl_.utility_count_));
  }
  if ((cached_has_bits & 0x07000000u) != 0) {
    ::memset(&_impl_.utility_success_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.flash_success_) -
        reinterpret_cast<char*>(&_impl_.utility_success_)) + sizeof(_impl_.flash_success_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeepPlayerStatsEntry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeepPlayerStatsEntry& this_ = static_cast<const DeepPlayerStatsEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeepPlayerStatsEntry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeepPlayerStatsEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:DeepPlayerStatsEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint64 match_id = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_match_id(), target);
  }

  // optional uint32 mm_game_mode = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_mm_game_mode(), target);
  }

  // optional uint32 mapid = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_mapid(), target);
  }

  // optional bool b_starting_ct = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this_._internal_b_starting_ct(), target);
  }

  // optional uint32 match_outcome = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_match_outcome(), target);
  }

  // optional uint32 rounds_won = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_rounds_won(), target);
  }

  // optional uint32 rounds_lost = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_rounds_lost(), target);
  }

  // optional uint32 stat_score = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_stat_score(), target);
  }

  // optional uint32 stat_deaths = 12;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_stat_deaths(), target);
  }

  // optional uint32 stat_mvps = 13;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this_._internal_stat_mvps(), target);
  }

  // optional uint32 enemy_kills = 14;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_enemy_kills(), target);
  }

  // optional uint32 enemy_headshots = 15;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this_._internal_enemy_headshots(), target);
  }

  // optional uint32 enemy_2ks = 16;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_enemy_2ks(), target);
  }

  // optional uint32 enemy_3ks = 17;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        17, this_._internal_enemy_3ks(), target);
  }

  // optional uint32 enemy_4ks = 18;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this_._internal_enemy_4ks(), target);
  }

  // optional uint32 total_damage = 19;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this_._internal_total_damage(), target);
  }

  // optional uint32 engagements_entry_count = 23;
  if ((cached_has_bits & 0x00020000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        23, this_._internal_engagements_entry_count(), target);
  }

  // optional uint32 engagements_entry_wins = 24;
  if ((cached_has_bits & 0x00040000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        24, this_._internal_engagements_entry_wins(), target);
  }

  // optional uint32 engagements_1v1_count = 25;
  if ((cached_has_bits & 0x00080000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        25, this_._internal_engagements_1v1_count(), target);
  }

  // optional uint32 engagements_1v1_wins = 26;
  if ((cached_has_bits & 0x00100000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        26, this_._internal_engagements_1v1_wins(), target);
  }

  // optional uint32 engagements_1v2_count = 27;
  if ((cached_has_bits & 0x00200000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        27, this_._internal_engagements_1v2_count(), target);
  }

  // optional uint32 engagements_1v2_wins = 28;
  if ((cached_has_bits & 0x00400000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        28, this_._internal_engagements_1v2_wins(), target);
  }

  // optional uint32 utility_count = 29;
  if ((cached_has_bits & 0x00800000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        29, this_._internal_utility_count(), target);
  }

  // optional uint32 utility_success = 30;
  if ((cached_has_bits & 0x01000000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        30, this_._internal_utility_success(), target);
  }

  // optional uint32 flash_count = 32;
  if ((cached_has_bits & 0x02000000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        32, this_._internal_flash_count(), target);
  }

  // optional uint32 flash_success = 33;
  if ((cached_has_bits & 0x04000000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        33, this_._internal_flash_success(), target);
  }

  // repeated uint32 mates = 34;
  for (int i = 0, n = this_._internal_mates_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        34, this_._internal_mates().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepPlayerStatsEntry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeepPlayerStatsEntry::ByteSizeLong(const MessageLite& base) {
  const DeepPlayerStatsEntry& this_ = static_cast<const DeepPlayerStatsEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeepPlayerStatsEntry::ByteSizeLong() const {
  const DeepPlayerStatsEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:DeepPlayerStatsEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 mates = 34;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_mates());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_mates_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000010u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000efu) != 0) {
    // optional uint64 match_id = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 mm_game_mode = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_mm_game_mode());
    }
    // optional uint32 mapid = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_mapid());
    }
    // optional uint32 match_outcome = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_match_outcome());
    }
    // optional uint32 rounds_won = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rounds_won());
    }
    // optional uint32 rounds_lost = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rounds_lost());
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // optional uint32 stat_score = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_stat_score());
    }
    // optional uint32 stat_deaths = 12;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_stat_deaths());
    }
    // optional uint32 stat_mvps = 13;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_stat_mvps());
    }
    // optional uint32 enemy_kills = 14;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_enemy_kills());
    }
    // optional uint32 enemy_headshots = 15;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_enemy_headshots());
    }
    // optional uint32 enemy_2ks = 16;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_enemy_2ks());
    }
    // optional uint32 enemy_3ks = 17;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_enemy_3ks());
    }
    // optional uint32 enemy_4ks = 18;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_enemy_4ks());
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    // optional uint32 total_damage = 19;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_total_damage());
    }
    // optional uint32 engagements_entry_count = 23;
    if ((cached_has_bits & 0x00020000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_engagements_entry_count());
    }
    // optional uint32 engagements_entry_wins = 24;
    if ((cached_has_bits & 0x00040000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_engagements_entry_wins());
    }
    // optional uint32 engagements_1v1_count = 25;
    if ((cached_has_bits & 0x00080000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_engagements_1v1_count());
    }
    // optional uint32 engagements_1v1_wins = 26;
    if ((cached_has_bits & 0x00100000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_engagements_1v1_wins());
    }
    // optional uint32 engagements_1v2_count = 27;
    if ((cached_has_bits & 0x00200000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_engagements_1v2_count());
    }
    // optional uint32 engagements_1v2_wins = 28;
    if ((cached_has_bits & 0x00400000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_engagements_1v2_wins());
    }
    // optional uint32 utility_count = 29;
    if ((cached_has_bits & 0x00800000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_utility_count());
    }
  }
  if ((cached_has_bits & 0x07000000u) != 0) {
    // optional uint32 utility_success = 30;
    if ((cached_has_bits & 0x01000000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_utility_success());
    }
    // optional uint32 flash_count = 32;
    if ((cached_has_bits & 0x02000000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_flash_count());
    }
    // optional uint32 flash_success = 33;
    if ((cached_has_bits & 0x04000000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_flash_success());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeepPlayerStatsEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeepPlayerStatsEntry*>(&to_msg);
  auto& from = static_cast<const DeepPlayerStatsEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeepPlayerStatsEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mates()->MergeFrom(from._internal_mates());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.mm_game_mode_ = from._impl_.mm_game_mode_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.mapid_ = from._impl_.mapid_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.b_starting_ct_ = from._impl_.b_starting_ct_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.match_outcome_ = from._impl_.match_outcome_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.rounds_won_ = from._impl_.rounds_won_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.rounds_lost_ = from._impl_.rounds_lost_;
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.stat_score_ = from._impl_.stat_score_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.stat_deaths_ = from._impl_.stat_deaths_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.stat_mvps_ = from._impl_.stat_mvps_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.enemy_kills_ = from._impl_.enemy_kills_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.enemy_headshots_ = from._impl_.enemy_headshots_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.enemy_2ks_ = from._impl_.enemy_2ks_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.enemy_3ks_ = from._impl_.enemy_3ks_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.enemy_4ks_ = from._impl_.enemy_4ks_;
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _this->_impl_.total_damage_ = from._impl_.total_damage_;
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _this->_impl_.engagements_entry_count_ = from._impl_.engagements_entry_count_;
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      _this->_impl_.engagements_entry_wins_ = from._impl_.engagements_entry_wins_;
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      _this->_impl_.engagements_1v1_count_ = from._impl_.engagements_1v1_count_;
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      _this->_impl_.engagements_1v1_wins_ = from._impl_.engagements_1v1_wins_;
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      _this->_impl_.engagements_1v2_count_ = from._impl_.engagements_1v2_count_;
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      _this->_impl_.engagements_1v2_wins_ = from._impl_.engagements_1v2_wins_;
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      _this->_impl_.utility_count_ = from._impl_.utility_count_;
    }
  }
  if ((cached_has_bits & 0x07000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      _this->_impl_.utility_success_ = from._impl_.utility_success_;
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      _this->_impl_.flash_count_ = from._impl_.flash_count_;
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      _this->_impl_.flash_success_ = from._impl_.flash_success_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeepPlayerStatsEntry::CopyFrom(const DeepPlayerStatsEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeepPlayerStatsEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeepPlayerStatsEntry::InternalSwap(DeepPlayerStatsEntry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.mates_.InternalSwap(&other->_impl_.mates_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.flash_success_)
      + sizeof(DeepPlayerStatsEntry::_impl_.flash_success_)
      - PROTOBUF_FIELD_OFFSET(DeepPlayerStatsEntry, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::google::protobuf::Metadata DeepPlayerStatsEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeepPlayerMatchEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeepPlayerMatchEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_._has_bits_);
};

DeepPlayerMatchEvent::DeepPlayerMatchEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeepPlayerMatchEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DeepPlayerMatchEvent)
}
DeepPlayerMatchEvent::DeepPlayerMatchEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeepPlayerMatchEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeepPlayerMatchEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE DeepPlayerMatchEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DeepPlayerMatchEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, match_id_),
           0,
           offsetof(Impl_, event_data_) -
               offsetof(Impl_, match_id_) +
               sizeof(Impl_::event_data_));
}
DeepPlayerMatchEvent::~DeepPlayerMatchEvent() {
  // @@protoc_insertion_point(destructor:DeepPlayerMatchEvent)
  SharedDtor(*this);
}
inline void DeepPlayerMatchEvent::SharedDtor(MessageLite& self) {
  DeepPlayerMatchEvent& this_ = static_cast<DeepPlayerMatchEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeepPlayerMatchEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeepPlayerMatchEvent(arena);
}
constexpr auto DeepPlayerMatchEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeepPlayerMatchEvent),
                                            alignof(DeepPlayerMatchEvent));
}
constexpr auto DeepPlayerMatchEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeepPlayerMatchEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeepPlayerMatchEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeepPlayerMatchEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeepPlayerMatchEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeepPlayerMatchEvent>(), &DeepPlayerMatchEvent::ByteSizeLong,
              &DeepPlayerMatchEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_._cached_size_),
          false,
      },
      &DeepPlayerMatchEvent::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        DeepPlayerMatchEvent_class_data_ =
            DeepPlayerMatchEvent::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL DeepPlayerMatchEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeepPlayerMatchEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeepPlayerMatchEvent_class_data_.tc_table);
  return DeepPlayerMatchEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 2>
DeepPlayerMatchEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeepPlayerMatchEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DeepPlayerMatchEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.accountid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.accountid_)}},
    // optional uint64 match_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeepPlayerMatchEvent, _impl_.match_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.match_id_)}},
    // optional uint32 event_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.event_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.event_id_)}},
    // optional uint32 event_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.event_type_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.event_type_)}},
    // optional bool b_playing_ct = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeepPlayerMatchEvent, _impl_.b_playing_ct_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.b_playing_ct_)}},
    // optional int32 user_pos_x = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.user_pos_x_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_pos_x_)}},
    // optional int32 user_pos_y = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.user_pos_y_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_pos_y_)}},
    // optional uint32 user_defidx = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.user_defidx_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_defidx_)}},
    // optional int32 other_pos_x = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.other_pos_x_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_pos_x_)}},
    // optional int32 other_pos_y = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.other_pos_y_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_pos_y_)}},
    // optional uint32 other_defidx = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.other_defidx_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_defidx_)}},
    // optional int32 user_pos_z = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.user_pos_z_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_pos_z_)}},
    // optional int32 other_pos_z = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.other_pos_z_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_pos_z_)}},
    // optional int32 event_data = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeepPlayerMatchEvent, _impl_.event_data_), 13>(),
     {112, 13, 0, PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.event_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.accountid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 match_id = 2;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.match_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 event_id = 3;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.event_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 event_type = 4;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.event_type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool b_playing_ct = 5;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.b_playing_ct_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 user_pos_x = 6;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_pos_x_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 user_pos_y = 7;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_pos_y_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 user_defidx = 8;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_defidx_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 other_pos_x = 9;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_pos_x_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 other_pos_y = 10;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_pos_y_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 other_defidx = 11;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_defidx_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 user_pos_z = 12;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.user_pos_z_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 other_pos_z = 13;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.other_pos_z_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 event_data = 14;
    {PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.event_data_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void DeepPlayerMatchEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:DeepPlayerMatchEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.match_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.user_defidx_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.user_defidx_));
  }
  if ((cached_has_bits & 0x00003f00u) != 0) {
    ::memset(&_impl_.other_pos_x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.event_data_) -
        reinterpret_cast<char*>(&_impl_.other_pos_x_)) + sizeof(_impl_.event_data_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeepPlayerMatchEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeepPlayerMatchEvent& this_ = static_cast<const DeepPlayerMatchEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeepPlayerMatchEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeepPlayerMatchEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:DeepPlayerMatchEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint64 match_id = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_match_id(), target);
  }

  // optional uint32 event_id = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_event_id(), target);
  }

  // optional uint32 event_type = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_event_type(), target);
  }

  // optional bool b_playing_ct = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this_._internal_b_playing_ct(), target);
  }

  // optional int32 user_pos_x = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_user_pos_x(), target);
  }

  // optional int32 user_pos_y = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
            stream, this_._internal_user_pos_y(), target);
  }

  // optional uint32 user_defidx = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_user_defidx(), target);
  }

  // optional int32 other_pos_x = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
            stream, this_._internal_other_pos_x(), target);
  }

  // optional int32 other_pos_y = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
            stream, this_._internal_other_pos_y(), target);
  }

  // optional uint32 other_defidx = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_other_defidx(), target);
  }

  // optional int32 user_pos_z = 12;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<12>(
            stream, this_._internal_user_pos_z(), target);
  }

  // optional int32 other_pos_z = 13;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<13>(
            stream, this_._internal_other_pos_z(), target);
  }

  // optional int32 event_data = 14;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<14>(
            stream, this_._internal_event_data(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeepPlayerMatchEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeepPlayerMatchEvent::ByteSizeLong(const MessageLite& base) {
  const DeepPlayerMatchEvent& this_ = static_cast<const DeepPlayerMatchEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeepPlayerMatchEvent::ByteSizeLong() const {
  const DeepPlayerMatchEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:DeepPlayerMatchEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000010u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000efu) != 0) {
    // optional uint64 match_id = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 event_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_event_id());
    }
    // optional uint32 event_type = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_event_type());
    }
    // optional int32 user_pos_x = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_user_pos_x());
    }
    // optional int32 user_pos_y = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_user_pos_y());
    }
    // optional uint32 user_defidx = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_user_defidx());
    }
  }
  if ((cached_has_bits & 0x00003f00u) != 0) {
    // optional int32 other_pos_x = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_other_pos_x());
    }
    // optional int32 other_pos_y = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_other_pos_y());
    }
    // optional uint32 other_defidx = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_other_defidx());
    }
    // optional int32 user_pos_z = 12;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_user_pos_z());
    }
    // optional int32 other_pos_z = 13;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_other_pos_z());
    }
    // optional int32 event_data = 14;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_data());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeepPlayerMatchEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeepPlayerMatchEvent*>(&to_msg);
  auto& from = static_cast<const DeepPlayerMatchEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeepPlayerMatchEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.event_id_ = from._impl_.event_id_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.event_type_ = from._impl_.event_type_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.b_playing_ct_ = from._impl_.b_playing_ct_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.user_pos_x_ = from._impl_.user_pos_x_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.user_pos_y_ = from._impl_.user_pos_y_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.user_defidx_ = from._impl_.user_defidx_;
    }
  }
  if ((cached_has_bits & 0x00003f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.other_pos_x_ = from._impl_.other_pos_x_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.other_pos_y_ = from._impl_.other_pos_y_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.other_defidx_ = from._impl_.other_defidx_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.user_pos_z_ = from._impl_.user_pos_z_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.other_pos_z_ = from._impl_.other_pos_z_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.event_data_ = from._impl_.event_data_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeepPlayerMatchEvent::CopyFrom(const DeepPlayerMatchEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeepPlayerMatchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeepPlayerMatchEvent::InternalSwap(DeepPlayerMatchEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.event_data_)
      + sizeof(DeepPlayerMatchEvent::_impl_.event_data_)
      - PROTOBUF_FIELD_OFFSET(DeepPlayerMatchEvent, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::google::protobuf::Metadata DeepPlayerMatchEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGC_ServerQuestUpdateData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGC_ServerQuestUpdateData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_._has_bits_);
};

CMsgGC_ServerQuestUpdateData::CMsgGC_ServerQuestUpdateData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_ServerQuestUpdateData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGC_ServerQuestUpdateData)
}
PROTOBUF_NDEBUG_INLINE CMsgGC_ServerQuestUpdateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGC_ServerQuestUpdateData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        player_quest_data_{visibility, arena, from.player_quest_data_},
        binary_data_(arena, from.binary_data_) {}

CMsgGC_ServerQuestUpdateData::CMsgGC_ServerQuestUpdateData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGC_ServerQuestUpdateData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_ServerQuestUpdateData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGC_ServerQuestUpdateData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.missionlbsdata_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.missionlbsdata_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mm_game_mode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mm_game_mode_),
           offsetof(Impl_, flags_) -
               offsetof(Impl_, mm_game_mode_) +
               sizeof(Impl_::flags_));

  // @@protoc_insertion_point(copy_constructor:CMsgGC_ServerQuestUpdateData)
}
PROTOBUF_NDEBUG_INLINE CMsgGC_ServerQuestUpdateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        player_quest_data_{visibility, arena},
        binary_data_(arena) {}

inline void CMsgGC_ServerQuestUpdateData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, missionlbsdata_),
           0,
           offsetof(Impl_, flags_) -
               offsetof(Impl_, missionlbsdata_) +
               sizeof(Impl_::flags_));
}
CMsgGC_ServerQuestUpdateData::~CMsgGC_ServerQuestUpdateData() {
  // @@protoc_insertion_point(destructor:CMsgGC_ServerQuestUpdateData)
  SharedDtor(*this);
}
inline void CMsgGC_ServerQuestUpdateData::SharedDtor(MessageLite& self) {
  CMsgGC_ServerQuestUpdateData& this_ = static_cast<CMsgGC_ServerQuestUpdateData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.binary_data_.Destroy();
  delete this_._impl_.missionlbsdata_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGC_ServerQuestUpdateData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGC_ServerQuestUpdateData(arena);
}
constexpr auto CMsgGC_ServerQuestUpdateData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.player_quest_data_) +
          decltype(CMsgGC_ServerQuestUpdateData::_impl_.player_quest_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGC_ServerQuestUpdateData), alignof(CMsgGC_ServerQuestUpdateData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGC_ServerQuestUpdateData::PlacementNew_,
                                 sizeof(CMsgGC_ServerQuestUpdateData),
                                 alignof(CMsgGC_ServerQuestUpdateData));
  }
}
constexpr auto CMsgGC_ServerQuestUpdateData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGC_ServerQuestUpdateData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGC_ServerQuestUpdateData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGC_ServerQuestUpdateData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGC_ServerQuestUpdateData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGC_ServerQuestUpdateData>(), &CMsgGC_ServerQuestUpdateData::ByteSizeLong,
              &CMsgGC_ServerQuestUpdateData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_._cached_size_),
          false,
      },
      &CMsgGC_ServerQuestUpdateData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGC_ServerQuestUpdateData_class_data_ =
            CMsgGC_ServerQuestUpdateData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGC_ServerQuestUpdateData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGC_ServerQuestUpdateData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGC_ServerQuestUpdateData_class_data_.tc_table);
  return CMsgGC_ServerQuestUpdateData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
CMsgGC_ServerQuestUpdateData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGC_ServerQuestUpdateData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGC_ServerQuestUpdateData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .PlayerQuestData player_quest_data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.player_quest_data_)}},
    // optional bytes binary_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.binary_data_)}},
    // optional uint32 mm_game_mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGC_ServerQuestUpdateData, _impl_.mm_game_mode_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.mm_game_mode_)}},
    // optional .ScoreLeaderboardData missionlbsdata = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.missionlbsdata_)}},
    // optional uint32 flags = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGC_ServerQuestUpdateData, _impl_.flags_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.flags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .PlayerQuestData player_quest_data = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.player_quest_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes binary_data = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.binary_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 mm_game_mode = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.mm_game_mode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .ScoreLeaderboardData missionlbsdata = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.missionlbsdata_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 flags = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.flags_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerQuestData>()},
      {::_pbi::TcParser::GetTable<::ScoreLeaderboardData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGC_ServerQuestUpdateData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGC_ServerQuestUpdateData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_quest_data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.binary_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.missionlbsdata_ != nullptr);
      _impl_.missionlbsdata_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.mm_game_mode_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.flags_) -
        reinterpret_cast<char*>(&_impl_.mm_game_mode_)) + sizeof(_impl_.flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGC_ServerQuestUpdateData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGC_ServerQuestUpdateData& this_ = static_cast<const CMsgGC_ServerQuestUpdateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGC_ServerQuestUpdateData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGC_ServerQuestUpdateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGC_ServerQuestUpdateData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .PlayerQuestData player_quest_data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_player_quest_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_player_quest_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes binary_data = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_binary_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional uint32 mm_game_mode = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_mm_game_mode(), target);
  }

  // optional .ScoreLeaderboardData missionlbsdata = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.missionlbsdata_, this_._impl_.missionlbsdata_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 flags = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_flags(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGC_ServerQuestUpdateData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGC_ServerQuestUpdateData::ByteSizeLong(const MessageLite& base) {
  const CMsgGC_ServerQuestUpdateData& this_ = static_cast<const CMsgGC_ServerQuestUpdateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGC_ServerQuestUpdateData::ByteSizeLong() const {
  const CMsgGC_ServerQuestUpdateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGC_ServerQuestUpdateData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .PlayerQuestData player_quest_data = 1;
    {
      total_size += 1UL * this_._internal_player_quest_data_size();
      for (const auto& msg : this_._internal_player_quest_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional bytes binary_data = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_binary_data());
    }
    // optional .ScoreLeaderboardData missionlbsdata = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.missionlbsdata_);
    }
    // optional uint32 mm_game_mode = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_mm_game_mode());
    }
    // optional uint32 flags = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_flags());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGC_ServerQuestUpdateData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGC_ServerQuestUpdateData*>(&to_msg);
  auto& from = static_cast<const CMsgGC_ServerQuestUpdateData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGC_ServerQuestUpdateData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_player_quest_data()->MergeFrom(
      from._internal_player_quest_data());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_binary_data(from._internal_binary_data());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.missionlbsdata_ != nullptr);
      if (_this->_impl_.missionlbsdata_ == nullptr) {
        _this->_impl_.missionlbsdata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.missionlbsdata_);
      } else {
        _this->_impl_.missionlbsdata_->MergeFrom(*from._impl_.missionlbsdata_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.mm_game_mode_ = from._impl_.mm_game_mode_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGC_ServerQuestUpdateData::CopyFrom(const CMsgGC_ServerQuestUpdateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGC_ServerQuestUpdateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGC_ServerQuestUpdateData::InternalSwap(CMsgGC_ServerQuestUpdateData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.player_quest_data_.InternalSwap(&other->_impl_.player_quest_data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.binary_data_, &other->_impl_.binary_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.flags_)
      + sizeof(CMsgGC_ServerQuestUpdateData::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgGC_ServerQuestUpdateData, _impl_.missionlbsdata_)>(
          reinterpret_cast<char*>(&_impl_.missionlbsdata_),
          reinterpret_cast<char*>(&other->_impl_.missionlbsdata_));
}

::google::protobuf::Metadata CMsgGC_ServerQuestUpdateData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
}
CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, token_),
           0,
           offsetof(Impl_, retry_) -
               offsetof(Impl_, token_) +
               sizeof(Impl_::retry_));
}
CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::~CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm>(), &CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 retry = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.retry_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.retry_)}},
    // optional uint32 token = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.token_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.token_)}},
    // optional uint32 stamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.stamp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.stamp_)}},
    // optional uint64 exchange = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.exchange_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.exchange_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 token = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.token_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stamp = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.stamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 exchange = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.exchange_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 retry = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.retry_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.token_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.retry_) -
        reinterpret_cast<char*>(&_impl_.token_)) + sizeof(_impl_.retry_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 token = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_token(), target);
  }

  // optional uint32 stamp = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_stamp(), target);
  }

  // optional uint64 exchange = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_exchange(), target);
  }

  // optional uint32 retry = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_retry(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional uint32 token = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_token());
    }
    // optional uint32 stamp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_stamp());
    }
    // optional uint64 exchange = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_exchange());
    }
    // optional uint32 retry = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_retry());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.token_ = from._impl_.token_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.stamp_ = from._impl_.stamp_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.exchange_ = from._impl_.exchange_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.retry_ = from._impl_.retry_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::InternalSwap(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.retry_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::_impl_.retry_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm, _impl_.token_)>(
          reinterpret_cast<char*>(&_impl_.token_),
          reinterpret_cast<char*>(&other->_impl_.token_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ServerReservationUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ServerReservationUpdate::CMsgGCCStrike15_v2_GC2ServerReservationUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
}
CMsgGCCStrike15_v2_GC2ServerReservationUpdate::CMsgGCCStrike15_v2_GC2ServerReservationUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_GC2ServerReservationUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ServerReservationUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_GC2ServerReservationUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewers_external_total_),
           0,
           offsetof(Impl_, viewers_external_steam_) -
               offsetof(Impl_, viewers_external_total_) +
               sizeof(Impl_::viewers_external_steam_));
}
CMsgGCCStrike15_v2_GC2ServerReservationUpdate::~CMsgGCCStrike15_v2_GC2ServerReservationUpdate() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ServerReservationUpdate::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ServerReservationUpdate& this_ = static_cast<CMsgGCCStrike15_v2_GC2ServerReservationUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ServerReservationUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ServerReservationUpdate(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ServerReservationUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_GC2ServerReservationUpdate),
                                            alignof(CMsgGCCStrike15_v2_GC2ServerReservationUpdate));
}
constexpr auto CMsgGCCStrike15_v2_GC2ServerReservationUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ServerReservationUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ServerReservationUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ServerReservationUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>(), &CMsgGCCStrike15_v2_GC2ServerReservationUpdate::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ServerReservationUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ServerReservationUpdate::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_ =
            CMsgGCCStrike15_v2_GC2ServerReservationUpdate::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ServerReservationUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_GC2ServerReservationUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GC2ServerReservationUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ServerReservationUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 viewers_external_steam = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_steam_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_steam_)}},
    // optional uint32 viewers_external_total = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_total_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_total_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 viewers_external_total = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_total_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 viewers_external_steam = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_steam_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ServerReservationUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.viewers_external_total_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.viewers_external_steam_) -
        reinterpret_cast<char*>(&_impl_.viewers_external_total_)) + sizeof(_impl_.viewers_external_steam_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ServerReservationUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ServerReservationUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ServerReservationUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ServerReservationUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ServerReservationUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 viewers_external_total = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_viewers_external_total(), target);
  }

  // optional uint32 viewers_external_steam = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_viewers_external_steam(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ServerReservationUpdate::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ServerReservationUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ServerReservationUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ServerReservationUpdate::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ServerReservationUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 viewers_external_total = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_viewers_external_total());
    }
    // optional uint32 viewers_external_steam = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_viewers_external_steam());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ServerReservationUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ServerReservationUpdate*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ServerReservationUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.viewers_external_total_ = from._impl_.viewers_external_total_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.viewers_external_steam_ = from._impl_.viewers_external_steam_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ServerReservationUpdate::CopyFrom(const CMsgGCCStrike15_v2_GC2ServerReservationUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ServerReservationUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ServerReservationUpdate::InternalSwap(CMsgGCCStrike15_v2_GC2ServerReservationUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_steam_)
      + sizeof(CMsgGCCStrike15_v2_GC2ServerReservationUpdate::_impl_.viewers_external_steam_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ServerReservationUpdate, _impl_.viewers_external_total_)>(
          reinterpret_cast<char*>(&_impl_.viewers_external_total_),
          reinterpret_cast<char*>(&other->_impl_.viewers_external_total_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ServerReservationUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingStart::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingStart>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingStart::CMsgGCCStrike15_v2_MatchmakingStart(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingStart_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingStart)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingStart::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingStart& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_ids_{visibility, arena, from.account_ids_},
        ticket_data_(arena, from.ticket_data_) {}

CMsgGCCStrike15_v2_MatchmakingStart::CMsgGCCStrike15_v2_MatchmakingStart(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingStart& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingStart_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingStart* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tournament_match_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournament_match_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, game_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, game_type_),
           offsetof(Impl_, lobby_id_) -
               offsetof(Impl_, game_type_) +
               sizeof(Impl_::lobby_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingStart)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingStart::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_ids_{visibility, arena},
        ticket_data_(arena) {}

inline void CMsgGCCStrike15_v2_MatchmakingStart::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tournament_match_),
           0,
           offsetof(Impl_, lobby_id_) -
               offsetof(Impl_, tournament_match_) +
               sizeof(Impl_::lobby_id_));
}
CMsgGCCStrike15_v2_MatchmakingStart::~CMsgGCCStrike15_v2_MatchmakingStart() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingStart)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingStart::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingStart& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingStart&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ticket_data_.Destroy();
  delete this_._impl_.tournament_match_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStart::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingStart(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingStart::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.account_ids_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingStart::_impl_.account_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGCCStrike15_v2_MatchmakingStart), alignof(CMsgGCCStrike15_v2_MatchmakingStart), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchmakingStart::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchmakingStart),
                                 alignof(CMsgGCCStrike15_v2_MatchmakingStart));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingStart::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingStart_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingStart::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingStart>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingStart::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingStart>(), &CMsgGCCStrike15_v2_MatchmakingStart::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingStart::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingStart::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingStart_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingStart::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStart::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingStart_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingStart_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingStart_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 63, 2>
CMsgGCCStrike15_v2_MatchmakingStart::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingStart_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingStart>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 lobby_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.lobby_id_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.lobby_id_)}},
    // repeated uint32 account_ids = 1;
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.account_ids_)}},
    // optional uint32 game_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.game_type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.game_type_)}},
    // optional string ticket_data = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.ticket_data_)}},
    // optional uint32 client_version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.client_version_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.client_version_)}},
    // optional .TournamentMatchSetup tournament_match = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tournament_match_)}},
    // optional bool prime_only = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.prime_only_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.prime_only_)}},
    // optional uint32 tv_control = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tv_control_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tv_control_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 account_ids = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.account_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint32 game_type = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.game_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string ticket_data = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.ticket_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 client_version = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.client_version_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .TournamentMatchSetup tournament_match = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tournament_match_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool prime_only = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.prime_only_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 tv_control = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tv_control_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 lobby_id = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.lobby_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::TournamentMatchSetup>()},
  }},
  {{
    "\43\0\0\13\0\0\0\0\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_MatchmakingStart"
    "ticket_data"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingStart::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingStart)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.ticket_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.tournament_match_ != nullptr);
      _impl_.tournament_match_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.game_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lobby_id_) -
        reinterpret_cast<char*>(&_impl_.game_type_)) + sizeof(_impl_.lobby_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStart::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingStart& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingStart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStart::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingStart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingStart)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 account_ids = 1;
  for (int i = 0, n = this_._internal_account_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_ids().Get(i), target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 game_type = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_game_type(), target);
  }

  // optional string ticket_data = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_ticket_data();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingStart.ticket_data");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 client_version = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_client_version(), target);
  }

  // optional .TournamentMatchSetup tournament_match = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.tournament_match_, this_._impl_.tournament_match_->GetCachedSize(), target,
        stream);
  }

  // optional bool prime_only = 6;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this_._internal_prime_only(), target);
  }

  // optional uint32 tv_control = 7;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_tv_control(), target);
  }

  // optional uint64 lobby_id = 8;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this_._internal_lobby_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingStart)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingStart::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingStart& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingStart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingStart::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingStart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingStart)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 account_ids = 1;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_account_ids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_account_ids_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000010u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000006fu) != 0) {
    // optional string ticket_data = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_ticket_data());
    }
    // optional .TournamentMatchSetup tournament_match = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tournament_match_);
    }
    // optional uint32 game_type = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
    // optional uint32 client_version = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_client_version());
    }
    // optional uint32 tv_control = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_control());
    }
    // optional uint64 lobby_id = 8;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_lobby_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingStart::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingStart*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingStart&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingStart)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_ids()->MergeFrom(from._internal_account_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_ticket_data(from._internal_ticket_data());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.tournament_match_ != nullptr);
      if (_this->_impl_.tournament_match_ == nullptr) {
        _this->_impl_.tournament_match_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournament_match_);
      } else {
        _this->_impl_.tournament_match_->MergeFrom(*from._impl_.tournament_match_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.client_version_ = from._impl_.client_version_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.prime_only_ = from._impl_.prime_only_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.tv_control_ = from._impl_.tv_control_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.lobby_id_ = from._impl_.lobby_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingStart::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingStart::InternalSwap(CMsgGCCStrike15_v2_MatchmakingStart* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_ids_.InternalSwap(&other->_impl_.account_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ticket_data_, &other->_impl_.ticket_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.lobby_id_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingStart::_impl_.lobby_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStart, _impl_.tournament_match_)>(
          reinterpret_cast<char*>(&_impl_.tournament_match_),
          reinterpret_cast<char*>(&other->_impl_.tournament_match_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingStart::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingStop::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingStop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStop, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingStop::CMsgGCCStrike15_v2_MatchmakingStop(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingStop_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingStop)
}
CMsgGCCStrike15_v2_MatchmakingStop::CMsgGCCStrike15_v2_MatchmakingStop(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchmakingStop& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingStop_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingStop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchmakingStop::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.abandon_ = {};
}
CMsgGCCStrike15_v2_MatchmakingStop::~CMsgGCCStrike15_v2_MatchmakingStop() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingStop)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingStop::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingStop& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingStop&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStop::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingStop(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingStop::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchmakingStop),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingStop));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingStop::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingStop_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingStop::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingStop>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingStop::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingStop>(), &CMsgGCCStrike15_v2_MatchmakingStop::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingStop::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStop, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingStop::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingStop_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingStop::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStop::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingStop_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingStop_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingStop_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_MatchmakingStop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStop, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchmakingStop_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingStop>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 abandon = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingStop, _impl_.abandon_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStop, _impl_.abandon_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 abandon = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingStop, _impl_.abandon_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingStop::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingStop)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.abandon_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStop::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingStop& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingStop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingStop::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingStop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingStop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 abandon = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_abandon(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingStop)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingStop::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingStop& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingStop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingStop::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingStop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingStop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional int32 abandon = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_abandon());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingStop::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingStop*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingStop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingStop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.abandon_ = from._impl_.abandon_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingStop::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingStop::InternalSwap(CMsgGCCStrike15_v2_MatchmakingStop* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.abandon_, other->_impl_.abandon_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingStop::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
}
CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, distance_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::distance_));
}
CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::~CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>(), &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional float distance = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.distance_)}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.type_)}},
    // optional int32 region_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.region_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.region_id_)}},
    // optional float region_r = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.region_r_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 region_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.region_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float region_r = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.region_r_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float distance = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.distance_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.distance_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.distance_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 type = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_type(), target);
  }

  // optional int32 region_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_region_id(), target);
  }

  // optional float region_r = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_region_r(), target);
  }

  // optional float distance = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this_._internal_distance(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x0000000cu & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional int32 type = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_type());
    }
    // optional int32 region_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_region_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.region_id_ = from._impl_.region_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.region_r_ = from._impl_.region_r_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.distance_ = from._impl_.distance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::InternalSwap(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.distance_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::_impl_.distance_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        gameserverpings_{visibility, arena, from.gameserverpings_},
        data_center_pings_{visibility, arena, from.data_center_pings_},
        notes_{visibility, arena, from.notes_},
        search_key_(arena, from.search_key_),
        debug_message_(arena, from.debug_message_) {}

CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingClient2ServerPing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_index_),
           offsetof(Impl_, test_token_) -
               offsetof(Impl_, offset_index_) +
               sizeof(Impl_::test_token_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        gameserverpings_{visibility, arena},
        data_center_pings_{visibility, arena},
        notes_{visibility, arena},
        search_key_(arena),
        debug_message_(arena) {}

inline void CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_index_),
           0,
           offsetof(Impl_, test_token_) -
               offsetof(Impl_, offset_index_) +
               sizeof(Impl_::test_token_));
}
CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::~CMsgGCCStrike15_v2_MatchmakingClient2ServerPing() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.search_key_.Destroy();
  this_._impl_.debug_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingClient2ServerPing(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.gameserverpings_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_impl_.gameserverpings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.data_center_pings_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_impl_.data_center_pings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.notes_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_impl_.notes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing), alignof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing),
                                 alignof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing>(), &CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 77, 2>
CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .GameServerPing gameserverpings = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.gameserverpings_)}},
    // optional int32 offset_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.offset_index_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.offset_index_)}},
    // optional int32 final_batch = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.final_batch_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.final_batch_)}},
    // repeated .DataCenterPing data_center_pings = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.data_center_pings_)}},
    // optional uint32 max_ping = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.max_ping_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.max_ping_)}},
    // optional fixed32 test_token = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.test_token_)}},
    // optional bytes search_key = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.search_key_)}},
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 2, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.notes_)}},
    // optional string debug_message = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.debug_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .GameServerPing gameserverpings = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.gameserverpings_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 offset_index = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.offset_index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 final_batch = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.final_batch_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .DataCenterPing data_center_pings = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.data_center_pings_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 max_ping = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.max_ping_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 test_token = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.test_token_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional bytes search_key = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.search_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.notes_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string debug_message = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.debug_message_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::GameServerPing>()},
      {::_pbi::TcParser::GetTable<::DataCenterPing>()},
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>()},
  }},
  {{
    "\57\0\0\0\0\0\0\0\0\15\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_MatchmakingClient2ServerPing"
    "debug_message"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gameserverpings_.Clear();
  _impl_.data_center_pings_.Clear();
  _impl_.notes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.search_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.debug_message_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.offset_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.test_token_) -
        reinterpret_cast<char*>(&_impl_.offset_index_)) + sizeof(_impl_.test_token_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .GameServerPing gameserverpings = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_gameserverpings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_gameserverpings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 offset_index = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_offset_index(), target);
  }

  // optional int32 final_batch = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_final_batch(), target);
  }

  // repeated .DataCenterPing data_center_pings = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_data_center_pings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_data_center_pings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 max_ping = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_max_ping(), target);
  }

  // optional fixed32 test_token = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        6, this_._internal_test_token(), target);
  }

  // optional bytes search_key = 7;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_search_key();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_notes_size());
       i < n; i++) {
    const auto& repfield = this_._internal_notes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string debug_message = 9;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_debug_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingClient2ServerPing.debug_message");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .GameServerPing gameserverpings = 1;
    {
      total_size += 1UL * this_._internal_gameserverpings_size();
      for (const auto& msg : this_._internal_gameserverpings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .DataCenterPing data_center_pings = 4;
    {
      total_size += 1UL * this_._internal_data_center_pings_size();
      for (const auto& msg : this_._internal_data_center_pings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 8;
    {
      total_size += 1UL * this_._internal_notes_size();
      for (const auto& msg : this_._internal_notes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000020u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional bytes search_key = 7;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_search_key());
    }
    // optional string debug_message = 9;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_debug_message());
    }
    // optional int32 offset_index = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_offset_index());
    }
    // optional int32 final_batch = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_final_batch());
    }
    // optional uint32 max_ping = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_max_ping());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gameserverpings()->MergeFrom(
      from._internal_gameserverpings());
  _this->_internal_mutable_data_center_pings()->MergeFrom(
      from._internal_data_center_pings());
  _this->_internal_mutable_notes()->MergeFrom(
      from._internal_notes());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_search_key(from._internal_search_key());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_debug_message(from._internal_debug_message());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.offset_index_ = from._impl_.offset_index_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.final_batch_ = from._impl_.final_batch_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.max_ping_ = from._impl_.max_ping_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.test_token_ = from._impl_.test_token_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingClient2ServerPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingClient2ServerPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::InternalSwap(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.gameserverpings_.InternalSwap(&other->_impl_.gameserverpings_);
  _impl_.data_center_pings_.InternalSwap(&other->_impl_.data_center_pings_);
  _impl_.notes_.InternalSwap(&other->_impl_.notes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.search_key_, &other->_impl_.search_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.debug_message_, &other->_impl_.debug_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.test_token_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::_impl_.test_token_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing, _impl_.offset_index_)>(
          reinterpret_cast<char*>(&_impl_.offset_index_),
          reinterpret_cast<char*>(&other->_impl_.offset_index_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        waiting_account_id_sessions_{visibility, arena, from.waiting_account_id_sessions_},
        ongoingmatch_account_id_sessions_{visibility, arena, from.ongoingmatch_account_id_sessions_},
        failping_account_id_sessions_{visibility, arena, from.failping_account_id_sessions_},
        penalty_account_id_sessions_{visibility, arena, from.penalty_account_id_sessions_},
        failready_account_id_sessions_{visibility, arena, from.failready_account_id_sessions_},
        vacbanned_account_id_sessions_{visibility, arena, from.vacbanned_account_id_sessions_},
        notes_{visibility, arena, from.notes_},
        penalty_account_id_sessions_green_{visibility, arena, from.penalty_account_id_sessions_green_},
        insufficientlevel_sessions_{visibility, arena, from.insufficientlevel_sessions_},
        vsncheck_account_id_sessions_{visibility, arena, from.vsncheck_account_id_sessions_},
        launcher_mismatch_sessions_{visibility, arena, from.launcher_mismatch_sessions_},
        insecure_account_id_sessions_{visibility, arena, from.insecure_account_id_sessions_},
        error_(arena, from.error_) {}

CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.global_stats_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.global_stats_)
                : nullptr;
  _impl_.server_ipaddress_mask_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.server_ipaddress_mask_)
                : nullptr;
  _impl_.matchmaking_ = from._impl_.matchmaking_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        waiting_account_id_sessions_{visibility, arena},
        ongoingmatch_account_id_sessions_{visibility, arena},
        failping_account_id_sessions_{visibility, arena},
        penalty_account_id_sessions_{visibility, arena},
        failready_account_id_sessions_{visibility, arena},
        vacbanned_account_id_sessions_{visibility, arena},
        notes_{visibility, arena},
        penalty_account_id_sessions_green_{visibility, arena},
        insufficientlevel_sessions_{visibility, arena},
        vsncheck_account_id_sessions_{visibility, arena},
        launcher_mismatch_sessions_{visibility, arena},
        insecure_account_id_sessions_{visibility, arena},
        error_(arena) {}

inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, global_stats_),
           0,
           offsetof(Impl_, matchmaking_) -
               offsetof(Impl_, global_stats_) +
               sizeof(Impl_::matchmaking_));
}
CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::~CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_.Destroy();
  delete this_._impl_.global_stats_;
  delete this_._impl_.server_ipaddress_mask_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.waiting_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.waiting_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.ongoingmatch_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.ongoingmatch_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failping_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.failping_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.penalty_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failready_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.failready_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vacbanned_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.vacbanned_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.notes_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.notes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_green_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.penalty_account_id_sessions_green_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insufficientlevel_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.insufficientlevel_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vsncheck_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.vsncheck_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.launcher_mismatch_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.launcher_mismatch_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insecure_account_id_sessions_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.insecure_account_id_sessions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate), alignof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate),
                                 alignof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate>(), &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 16, 3, 75, 2>
CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 matchmaking = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.matchmaking_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.matchmaking_)}},
    // repeated uint32 waiting_account_id_sessions = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.waiting_account_id_sessions_)}},
    // optional string error = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.error_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated uint32 ongoingmatch_account_id_sessions = 6;
    {::_pbi::TcParser::FastV32R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.ongoingmatch_account_id_sessions_)}},
    // optional .GlobalStatistics global_stats = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.global_stats_)}},
    // repeated uint32 failping_account_id_sessions = 8;
    {::_pbi::TcParser::FastV32R1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failping_account_id_sessions_)}},
    // repeated uint32 penalty_account_id_sessions = 9;
    {::_pbi::TcParser::FastV32R1,
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_)}},
    // repeated uint32 failready_account_id_sessions = 10;
    {::_pbi::TcParser::FastV32R1,
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failready_account_id_sessions_)}},
    // repeated uint32 vacbanned_account_id_sessions = 11;
    {::_pbi::TcParser::FastV32R1,
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vacbanned_account_id_sessions_)}},
    // optional .IpAddressMask server_ipaddress_mask = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 2, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.server_ipaddress_mask_)}},
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 2, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.notes_)}},
    // repeated uint32 penalty_account_id_sessions_green = 14;
    {::_pbi::TcParser::FastV32R1,
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_green_)}},
    // repeated uint32 insufficientlevel_sessions = 15;
    {::_pbi::TcParser::FastV32R1,
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insufficientlevel_sessions_)}},
    // repeated uint32 vsncheck_account_id_sessions = 16;
    {::_pbi::TcParser::FastV32R2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vsncheck_account_id_sessions_)}},
    // repeated uint32 launcher_mismatch_sessions = 17;
    {::_pbi::TcParser::FastV32R2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.launcher_mismatch_sessions_)}},
    // repeated uint32 insecure_account_id_sessions = 18;
    {::_pbi::TcParser::FastV32R2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insecure_account_id_sessions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 matchmaking = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.matchmaking_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated uint32 waiting_account_id_sessions = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.waiting_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional string error = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated uint32 ongoingmatch_account_id_sessions = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.ongoingmatch_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional .GlobalStatistics global_stats = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.global_stats_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 failping_account_id_sessions = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failping_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 penalty_account_id_sessions = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 failready_account_id_sessions = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.failready_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 vacbanned_account_id_sessions = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vacbanned_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional .IpAddressMask server_ipaddress_mask = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.server_ipaddress_mask_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.notes_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 penalty_account_id_sessions_green = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.penalty_account_id_sessions_green_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 insufficientlevel_sessions = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insufficientlevel_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 vsncheck_account_id_sessions = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.vsncheck_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 launcher_mismatch_sessions = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.launcher_mismatch_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 insecure_account_id_sessions = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.insecure_account_id_sessions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::GlobalStatistics>()},
      {::_pbi::TcParser::GetTable<::IpAddressMask>()},
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>()},
  }},
  {{
    "\55\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate"
    "error"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.waiting_account_id_sessions_.Clear();
  _impl_.ongoingmatch_account_id_sessions_.Clear();
  _impl_.failping_account_id_sessions_.Clear();
  _impl_.penalty_account_id_sessions_.Clear();
  _impl_.failready_account_id_sessions_.Clear();
  _impl_.vacbanned_account_id_sessions_.Clear();
  _impl_.notes_.Clear();
  _impl_.penalty_account_id_sessions_green_.Clear();
  _impl_.insufficientlevel_sessions_.Clear();
  _impl_.vsncheck_account_id_sessions_.Clear();
  _impl_.launcher_mismatch_sessions_.Clear();
  _impl_.insecure_account_id_sessions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.global_stats_ != nullptr);
      _impl_.global_stats_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.server_ipaddress_mask_ != nullptr);
      _impl_.server_ipaddress_mask_->Clear();
    }
  }
  _impl_.matchmaking_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 matchmaking = 1;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_matchmaking(), target);
  }

  // repeated uint32 waiting_account_id_sessions = 2;
  for (int i = 0, n = this_._internal_waiting_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_waiting_account_id_sessions().Get(i), target);
  }

  // optional string error = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_error();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate.error");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated uint32 ongoingmatch_account_id_sessions = 6;
  for (int i = 0, n = this_._internal_ongoingmatch_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_ongoingmatch_account_id_sessions().Get(i), target);
  }

  // optional .GlobalStatistics global_stats = 7;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.global_stats_, this_._impl_.global_stats_->GetCachedSize(), target,
        stream);
  }

  // repeated uint32 failping_account_id_sessions = 8;
  for (int i = 0, n = this_._internal_failping_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_failping_account_id_sessions().Get(i), target);
  }

  // repeated uint32 penalty_account_id_sessions = 9;
  for (int i = 0, n = this_._internal_penalty_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_penalty_account_id_sessions().Get(i), target);
  }

  // repeated uint32 failready_account_id_sessions = 10;
  for (int i = 0, n = this_._internal_failready_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_failready_account_id_sessions().Get(i), target);
  }

  // repeated uint32 vacbanned_account_id_sessions = 11;
  for (int i = 0, n = this_._internal_vacbanned_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_vacbanned_account_id_sessions().Get(i), target);
  }

  // optional .IpAddressMask server_ipaddress_mask = 12;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.server_ipaddress_mask_, this_._impl_.server_ipaddress_mask_->GetCachedSize(), target,
        stream);
  }

  // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_notes_size());
       i < n; i++) {
    const auto& repfield = this_._internal_notes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 penalty_account_id_sessions_green = 14;
  for (int i = 0, n = this_._internal_penalty_account_id_sessions_green_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_penalty_account_id_sessions_green().Get(i), target);
  }

  // repeated uint32 insufficientlevel_sessions = 15;
  for (int i = 0, n = this_._internal_insufficientlevel_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this_._internal_insufficientlevel_sessions().Get(i), target);
  }

  // repeated uint32 vsncheck_account_id_sessions = 16;
  for (int i = 0, n = this_._internal_vsncheck_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_vsncheck_account_id_sessions().Get(i), target);
  }

  // repeated uint32 launcher_mismatch_sessions = 17;
  for (int i = 0, n = this_._internal_launcher_mismatch_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        17, this_._internal_launcher_mismatch_sessions().Get(i), target);
  }

  // repeated uint32 insecure_account_id_sessions = 18;
  for (int i = 0, n = this_._internal_insecure_account_id_sessions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this_._internal_insecure_account_id_sessions().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 waiting_account_id_sessions = 2;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_waiting_account_id_sessions());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_waiting_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 ongoingmatch_account_id_sessions = 6;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_ongoingmatch_account_id_sessions());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_ongoingmatch_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 failping_account_id_sessions = 8;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_failping_account_id_sessions());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_failping_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 penalty_account_id_sessions = 9;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_penalty_account_id_sessions());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_penalty_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 failready_account_id_sessions = 10;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_failready_account_id_sessions());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_failready_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 vacbanned_account_id_sessions = 11;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_vacbanned_account_id_sessions());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_vacbanned_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 13;
    {
      total_size += 1UL * this_._internal_notes_size();
      for (const auto& msg : this_._internal_notes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated uint32 penalty_account_id_sessions_green = 14;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_penalty_account_id_sessions_green());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_penalty_account_id_sessions_green_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 insufficientlevel_sessions = 15;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_insufficientlevel_sessions());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_insufficientlevel_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 vsncheck_account_id_sessions = 16;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_vsncheck_account_id_sessions());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_vsncheck_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 launcher_mismatch_sessions = 17;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_launcher_mismatch_sessions());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_launcher_mismatch_sessions_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 insecure_account_id_sessions = 18;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_insecure_account_id_sessions());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_insecure_account_id_sessions_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional string error = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_error());
    }
    // optional .GlobalStatistics global_stats = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.global_stats_);
    }
    // optional .IpAddressMask server_ipaddress_mask = 12;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.server_ipaddress_mask_);
    }
    // optional int32 matchmaking = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_matchmaking());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_waiting_account_id_sessions()->MergeFrom(from._internal_waiting_account_id_sessions());
  _this->_internal_mutable_ongoingmatch_account_id_sessions()->MergeFrom(from._internal_ongoingmatch_account_id_sessions());
  _this->_internal_mutable_failping_account_id_sessions()->MergeFrom(from._internal_failping_account_id_sessions());
  _this->_internal_mutable_penalty_account_id_sessions()->MergeFrom(from._internal_penalty_account_id_sessions());
  _this->_internal_mutable_failready_account_id_sessions()->MergeFrom(from._internal_failready_account_id_sessions());
  _this->_internal_mutable_vacbanned_account_id_sessions()->MergeFrom(from._internal_vacbanned_account_id_sessions());
  _this->_internal_mutable_notes()->MergeFrom(
      from._internal_notes());
  _this->_internal_mutable_penalty_account_id_sessions_green()->MergeFrom(from._internal_penalty_account_id_sessions_green());
  _this->_internal_mutable_insufficientlevel_sessions()->MergeFrom(from._internal_insufficientlevel_sessions());
  _this->_internal_mutable_vsncheck_account_id_sessions()->MergeFrom(from._internal_vsncheck_account_id_sessions());
  _this->_internal_mutable_launcher_mismatch_sessions()->MergeFrom(from._internal_launcher_mismatch_sessions());
  _this->_internal_mutable_insecure_account_id_sessions()->MergeFrom(from._internal_insecure_account_id_sessions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_error(from._internal_error());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.global_stats_ != nullptr);
      if (_this->_impl_.global_stats_ == nullptr) {
        _this->_impl_.global_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.global_stats_);
      } else {
        _this->_impl_.global_stats_->MergeFrom(*from._impl_.global_stats_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.server_ipaddress_mask_ != nullptr);
      if (_this->_impl_.server_ipaddress_mask_ == nullptr) {
        _this->_impl_.server_ipaddress_mask_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.server_ipaddress_mask_);
      } else {
        _this->_impl_.server_ipaddress_mask_->MergeFrom(*from._impl_.server_ipaddress_mask_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.matchmaking_ = from._impl_.matchmaking_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::InternalSwap(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.waiting_account_id_sessions_.InternalSwap(&other->_impl_.waiting_account_id_sessions_);
  _impl_.ongoingmatch_account_id_sessions_.InternalSwap(&other->_impl_.ongoingmatch_account_id_sessions_);
  _impl_.failping_account_id_sessions_.InternalSwap(&other->_impl_.failping_account_id_sessions_);
  _impl_.penalty_account_id_sessions_.InternalSwap(&other->_impl_.penalty_account_id_sessions_);
  _impl_.failready_account_id_sessions_.InternalSwap(&other->_impl_.failready_account_id_sessions_);
  _impl_.vacbanned_account_id_sessions_.InternalSwap(&other->_impl_.vacbanned_account_id_sessions_);
  _impl_.notes_.InternalSwap(&other->_impl_.notes_);
  _impl_.penalty_account_id_sessions_green_.InternalSwap(&other->_impl_.penalty_account_id_sessions_green_);
  _impl_.insufficientlevel_sessions_.InternalSwap(&other->_impl_.insufficientlevel_sessions_);
  _impl_.vsncheck_account_id_sessions_.InternalSwap(&other->_impl_.vsncheck_account_id_sessions_);
  _impl_.launcher_mismatch_sessions_.InternalSwap(&other->_impl_.launcher_mismatch_sessions_);
  _impl_.insecure_account_id_sessions_.InternalSwap(&other->_impl_.insecure_account_id_sessions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.matchmaking_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::_impl_.matchmaking_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate, _impl_.global_stats_)>(
          reinterpret_cast<char*>(&_impl_.global_stats_),
          reinterpret_cast<char*>(&other->_impl_.global_stats_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_TournamentMatchDraft_Entry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CDataGCCStrike15_v2_TournamentMatchDraft_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_._has_bits_);
};

CDataGCCStrike15_v2_TournamentMatchDraft_Entry::CDataGCCStrike15_v2_TournamentMatchDraft_Entry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
}
CDataGCCStrike15_v2_TournamentMatchDraft_Entry::CDataGCCStrike15_v2_TournamentMatchDraft_Entry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDataGCCStrike15_v2_TournamentMatchDraft_Entry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentMatchDraft_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CDataGCCStrike15_v2_TournamentMatchDraft_Entry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mapid_),
           0,
           offsetof(Impl_, team_id_ct_) -
               offsetof(Impl_, mapid_) +
               sizeof(Impl_::team_id_ct_));
}
CDataGCCStrike15_v2_TournamentMatchDraft_Entry::~CDataGCCStrike15_v2_TournamentMatchDraft_Entry() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_TournamentMatchDraft_Entry::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_TournamentMatchDraft_Entry& this_ = static_cast<CDataGCCStrike15_v2_TournamentMatchDraft_Entry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft_Entry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_TournamentMatchDraft_Entry(arena);
}
constexpr auto CDataGCCStrike15_v2_TournamentMatchDraft_Entry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CDataGCCStrike15_v2_TournamentMatchDraft_Entry),
                                            alignof(CDataGCCStrike15_v2_TournamentMatchDraft_Entry));
}
constexpr auto CDataGCCStrike15_v2_TournamentMatchDraft_Entry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_TournamentMatchDraft_Entry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_TournamentMatchDraft_Entry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_TournamentMatchDraft_Entry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_TournamentMatchDraft_Entry>(), &CDataGCCStrike15_v2_TournamentMatchDraft_Entry::ByteSizeLong,
              &CDataGCCStrike15_v2_TournamentMatchDraft_Entry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_TournamentMatchDraft_Entry::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_ =
            CDataGCCStrike15_v2_TournamentMatchDraft_Entry::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft_Entry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_.tc_table);
  return CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CDataGCCStrike15_v2_TournamentMatchDraft_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CDataGCCStrike15_v2_TournamentMatchDraft_Entry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentMatchDraft_Entry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 team_id_ct = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.team_id_ct_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.team_id_ct_)}},
    // optional int32 mapid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.mapid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.mapid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 mapid = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.mapid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_ct = 2;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.team_id_ct_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_TournamentMatchDraft_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.mapid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.team_id_ct_) -
        reinterpret_cast<char*>(&_impl_.mapid_)) + sizeof(_impl_.team_id_ct_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft_Entry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_TournamentMatchDraft_Entry& this_ = static_cast<const CDataGCCStrike15_v2_TournamentMatchDraft_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft_Entry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_TournamentMatchDraft_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 mapid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_mapid(), target);
  }

  // optional int32 team_id_ct = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_team_id_ct(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_TournamentMatchDraft_Entry::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_TournamentMatchDraft_Entry& this_ = static_cast<const CDataGCCStrike15_v2_TournamentMatchDraft_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_TournamentMatchDraft_Entry::ByteSizeLong() const {
  const CDataGCCStrike15_v2_TournamentMatchDraft_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional int32 mapid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_mapid());
    }
    // optional int32 team_id_ct = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_ct());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_TournamentMatchDraft_Entry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_TournamentMatchDraft_Entry*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_TournamentMatchDraft_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.mapid_ = from._impl_.mapid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.team_id_ct_ = from._impl_.team_id_ct_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_TournamentMatchDraft_Entry::CopyFrom(const CDataGCCStrike15_v2_TournamentMatchDraft_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_TournamentMatchDraft_Entry::InternalSwap(CDataGCCStrike15_v2_TournamentMatchDraft_Entry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.team_id_ct_)
      + sizeof(CDataGCCStrike15_v2_TournamentMatchDraft_Entry::_impl_.team_id_ct_)
      - PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft_Entry, _impl_.mapid_)>(
          reinterpret_cast<char*>(&_impl_.mapid_),
          reinterpret_cast<char*>(&other->_impl_.mapid_));
}

::google::protobuf::Metadata CDataGCCStrike15_v2_TournamentMatchDraft_Entry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_TournamentMatchDraft::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CDataGCCStrike15_v2_TournamentMatchDraft>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_._has_bits_);
};

CDataGCCStrike15_v2_TournamentMatchDraft::CDataGCCStrike15_v2_TournamentMatchDraft(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentMatchDraft_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_TournamentMatchDraft)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentMatchDraft::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CDataGCCStrike15_v2_TournamentMatchDraft& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        drafts_{visibility, arena, from.drafts_},
        vote_mapid_0_{visibility, arena, from.vote_mapid_0_},
        vote_mapid_1_{visibility, arena, from.vote_mapid_1_},
        vote_mapid_2_{visibility, arena, from.vote_mapid_2_},
        vote_mapid_3_{visibility, arena, from.vote_mapid_3_},
        vote_mapid_4_{visibility, arena, from.vote_mapid_4_},
        vote_mapid_5_{visibility, arena, from.vote_mapid_5_},
        vote_starting_side_{visibility, arena, from.vote_starting_side_} {}

CDataGCCStrike15_v2_TournamentMatchDraft::CDataGCCStrike15_v2_TournamentMatchDraft(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CDataGCCStrike15_v2_TournamentMatchDraft& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentMatchDraft_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CDataGCCStrike15_v2_TournamentMatchDraft* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, event_id_),
           offsetof(Impl_, vote_phase_length_) -
               offsetof(Impl_, event_id_) +
               sizeof(Impl_::vote_phase_length_));

  // @@protoc_insertion_point(copy_constructor:CDataGCCStrike15_v2_TournamentMatchDraft)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentMatchDraft::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        drafts_{visibility, arena},
        vote_mapid_0_{visibility, arena},
        vote_mapid_1_{visibility, arena},
        vote_mapid_2_{visibility, arena},
        vote_mapid_3_{visibility, arena},
        vote_mapid_4_{visibility, arena},
        vote_mapid_5_{visibility, arena},
        vote_starting_side_{visibility, arena} {}

inline void CDataGCCStrike15_v2_TournamentMatchDraft::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_id_),
           0,
           offsetof(Impl_, vote_phase_length_) -
               offsetof(Impl_, event_id_) +
               sizeof(Impl_::vote_phase_length_));
}
CDataGCCStrike15_v2_TournamentMatchDraft::~CDataGCCStrike15_v2_TournamentMatchDraft() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_TournamentMatchDraft)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_TournamentMatchDraft::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_TournamentMatchDraft& this_ = static_cast<CDataGCCStrike15_v2_TournamentMatchDraft&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_TournamentMatchDraft(arena);
}
constexpr auto CDataGCCStrike15_v2_TournamentMatchDraft::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.drafts_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.drafts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_0_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_mapid_0_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_1_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_mapid_1_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_2_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_mapid_2_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_3_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_mapid_3_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_4_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_mapid_4_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_5_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_mapid_5_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_starting_side_) +
          decltype(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_starting_side_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CDataGCCStrike15_v2_TournamentMatchDraft), alignof(CDataGCCStrike15_v2_TournamentMatchDraft), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CDataGCCStrike15_v2_TournamentMatchDraft::PlacementNew_,
                                 sizeof(CDataGCCStrike15_v2_TournamentMatchDraft),
                                 alignof(CDataGCCStrike15_v2_TournamentMatchDraft));
  }
}
constexpr auto CDataGCCStrike15_v2_TournamentMatchDraft::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_TournamentMatchDraft_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_TournamentMatchDraft::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_TournamentMatchDraft>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_TournamentMatchDraft::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_TournamentMatchDraft>(), &CDataGCCStrike15_v2_TournamentMatchDraft::ByteSizeLong,
              &CDataGCCStrike15_v2_TournamentMatchDraft::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_TournamentMatchDraft::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_TournamentMatchDraft_class_data_ =
            CDataGCCStrike15_v2_TournamentMatchDraft::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_TournamentMatchDraft_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_TournamentMatchDraft_class_data_.tc_table);
  return CDataGCCStrike15_v2_TournamentMatchDraft_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 1, 0, 2>
CDataGCCStrike15_v2_TournamentMatchDraft::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CDataGCCStrike15_v2_TournamentMatchDraft_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentMatchDraft>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 event_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_id_)}},
    // optional int32 event_stage_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_stage_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_stage_id_)}},
    // optional int32 team_id_0 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_0_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_0_)}},
    // optional int32 team_id_1 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_1_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_1_)}},
    // optional int32 maps_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_count_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_count_)}},
    // optional int32 maps_current = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_current_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_current_)}},
    // optional int32 team_id_start = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_start_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_start_)}},
    // optional int32 team_id_veto1 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_veto1_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_veto1_)}},
    // optional int32 team_id_pickn = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_pickn_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_pickn_)}},
    // repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.drafts_)}},
    // repeated int32 vote_mapid_0 = 11;
    {::_pbi::TcParser::FastV32R1,
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_0_)}},
    // repeated int32 vote_mapid_1 = 12;
    {::_pbi::TcParser::FastV32R1,
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_1_)}},
    // repeated int32 vote_mapid_2 = 13;
    {::_pbi::TcParser::FastV32R1,
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_2_)}},
    // repeated int32 vote_mapid_3 = 14;
    {::_pbi::TcParser::FastV32R1,
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_3_)}},
    // repeated int32 vote_mapid_4 = 15;
    {::_pbi::TcParser::FastV32R1,
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_4_)}},
    // repeated int32 vote_mapid_5 = 16;
    {::_pbi::TcParser::FastV32R2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_5_)}},
    // repeated int32 vote_starting_side = 17;
    {::_pbi::TcParser::FastV32R2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_starting_side_)}},
    // optional int32 vote_phase = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 9, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_)}},
    // optional float vote_phase_start = 19;
    {::_pbi::TcParser::FastF32S2,
     {413, 10, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_start_)}},
    // optional float vote_phase_length = 20;
    {::_pbi::TcParser::FastF32S2,
     {421, 11, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_length_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 event_id = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 event_stage_id = 2;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_stage_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_0 = 3;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_1 = 4;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_1_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 maps_count = 5;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_count_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 maps_current = 6;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.maps_current_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_start = 7;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_start_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_veto1 = 8;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_veto1_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 team_id_pickn = 9;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.team_id_pickn_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.drafts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 vote_mapid_0 = 11;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_0_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 vote_mapid_1 = 12;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 vote_mapid_2 = 13;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_2_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 vote_mapid_3 = 14;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_3_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 vote_mapid_4 = 15;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_4_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 vote_mapid_5 = 16;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_mapid_5_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 vote_starting_side = 17;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_starting_side_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional int32 vote_phase = 18;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float vote_phase_start = 19;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_start_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float vote_phase_length = 20;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_length_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentMatchDraft_Entry>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_TournamentMatchDraft::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_TournamentMatchDraft)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drafts_.Clear();
  _impl_.vote_mapid_0_.Clear();
  _impl_.vote_mapid_1_.Clear();
  _impl_.vote_mapid_2_.Clear();
  _impl_.vote_mapid_3_.Clear();
  _impl_.vote_mapid_4_.Clear();
  _impl_.vote_mapid_5_.Clear();
  _impl_.vote_starting_side_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.event_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.team_id_veto1_) -
        reinterpret_cast<char*>(&_impl_.event_id_)) + sizeof(_impl_.team_id_veto1_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.team_id_pickn_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.vote_phase_length_) -
        reinterpret_cast<char*>(&_impl_.team_id_pickn_)) + sizeof(_impl_.vote_phase_length_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_TournamentMatchDraft& this_ = static_cast<const CDataGCCStrike15_v2_TournamentMatchDraft&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentMatchDraft::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_TournamentMatchDraft& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_TournamentMatchDraft)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 event_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_event_id(), target);
  }

  // optional int32 event_stage_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_event_stage_id(), target);
  }

  // optional int32 team_id_0 = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_team_id_0(), target);
  }

  // optional int32 team_id_1 = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_team_id_1(), target);
  }

  // optional int32 maps_count = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
            stream, this_._internal_maps_count(), target);
  }

  // optional int32 maps_current = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_maps_current(), target);
  }

  // optional int32 team_id_start = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
            stream, this_._internal_team_id_start(), target);
  }

  // optional int32 team_id_veto1 = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
            stream, this_._internal_team_id_veto1(), target);
  }

  // optional int32 team_id_pickn = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
            stream, this_._internal_team_id_pickn(), target);
  }

  // repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_drafts_size());
       i < n; i++) {
    const auto& repfield = this_._internal_drafts().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated int32 vote_mapid_0 = 11;
  for (int i = 0, n = this_._internal_vote_mapid_0_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        11, this_._internal_vote_mapid_0().Get(i), target);
  }

  // repeated int32 vote_mapid_1 = 12;
  for (int i = 0, n = this_._internal_vote_mapid_1_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        12, this_._internal_vote_mapid_1().Get(i), target);
  }

  // repeated int32 vote_mapid_2 = 13;
  for (int i = 0, n = this_._internal_vote_mapid_2_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        13, this_._internal_vote_mapid_2().Get(i), target);
  }

  // repeated int32 vote_mapid_3 = 14;
  for (int i = 0, n = this_._internal_vote_mapid_3_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        14, this_._internal_vote_mapid_3().Get(i), target);
  }

  // repeated int32 vote_mapid_4 = 15;
  for (int i = 0, n = this_._internal_vote_mapid_4_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        15, this_._internal_vote_mapid_4().Get(i), target);
  }

  // repeated int32 vote_mapid_5 = 16;
  for (int i = 0, n = this_._internal_vote_mapid_5_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this_._internal_vote_mapid_5().Get(i), target);
  }

  // repeated int32 vote_starting_side = 17;
  for (int i = 0, n = this_._internal_vote_starting_side_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this_._internal_vote_starting_side().Get(i), target);
  }

  // optional int32 vote_phase = 18;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this_._internal_vote_phase(), target);
  }

  // optional float vote_phase_start = 19;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        19, this_._internal_vote_phase_start(), target);
  }

  // optional float vote_phase_length = 20;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        20, this_._internal_vote_phase_length(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_TournamentMatchDraft)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_TournamentMatchDraft::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_TournamentMatchDraft& this_ = static_cast<const CDataGCCStrike15_v2_TournamentMatchDraft&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_TournamentMatchDraft::ByteSizeLong() const {
  const CDataGCCStrike15_v2_TournamentMatchDraft& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_TournamentMatchDraft)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;
    {
      total_size += 1UL * this_._internal_drafts_size();
      for (const auto& msg : this_._internal_drafts()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated int32 vote_mapid_0 = 11;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_vote_mapid_0());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_vote_mapid_0_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 vote_mapid_1 = 12;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_vote_mapid_1());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_vote_mapid_1_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 vote_mapid_2 = 13;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_vote_mapid_2());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_vote_mapid_2_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 vote_mapid_3 = 14;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_vote_mapid_3());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_vote_mapid_3_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 vote_mapid_4 = 15;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_vote_mapid_4());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_vote_mapid_4_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 vote_mapid_5 = 16;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_vote_mapid_5());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_vote_mapid_5_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 vote_starting_side = 17;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_vote_starting_side());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_vote_starting_side_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000c00u & cached_has_bits) * 6;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional int32 event_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_id());
    }
    // optional int32 event_stage_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_event_stage_id());
    }
    // optional int32 team_id_0 = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_0());
    }
    // optional int32 team_id_1 = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_1());
    }
    // optional int32 maps_count = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_maps_count());
    }
    // optional int32 maps_current = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_maps_current());
    }
    // optional int32 team_id_start = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_start());
    }
    // optional int32 team_id_veto1 = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_veto1());
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // optional int32 team_id_pickn = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id_pickn());
    }
    // optional int32 vote_phase = 18;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_vote_phase());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_TournamentMatchDraft::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_TournamentMatchDraft*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_TournamentMatchDraft&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_TournamentMatchDraft)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_drafts()->MergeFrom(
      from._internal_drafts());
  _this->_internal_mutable_vote_mapid_0()->MergeFrom(from._internal_vote_mapid_0());
  _this->_internal_mutable_vote_mapid_1()->MergeFrom(from._internal_vote_mapid_1());
  _this->_internal_mutable_vote_mapid_2()->MergeFrom(from._internal_vote_mapid_2());
  _this->_internal_mutable_vote_mapid_3()->MergeFrom(from._internal_vote_mapid_3());
  _this->_internal_mutable_vote_mapid_4()->MergeFrom(from._internal_vote_mapid_4());
  _this->_internal_mutable_vote_mapid_5()->MergeFrom(from._internal_vote_mapid_5());
  _this->_internal_mutable_vote_starting_side()->MergeFrom(from._internal_vote_starting_side());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.event_id_ = from._impl_.event_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.event_stage_id_ = from._impl_.event_stage_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.team_id_0_ = from._impl_.team_id_0_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.team_id_1_ = from._impl_.team_id_1_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.maps_count_ = from._impl_.maps_count_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.maps_current_ = from._impl_.maps_current_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.team_id_start_ = from._impl_.team_id_start_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.team_id_veto1_ = from._impl_.team_id_veto1_;
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.team_id_pickn_ = from._impl_.team_id_pickn_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.vote_phase_ = from._impl_.vote_phase_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.vote_phase_start_ = from._impl_.vote_phase_start_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.vote_phase_length_ = from._impl_.vote_phase_length_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_TournamentMatchDraft::CopyFrom(const CDataGCCStrike15_v2_TournamentMatchDraft& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_TournamentMatchDraft)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_TournamentMatchDraft::InternalSwap(CDataGCCStrike15_v2_TournamentMatchDraft* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.drafts_.InternalSwap(&other->_impl_.drafts_);
  _impl_.vote_mapid_0_.InternalSwap(&other->_impl_.vote_mapid_0_);
  _impl_.vote_mapid_1_.InternalSwap(&other->_impl_.vote_mapid_1_);
  _impl_.vote_mapid_2_.InternalSwap(&other->_impl_.vote_mapid_2_);
  _impl_.vote_mapid_3_.InternalSwap(&other->_impl_.vote_mapid_3_);
  _impl_.vote_mapid_4_.InternalSwap(&other->_impl_.vote_mapid_4_);
  _impl_.vote_mapid_5_.InternalSwap(&other->_impl_.vote_mapid_5_);
  _impl_.vote_starting_side_.InternalSwap(&other->_impl_.vote_starting_side_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.vote_phase_length_)
      + sizeof(CDataGCCStrike15_v2_TournamentMatchDraft::_impl_.vote_phase_length_)
      - PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentMatchDraft, _impl_.event_id_)>(
          reinterpret_cast<char*>(&_impl_.event_id_),
          reinterpret_cast<char*>(&other->_impl_.event_id_));
}

::google::protobuf::Metadata CDataGCCStrike15_v2_TournamentMatchDraft::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CPreMatchInfoData_TeamStats::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CPreMatchInfoData_TeamStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_._has_bits_);
};

CPreMatchInfoData_TeamStats::CPreMatchInfoData_TeamStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CPreMatchInfoData_TeamStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPreMatchInfoData.TeamStats)
}
PROTOBUF_NDEBUG_INLINE CPreMatchInfoData_TeamStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CPreMatchInfoData_TeamStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        match_info_teams_{visibility, arena, from.match_info_teams_},
        match_info_txt_(arena, from.match_info_txt_) {}

CPreMatchInfoData_TeamStats::CPreMatchInfoData_TeamStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CPreMatchInfoData_TeamStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CPreMatchInfoData_TeamStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CPreMatchInfoData_TeamStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.match_info_idxtxt_ = from._impl_.match_info_idxtxt_;

  // @@protoc_insertion_point(copy_constructor:CPreMatchInfoData.TeamStats)
}
PROTOBUF_NDEBUG_INLINE CPreMatchInfoData_TeamStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        match_info_teams_{visibility, arena},
        match_info_txt_(arena) {}

inline void CPreMatchInfoData_TeamStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.match_info_idxtxt_ = {};
}
CPreMatchInfoData_TeamStats::~CPreMatchInfoData_TeamStats() {
  // @@protoc_insertion_point(destructor:CPreMatchInfoData.TeamStats)
  SharedDtor(*this);
}
inline void CPreMatchInfoData_TeamStats::SharedDtor(MessageLite& self) {
  CPreMatchInfoData_TeamStats& this_ = static_cast<CPreMatchInfoData_TeamStats&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.match_info_txt_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CPreMatchInfoData_TeamStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CPreMatchInfoData_TeamStats(arena);
}
constexpr auto CPreMatchInfoData_TeamStats::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_.match_info_teams_) +
          decltype(CPreMatchInfoData_TeamStats::_impl_.match_info_teams_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CPreMatchInfoData_TeamStats), alignof(CPreMatchInfoData_TeamStats), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CPreMatchInfoData_TeamStats::PlacementNew_,
                                 sizeof(CPreMatchInfoData_TeamStats),
                                 alignof(CPreMatchInfoData_TeamStats));
  }
}
constexpr auto CPreMatchInfoData_TeamStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CPreMatchInfoData_TeamStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CPreMatchInfoData_TeamStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CPreMatchInfoData_TeamStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CPreMatchInfoData_TeamStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CPreMatchInfoData_TeamStats>(), &CPreMatchInfoData_TeamStats::ByteSizeLong,
              &CPreMatchInfoData_TeamStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_._cached_size_),
          false,
      },
      &CPreMatchInfoData_TeamStats::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CPreMatchInfoData_TeamStats_class_data_ =
            CPreMatchInfoData_TeamStats::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CPreMatchInfoData_TeamStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CPreMatchInfoData_TeamStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CPreMatchInfoData_TeamStats_class_data_.tc_table);
  return CPreMatchInfoData_TeamStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 66, 2>
CPreMatchInfoData_TeamStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CPreMatchInfoData_TeamStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CPreMatchInfoData_TeamStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 match_info_idxtxt = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CPreMatchInfoData_TeamStats, _impl_.match_info_idxtxt_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_.match_info_idxtxt_)}},
    // optional string match_info_txt = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_.match_info_txt_)}},
    // repeated string match_info_teams = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_.match_info_teams_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 match_info_idxtxt = 1;
    {PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_.match_info_idxtxt_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string match_info_txt = 2;
    {PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_.match_info_txt_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string match_info_teams = 3;
    {PROTOBUF_FIELD_OFFSET(CPreMatchInfoData_TeamStats, _impl_.match_info_teams_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\0\16\20\0\0\0\0"
    "CPreMatchInfoData.TeamStats"
    "match_info_txt"
    "match_info_teams"
  }},
};
PROTOBUF_NOINLINE void CPreMatchInfoData_TeamStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CPreMatchInfoData.TeamStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.match_info_teams_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.match_info_txt_.ClearNonDefaultToEmpty();
  }
  _impl_.match_info_idxtxt_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CPreMatchInfoData_TeamStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CPreMatchInfoData_TeamStats& this_ = static_cast<const CPreMatchInfoData_TeamStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CPreMatchInfoData_TeamStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CPreMatchInfoData_TeamStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CPreMatchInfoData.TeamStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 match_info_idxtxt = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_match_info_idxtxt(), target);
  }

  // optional string match_info_txt = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_match_info_txt();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CPreMatchInfoData.TeamStats.match_info_txt");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string match_info_teams = 3;
  for (int i = 0, n = this_._internal_match_info_teams_size(); i < n; ++i) {
    const auto& s = this_._internal_match_info_teams().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CPreMatchInfoData.TeamStats.match_info_teams");
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPreMatchInfoData.TeamStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CPreMatchInfoData_TeamStats::ByteSizeLong(const MessageLite& base) {
  const CPreMatchInfoData_TeamStats& this_ = static_cast<const CPreMatchInfoData_TeamStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CPreMatchInfoData_TeamStats::ByteSizeLong() const {
  const CPreMatchInfoData_TeamStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CPreMatchInfoData.TeamStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string match_info_teams = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_match_info_teams().size());
      for (int i = 0, n = this_._internal_match_info_teams().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_match_info_teams().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string match_info_txt = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_match_info_txt());
    }
    // optional int32 match_info_idxtxt = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_match_info_idxtxt());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CPreMatchInfoData_TeamStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CPreMatchInfoData_TeamStats*>(&to_msg);
  auto& from = static_cast<const CPreMatchInfoData_TeamStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CPreMatchInfoData.TeamStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_match_info_teams()->MergeFrom(from._internal_match_info_teams());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_match_info_txt(from._internal_match_info_txt());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.match_info_idxtxt_ = from._impl_.match_info_idxtxt_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CPreMatchInfoData_TeamStats::CopyFrom(const CPreMatchInfoData_TeamStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPreMatchInfoData.TeamStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CPreMatchInfoData_TeamStats::InternalSwap(CPreMatchInfoData_TeamStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.match_info_teams_.InternalSwap(&other->_impl_.match_info_teams_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.match_info_txt_, &other->_impl_.match_info_txt_, arena);
  swap(_impl_.match_info_idxtxt_, other->_impl_.match_info_idxtxt_);
}

::google::protobuf::Metadata CPreMatchInfoData_TeamStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CPreMatchInfoData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CPreMatchInfoData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_._has_bits_);
};

CPreMatchInfoData::CPreMatchInfoData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CPreMatchInfoData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPreMatchInfoData)
}
PROTOBUF_NDEBUG_INLINE CPreMatchInfoData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CPreMatchInfoData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stats_{visibility, arena, from.stats_},
        wins_{visibility, arena, from.wins_} {}

CPreMatchInfoData::CPreMatchInfoData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CPreMatchInfoData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CPreMatchInfoData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CPreMatchInfoData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;
  _impl_.predictions_pct_ = from._impl_.predictions_pct_;

  // @@protoc_insertion_point(copy_constructor:CPreMatchInfoData)
}
PROTOBUF_NDEBUG_INLINE CPreMatchInfoData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        stats_{visibility, arena},
        wins_{visibility, arena} {}

inline void CPreMatchInfoData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, draft_),
           0,
           offsetof(Impl_, predictions_pct_) -
               offsetof(Impl_, draft_) +
               sizeof(Impl_::predictions_pct_));
}
CPreMatchInfoData::~CPreMatchInfoData() {
  // @@protoc_insertion_point(destructor:CPreMatchInfoData)
  SharedDtor(*this);
}
inline void CPreMatchInfoData::SharedDtor(MessageLite& self) {
  CPreMatchInfoData& this_ = static_cast<CPreMatchInfoData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CPreMatchInfoData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CPreMatchInfoData(arena);
}
constexpr auto CPreMatchInfoData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.stats_) +
          decltype(CPreMatchInfoData::_impl_.stats_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.wins_) +
          decltype(CPreMatchInfoData::_impl_.wins_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CPreMatchInfoData), alignof(CPreMatchInfoData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CPreMatchInfoData::PlacementNew_,
                                 sizeof(CPreMatchInfoData),
                                 alignof(CPreMatchInfoData));
  }
}
constexpr auto CPreMatchInfoData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CPreMatchInfoData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CPreMatchInfoData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CPreMatchInfoData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CPreMatchInfoData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CPreMatchInfoData>(), &CPreMatchInfoData::ByteSizeLong,
              &CPreMatchInfoData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_._cached_size_),
          false,
      },
      &CPreMatchInfoData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CPreMatchInfoData_class_data_ =
            CPreMatchInfoData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CPreMatchInfoData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CPreMatchInfoData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CPreMatchInfoData_class_data_.tc_table);
  return CPreMatchInfoData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 0, 2>
CPreMatchInfoData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967238,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CPreMatchInfoData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CPreMatchInfoData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 predictions_pct = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CPreMatchInfoData, _impl_.predictions_pct_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.predictions_pct_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.draft_)}},
    // repeated .CPreMatchInfoData.TeamStats stats = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.stats_)}},
    // repeated int32 wins = 6;
    {::_pbi::TcParser::FastV32R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.wins_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 predictions_pct = 1;
    {PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.predictions_pct_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;
    {PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CPreMatchInfoData.TeamStats stats = 5;
    {PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.stats_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 wins = 6;
    {PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.wins_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentMatchDraft>()},
      {::_pbi::TcParser::GetTable<::CPreMatchInfoData_TeamStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CPreMatchInfoData::Clear() {
// @@protoc_insertion_point(message_clear_start:CPreMatchInfoData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stats_.Clear();
  _impl_.wins_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_.predictions_pct_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CPreMatchInfoData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CPreMatchInfoData& this_ = static_cast<const CPreMatchInfoData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CPreMatchInfoData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CPreMatchInfoData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CPreMatchInfoData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 predictions_pct = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_predictions_pct(), target);
  }

  // optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .CPreMatchInfoData.TeamStats stats = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_stats_size());
       i < n; i++) {
    const auto& repfield = this_._internal_stats().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated int32 wins = 6;
  for (int i = 0, n = this_._internal_wins_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        6, this_._internal_wins().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPreMatchInfoData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CPreMatchInfoData::ByteSizeLong(const MessageLite& base) {
  const CPreMatchInfoData& this_ = static_cast<const CPreMatchInfoData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CPreMatchInfoData::ByteSizeLong() const {
  const CPreMatchInfoData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CPreMatchInfoData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CPreMatchInfoData.TeamStats stats = 5;
    {
      total_size += 1UL * this_._internal_stats_size();
      for (const auto& msg : this_._internal_stats()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated int32 wins = 6;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_wins());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_wins_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
    // optional int32 predictions_pct = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_predictions_pct());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CPreMatchInfoData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CPreMatchInfoData*>(&to_msg);
  auto& from = static_cast<const CPreMatchInfoData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CPreMatchInfoData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stats()->MergeFrom(
      from._internal_stats());
  _this->_internal_mutable_wins()->MergeFrom(from._internal_wins());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.draft_ != nullptr);
      if (_this->_impl_.draft_ == nullptr) {
        _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
      } else {
        _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.predictions_pct_ = from._impl_.predictions_pct_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CPreMatchInfoData::CopyFrom(const CPreMatchInfoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPreMatchInfoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CPreMatchInfoData::InternalSwap(CPreMatchInfoData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stats_.InternalSwap(&other->_impl_.stats_);
  _impl_.wins_.InternalSwap(&other->_impl_.wins_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.predictions_pct_)
      + sizeof(CPreMatchInfoData::_impl_.predictions_pct_)
      - PROTOBUF_FIELD_OFFSET(CPreMatchInfoData, _impl_.draft_)>(
          reinterpret_cast<char*>(&_impl_.draft_),
          reinterpret_cast<char*>(&other->_impl_.draft_));
}

::google::protobuf::Metadata CPreMatchInfoData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_ids_{visibility, arena, from.account_ids_},
        rankings_{visibility, arena, from.rankings_},
        party_ids_{visibility, arena, from.party_ids_},
        whitelist_{visibility, arena, from.whitelist_},
        tournament_teams_{visibility, arena, from.tournament_teams_},
        tournament_casters_account_ids_{visibility, arena, from.tournament_casters_account_ids_},
        op_var_values_{visibility, arena, from.op_var_values_},
        teammate_colors_{visibility, arena, from.teammate_colors_} {}

CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tournament_event_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournament_event_)
                : nullptr;
  _impl_.pre_match_data_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pre_match_data_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, match_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, match_id_),
           offsetof(Impl_, socache_control_) -
               offsetof(Impl_, match_id_) +
               sizeof(Impl_::socache_control_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_ids_{visibility, arena},
        rankings_{visibility, arena},
        party_ids_{visibility, arena},
        whitelist_{visibility, arena},
        tournament_teams_{visibility, arena},
        tournament_casters_account_ids_{visibility, arena},
        op_var_values_{visibility, arena},
        teammate_colors_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tournament_event_),
           0,
           offsetof(Impl_, socache_control_) -
               offsetof(Impl_, tournament_event_) +
               sizeof(Impl_::socache_control_));
}
CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::~CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tournament_event_;
  delete this_._impl_.pre_match_data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.account_ids_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.account_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.rankings_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.rankings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.party_ids_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.party_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.whitelist_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.whitelist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_teams_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.tournament_teams_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_casters_account_ids_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.tournament_casters_account_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.op_var_values_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.op_var_values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.teammate_colors_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.teammate_colors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve), alignof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve),
                                 alignof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>(), &CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 21, 6, 0, 2>
CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_._has_bits_),
    0, // no _extensions_
    21, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292870144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    21,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated uint32 account_ids = 1;
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.account_ids_)}},
    // optional uint32 game_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.game_type_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.game_type_)}},
    // optional uint64 match_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.match_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.match_id_)}},
    // optional uint32 server_version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.server_version_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.server_version_)}},
    // repeated .PlayerRankingInfo rankings = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.rankings_)}},
    // optional uint64 encryption_key = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_)}},
    // optional uint64 encryption_key_pub = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_pub_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_pub_)}},
    // repeated uint32 party_ids = 8;
    {::_pbi::TcParser::FastV32R1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.party_ids_)}},
    // repeated .IpAddressMask whitelist = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.whitelist_)}},
    // optional uint64 tv_master_steamid = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_master_steamid_), 7>(),
     {80, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_master_steamid_)}},
    // optional .TournamentEvent tournament_event = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 2, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_event_)}},
    // repeated .TournamentTeam tournament_teams = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_teams_)}},
    // repeated uint32 tournament_casters_account_ids = 13;
    {::_pbi::TcParser::FastV32R1,
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_casters_account_ids_)}},
    // optional uint64 tv_relay_steamid = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_relay_steamid_), 8>(),
     {112, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_relay_steamid_)}},
    // optional .CPreMatchInfoData pre_match_data = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 1, 4, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.pre_match_data_)}},
    // optional uint32 rtime32_event_start = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.rtime32_event_start_)}},
    // optional uint32 tv_control = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_control_)}},
    // optional uint32 flags = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.flags_)}},
    // repeated .OperationalVarValue op_var_values = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 5, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.op_var_values_)}},
    // optional uint32 socache_control = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.socache_control_)}},
    // repeated int32 teammate_colors = 21;
    {::_pbi::TcParser::FastV32R2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.teammate_colors_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 account_ids = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.account_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint32 game_type = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.game_type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 match_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.match_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 server_version = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.server_version_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .PlayerRankingInfo rankings = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.rankings_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 encryption_key = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 encryption_key_pub = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.encryption_key_pub_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated uint32 party_ids = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.party_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated .IpAddressMask whitelist = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.whitelist_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 tv_master_steamid = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_master_steamid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .TournamentEvent tournament_event = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_event_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .TournamentTeam tournament_teams = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_teams_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 tournament_casters_account_ids = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_casters_account_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint64 tv_relay_steamid = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_relay_steamid_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .CPreMatchInfoData pre_match_data = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.pre_match_data_), _Internal::kHasBitsOffset + 1, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 rtime32_event_start = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.rtime32_event_start_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_control = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tv_control_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flags = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.flags_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .OperationalVarValue op_var_values = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.op_var_values_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 socache_control = 20;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.socache_control_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated int32 teammate_colors = 21;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.teammate_colors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerRankingInfo>()},
      {::_pbi::TcParser::GetTable<::IpAddressMask>()},
      {::_pbi::TcParser::GetTable<::TournamentEvent>()},
      {::_pbi::TcParser::GetTable<::TournamentTeam>()},
      {::_pbi::TcParser::GetTable<::CPreMatchInfoData>()},
      {::_pbi::TcParser::GetTable<::OperationalVarValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_ids_.Clear();
  _impl_.rankings_.Clear();
  _impl_.party_ids_.Clear();
  _impl_.whitelist_.Clear();
  _impl_.tournament_teams_.Clear();
  _impl_.tournament_casters_account_ids_.Clear();
  _impl_.op_var_values_.Clear();
  _impl_.teammate_colors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.tournament_event_ != nullptr);
      _impl_.tournament_event_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.pre_match_data_ != nullptr);
      _impl_.pre_match_data_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000fcu) != 0) {
    ::memset(&_impl_.match_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tv_master_steamid_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.tv_master_steamid_));
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    ::memset(&_impl_.tv_relay_steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.socache_control_) -
        reinterpret_cast<char*>(&_impl_.tv_relay_steamid_)) + sizeof(_impl_.socache_control_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 account_ids = 1;
  for (int i = 0, n = this_._internal_account_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_ids().Get(i), target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 game_type = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_game_type(), target);
  }

  // optional uint64 match_id = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_match_id(), target);
  }

  // optional uint32 server_version = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_server_version(), target);
  }

  // repeated .PlayerRankingInfo rankings = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_rankings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_rankings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint64 encryption_key = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this_._internal_encryption_key(), target);
  }

  // optional uint64 encryption_key_pub = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this_._internal_encryption_key_pub(), target);
  }

  // repeated uint32 party_ids = 8;
  for (int i = 0, n = this_._internal_party_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_party_ids().Get(i), target);
  }

  // repeated .IpAddressMask whitelist = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_whitelist_size());
       i < n; i++) {
    const auto& repfield = this_._internal_whitelist().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint64 tv_master_steamid = 10;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        10, this_._internal_tv_master_steamid(), target);
  }

  // optional .TournamentEvent tournament_event = 11;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.tournament_event_, this_._impl_.tournament_event_->GetCachedSize(), target,
        stream);
  }

  // repeated .TournamentTeam tournament_teams = 12;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_tournament_teams_size());
       i < n; i++) {
    const auto& repfield = this_._internal_tournament_teams().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            12, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 tournament_casters_account_ids = 13;
  for (int i = 0, n = this_._internal_tournament_casters_account_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this_._internal_tournament_casters_account_ids().Get(i), target);
  }

  // optional uint64 tv_relay_steamid = 14;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        14, this_._internal_tv_relay_steamid(), target);
  }

  // optional .CPreMatchInfoData pre_match_data = 15;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, *this_._impl_.pre_match_data_, this_._impl_.pre_match_data_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 rtime32_event_start = 16;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_rtime32_event_start(), target);
  }

  // optional uint32 tv_control = 17;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        17, this_._internal_tv_control(), target);
  }

  // optional uint32 flags = 18;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this_._internal_flags(), target);
  }

  // repeated .OperationalVarValue op_var_values = 19;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_op_var_values_size());
       i < n; i++) {
    const auto& repfield = this_._internal_op_var_values().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            19, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 socache_control = 20;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        20, this_._internal_socache_control(), target);
  }

  // repeated int32 teammate_colors = 21;
  for (int i = 0, n = this_._internal_teammate_colors_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        21, this_._internal_teammate_colors().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 account_ids = 1;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_account_ids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_account_ids_size());
      total_size += tag_size + data_size;
    }
    // repeated .PlayerRankingInfo rankings = 5;
    {
      total_size += 1UL * this_._internal_rankings_size();
      for (const auto& msg : this_._internal_rankings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated uint32 party_ids = 8;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_party_ids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_party_ids_size());
      total_size += tag_size + data_size;
    }
    // repeated .IpAddressMask whitelist = 9;
    {
      total_size += 1UL * this_._internal_whitelist_size();
      for (const auto& msg : this_._internal_whitelist()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .TournamentTeam tournament_teams = 12;
    {
      total_size += 1UL * this_._internal_tournament_teams_size();
      for (const auto& msg : this_._internal_tournament_teams()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated uint32 tournament_casters_account_ids = 13;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_tournament_casters_account_ids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_tournament_casters_account_ids_size());
      total_size += tag_size + data_size;
    }
    // repeated .OperationalVarValue op_var_values = 19;
    {
      total_size += 2UL * this_._internal_op_var_values_size();
      for (const auto& msg : this_._internal_op_var_values()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated int32 teammate_colors = 21;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_teammate_colors());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_teammate_colors_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional .TournamentEvent tournament_event = 11;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tournament_event_);
    }
    // optional .CPreMatchInfoData pre_match_data = 15;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pre_match_data_);
    }
    // optional uint64 match_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
    // optional uint32 game_type = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
    // optional uint32 server_version = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_version());
    }
    // optional uint64 encryption_key = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_encryption_key());
    }
    // optional uint64 encryption_key_pub = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_encryption_key_pub());
    }
    // optional uint64 tv_master_steamid = 10;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tv_master_steamid());
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    // optional uint64 tv_relay_steamid = 14;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tv_relay_steamid());
    }
    // optional uint32 rtime32_event_start = 16;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_rtime32_event_start());
    }
    // optional uint32 tv_control = 17;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_tv_control());
    }
    // optional uint32 flags = 18;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_flags());
    }
    // optional uint32 socache_control = 20;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_socache_control());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_ids()->MergeFrom(from._internal_account_ids());
  _this->_internal_mutable_rankings()->MergeFrom(
      from._internal_rankings());
  _this->_internal_mutable_party_ids()->MergeFrom(from._internal_party_ids());
  _this->_internal_mutable_whitelist()->MergeFrom(
      from._internal_whitelist());
  _this->_internal_mutable_tournament_teams()->MergeFrom(
      from._internal_tournament_teams());
  _this->_internal_mutable_tournament_casters_account_ids()->MergeFrom(from._internal_tournament_casters_account_ids());
  _this->_internal_mutable_op_var_values()->MergeFrom(
      from._internal_op_var_values());
  _this->_internal_mutable_teammate_colors()->MergeFrom(from._internal_teammate_colors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.tournament_event_ != nullptr);
      if (_this->_impl_.tournament_event_ == nullptr) {
        _this->_impl_.tournament_event_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournament_event_);
      } else {
        _this->_impl_.tournament_event_->MergeFrom(*from._impl_.tournament_event_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.pre_match_data_ != nullptr);
      if (_this->_impl_.pre_match_data_ == nullptr) {
        _this->_impl_.pre_match_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pre_match_data_);
      } else {
        _this->_impl_.pre_match_data_->MergeFrom(*from._impl_.pre_match_data_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.server_version_ = from._impl_.server_version_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.encryption_key_ = from._impl_.encryption_key_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.encryption_key_pub_ = from._impl_.encryption_key_pub_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.tv_master_steamid_ = from._impl_.tv_master_steamid_;
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.tv_relay_steamid_ = from._impl_.tv_relay_steamid_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.rtime32_event_start_ = from._impl_.rtime32_event_start_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.tv_control_ = from._impl_.tv_control_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.socache_control_ = from._impl_.socache_control_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::InternalSwap(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_ids_.InternalSwap(&other->_impl_.account_ids_);
  _impl_.rankings_.InternalSwap(&other->_impl_.rankings_);
  _impl_.party_ids_.InternalSwap(&other->_impl_.party_ids_);
  _impl_.whitelist_.InternalSwap(&other->_impl_.whitelist_);
  _impl_.tournament_teams_.InternalSwap(&other->_impl_.tournament_teams_);
  _impl_.tournament_casters_account_ids_.InternalSwap(&other->_impl_.tournament_casters_account_ids_);
  _impl_.op_var_values_.InternalSwap(&other->_impl_.op_var_values_);
  _impl_.teammate_colors_.InternalSwap(&other->_impl_.teammate_colors_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.socache_control_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::_impl_.socache_control_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve, _impl_.tournament_event_)>(
          reinterpret_cast<char*>(&_impl_.tournament_event_),
          reinterpret_cast<char*>(&other->_impl_.tournament_event_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reward_player_accounts_{visibility, arena, from.reward_player_accounts_},
        idle_player_accounts_{visibility, arena, from.idle_player_accounts_},
        map_(arena, from.map_),
        tournament_tag_(arena, from.tournament_tag_) {}

CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingServerReservationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.reservation_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reservation_)
                : nullptr;
  _impl_.tv_info_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tv_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reservationid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, reservationid_),
           offsetof(Impl_, cpus_online_) -
               offsetof(Impl_, reservationid_) +
               sizeof(Impl_::cpus_online_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        reward_player_accounts_{visibility, arena},
        idle_player_accounts_{visibility, arena},
        map_(arena),
        tournament_tag_(arena) {}

inline void CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reservation_),
           0,
           offsetof(Impl_, cpus_online_) -
               offsetof(Impl_, reservation_) +
               sizeof(Impl_::cpus_online_));
}
CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::~CMsgGCCStrike15_v2_MatchmakingServerReservationResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.map_.Destroy();
  this_._impl_.tournament_tag_.Destroy();
  delete this_._impl_.reservation_;
  delete this_._impl_.tv_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingServerReservationResponse(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_player_accounts_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_impl_.reward_player_accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.idle_player_accounts_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_impl_.idle_player_accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse), alignof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse),
                                 alignof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>(), &CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 2, 97, 2>
CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 reservationid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservationid_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservationid_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservation_)}},
    // optional string map = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.map_)}},
    // optional uint64 gc_reservation_sent = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.gc_reservation_sent_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.gc_reservation_sent_)}},
    // optional uint32 server_version = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.server_version_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.server_version_)}},
    // optional .ServerHltvInfo tv_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.tv_info_)}},
    // repeated uint32 reward_player_accounts = 7;
    {::_pbi::TcParser::FastV32R1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_player_accounts_)}},
    // repeated uint32 idle_player_accounts = 8;
    {::_pbi::TcParser::FastV32R1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.idle_player_accounts_)}},
    // optional uint32 reward_item_attr_def_idx = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_def_idx_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_def_idx_)}},
    // optional uint32 reward_item_attr_value = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_value_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_value_)}},
    // optional uint32 reward_item_attr_reward_idx = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_reward_idx_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_reward_idx_)}},
    // optional uint32 reward_drop_list = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_drop_list_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_drop_list_)}},
    // optional string tournament_tag = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.tournament_tag_)}},
    // optional uint32 legacy_steamdatagram_port = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.legacy_steamdatagram_port_), 11>(),
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.legacy_steamdatagram_port_)}},
    // optional fixed32 test_token = 15;
    {::_pbi::TcParser::FastF32S1,
     {125, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.test_token_)}},
    // optional uint32 flags = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.flags_)}},
    // optional uint32 steamdatagram_routing = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.steamdatagram_routing_)}},
    // optional uint32 system_load = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 15, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.system_load_)}},
    // optional uint32 cpus_online = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 16, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.cpus_online_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 reservationid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservationid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservation_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string map = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.map_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 gc_reservation_sent = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.gc_reservation_sent_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 server_version = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.server_version_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .ServerHltvInfo tv_info = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.tv_info_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 reward_player_accounts = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_player_accounts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint32 idle_player_accounts = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.idle_player_accounts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint32 reward_item_attr_def_idx = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_def_idx_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 reward_item_attr_value = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_value_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 reward_item_attr_reward_idx = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_item_attr_reward_idx_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 reward_drop_list = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reward_drop_list_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string tournament_tag = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.tournament_tag_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 legacy_steamdatagram_port = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.legacy_steamdatagram_port_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 test_token = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.test_token_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional uint32 flags = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.flags_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 steamdatagram_routing = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.steamdatagram_routing_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 system_load = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.system_load_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 cpus_online = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.cpus_online_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>()},
      {::_pbi::TcParser::GetTable<::ServerHltvInfo>()},
  }},
  {{
    "\67\0\0\3\0\0\0\0\0\0\0\0\0\16\0\0\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_MatchmakingServerReservationResponse"
    "map"
    "tournament_tag"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reward_player_accounts_.Clear();
  _impl_.idle_player_accounts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.map_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.tournament_tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.reservation_ != nullptr);
      _impl_.reservation_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.tv_info_ != nullptr);
      _impl_.tv_info_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.reservationid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reward_item_attr_def_idx_) -
        reinterpret_cast<char*>(&_impl_.reservationid_)) + sizeof(_impl_.reward_item_attr_def_idx_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.reward_item_attr_value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.system_load_) -
        reinterpret_cast<char*>(&_impl_.reward_item_attr_value_)) + sizeof(_impl_.system_load_));
  }
  _impl_.cpus_online_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 reservationid = 1;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_reservationid(), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.reservation_, this_._impl_.reservation_->GetCachedSize(), target,
        stream);
  }

  // optional string map = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_map();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingServerReservationResponse.map");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint64 gc_reservation_sent = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this_._internal_gc_reservation_sent(), target);
  }

  // optional uint32 server_version = 5;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_server_version(), target);
  }

  // optional .ServerHltvInfo tv_info = 6;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.tv_info_, this_._impl_.tv_info_->GetCachedSize(), target,
        stream);
  }

  // repeated uint32 reward_player_accounts = 7;
  for (int i = 0, n = this_._internal_reward_player_accounts_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_reward_player_accounts().Get(i), target);
  }

  // repeated uint32 idle_player_accounts = 8;
  for (int i = 0, n = this_._internal_idle_player_accounts_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_idle_player_accounts().Get(i), target);
  }

  // optional uint32 reward_item_attr_def_idx = 9;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_reward_item_attr_def_idx(), target);
  }

  // optional uint32 reward_item_attr_value = 10;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_reward_item_attr_value(), target);
  }

  // optional uint32 reward_item_attr_reward_idx = 11;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_reward_item_attr_reward_idx(), target);
  }

  // optional uint32 reward_drop_list = 12;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_reward_drop_list(), target);
  }

  // optional string tournament_tag = 13;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_tournament_tag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingServerReservationResponse.tournament_tag");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional uint32 legacy_steamdatagram_port = 14;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_legacy_steamdatagram_port(), target);
  }

  // optional fixed32 test_token = 15;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        15, this_._internal_test_token(), target);
  }

  // optional uint32 flags = 16;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_flags(), target);
  }

  // optional uint32 steamdatagram_routing = 17;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        17, this_._internal_steamdatagram_routing(), target);
  }

  // optional uint32 system_load = 18;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this_._internal_system_load(), target);
  }

  // optional uint32 cpus_online = 19;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this_._internal_cpus_online(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 reward_player_accounts = 7;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_reward_player_accounts());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_reward_player_accounts_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 idle_player_accounts = 8;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_idle_player_accounts());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_idle_player_accounts_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00001000u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string map = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_map());
    }
    // optional string tournament_tag = 13;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_tournament_tag());
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.reservation_);
    }
    // optional .ServerHltvInfo tv_info = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tv_info_);
    }
    // optional uint64 reservationid = 1;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_reservationid());
    }
    // optional uint64 gc_reservation_sent = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_gc_reservation_sent());
    }
    // optional uint32 server_version = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_version());
    }
    // optional uint32 reward_item_attr_def_idx = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reward_item_attr_def_idx());
    }
  }
  if ((cached_has_bits & 0x0000ef00u) != 0) {
    // optional uint32 reward_item_attr_value = 10;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reward_item_attr_value());
    }
    // optional uint32 reward_item_attr_reward_idx = 11;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reward_item_attr_reward_idx());
    }
    // optional uint32 reward_drop_list = 12;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reward_drop_list());
    }
    // optional uint32 legacy_steamdatagram_port = 14;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_legacy_steamdatagram_port());
    }
    // optional uint32 flags = 16;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_flags());
    }
    // optional uint32 steamdatagram_routing = 17;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_steamdatagram_routing());
    }
    // optional uint32 system_load = 18;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_system_load());
    }
  }
   {
    // optional uint32 cpus_online = 19;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_cpus_online());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_reward_player_accounts()->MergeFrom(from._internal_reward_player_accounts());
  _this->_internal_mutable_idle_player_accounts()->MergeFrom(from._internal_idle_player_accounts());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_map(from._internal_map());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_tournament_tag(from._internal_tournament_tag());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.reservation_ != nullptr);
      if (_this->_impl_.reservation_ == nullptr) {
        _this->_impl_.reservation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reservation_);
      } else {
        _this->_impl_.reservation_->MergeFrom(*from._impl_.reservation_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.tv_info_ != nullptr);
      if (_this->_impl_.tv_info_ == nullptr) {
        _this->_impl_.tv_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tv_info_);
      } else {
        _this->_impl_.tv_info_->MergeFrom(*from._impl_.tv_info_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.reservationid_ = from._impl_.reservationid_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.gc_reservation_sent_ = from._impl_.gc_reservation_sent_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.server_version_ = from._impl_.server_version_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.reward_item_attr_def_idx_ = from._impl_.reward_item_attr_def_idx_;
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.reward_item_attr_value_ = from._impl_.reward_item_attr_value_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.reward_item_attr_reward_idx_ = from._impl_.reward_item_attr_reward_idx_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.reward_drop_list_ = from._impl_.reward_drop_list_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.legacy_steamdatagram_port_ = from._impl_.legacy_steamdatagram_port_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.test_token_ = from._impl_.test_token_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.steamdatagram_routing_ = from._impl_.steamdatagram_routing_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.system_load_ = from._impl_.system_load_;
    }
  }
  if ((cached_has_bits & 0x00010000u) != 0) {
    _this->_impl_.cpus_online_ = from._impl_.cpus_online_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingServerReservationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingServerReservationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::InternalSwap(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.reward_player_accounts_.InternalSwap(&other->_impl_.reward_player_accounts_);
  _impl_.idle_player_accounts_.InternalSwap(&other->_impl_.idle_player_accounts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.map_, &other->_impl_.map_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tournament_tag_, &other->_impl_.tournament_tag_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.cpus_online_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::_impl_.cpus_online_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse, _impl_.reservation_)>(
          reinterpret_cast<char*>(&_impl_.reservation_),
          reinterpret_cast<char*>(&other->_impl_.reservation_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        map_(arena, from.map_),
        server_address_(arena, from.server_address_) {}

CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.reservation_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reservation_)
                : nullptr;
  _impl_.gs_ping_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.gs_ping_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, serverid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, serverid_),
           offsetof(Impl_, gs_location_id_) -
               offsetof(Impl_, serverid_) +
               sizeof(Impl_::gs_location_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        map_(arena),
        server_address_(arena) {}

inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reservation_),
           0,
           offsetof(Impl_, gs_location_id_) -
               offsetof(Impl_, reservation_) +
               sizeof(Impl_::gs_location_id_));
}
CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::~CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.map_.Destroy();
  this_._impl_.server_address_.Destroy();
  delete this_._impl_.reservation_;
  delete this_._impl_.gs_ping_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>(), &CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 80, 2>
CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 serverid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.serverid_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.serverid_)}},
    // optional uint32 direct_udp_ip = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_ip_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_ip_)}},
    // optional uint32 direct_udp_port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_port_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_port_)}},
    // optional uint64 reservationid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservationid_), 7>(),
     {32, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservationid_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservation_)}},
    // optional string map = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.map_)}},
    // optional string server_address = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.server_address_)}},
    // optional .DataCenterPing gs_ping = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_ping_)}},
    // optional uint32 gs_location_id = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_location_id_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_location_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 serverid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.serverid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 direct_udp_ip = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_ip_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 direct_udp_port = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.direct_udp_port_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 reservationid = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservationid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservation_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string map = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.map_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string server_address = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.server_address_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .DataCenterPing gs_ping = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_ping_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 gs_location_id = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_location_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>()},
      {::_pbi::TcParser::GetTable<::DataCenterPing>()},
  }},
  {{
    "\56\0\0\0\0\0\3\16\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve"
    "map"
    "server_address"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.map_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.server_address_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.reservation_ != nullptr);
      _impl_.reservation_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.gs_ping_ != nullptr);
      _impl_.gs_ping_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.serverid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reservationid_) -
        reinterpret_cast<char*>(&_impl_.serverid_)) + sizeof(_impl_.reservationid_));
  }
  _impl_.gs_location_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 serverid = 1;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_serverid(), target);
  }

  // optional uint32 direct_udp_ip = 2;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_direct_udp_ip(), target);
  }

  // optional uint32 direct_udp_port = 3;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_direct_udp_port(), target);
  }

  // optional uint64 reservationid = 4;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this_._internal_reservationid(), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.reservation_, this_._impl_.reservation_->GetCachedSize(), target,
        stream);
  }

  // optional string map = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_map();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve.map");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string server_address = 7;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_server_address();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve.server_address");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional .DataCenterPing gs_ping = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.gs_ping_, this_._impl_.gs_ping_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 gs_location_id = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_gs_location_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string map = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_map());
    }
    // optional string server_address = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_server_address());
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.reservation_);
    }
    // optional .DataCenterPing gs_ping = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gs_ping_);
    }
    // optional uint64 serverid = 1;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_serverid());
    }
    // optional uint32 direct_udp_ip = 2;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_direct_udp_ip());
    }
    // optional uint32 direct_udp_port = 3;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_direct_udp_port());
    }
    // optional uint64 reservationid = 4;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_reservationid());
    }
  }
   {
    // optional uint32 gs_location_id = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_gs_location_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_map(from._internal_map());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_server_address(from._internal_server_address());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.reservation_ != nullptr);
      if (_this->_impl_.reservation_ == nullptr) {
        _this->_impl_.reservation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reservation_);
      } else {
        _this->_impl_.reservation_->MergeFrom(*from._impl_.reservation_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.gs_ping_ != nullptr);
      if (_this->_impl_.gs_ping_ == nullptr) {
        _this->_impl_.gs_ping_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.gs_ping_);
      } else {
        _this->_impl_.gs_ping_->MergeFrom(*from._impl_.gs_ping_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.serverid_ = from._impl_.serverid_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.direct_udp_ip_ = from._impl_.direct_udp_ip_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.direct_udp_port_ = from._impl_.direct_udp_port_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.reservationid_ = from._impl_.reservationid_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.gs_location_id_ = from._impl_.gs_location_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::InternalSwap(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.map_, &other->_impl_.map_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_address_, &other->_impl_.server_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.gs_location_id_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::_impl_.gs_location_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve, _impl_.reservation_)>(
          reinterpret_cast<char*>(&_impl_.reservation_),
          reinterpret_cast<char*>(&other->_impl_.reservation_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
}
CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.account_mvp_ = {};
}
CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::~CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo>(), &CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 account_mvp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_.account_mvp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_.account_mvp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_mvp = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo, _impl_.account_mvp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_mvp_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_mvp = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_mvp(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint32 account_mvp = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_mvp());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.account_mvp_ = from._impl_.account_mvp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::InternalSwap(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.account_mvp_, other->_impl_.account_mvp_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingServerRoundStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingServerRoundStats::CMsgGCCStrike15_v2_MatchmakingServerRoundStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingServerRoundStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingServerRoundStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        kills_{visibility, arena, from.kills_},
        assists_{visibility, arena, from.assists_},
        deaths_{visibility, arena, from.deaths_},
        scores_{visibility, arena, from.scores_},
        pings_{visibility, arena, from.pings_},
        team_scores_{visibility, arena, from.team_scores_},
        enemy_kills_{visibility, arena, from.enemy_kills_},
        enemy_headshots_{visibility, arena, from.enemy_headshots_},
        enemy_3ks_{visibility, arena, from.enemy_3ks_},
        enemy_4ks_{visibility, arena, from.enemy_4ks_},
        enemy_5ks_{visibility, arena, from.enemy_5ks_},
        mvps_{visibility, arena, from.mvps_},
        enemy_kills_agg_{visibility, arena, from.enemy_kills_agg_},
        enemy_2ks_{visibility, arena, from.enemy_2ks_},
        player_spawned_{visibility, arena, from.player_spawned_},
        team_spawn_count_{visibility, arena, from.team_spawn_count_},
        map_(arena, from.map_) {}

CMsgGCCStrike15_v2_MatchmakingServerRoundStats::CMsgGCCStrike15_v2_MatchmakingServerRoundStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingServerRoundStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingServerRoundStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.reservation_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reservation_)
                : nullptr;
  _impl_.confirm_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confirm_)
                : nullptr;
  _impl_.drop_info_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.drop_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reservationid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, reservationid_),
           offsetof(Impl_, map_id_) -
               offsetof(Impl_, reservationid_) +
               sizeof(Impl_::map_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingServerRoundStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        kills_{visibility, arena},
        assists_{visibility, arena},
        deaths_{visibility, arena},
        scores_{visibility, arena},
        pings_{visibility, arena},
        team_scores_{visibility, arena},
        enemy_kills_{visibility, arena},
        enemy_headshots_{visibility, arena},
        enemy_3ks_{visibility, arena},
        enemy_4ks_{visibility, arena},
        enemy_5ks_{visibility, arena},
        mvps_{visibility, arena},
        enemy_kills_agg_{visibility, arena},
        enemy_2ks_{visibility, arena},
        player_spawned_{visibility, arena},
        team_spawn_count_{visibility, arena},
        map_(arena) {}

inline void CMsgGCCStrike15_v2_MatchmakingServerRoundStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reservation_),
           0,
           offsetof(Impl_, map_id_) -
               offsetof(Impl_, reservation_) +
               sizeof(Impl_::map_id_));
}
CMsgGCCStrike15_v2_MatchmakingServerRoundStats::~CMsgGCCStrike15_v2_MatchmakingServerRoundStats() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingServerRoundStats::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingServerRoundStats& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingServerRoundStats&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.map_.Destroy();
  delete this_._impl_.reservation_;
  delete this_._impl_.confirm_;
  delete this_._impl_.drop_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingServerRoundStats(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingServerRoundStats::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.kills_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.kills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.assists_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.assists_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.deaths_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.deaths_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.scores_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.scores_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.pings_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.pings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_scores_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.team_scores_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.enemy_kills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_headshots_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.enemy_headshots_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_3ks_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.enemy_3ks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_4ks_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.enemy_4ks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_5ks_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.enemy_5ks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.mvps_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.mvps_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_agg_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.enemy_kills_agg_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_2ks_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.enemy_2ks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.player_spawned_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.player_spawned_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_spawn_count_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.team_spawn_count_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats), alignof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchmakingServerRoundStats::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats),
                                 alignof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingServerRoundStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingServerRoundStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingServerRoundStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingServerRoundStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingServerRoundStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingServerRoundStats>(), &CMsgGCCStrike15_v2_MatchmakingServerRoundStats::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingServerRoundStats::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingServerRoundStats::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 32, 3, 90, 2>
CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_._has_bits_),
    0, // no _extensions_
    32, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    32,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingServerRoundStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingServerRoundStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 reservationid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservationid_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservationid_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_)}},
    // optional string map = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.map_)}},
    // optional int32 round = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_)}},
    // repeated int32 kills = 5;
    {::_pbi::TcParser::FastV32R1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.kills_)}},
    // repeated int32 assists = 6;
    {::_pbi::TcParser::FastV32R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.assists_)}},
    // repeated int32 deaths = 7;
    {::_pbi::TcParser::FastV32R1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.deaths_)}},
    // repeated int32 scores = 8;
    {::_pbi::TcParser::FastV32R1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.scores_)}},
    // repeated int32 pings = 9;
    {::_pbi::TcParser::FastV32R1,
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.pings_)}},
    // optional int32 round_result = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_result_), 6>(),
     {80, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_result_)}},
    // optional int32 match_result = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_result_), 7>(),
     {88, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_result_)}},
    // repeated int32 team_scores = 12;
    {::_pbi::TcParser::FastV32R1,
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_scores_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm confirm = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 2, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.confirm_)}},
    // optional int32 reservation_stage = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_stage_), 8>(),
     {112, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_stage_)}},
    // optional int32 match_duration = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_duration_), 9>(),
     {120, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_duration_)}},
    // repeated int32 enemy_kills = 16;
    {::_pbi::TcParser::FastV32R2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_)}},
    // repeated int32 enemy_headshots = 17;
    {::_pbi::TcParser::FastV32R2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_headshots_)}},
    // repeated int32 enemy_3ks = 18;
    {::_pbi::TcParser::FastV32R2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_3ks_)}},
    // repeated int32 enemy_4ks = 19;
    {::_pbi::TcParser::FastV32R2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_4ks_)}},
    // repeated int32 enemy_5ks = 20;
    {::_pbi::TcParser::FastV32R2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_5ks_)}},
    // repeated int32 mvps = 21;
    {::_pbi::TcParser::FastV32R2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.mvps_)}},
    // optional uint32 spectators_count = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_)}},
    // optional uint32 spectators_count_tv = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_tv_)}},
    // optional uint32 spectators_count_lnk = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_lnk_)}},
    // repeated int32 enemy_kills_agg = 25;
    {::_pbi::TcParser::FastV32R2,
     {456, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_agg_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo drop_info = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 3, 2, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.drop_info_)}},
    // optional bool b_switched_teams = 27;
    {::_pbi::TcParser::FastV8S2,
     {472, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.b_switched_teams_)}},
    // repeated int32 enemy_2ks = 28;
    {::_pbi::TcParser::FastV32R2,
     {480, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_2ks_)}},
    // repeated int32 player_spawned = 29;
    {::_pbi::TcParser::FastV32R2,
     {488, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.player_spawned_)}},
    // repeated int32 team_spawn_count = 30;
    {::_pbi::TcParser::FastV32R2,
     {496, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_spawn_count_)}},
    // optional uint32 max_rounds = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.max_rounds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 reservationid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservationid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string map = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.map_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 round = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 kills = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.kills_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 assists = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.assists_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 deaths = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.deaths_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 scores = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.scores_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 pings = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.pings_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional int32 round_result = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.round_result_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 match_result = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_result_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 team_scores = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_scores_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm confirm = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.confirm_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 reservation_stage = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_stage_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 match_duration = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.match_duration_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 enemy_kills = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 enemy_headshots = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_headshots_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 enemy_3ks = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_3ks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 enemy_4ks = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_4ks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 enemy_5ks = 20;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_5ks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 mvps = 21;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.mvps_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional uint32 spectators_count = 22;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 spectators_count_tv = 23;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_tv_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 spectators_count_lnk = 24;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.spectators_count_lnk_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated int32 enemy_kills_agg = 25;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_kills_agg_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo drop_info = 26;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.drop_info_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool b_switched_teams = 27;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.b_switched_teams_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated int32 enemy_2ks = 28;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.enemy_2ks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 player_spawned = 29;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.player_spawned_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 team_spawn_count = 30;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.team_spawn_count_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional uint32 max_rounds = 31;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.max_rounds_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 map_id = 32;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.map_id_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>()},
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm>()},
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo>()},
  }},
  {{
    "\56\0\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_MatchmakingServerRoundStats"
    "map"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingServerRoundStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kills_.Clear();
  _impl_.assists_.Clear();
  _impl_.deaths_.Clear();
  _impl_.scores_.Clear();
  _impl_.pings_.Clear();
  _impl_.team_scores_.Clear();
  _impl_.enemy_kills_.Clear();
  _impl_.enemy_headshots_.Clear();
  _impl_.enemy_3ks_.Clear();
  _impl_.enemy_4ks_.Clear();
  _impl_.enemy_5ks_.Clear();
  _impl_.mvps_.Clear();
  _impl_.enemy_kills_agg_.Clear();
  _impl_.enemy_2ks_.Clear();
  _impl_.player_spawned_.Clear();
  _impl_.team_spawn_count_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.map_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.reservation_ != nullptr);
      _impl_.reservation_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.confirm_ != nullptr);
      _impl_.confirm_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.drop_info_ != nullptr);
      _impl_.drop_info_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.reservationid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.match_result_) -
        reinterpret_cast<char*>(&_impl_.reservationid_)) + sizeof(_impl_.match_result_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.reservation_stage_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.map_id_) -
        reinterpret_cast<char*>(&_impl_.reservation_stage_)) + sizeof(_impl_.map_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerRoundStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 reservationid = 1;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_reservationid(), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.reservation_, this_._impl_.reservation_->GetCachedSize(), target,
        stream);
  }

  // optional string map = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_map();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingServerRoundStats.map");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional int32 round = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_round(), target);
  }

  // repeated int32 kills = 5;
  for (int i = 0, n = this_._internal_kills_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        5, this_._internal_kills().Get(i), target);
  }

  // repeated int32 assists = 6;
  for (int i = 0, n = this_._internal_assists_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        6, this_._internal_assists().Get(i), target);
  }

  // repeated int32 deaths = 7;
  for (int i = 0, n = this_._internal_deaths_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        7, this_._internal_deaths().Get(i), target);
  }

  // repeated int32 scores = 8;
  for (int i = 0, n = this_._internal_scores_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        8, this_._internal_scores().Get(i), target);
  }

  // repeated int32 pings = 9;
  for (int i = 0, n = this_._internal_pings_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        9, this_._internal_pings().Get(i), target);
  }

  // optional int32 round_result = 10;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
            stream, this_._internal_round_result(), target);
  }

  // optional int32 match_result = 11;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<11>(
            stream, this_._internal_match_result(), target);
  }

  // repeated int32 team_scores = 12;
  for (int i = 0, n = this_._internal_team_scores_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        12, this_._internal_team_scores().Get(i), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm confirm = 13;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.confirm_, this_._impl_.confirm_->GetCachedSize(), target,
        stream);
  }

  // optional int32 reservation_stage = 14;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<14>(
            stream, this_._internal_reservation_stage(), target);
  }

  // optional int32 match_duration = 15;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<15>(
            stream, this_._internal_match_duration(), target);
  }

  // repeated int32 enemy_kills = 16;
  for (int i = 0, n = this_._internal_enemy_kills_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this_._internal_enemy_kills().Get(i), target);
  }

  // repeated int32 enemy_headshots = 17;
  for (int i = 0, n = this_._internal_enemy_headshots_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this_._internal_enemy_headshots().Get(i), target);
  }

  // repeated int32 enemy_3ks = 18;
  for (int i = 0, n = this_._internal_enemy_3ks_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this_._internal_enemy_3ks().Get(i), target);
  }

  // repeated int32 enemy_4ks = 19;
  for (int i = 0, n = this_._internal_enemy_4ks_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        19, this_._internal_enemy_4ks().Get(i), target);
  }

  // repeated int32 enemy_5ks = 20;
  for (int i = 0, n = this_._internal_enemy_5ks_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        20, this_._internal_enemy_5ks().Get(i), target);
  }

  // repeated int32 mvps = 21;
  for (int i = 0, n = this_._internal_mvps_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        21, this_._internal_mvps().Get(i), target);
  }

  // optional uint32 spectators_count = 22;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        22, this_._internal_spectators_count(), target);
  }

  // optional uint32 spectators_count_tv = 23;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        23, this_._internal_spectators_count_tv(), target);
  }

  // optional uint32 spectators_count_lnk = 24;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        24, this_._internal_spectators_count_lnk(), target);
  }

  // repeated int32 enemy_kills_agg = 25;
  for (int i = 0, n = this_._internal_enemy_kills_agg_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        25, this_._internal_enemy_kills_agg().Get(i), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo drop_info = 26;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        26, *this_._impl_.drop_info_, this_._impl_.drop_info_->GetCachedSize(), target,
        stream);
  }

  // optional bool b_switched_teams = 27;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        27, this_._internal_b_switched_teams(), target);
  }

  // repeated int32 enemy_2ks = 28;
  for (int i = 0, n = this_._internal_enemy_2ks_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        28, this_._internal_enemy_2ks().Get(i), target);
  }

  // repeated int32 player_spawned = 29;
  for (int i = 0, n = this_._internal_player_spawned_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        29, this_._internal_player_spawned().Get(i), target);
  }

  // repeated int32 team_spawn_count = 30;
  for (int i = 0, n = this_._internal_team_spawn_count_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        30, this_._internal_team_spawn_count().Get(i), target);
  }

  // optional uint32 max_rounds = 31;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        31, this_._internal_max_rounds(), target);
  }

  // optional int32 map_id = 32;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        32, this_._internal_map_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingServerRoundStats::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerRoundStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingServerRoundStats::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingServerRoundStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 kills = 5;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_kills());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_kills_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 assists = 6;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_assists());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_assists_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 deaths = 7;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_deaths());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_deaths_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 scores = 8;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_scores());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_scores_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 pings = 9;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_pings());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_pings_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 team_scores = 12;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_team_scores());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_team_scores_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 enemy_kills = 16;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_enemy_kills());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_enemy_kills_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 enemy_headshots = 17;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_enemy_headshots());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_enemy_headshots_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 enemy_3ks = 18;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_enemy_3ks());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_enemy_3ks_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 enemy_4ks = 19;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_enemy_4ks());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_enemy_4ks_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 enemy_5ks = 20;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_enemy_5ks());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_enemy_5ks_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 mvps = 21;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_mvps());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_mvps_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 enemy_kills_agg = 25;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_enemy_kills_agg());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_enemy_kills_agg_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 enemy_2ks = 28;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_enemy_2ks());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_enemy_2ks_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 player_spawned = 29;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_player_spawned());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_player_spawned_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 team_spawn_count = 30;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_team_spawn_count());
      std::size_t tag_size = std::size_t{2} *
          ::_pbi::FromIntSize(this_._internal_team_spawn_count_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00002000u & cached_has_bits) * 3;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string map = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_map());
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.reservation_);
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm confirm = 13;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confirm_);
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo drop_info = 26;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.drop_info_);
    }
    // optional uint64 reservationid = 1;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_reservationid());
    }
    // optional int32 round = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_round());
    }
    // optional int32 round_result = 10;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_round_result());
    }
    // optional int32 match_result = 11;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_match_result());
    }
  }
  if ((cached_has_bits & 0x0000df00u) != 0) {
    // optional int32 reservation_stage = 14;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_reservation_stage());
    }
    // optional int32 match_duration = 15;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_match_duration());
    }
    // optional uint32 spectators_count = 22;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_spectators_count());
    }
    // optional uint32 spectators_count_tv = 23;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_spectators_count_tv());
    }
    // optional uint32 spectators_count_lnk = 24;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_spectators_count_lnk());
    }
    // optional uint32 max_rounds = 31;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_max_rounds());
    }
    // optional int32 map_id = 32;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_map_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingServerRoundStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingServerRoundStats*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingServerRoundStats&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_kills()->MergeFrom(from._internal_kills());
  _this->_internal_mutable_assists()->MergeFrom(from._internal_assists());
  _this->_internal_mutable_deaths()->MergeFrom(from._internal_deaths());
  _this->_internal_mutable_scores()->MergeFrom(from._internal_scores());
  _this->_internal_mutable_pings()->MergeFrom(from._internal_pings());
  _this->_internal_mutable_team_scores()->MergeFrom(from._internal_team_scores());
  _this->_internal_mutable_enemy_kills()->MergeFrom(from._internal_enemy_kills());
  _this->_internal_mutable_enemy_headshots()->MergeFrom(from._internal_enemy_headshots());
  _this->_internal_mutable_enemy_3ks()->MergeFrom(from._internal_enemy_3ks());
  _this->_internal_mutable_enemy_4ks()->MergeFrom(from._internal_enemy_4ks());
  _this->_internal_mutable_enemy_5ks()->MergeFrom(from._internal_enemy_5ks());
  _this->_internal_mutable_mvps()->MergeFrom(from._internal_mvps());
  _this->_internal_mutable_enemy_kills_agg()->MergeFrom(from._internal_enemy_kills_agg());
  _this->_internal_mutable_enemy_2ks()->MergeFrom(from._internal_enemy_2ks());
  _this->_internal_mutable_player_spawned()->MergeFrom(from._internal_player_spawned());
  _this->_internal_mutable_team_spawn_count()->MergeFrom(from._internal_team_spawn_count());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_map(from._internal_map());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.reservation_ != nullptr);
      if (_this->_impl_.reservation_ == nullptr) {
        _this->_impl_.reservation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reservation_);
      } else {
        _this->_impl_.reservation_->MergeFrom(*from._impl_.reservation_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.confirm_ != nullptr);
      if (_this->_impl_.confirm_ == nullptr) {
        _this->_impl_.confirm_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confirm_);
      } else {
        _this->_impl_.confirm_->MergeFrom(*from._impl_.confirm_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.drop_info_ != nullptr);
      if (_this->_impl_.drop_info_ == nullptr) {
        _this->_impl_.drop_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.drop_info_);
      } else {
        _this->_impl_.drop_info_->MergeFrom(*from._impl_.drop_info_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.reservationid_ = from._impl_.reservationid_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.round_ = from._impl_.round_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.round_result_ = from._impl_.round_result_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.match_result_ = from._impl_.match_result_;
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.reservation_stage_ = from._impl_.reservation_stage_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.match_duration_ = from._impl_.match_duration_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.spectators_count_ = from._impl_.spectators_count_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.spectators_count_tv_ = from._impl_.spectators_count_tv_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.spectators_count_lnk_ = from._impl_.spectators_count_lnk_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.b_switched_teams_ = from._impl_.b_switched_teams_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.max_rounds_ = from._impl_.max_rounds_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.map_id_ = from._impl_.map_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingServerRoundStats::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingServerRoundStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingServerRoundStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingServerRoundStats::InternalSwap(CMsgGCCStrike15_v2_MatchmakingServerRoundStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.kills_.InternalSwap(&other->_impl_.kills_);
  _impl_.assists_.InternalSwap(&other->_impl_.assists_);
  _impl_.deaths_.InternalSwap(&other->_impl_.deaths_);
  _impl_.scores_.InternalSwap(&other->_impl_.scores_);
  _impl_.pings_.InternalSwap(&other->_impl_.pings_);
  _impl_.team_scores_.InternalSwap(&other->_impl_.team_scores_);
  _impl_.enemy_kills_.InternalSwap(&other->_impl_.enemy_kills_);
  _impl_.enemy_headshots_.InternalSwap(&other->_impl_.enemy_headshots_);
  _impl_.enemy_3ks_.InternalSwap(&other->_impl_.enemy_3ks_);
  _impl_.enemy_4ks_.InternalSwap(&other->_impl_.enemy_4ks_);
  _impl_.enemy_5ks_.InternalSwap(&other->_impl_.enemy_5ks_);
  _impl_.mvps_.InternalSwap(&other->_impl_.mvps_);
  _impl_.enemy_kills_agg_.InternalSwap(&other->_impl_.enemy_kills_agg_);
  _impl_.enemy_2ks_.InternalSwap(&other->_impl_.enemy_2ks_);
  _impl_.player_spawned_.InternalSwap(&other->_impl_.player_spawned_);
  _impl_.team_spawn_count_.InternalSwap(&other->_impl_.team_spawn_count_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.map_, &other->_impl_.map_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.map_id_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingServerRoundStats::_impl_.map_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingServerRoundStats, _impl_.reservation_)>(
          reinterpret_cast<char*>(&_impl_.reservation_),
          reinterpret_cast<char*>(&other->_impl_.reservation_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingServerRoundStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingClient2GCHello::_Internal {
 public:
};

CMsgGCCStrike15_v2_MatchmakingClient2GCHello::CMsgGCCStrike15_v2_MatchmakingClient2GCHello(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingClient2GCHello)
}
CMsgGCCStrike15_v2_MatchmakingClient2GCHello::CMsgGCCStrike15_v2_MatchmakingClient2GCHello(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingClient2GCHello& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingClient2GCHello* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingClient2GCHello)
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingClient2GCHello::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingClient2GCHello(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingClient2GCHello::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchmakingClient2GCHello),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingClient2GCHello));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingClient2GCHello::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingClient2GCHello_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingClient2GCHello::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingClient2GCHello>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingClient2GCHello::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingClient2GCHello>(), &CMsgGCCStrike15_v2_MatchmakingClient2GCHello::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingClient2GCHello::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingClient2GCHello, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingClient2GCHello::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingClient2GCHello::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingClient2GCHello::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
CMsgGCCStrike15_v2_MatchmakingClient2GCHello::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchmakingClient2GCHello_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingClient2GCHello>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingClient2GCHello::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        my_current_event_teams_{visibility, arena, from.my_current_event_teams_},
        my_current_event_stages_{visibility, arena, from.my_current_event_stages_},
        rankings_{visibility, arena, from.rankings_} {}

CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingGC2ClientHello* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ongoingmatch_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ongoingmatch_)
                : nullptr;
  _impl_.global_stats_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.global_stats_)
                : nullptr;
  _impl_.ranking_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ranking_)
                : nullptr;
  _impl_.commendation_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commendation_)
                : nullptr;
  _impl_.medals_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.medals_)
                : nullptr;
  _impl_.my_current_event_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.my_current_event_)
                : nullptr;
  _impl_.my_current_team_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.my_current_team_)
                : nullptr;
  _impl_.activity_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activity_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, account_id_),
           offsetof(Impl_, owcaseid_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::owcaseid_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        my_current_event_teams_{visibility, arena},
        my_current_event_stages_{visibility, arena},
        rankings_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ongoingmatch_),
           0,
           offsetof(Impl_, owcaseid_) -
               offsetof(Impl_, ongoingmatch_) +
               sizeof(Impl_::owcaseid_));
}
CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::~CMsgGCCStrike15_v2_MatchmakingGC2ClientHello() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ongoingmatch_;
  delete this_._impl_.global_stats_;
  delete this_._impl_.ranking_;
  delete this_._impl_.commendation_;
  delete this_._impl_.medals_;
  delete this_._impl_.my_current_event_;
  delete this_._impl_.my_current_team_;
  delete this_._impl_.activity_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingGC2ClientHello(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_teams_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_impl_.my_current_event_teams_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_stages_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_impl_.my_current_event_stages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.rankings_) +
          decltype(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_impl_.rankings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello), alignof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello),
                                 alignof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>(), &CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 11, 0, 2>
CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_._has_bits_),
    0, // no _extensions_
    21, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292902912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.account_id_), 8>(),
     {8, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.account_id_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve ongoingmatch = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.ongoingmatch_)}},
    // optional .GlobalStatistics global_stats = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.global_stats_)}},
    // optional uint32 penalty_seconds = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_seconds_), 9>(),
     {32, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_seconds_)}},
    // optional uint32 penalty_reason = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_reason_), 10>(),
     {40, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_reason_)}},
    // optional int32 vac_banned = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.vac_banned_), 11>(),
     {48, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.vac_banned_)}},
    // optional .PlayerRankingInfo ranking = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.ranking_)}},
    // optional .PlayerCommendationInfo commendation = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.commendation_)}},
    // optional .PlayerMedalsInfo medals = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.medals_)}},
    // optional .TournamentEvent my_current_event = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_)}},
    // repeated .TournamentTeam my_current_event_teams = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 6, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_teams_)}},
    // optional .TournamentTeam my_current_team = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 6, 7, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_team_)}},
    // repeated .TournamentEvent my_current_event_stages = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 8, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_stages_)}},
    // optional uint32 survey_vote = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.survey_vote_), 12>(),
     {112, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.survey_vote_)}},
    // optional .AccountActivity activity = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 7, 9, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.activity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 player_level = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_level_)}},
    // optional int32 player_cur_xp = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_cur_xp_)}},
    // optional int32 player_xp_bonus_flags = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 15, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_xp_bonus_flags_)}},
    // repeated .PlayerRankingInfo rankings = 20;
    {::_pbi::TcParser::FastMtR2,
     {418, 63, 10, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.rankings_)}},
    // optional uint64 owcaseid = 21;
    {::_pbi::TcParser::FastV64S2,
     {424, 16, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.owcaseid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.account_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve ongoingmatch = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.ongoingmatch_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .GlobalStatistics global_stats = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.global_stats_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 penalty_seconds = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_seconds_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 penalty_reason = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.penalty_reason_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 vac_banned = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.vac_banned_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .PlayerRankingInfo ranking = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.ranking_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .PlayerCommendationInfo commendation = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.commendation_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .PlayerMedalsInfo medals = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.medals_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .TournamentEvent my_current_event = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .TournamentTeam my_current_event_teams = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_teams_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .TournamentTeam my_current_team = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_team_), _Internal::kHasBitsOffset + 6, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .TournamentEvent my_current_event_stages = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.my_current_event_stages_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 survey_vote = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.survey_vote_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .AccountActivity activity = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.activity_), _Internal::kHasBitsOffset + 7, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 player_level = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_level_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 player_cur_xp = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_cur_xp_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 player_xp_bonus_flags = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.player_xp_bonus_flags_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .PlayerRankingInfo rankings = 20;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.rankings_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 owcaseid = 21;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.owcaseid_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>()},
      {::_pbi::TcParser::GetTable<::GlobalStatistics>()},
      {::_pbi::TcParser::GetTable<::PlayerRankingInfo>()},
      {::_pbi::TcParser::GetTable<::PlayerCommendationInfo>()},
      {::_pbi::TcParser::GetTable<::PlayerMedalsInfo>()},
      {::_pbi::TcParser::GetTable<::TournamentEvent>()},
      {::_pbi::TcParser::GetTable<::TournamentTeam>()},
      {::_pbi::TcParser::GetTable<::TournamentTeam>()},
      {::_pbi::TcParser::GetTable<::TournamentEvent>()},
      {::_pbi::TcParser::GetTable<::AccountActivity>()},
      {::_pbi::TcParser::GetTable<::PlayerRankingInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.my_current_event_teams_.Clear();
  _impl_.my_current_event_stages_.Clear();
  _impl_.rankings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.ongoingmatch_ != nullptr);
      _impl_.ongoingmatch_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.global_stats_ != nullptr);
      _impl_.global_stats_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.ranking_ != nullptr);
      _impl_.ranking_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.commendation_ != nullptr);
      _impl_.commendation_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.medals_ != nullptr);
      _impl_.medals_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.my_current_event_ != nullptr);
      _impl_.my_current_event_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.my_current_team_ != nullptr);
      _impl_.my_current_team_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.activity_ != nullptr);
      _impl_.activity_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.player_xp_bonus_flags_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.player_xp_bonus_flags_));
  }
  _impl_.owcaseid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve ongoingmatch = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.ongoingmatch_, this_._impl_.ongoingmatch_->GetCachedSize(), target,
        stream);
  }

  // optional .GlobalStatistics global_stats = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.global_stats_, this_._impl_.global_stats_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 penalty_seconds = 4;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_penalty_seconds(), target);
  }

  // optional uint32 penalty_reason = 5;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_penalty_reason(), target);
  }

  // optional int32 vac_banned = 6;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_vac_banned(), target);
  }

  // optional .PlayerRankingInfo ranking = 7;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.ranking_, this_._impl_.ranking_->GetCachedSize(), target,
        stream);
  }

  // optional .PlayerCommendationInfo commendation = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.commendation_, this_._impl_.commendation_->GetCachedSize(), target,
        stream);
  }

  // optional .PlayerMedalsInfo medals = 9;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.medals_, this_._impl_.medals_->GetCachedSize(), target,
        stream);
  }

  // optional .TournamentEvent my_current_event = 10;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.my_current_event_, this_._impl_.my_current_event_->GetCachedSize(), target,
        stream);
  }

  // repeated .TournamentTeam my_current_event_teams = 11;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_my_current_event_teams_size());
       i < n; i++) {
    const auto& repfield = this_._internal_my_current_event_teams().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .TournamentTeam my_current_team = 12;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.my_current_team_, this_._impl_.my_current_team_->GetCachedSize(), target,
        stream);
  }

  // repeated .TournamentEvent my_current_event_stages = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_my_current_event_stages_size());
       i < n; i++) {
    const auto& repfield = this_._internal_my_current_event_stages().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 survey_vote = 14;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_survey_vote(), target);
  }

  // optional .AccountActivity activity = 15;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, *this_._impl_.activity_, this_._impl_.activity_->GetCachedSize(), target,
        stream);
  }

  // optional int32 player_level = 17;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this_._internal_player_level(), target);
  }

  // optional int32 player_cur_xp = 18;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this_._internal_player_cur_xp(), target);
  }

  // optional int32 player_xp_bonus_flags = 19;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        19, this_._internal_player_xp_bonus_flags(), target);
  }

  // repeated .PlayerRankingInfo rankings = 20;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_rankings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_rankings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            20, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint64 owcaseid = 21;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        21, this_._internal_owcaseid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .TournamentTeam my_current_event_teams = 11;
    {
      total_size += 1UL * this_._internal_my_current_event_teams_size();
      for (const auto& msg : this_._internal_my_current_event_teams()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .TournamentEvent my_current_event_stages = 13;
    {
      total_size += 1UL * this_._internal_my_current_event_stages_size();
      for (const auto& msg : this_._internal_my_current_event_stages()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .PlayerRankingInfo rankings = 20;
    {
      total_size += 2UL * this_._internal_rankings_size();
      for (const auto& msg : this_._internal_rankings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve ongoingmatch = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ongoingmatch_);
    }
    // optional .GlobalStatistics global_stats = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.global_stats_);
    }
    // optional .PlayerRankingInfo ranking = 7;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ranking_);
    }
    // optional .PlayerCommendationInfo commendation = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commendation_);
    }
    // optional .PlayerMedalsInfo medals = 9;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.medals_);
    }
    // optional .TournamentEvent my_current_event = 10;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.my_current_event_);
    }
    // optional .TournamentTeam my_current_team = 12;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.my_current_team_);
    }
    // optional .AccountActivity activity = 15;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.activity_);
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 penalty_seconds = 4;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_penalty_seconds());
    }
    // optional uint32 penalty_reason = 5;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_penalty_reason());
    }
    // optional int32 vac_banned = 6;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_vac_banned());
    }
    // optional uint32 survey_vote = 14;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_survey_vote());
    }
    // optional int32 player_level = 17;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_player_level());
    }
    // optional int32 player_cur_xp = 18;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_player_cur_xp());
    }
    // optional int32 player_xp_bonus_flags = 19;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_player_xp_bonus_flags());
    }
  }
   {
    // optional uint64 owcaseid = 21;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this_._internal_owcaseid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_my_current_event_teams()->MergeFrom(
      from._internal_my_current_event_teams());
  _this->_internal_mutable_my_current_event_stages()->MergeFrom(
      from._internal_my_current_event_stages());
  _this->_internal_mutable_rankings()->MergeFrom(
      from._internal_rankings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.ongoingmatch_ != nullptr);
      if (_this->_impl_.ongoingmatch_ == nullptr) {
        _this->_impl_.ongoingmatch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ongoingmatch_);
      } else {
        _this->_impl_.ongoingmatch_->MergeFrom(*from._impl_.ongoingmatch_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.global_stats_ != nullptr);
      if (_this->_impl_.global_stats_ == nullptr) {
        _this->_impl_.global_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.global_stats_);
      } else {
        _this->_impl_.global_stats_->MergeFrom(*from._impl_.global_stats_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.ranking_ != nullptr);
      if (_this->_impl_.ranking_ == nullptr) {
        _this->_impl_.ranking_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ranking_);
      } else {
        _this->_impl_.ranking_->MergeFrom(*from._impl_.ranking_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.commendation_ != nullptr);
      if (_this->_impl_.commendation_ == nullptr) {
        _this->_impl_.commendation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commendation_);
      } else {
        _this->_impl_.commendation_->MergeFrom(*from._impl_.commendation_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.medals_ != nullptr);
      if (_this->_impl_.medals_ == nullptr) {
        _this->_impl_.medals_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.medals_);
      } else {
        _this->_impl_.medals_->MergeFrom(*from._impl_.medals_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.my_current_event_ != nullptr);
      if (_this->_impl_.my_current_event_ == nullptr) {
        _this->_impl_.my_current_event_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.my_current_event_);
      } else {
        _this->_impl_.my_current_event_->MergeFrom(*from._impl_.my_current_event_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.my_current_team_ != nullptr);
      if (_this->_impl_.my_current_team_ == nullptr) {
        _this->_impl_.my_current_team_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.my_current_team_);
      } else {
        _this->_impl_.my_current_team_->MergeFrom(*from._impl_.my_current_team_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.activity_ != nullptr);
      if (_this->_impl_.activity_ == nullptr) {
        _this->_impl_.activity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activity_);
      } else {
        _this->_impl_.activity_->MergeFrom(*from._impl_.activity_);
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.penalty_seconds_ = from._impl_.penalty_seconds_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.penalty_reason_ = from._impl_.penalty_reason_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.vac_banned_ = from._impl_.vac_banned_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.survey_vote_ = from._impl_.survey_vote_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.player_level_ = from._impl_.player_level_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.player_cur_xp_ = from._impl_.player_cur_xp_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.player_xp_bonus_flags_ = from._impl_.player_xp_bonus_flags_;
    }
  }
  if ((cached_has_bits & 0x00010000u) != 0) {
    _this->_impl_.owcaseid_ = from._impl_.owcaseid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingGC2ClientHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::InternalSwap(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.my_current_event_teams_.InternalSwap(&other->_impl_.my_current_event_teams_);
  _impl_.my_current_event_stages_.InternalSwap(&other->_impl_.my_current_event_stages_);
  _impl_.rankings_.InternalSwap(&other->_impl_.rankings_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.owcaseid_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::_impl_.owcaseid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello, _impl_.ongoingmatch_)>(
          reinterpret_cast<char*>(&_impl_.ongoingmatch_),
          reinterpret_cast<char*>(&other->_impl_.ongoingmatch_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_AccountPrivacySettings_Setting>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
}
CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, setting_type_),
           0,
           offsetof(Impl_, setting_value_) -
               offsetof(Impl_, setting_type_) +
               sizeof(Impl_::setting_value_));
}
CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::~CMsgGCCStrike15_v2_AccountPrivacySettings_Setting() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_AccountPrivacySettings_Setting& this_ = static_cast<CMsgGCCStrike15_v2_AccountPrivacySettings_Setting&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_AccountPrivacySettings_Setting(arena);
}
constexpr auto CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting),
                                            alignof(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting));
}
constexpr auto CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_AccountPrivacySettings_Setting>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_AccountPrivacySettings_Setting>(), &CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::ByteSizeLong,
              &CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_ =
            CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_.tc_table);
  return CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 setting_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_value_)}},
    // optional uint32 setting_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 setting_type = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 setting_value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.setting_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.setting_value_) -
        reinterpret_cast<char*>(&_impl_.setting_type_)) + sizeof(_impl_.setting_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting& this_ = static_cast<const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 setting_type = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_setting_type(), target);
  }

  // optional uint32 setting_value = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_setting_value(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting& this_ = static_cast<const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 setting_type = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_setting_type());
    }
    // optional uint32 setting_value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_setting_value());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_AccountPrivacySettings_Setting*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.setting_type_ = from._impl_.setting_type_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.setting_value_ = from._impl_.setting_value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::CopyFrom(const CMsgGCCStrike15_v2_AccountPrivacySettings_Setting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_AccountPrivacySettings.Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::InternalSwap(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_value_)
      + sizeof(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::_impl_.setting_value_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting, _impl_.setting_type_)>(
          reinterpret_cast<char*>(&_impl_.setting_type_),
          reinterpret_cast<char*>(&other->_impl_.setting_type_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_AccountPrivacySettings::_Internal {
 public:
};

CMsgGCCStrike15_v2_AccountPrivacySettings::CMsgGCCStrike15_v2_AccountPrivacySettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_AccountPrivacySettings)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_AccountPrivacySettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_AccountPrivacySettings& from_msg)
      : settings_{visibility, arena, from.settings_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_AccountPrivacySettings::CMsgGCCStrike15_v2_AccountPrivacySettings(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_AccountPrivacySettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_AccountPrivacySettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_AccountPrivacySettings)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_AccountPrivacySettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : settings_{visibility, arena},
        _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_AccountPrivacySettings::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_AccountPrivacySettings::~CMsgGCCStrike15_v2_AccountPrivacySettings() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_AccountPrivacySettings)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_AccountPrivacySettings::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_AccountPrivacySettings& this_ = static_cast<CMsgGCCStrike15_v2_AccountPrivacySettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_AccountPrivacySettings(arena);
}
constexpr auto CMsgGCCStrike15_v2_AccountPrivacySettings::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings, _impl_.settings_) +
          decltype(CMsgGCCStrike15_v2_AccountPrivacySettings::_impl_.settings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_AccountPrivacySettings), alignof(CMsgGCCStrike15_v2_AccountPrivacySettings), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_AccountPrivacySettings::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_AccountPrivacySettings),
                                 alignof(CMsgGCCStrike15_v2_AccountPrivacySettings));
  }
}
constexpr auto CMsgGCCStrike15_v2_AccountPrivacySettings::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_AccountPrivacySettings_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_AccountPrivacySettings::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_AccountPrivacySettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_AccountPrivacySettings::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_AccountPrivacySettings>(), &CMsgGCCStrike15_v2_AccountPrivacySettings::ByteSizeLong,
              &CMsgGCCStrike15_v2_AccountPrivacySettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_AccountPrivacySettings::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_ =
            CMsgGCCStrike15_v2_AccountPrivacySettings::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_.tc_table);
  return CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_v2_AccountPrivacySettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_AccountPrivacySettings_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_AccountPrivacySettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_AccountPrivacySettings.Setting settings = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings, _impl_.settings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCCStrike15_v2_AccountPrivacySettings.Setting settings = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AccountPrivacySettings, _impl_.settings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_AccountPrivacySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_AccountPrivacySettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.settings_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_AccountPrivacySettings& this_ = static_cast<const CMsgGCCStrike15_v2_AccountPrivacySettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AccountPrivacySettings::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_AccountPrivacySettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_AccountPrivacySettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCCStrike15_v2_AccountPrivacySettings.Setting settings = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_settings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_settings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_AccountPrivacySettings)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_AccountPrivacySettings::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_AccountPrivacySettings& this_ = static_cast<const CMsgGCCStrike15_v2_AccountPrivacySettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_AccountPrivacySettings::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_AccountPrivacySettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_AccountPrivacySettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_AccountPrivacySettings.Setting settings = 1;
    {
      total_size += 1UL * this_._internal_settings_size();
      for (const auto& msg : this_._internal_settings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_AccountPrivacySettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_AccountPrivacySettings*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_AccountPrivacySettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_AccountPrivacySettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_settings()->MergeFrom(
      from._internal_settings());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_AccountPrivacySettings::CopyFrom(const CMsgGCCStrike15_v2_AccountPrivacySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_AccountPrivacySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_AccountPrivacySettings::InternalSwap(CMsgGCCStrike15_v2_AccountPrivacySettings* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.settings_.InternalSwap(&other->_impl_.settings_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_AccountPrivacySettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.abandoned_match_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.abandoned_match_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, account_id_),
           offsetof(Impl_, penalty_reason_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::penalty_reason_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, abandoned_match_),
           0,
           offsetof(Impl_, penalty_reason_) -
               offsetof(Impl_, abandoned_match_) +
               sizeof(Impl_::penalty_reason_));
}
CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::~CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.abandoned_match_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon>(), &CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 penalty_reason = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_reason_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_reason_)}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.account_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.account_id_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve abandoned_match = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.abandoned_match_)}},
    // optional uint32 penalty_seconds = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_seconds_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_seconds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve abandoned_match = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.abandoned_match_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 penalty_seconds = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_seconds_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 penalty_reason = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_reason_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.abandoned_match_ != nullptr);
    _impl_.abandoned_match_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.penalty_reason_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.penalty_reason_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve abandoned_match = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.abandoned_match_, this_._impl_.abandoned_match_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 penalty_seconds = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_penalty_seconds(), target);
  }

  // optional uint32 penalty_reason = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_penalty_reason(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve abandoned_match = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.abandoned_match_);
    }
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 penalty_seconds = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_penalty_seconds());
    }
    // optional uint32 penalty_reason = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_penalty_reason());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.abandoned_match_ != nullptr);
      if (_this->_impl_.abandoned_match_ == nullptr) {
        _this->_impl_.abandoned_match_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.abandoned_match_);
      } else {
        _this->_impl_.abandoned_match_->MergeFrom(*from._impl_.abandoned_match_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.penalty_seconds_ = from._impl_.penalty_seconds_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.penalty_reason_ = from._impl_.penalty_reason_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::InternalSwap(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.penalty_reason_)
      + sizeof(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::_impl_.penalty_reason_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon, _impl_.abandoned_match_)>(
          reinterpret_cast<char*>(&_impl_.abandoned_match_),
          reinterpret_cast<char*>(&other->_impl_.abandoned_match_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientGCRankUpdate::_Internal {
 public:
};

CMsgGCCStrike15_v2_ClientGCRankUpdate::CMsgGCCStrike15_v2_ClientGCRankUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientGCRankUpdate)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientGCRankUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientGCRankUpdate& from_msg)
      : rankings_{visibility, arena, from.rankings_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_ClientGCRankUpdate::CMsgGCCStrike15_v2_ClientGCRankUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientGCRankUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientGCRankUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientGCRankUpdate)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientGCRankUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : rankings_{visibility, arena},
        _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientGCRankUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_ClientGCRankUpdate::~CMsgGCCStrike15_v2_ClientGCRankUpdate() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientGCRankUpdate)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientGCRankUpdate::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientGCRankUpdate& this_ = static_cast<CMsgGCCStrike15_v2_ClientGCRankUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientGCRankUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientGCRankUpdate(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientGCRankUpdate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientGCRankUpdate, _impl_.rankings_) +
          decltype(CMsgGCCStrike15_v2_ClientGCRankUpdate::_impl_.rankings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_ClientGCRankUpdate), alignof(CMsgGCCStrike15_v2_ClientGCRankUpdate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientGCRankUpdate::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientGCRankUpdate),
                                 alignof(CMsgGCCStrike15_v2_ClientGCRankUpdate));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientGCRankUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientGCRankUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientGCRankUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientGCRankUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientGCRankUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientGCRankUpdate>(), &CMsgGCCStrike15_v2_ClientGCRankUpdate::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientGCRankUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientGCRankUpdate, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientGCRankUpdate::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_ =
            CMsgGCCStrike15_v2_ClientGCRankUpdate::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientGCRankUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_v2_ClientGCRankUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientGCRankUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientGCRankUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .PlayerRankingInfo rankings = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientGCRankUpdate, _impl_.rankings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .PlayerRankingInfo rankings = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientGCRankUpdate, _impl_.rankings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerRankingInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientGCRankUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientGCRankUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rankings_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientGCRankUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientGCRankUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_ClientGCRankUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientGCRankUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientGCRankUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientGCRankUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .PlayerRankingInfo rankings = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_rankings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_rankings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientGCRankUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientGCRankUpdate::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientGCRankUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_ClientGCRankUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientGCRankUpdate::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientGCRankUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientGCRankUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .PlayerRankingInfo rankings = 1;
    {
      total_size += 1UL * this_._internal_rankings_size();
      for (const auto& msg : this_._internal_rankings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientGCRankUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientGCRankUpdate*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientGCRankUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientGCRankUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rankings()->MergeFrom(
      from._internal_rankings());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientGCRankUpdate::CopyFrom(const CMsgGCCStrike15_v2_ClientGCRankUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientGCRankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientGCRankUpdate::InternalSwap(CMsgGCCStrike15_v2_ClientGCRankUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rankings_.InternalSwap(&other->_impl_.rankings_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientGCRankUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        main_post_url_(arena, from.main_post_url_) {}

CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        main_post_url_(arena) {}

inline void CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::~CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& this_ = static_cast<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.main_post_url_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate),
                                            alignof(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate));
}
constexpr auto CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate>(), &CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_ =
            CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 73, 2>
CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string main_post_url = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _impl_.main_post_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string main_post_url = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate, _impl_.main_post_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\15\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate"
    "main_post_url"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.main_post_url_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string main_post_url = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_main_post_url();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate.main_post_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional string main_post_url = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_main_post_url());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_main_post_url(from._internal_main_post_url());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::CopyFrom(const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::InternalSwap(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.main_post_url_, &other->_impl_.main_post_url_, arena);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
}
CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           0,
           offsetof(Impl_, communication_cooldown_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::communication_cooldown_));
}
CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::~CMsgGCCStrike15_v2_ServerNotificationForUserPenalty() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ServerNotificationForUserPenalty& this_ = static_cast<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ServerNotificationForUserPenalty(arena);
}
constexpr auto CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty),
                                            alignof(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty));
}
constexpr auto CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>(), &CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::ByteSizeLong,
              &CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_ =
            CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool communication_cooldown = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.communication_cooldown_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.communication_cooldown_)}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.account_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.account_id_)}},
    // optional uint32 reason = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.reason_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.reason_)}},
    // optional uint32 seconds = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.seconds_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.seconds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.account_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 reason = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.reason_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 seconds = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.seconds_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool communication_cooldown = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.communication_cooldown_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.communication_cooldown_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.communication_cooldown_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty& this_ = static_cast<const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional uint32 reason = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_reason(), target);
  }

  // optional uint32 seconds = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_seconds(), target);
  }

  // optional bool communication_cooldown = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this_._internal_communication_cooldown(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty& this_ = static_cast<const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 reason = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reason());
    }
    // optional uint32 seconds = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_seconds());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.reason_ = from._impl_.reason_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.seconds_ = from._impl_.seconds_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.communication_cooldown_ = from._impl_.communication_cooldown_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::CopyFrom(const CMsgGCCStrike15_v2_ServerNotificationForUserPenalty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ServerNotificationForUserPenalty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::InternalSwap(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.communication_cooldown_)
      + sizeof(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::_impl_.communication_cooldown_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientReportPlayer::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientReportPlayer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientReportPlayer::CMsgGCCStrike15_v2_ClientReportPlayer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportPlayer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientReportPlayer)
}
CMsgGCCStrike15_v2_ClientReportPlayer::CMsgGCCStrike15_v2_ClientReportPlayer(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientReportPlayer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportPlayer_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientReportPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientReportPlayer::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           0,
           offsetof(Impl_, report_from_demo_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::report_from_demo_));
}
CMsgGCCStrike15_v2_ClientReportPlayer::~CMsgGCCStrike15_v2_ClientReportPlayer() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientReportPlayer)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientReportPlayer::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientReportPlayer& this_ = static_cast<CMsgGCCStrike15_v2_ClientReportPlayer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportPlayer::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientReportPlayer(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientReportPlayer::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientReportPlayer),
                                            alignof(CMsgGCCStrike15_v2_ClientReportPlayer));
}
constexpr auto CMsgGCCStrike15_v2_ClientReportPlayer::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientReportPlayer_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientReportPlayer::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientReportPlayer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientReportPlayer::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientReportPlayer>(), &CMsgGCCStrike15_v2_ClientReportPlayer::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientReportPlayer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientReportPlayer::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientReportPlayer_class_data_ =
            CMsgGCCStrike15_v2_ClientReportPlayer::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportPlayer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientReportPlayer_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientReportPlayer_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientReportPlayer_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2>
CMsgGCCStrike15_v2_ClientReportPlayer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientReportPlayer_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientReportPlayer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.account_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.account_id_)}},
    // optional uint32 rpt_aimbot = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_aimbot_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_aimbot_)}},
    // optional uint32 rpt_wallhack = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_wallhack_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_wallhack_)}},
    // optional uint32 rpt_speedhack = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_speedhack_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_speedhack_)}},
    // optional uint32 rpt_teamharm = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_teamharm_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_teamharm_)}},
    // optional uint32 rpt_textabuse = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_textabuse_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_textabuse_)}},
    // optional uint32 rpt_voiceabuse = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_voiceabuse_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_voiceabuse_)}},
    // optional uint64 match_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.match_id_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.match_id_)}},
    // optional bool report_from_demo = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.report_from_demo_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.report_from_demo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.account_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_aimbot = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_aimbot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_wallhack = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_wallhack_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_speedhack = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_speedhack_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_teamharm = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_teamharm_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_textabuse = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_textabuse_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_voiceabuse = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.rpt_voiceabuse_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 match_id = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.match_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool report_from_demo = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.report_from_demo_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientReportPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientReportPlayer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rpt_voiceabuse_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.rpt_voiceabuse_));
  }
  _impl_.report_from_demo_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportPlayer::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientReportPlayer& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportPlayer::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientReportPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientReportPlayer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional uint32 rpt_aimbot = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_rpt_aimbot(), target);
  }

  // optional uint32 rpt_wallhack = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_rpt_wallhack(), target);
  }

  // optional uint32 rpt_speedhack = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_rpt_speedhack(), target);
  }

  // optional uint32 rpt_teamharm = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_rpt_teamharm(), target);
  }

  // optional uint32 rpt_textabuse = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_rpt_textabuse(), target);
  }

  // optional uint32 rpt_voiceabuse = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_rpt_voiceabuse(), target);
  }

  // optional uint64 match_id = 8;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this_._internal_match_id(), target);
  }

  // optional bool report_from_demo = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this_._internal_report_from_demo(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientReportPlayer)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientReportPlayer::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientReportPlayer& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientReportPlayer::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientReportPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientReportPlayer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000100u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 rpt_aimbot = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_aimbot());
    }
    // optional uint32 rpt_wallhack = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_wallhack());
    }
    // optional uint32 rpt_speedhack = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_speedhack());
    }
    // optional uint32 rpt_teamharm = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_teamharm());
    }
    // optional uint32 rpt_textabuse = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_textabuse());
    }
    // optional uint64 match_id = 8;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
    // optional uint32 rpt_voiceabuse = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_voiceabuse());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientReportPlayer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientReportPlayer*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientReportPlayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientReportPlayer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.rpt_aimbot_ = from._impl_.rpt_aimbot_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.rpt_wallhack_ = from._impl_.rpt_wallhack_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.rpt_speedhack_ = from._impl_.rpt_speedhack_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.rpt_teamharm_ = from._impl_.rpt_teamharm_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.rpt_textabuse_ = from._impl_.rpt_textabuse_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.rpt_voiceabuse_ = from._impl_.rpt_voiceabuse_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.report_from_demo_ = from._impl_.report_from_demo_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientReportPlayer::CopyFrom(const CMsgGCCStrike15_v2_ClientReportPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientReportPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientReportPlayer::InternalSwap(CMsgGCCStrike15_v2_ClientReportPlayer* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.report_from_demo_)
      + sizeof(CMsgGCCStrike15_v2_ClientReportPlayer::_impl_.report_from_demo_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportPlayer, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientReportPlayer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientCommendPlayer::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientCommendPlayer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientCommendPlayer::CMsgGCCStrike15_v2_ClientCommendPlayer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientCommendPlayer)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientCommendPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientCommendPlayer& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_ClientCommendPlayer::CMsgGCCStrike15_v2_ClientCommendPlayer(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientCommendPlayer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientCommendPlayer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.commendation_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commendation_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, account_id_),
           offsetof(Impl_, match_id_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::match_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientCommendPlayer)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientCommendPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientCommendPlayer::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, commendation_),
           0,
           offsetof(Impl_, match_id_) -
               offsetof(Impl_, commendation_) +
               sizeof(Impl_::match_id_));
}
CMsgGCCStrike15_v2_ClientCommendPlayer::~CMsgGCCStrike15_v2_ClientCommendPlayer() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientCommendPlayer)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientCommendPlayer::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientCommendPlayer& this_ = static_cast<CMsgGCCStrike15_v2_ClientCommendPlayer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.commendation_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientCommendPlayer::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientCommendPlayer(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientCommendPlayer::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientCommendPlayer),
                                            alignof(CMsgGCCStrike15_v2_ClientCommendPlayer));
}
constexpr auto CMsgGCCStrike15_v2_ClientCommendPlayer::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientCommendPlayer_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientCommendPlayer::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientCommendPlayer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientCommendPlayer::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientCommendPlayer>(), &CMsgGCCStrike15_v2_ClientCommendPlayer::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientCommendPlayer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientCommendPlayer::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_ =
            CMsgGCCStrike15_v2_ClientCommendPlayer::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientCommendPlayer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
CMsgGCCStrike15_v2_ClientCommendPlayer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_._has_bits_),
    0, // no _extensions_
    10, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966398,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientCommendPlayer_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientCommendPlayer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 match_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.match_id_), 3>(),
     {64, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.match_id_)}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.account_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.account_id_)}},
    // optional uint32 tokens = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.tokens_), 2>(),
     {80, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.tokens_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 match_id = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.match_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .PlayerCommendationInfo commendation = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.commendation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 tokens = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.tokens_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerCommendationInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientCommendPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientCommendPlayer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.commendation_ != nullptr);
    _impl_.commendation_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.match_id_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.match_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientCommendPlayer::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientCommendPlayer& this_ = static_cast<const CMsgGCCStrike15_v2_ClientCommendPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientCommendPlayer::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientCommendPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientCommendPlayer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional uint64 match_id = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this_._internal_match_id(), target);
  }

  // optional .PlayerCommendationInfo commendation = 9;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.commendation_, this_._impl_.commendation_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 tokens = 10;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_tokens(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientCommendPlayer)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientCommendPlayer::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientCommendPlayer& this_ = static_cast<const CMsgGCCStrike15_v2_ClientCommendPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientCommendPlayer::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientCommendPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientCommendPlayer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .PlayerCommendationInfo commendation = 9;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commendation_);
    }
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 tokens = 10;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tokens());
    }
    // optional uint64 match_id = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientCommendPlayer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientCommendPlayer*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientCommendPlayer&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientCommendPlayer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.commendation_ != nullptr);
      if (_this->_impl_.commendation_ == nullptr) {
        _this->_impl_.commendation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commendation_);
      } else {
        _this->_impl_.commendation_->MergeFrom(*from._impl_.commendation_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.tokens_ = from._impl_.tokens_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientCommendPlayer::CopyFrom(const CMsgGCCStrike15_v2_ClientCommendPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientCommendPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientCommendPlayer::InternalSwap(CMsgGCCStrike15_v2_ClientCommendPlayer* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.match_id_)
      + sizeof(CMsgGCCStrike15_v2_ClientCommendPlayer::_impl_.match_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientCommendPlayer, _impl_.commendation_)>(
          reinterpret_cast<char*>(&_impl_.commendation_),
          reinterpret_cast<char*>(&other->_impl_.commendation_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientCommendPlayer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientReportServer::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientReportServer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientReportServer::CMsgGCCStrike15_v2_ClientReportServer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportServer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientReportServer)
}
CMsgGCCStrike15_v2_ClientReportServer::CMsgGCCStrike15_v2_ClientReportServer(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientReportServer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportServer_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientReportServer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientReportServer::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpt_poorperf_),
           0,
           offsetof(Impl_, rpt_inventoryabuse_) -
               offsetof(Impl_, rpt_poorperf_) +
               sizeof(Impl_::rpt_inventoryabuse_));
}
CMsgGCCStrike15_v2_ClientReportServer::~CMsgGCCStrike15_v2_ClientReportServer() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientReportServer)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientReportServer::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientReportServer& this_ = static_cast<CMsgGCCStrike15_v2_ClientReportServer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportServer::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientReportServer(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientReportServer::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientReportServer),
                                            alignof(CMsgGCCStrike15_v2_ClientReportServer));
}
constexpr auto CMsgGCCStrike15_v2_ClientReportServer::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientReportServer_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientReportServer::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientReportServer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientReportServer::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientReportServer>(), &CMsgGCCStrike15_v2_ClientReportServer::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientReportServer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientReportServer::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientReportServer_class_data_ =
            CMsgGCCStrike15_v2_ClientReportServer::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportServer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientReportServer_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientReportServer_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientReportServer_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
CMsgGCCStrike15_v2_ClientReportServer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967136,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientReportServer_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientReportServer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 match_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientReportServer, _impl_.match_id_), 4>(),
     {64, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.match_id_)}},
    // optional uint32 rpt_poorperf = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_poorperf_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_poorperf_)}},
    // optional uint32 rpt_abusivemodels = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_abusivemodels_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_abusivemodels_)}},
    // optional uint32 rpt_badmotd = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_badmotd_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_badmotd_)}},
    // optional uint32 rpt_listingabuse = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_listingabuse_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_listingabuse_)}},
    // optional uint32 rpt_inventoryabuse = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_inventoryabuse_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_inventoryabuse_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 rpt_poorperf = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_poorperf_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_abusivemodels = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_abusivemodels_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_badmotd = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_badmotd_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_listingabuse = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_listingabuse_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_inventoryabuse = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_inventoryabuse_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 match_id = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.match_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientReportServer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientReportServer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    ::memset(&_impl_.rpt_poorperf_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rpt_inventoryabuse_) -
        reinterpret_cast<char*>(&_impl_.rpt_poorperf_)) + sizeof(_impl_.rpt_inventoryabuse_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportServer::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientReportServer& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportServer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportServer::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientReportServer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientReportServer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 rpt_poorperf = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_rpt_poorperf(), target);
  }

  // optional uint32 rpt_abusivemodels = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_rpt_abusivemodels(), target);
  }

  // optional uint32 rpt_badmotd = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_rpt_badmotd(), target);
  }

  // optional uint32 rpt_listingabuse = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_rpt_listingabuse(), target);
  }

  // optional uint32 rpt_inventoryabuse = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_rpt_inventoryabuse(), target);
  }

  // optional uint64 match_id = 8;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this_._internal_match_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientReportServer)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientReportServer::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientReportServer& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportServer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientReportServer::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientReportServer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientReportServer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional uint32 rpt_poorperf = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_poorperf());
    }
    // optional uint32 rpt_abusivemodels = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_abusivemodels());
    }
    // optional uint32 rpt_badmotd = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_badmotd());
    }
    // optional uint32 rpt_listingabuse = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_listingabuse());
    }
    // optional uint64 match_id = 8;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
    // optional uint32 rpt_inventoryabuse = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_inventoryabuse());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientReportServer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientReportServer*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientReportServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientReportServer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.rpt_poorperf_ = from._impl_.rpt_poorperf_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.rpt_abusivemodels_ = from._impl_.rpt_abusivemodels_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.rpt_badmotd_ = from._impl_.rpt_badmotd_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.rpt_listingabuse_ = from._impl_.rpt_listingabuse_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.rpt_inventoryabuse_ = from._impl_.rpt_inventoryabuse_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientReportServer::CopyFrom(const CMsgGCCStrike15_v2_ClientReportServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientReportServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientReportServer::InternalSwap(CMsgGCCStrike15_v2_ClientReportServer* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_inventoryabuse_)
      + sizeof(CMsgGCCStrike15_v2_ClientReportServer::_impl_.rpt_inventoryabuse_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportServer, _impl_.rpt_poorperf_)>(
          reinterpret_cast<char*>(&_impl_.rpt_poorperf_),
          reinterpret_cast<char*>(&other->_impl_.rpt_poorperf_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientReportServer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientReportResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientReportResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientReportResponse::CMsgGCCStrike15_v2_ClientReportResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientReportResponse)
}
CMsgGCCStrike15_v2_ClientReportResponse::CMsgGCCStrike15_v2_ClientReportResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientReportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientReportResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confirmation_id_),
           0,
           offsetof(Impl_, tokens_) -
               offsetof(Impl_, confirmation_id_) +
               sizeof(Impl_::tokens_));
}
CMsgGCCStrike15_v2_ClientReportResponse::~CMsgGCCStrike15_v2_ClientReportResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientReportResponse)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientReportResponse::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientReportResponse& this_ = static_cast<CMsgGCCStrike15_v2_ClientReportResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientReportResponse(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientReportResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientReportResponse),
                                            alignof(CMsgGCCStrike15_v2_ClientReportResponse));
}
constexpr auto CMsgGCCStrike15_v2_ClientReportResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientReportResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientReportResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientReportResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientReportResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientReportResponse>(), &CMsgGCCStrike15_v2_ClientReportResponse::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientReportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientReportResponse::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientReportResponse_class_data_ =
            CMsgGCCStrike15_v2_ClientReportResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientReportResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientReportResponse_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientReportResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
CMsgGCCStrike15_v2_ClientReportResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientReportResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientReportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 confirmation_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.confirmation_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.confirmation_id_)}},
    // optional uint32 account_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.account_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.account_id_)}},
    // optional uint32 server_ip = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.server_ip_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.server_ip_)}},
    // optional uint32 response_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_type_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_type_)}},
    // optional uint32 response_result = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_result_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_result_)}},
    // optional uint32 tokens = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.tokens_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.tokens_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 confirmation_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.confirmation_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 account_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 server_ip = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.server_ip_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 response_type = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 response_result = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.response_result_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tokens = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.tokens_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    ::memset(&_impl_.confirmation_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tokens_) -
        reinterpret_cast<char*>(&_impl_.confirmation_id_)) + sizeof(_impl_.tokens_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientReportResponse& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientReportResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 confirmation_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_confirmation_id(), target);
  }

  // optional uint32 account_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_account_id(), target);
  }

  // optional uint32 server_ip = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_server_ip(), target);
  }

  // optional uint32 response_type = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_response_type(), target);
  }

  // optional uint32 response_result = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_response_result(), target);
  }

  // optional uint32 tokens = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_tokens(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientReportResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientReportResponse::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientReportResponse& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientReportResponse::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientReportResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional uint64 confirmation_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_confirmation_id());
    }
    // optional uint32 account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 server_ip = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_ip());
    }
    // optional uint32 response_type = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_response_type());
    }
    // optional uint32 response_result = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_response_result());
    }
    // optional uint32 tokens = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tokens());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientReportResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientReportResponse*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.confirmation_id_ = from._impl_.confirmation_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.server_ip_ = from._impl_.server_ip_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.response_type_ = from._impl_.response_type_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.response_result_ = from._impl_.response_result_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.tokens_ = from._impl_.tokens_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientReportResponse::CopyFrom(const CMsgGCCStrike15_v2_ClientReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientReportResponse::InternalSwap(CMsgGCCStrike15_v2_ClientReportResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.tokens_)
      + sizeof(CMsgGCCStrike15_v2_ClientReportResponse::_impl_.tokens_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportResponse, _impl_.confirmation_id_)>(
          reinterpret_cast<char*>(&_impl_.confirmation_id_),
          reinterpret_cast<char*>(&other->_impl_.confirmation_id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientReportResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_ids_{visibility, arena, from.account_ids_},
        data_center_pings_{visibility, arena, from.data_center_pings_} {}

CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, serverid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, serverid_),
           offsetof(Impl_, matchid_) -
               offsetof(Impl_, serverid_) +
               sizeof(Impl_::matchid_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_ids_{visibility, arena},
        data_center_pings_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, serverid_),
           0,
           offsetof(Impl_, matchid_) -
               offsetof(Impl_, serverid_) +
               sizeof(Impl_::matchid_));
}
CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::~CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& this_ = static_cast<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.account_ids_) +
          decltype(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_impl_.account_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.data_center_pings_) +
          decltype(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_impl_.data_center_pings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends), alignof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends),
                                 alignof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends>(), &CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_ =
            CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2>
CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 request_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.request_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.request_id_)}},
    // repeated uint32 account_ids = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.account_ids_)}},
    // optional uint64 serverid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.serverid_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.serverid_)}},
    // optional uint64 matchid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.matchid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.matchid_)}},
    // optional uint32 client_launcher = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.client_launcher_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.client_launcher_)}},
    // repeated .DataCenterPing data_center_pings = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.data_center_pings_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 request_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.request_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 account_ids = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.account_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint64 serverid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.serverid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 matchid = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.matchid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 client_launcher = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.client_launcher_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .DataCenterPing data_center_pings = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.data_center_pings_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::DataCenterPing>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_ids_.Clear();
  _impl_.data_center_pings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.serverid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.matchid_) -
        reinterpret_cast<char*>(&_impl_.serverid_)) + sizeof(_impl_.matchid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 request_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_request_id(), target);
  }

  // repeated uint32 account_ids = 2;
  for (int i = 0, n = this_._internal_account_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_account_ids().Get(i), target);
  }

  // optional uint64 serverid = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_serverid(), target);
  }

  // optional uint64 matchid = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this_._internal_matchid(), target);
  }

  // optional uint32 client_launcher = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_client_launcher(), target);
  }

  // repeated .DataCenterPing data_center_pings = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_data_center_pings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_data_center_pings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 account_ids = 2;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_account_ids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_account_ids_size());
      total_size += tag_size + data_size;
    }
    // repeated .DataCenterPing data_center_pings = 6;
    {
      total_size += 1UL * this_._internal_data_center_pings_size();
      for (const auto& msg : this_._internal_data_center_pings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional uint64 serverid = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_serverid());
    }
    // optional uint32 request_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_request_id());
    }
    // optional uint32 client_launcher = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_client_launcher());
    }
    // optional uint64 matchid = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_matchid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_ids()->MergeFrom(from._internal_account_ids());
  _this->_internal_mutable_data_center_pings()->MergeFrom(
      from._internal_data_center_pings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.serverid_ = from._impl_.serverid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.client_launcher_ = from._impl_.client_launcher_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.matchid_ = from._impl_.matchid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::CopyFrom(const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::InternalSwap(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_ids_.InternalSwap(&other->_impl_.account_ids_);
  _impl_.data_center_pings_.InternalSwap(&other->_impl_.data_center_pings_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.matchid_)
      + sizeof(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::_impl_.matchid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends, _impl_.serverid_)>(
          reinterpret_cast<char*>(&_impl_.serverid_),
          reinterpret_cast<char*>(&other->_impl_.serverid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchableMatchInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WatchableMatchInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_._has_bits_);
};

WatchableMatchInfo::WatchableMatchInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchableMatchInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:WatchableMatchInfo)
}
PROTOBUF_NDEBUG_INLINE WatchableMatchInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::WatchableMatchInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tv_watch_password_(arena, from.tv_watch_password_),
        game_mapgroup_(arena, from.game_mapgroup_),
        game_map_(arena, from.game_map_) {}

WatchableMatchInfo::WatchableMatchInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WatchableMatchInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchableMatchInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchableMatchInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_ip_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, server_ip_),
           offsetof(Impl_, game_type_) -
               offsetof(Impl_, server_ip_) +
               sizeof(Impl_::game_type_));

  // @@protoc_insertion_point(copy_constructor:WatchableMatchInfo)
}
PROTOBUF_NDEBUG_INLINE WatchableMatchInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tv_watch_password_(arena),
        game_mapgroup_(arena),
        game_map_(arena) {}

inline void WatchableMatchInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_ip_),
           0,
           offsetof(Impl_, game_type_) -
               offsetof(Impl_, server_ip_) +
               sizeof(Impl_::game_type_));
}
WatchableMatchInfo::~WatchableMatchInfo() {
  // @@protoc_insertion_point(destructor:WatchableMatchInfo)
  SharedDtor(*this);
}
inline void WatchableMatchInfo::SharedDtor(MessageLite& self) {
  WatchableMatchInfo& this_ = static_cast<WatchableMatchInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tv_watch_password_.Destroy();
  this_._impl_.game_mapgroup_.Destroy();
  this_._impl_.game_map_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WatchableMatchInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WatchableMatchInfo(arena);
}
constexpr auto WatchableMatchInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WatchableMatchInfo),
                                            alignof(WatchableMatchInfo));
}
constexpr auto WatchableMatchInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WatchableMatchInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WatchableMatchInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WatchableMatchInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WatchableMatchInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WatchableMatchInfo>(), &WatchableMatchInfo::ByteSizeLong,
              &WatchableMatchInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_._cached_size_),
          false,
      },
      &WatchableMatchInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        WatchableMatchInfo_class_data_ =
            WatchableMatchInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL WatchableMatchInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WatchableMatchInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WatchableMatchInfo_class_data_.tc_table);
  return WatchableMatchInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 56, 2>
WatchableMatchInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WatchableMatchInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::WatchableMatchInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 server_ip = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchableMatchInfo, _impl_.server_ip_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.server_ip_)}},
    // optional uint32 tv_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchableMatchInfo, _impl_.tv_port_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_port_)}},
    // optional uint32 tv_spectators = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchableMatchInfo, _impl_.tv_spectators_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_spectators_)}},
    // optional uint32 tv_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchableMatchInfo, _impl_.tv_time_), 6>(),
     {32, 6, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_time_)}},
    // optional bytes tv_watch_password = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_watch_password_)}},
    // optional uint64 cl_decryptdata_key = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchableMatchInfo, _impl_.cl_decryptdata_key_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.cl_decryptdata_key_)}},
    // optional uint64 cl_decryptdata_key_pub = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchableMatchInfo, _impl_.cl_decryptdata_key_pub_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.cl_decryptdata_key_pub_)}},
    // optional uint32 game_type = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchableMatchInfo, _impl_.game_type_), 12>(),
     {64, 12, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.game_type_)}},
    // optional string game_mapgroup = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 1, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.game_mapgroup_)}},
    // optional string game_map = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 2, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.game_map_)}},
    // optional uint64 server_id = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchableMatchInfo, _impl_.server_id_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.server_id_)}},
    // optional uint64 match_id = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchableMatchInfo, _impl_.match_id_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.match_id_)}},
    // optional uint64 reservation_id = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchableMatchInfo, _impl_.reservation_id_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.reservation_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 server_ip = 1;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.server_ip_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_port = 2;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_port_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_spectators = 3;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_spectators_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tv_time = 4;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_time_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes tv_watch_password = 5;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.tv_watch_password_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint64 cl_decryptdata_key = 6;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.cl_decryptdata_key_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 cl_decryptdata_key_pub = 7;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.cl_decryptdata_key_pub_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 game_type = 8;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.game_type_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string game_mapgroup = 9;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.game_mapgroup_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string game_map = 10;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.game_map_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 server_id = 11;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.server_id_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 match_id = 12;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.match_id_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 reservation_id = 13;
    {PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.reservation_id_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\22\0\0\0\0\0\0\0\0\15\10\0\0\0\0\0"
    "WatchableMatchInfo"
    "game_mapgroup"
    "game_map"
  }},
};
PROTOBUF_NOINLINE void WatchableMatchInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:WatchableMatchInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.tv_watch_password_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.game_mapgroup_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.game_map_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f8u) != 0) {
    ::memset(&_impl_.server_ip_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cl_decryptdata_key_) -
        reinterpret_cast<char*>(&_impl_.server_ip_)) + sizeof(_impl_.cl_decryptdata_key_));
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    ::memset(&_impl_.cl_decryptdata_key_pub_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.game_type_) -
        reinterpret_cast<char*>(&_impl_.cl_decryptdata_key_pub_)) + sizeof(_impl_.game_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WatchableMatchInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WatchableMatchInfo& this_ = static_cast<const WatchableMatchInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WatchableMatchInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WatchableMatchInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:WatchableMatchInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 server_ip = 1;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_server_ip(), target);
  }

  // optional uint32 tv_port = 2;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_tv_port(), target);
  }

  // optional uint32 tv_spectators = 3;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_tv_spectators(), target);
  }

  // optional uint32 tv_time = 4;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_tv_time(), target);
  }

  // optional bytes tv_watch_password = 5;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_tv_watch_password();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  // optional uint64 cl_decryptdata_key = 6;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this_._internal_cl_decryptdata_key(), target);
  }

  // optional uint64 cl_decryptdata_key_pub = 7;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this_._internal_cl_decryptdata_key_pub(), target);
  }

  // optional uint32 game_type = 8;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_game_type(), target);
  }

  // optional string game_mapgroup = 9;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_game_mapgroup();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "WatchableMatchInfo.game_mapgroup");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string game_map = 10;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_game_map();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "WatchableMatchInfo.game_map");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional uint64 server_id = 11;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this_._internal_server_id(), target);
  }

  // optional uint64 match_id = 12;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        12, this_._internal_match_id(), target);
  }

  // optional uint64 reservation_id = 13;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        13, this_._internal_reservation_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WatchableMatchInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WatchableMatchInfo::ByteSizeLong(const MessageLite& base) {
  const WatchableMatchInfo& this_ = static_cast<const WatchableMatchInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WatchableMatchInfo::ByteSizeLong() const {
  const WatchableMatchInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:WatchableMatchInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional bytes tv_watch_password = 5;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_tv_watch_password());
    }
    // optional string game_mapgroup = 9;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_game_mapgroup());
    }
    // optional string game_map = 10;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_game_map());
    }
    // optional uint32 server_ip = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_ip());
    }
    // optional uint32 tv_port = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_port());
    }
    // optional uint32 tv_spectators = 3;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_spectators());
    }
    // optional uint32 tv_time = 4;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tv_time());
    }
    // optional uint64 cl_decryptdata_key = 6;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_cl_decryptdata_key());
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    // optional uint64 cl_decryptdata_key_pub = 7;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_cl_decryptdata_key_pub());
    }
    // optional uint64 server_id = 11;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_server_id());
    }
    // optional uint64 match_id = 12;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
    // optional uint64 reservation_id = 13;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_reservation_id());
    }
    // optional uint32 game_type = 8;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WatchableMatchInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchableMatchInfo*>(&to_msg);
  auto& from = static_cast<const WatchableMatchInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WatchableMatchInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_tv_watch_password(from._internal_tv_watch_password());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_game_mapgroup(from._internal_game_mapgroup());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_game_map(from._internal_game_map());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.server_ip_ = from._impl_.server_ip_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.tv_port_ = from._impl_.tv_port_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.tv_spectators_ = from._impl_.tv_spectators_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.tv_time_ = from._impl_.tv_time_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.cl_decryptdata_key_ = from._impl_.cl_decryptdata_key_;
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.cl_decryptdata_key_pub_ = from._impl_.cl_decryptdata_key_pub_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.server_id_ = from._impl_.server_id_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.reservation_id_ = from._impl_.reservation_id_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchableMatchInfo::CopyFrom(const WatchableMatchInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WatchableMatchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchableMatchInfo::InternalSwap(WatchableMatchInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tv_watch_password_, &other->_impl_.tv_watch_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_mapgroup_, &other->_impl_.game_mapgroup_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_map_, &other->_impl_.game_map_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.game_type_)
      + sizeof(WatchableMatchInfo::_impl_.game_type_)
      - PROTOBUF_FIELD_OFFSET(WatchableMatchInfo, _impl_.server_ip_)>(
          reinterpret_cast<char*>(&_impl_.server_ip_),
          reinterpret_cast<char*>(&other->_impl_.server_ip_));
}

::google::protobuf::Metadata WatchableMatchInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientRequestJoinFriendData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientRequestJoinFriendData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientRequestJoinFriendData::CMsgGCCStrike15_v2_ClientRequestJoinFriendData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestJoinFriendData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientRequestJoinFriendData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errormsg_(arena, from.errormsg_) {}

CMsgGCCStrike15_v2_ClientRequestJoinFriendData::CMsgGCCStrike15_v2_ClientRequestJoinFriendData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientRequestJoinFriendData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientRequestJoinFriendData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.res_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.res_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, join_ipp_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::join_ipp_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestJoinFriendData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        errormsg_(arena) {}

inline void CMsgGCCStrike15_v2_ClientRequestJoinFriendData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, res_),
           0,
           offsetof(Impl_, join_ipp_) -
               offsetof(Impl_, res_) +
               sizeof(Impl_::join_ipp_));
}
CMsgGCCStrike15_v2_ClientRequestJoinFriendData::~CMsgGCCStrike15_v2_ClientRequestJoinFriendData() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientRequestJoinFriendData::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientRequestJoinFriendData& this_ = static_cast<CMsgGCCStrike15_v2_ClientRequestJoinFriendData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.errormsg_.Destroy();
  delete this_._impl_.res_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinFriendData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientRequestJoinFriendData(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestJoinFriendData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientRequestJoinFriendData),
                                            alignof(CMsgGCCStrike15_v2_ClientRequestJoinFriendData));
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestJoinFriendData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientRequestJoinFriendData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientRequestJoinFriendData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientRequestJoinFriendData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientRequestJoinFriendData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientRequestJoinFriendData>(), &CMsgGCCStrike15_v2_ClientRequestJoinFriendData::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientRequestJoinFriendData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientRequestJoinFriendData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_ =
            CMsgGCCStrike15_v2_ClientRequestJoinFriendData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinFriendData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 63, 2>
CMsgGCCStrike15_v2_ClientRequestJoinFriendData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientRequestJoinFriendData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientRequestJoinFriendData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.version_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.version_)}},
    // optional uint32 account_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.account_id_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.account_id_)}},
    // optional uint32 join_token = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_token_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_token_)}},
    // optional uint32 join_ipp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_ipp_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_ipp_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.res_)}},
    // optional string errormsg = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.errormsg_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.version_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 account_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.account_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 join_token = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_token_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 join_ipp = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_ipp_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.res_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string errormsg = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.errormsg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>()},
  }},
  {{
    "\56\0\0\0\0\0\10\0"
    "CMsgGCCStrike15_v2_ClientRequestJoinFriendData"
    "errormsg"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientRequestJoinFriendData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.errormsg_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.res_ != nullptr);
      _impl_.res_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.join_ipp_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.join_ipp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinFriendData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientRequestJoinFriendData& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestJoinFriendData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinFriendData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientRequestJoinFriendData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 version = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_version(), target);
  }

  // optional uint32 account_id = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_account_id(), target);
  }

  // optional uint32 join_token = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_join_token(), target);
  }

  // optional uint32 join_ipp = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_join_ipp(), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.res_, this_._impl_.res_->GetCachedSize(), target,
        stream);
  }

  // optional string errormsg = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_errormsg();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientRequestJoinFriendData.errormsg");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientRequestJoinFriendData::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientRequestJoinFriendData& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestJoinFriendData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientRequestJoinFriendData::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientRequestJoinFriendData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional string errormsg = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_errormsg());
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.res_);
    }
    // optional uint32 version = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_version());
    }
    // optional uint32 account_id = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 join_token = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_join_token());
    }
    // optional uint32 join_ipp = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_join_ipp());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientRequestJoinFriendData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientRequestJoinFriendData*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientRequestJoinFriendData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_errormsg(from._internal_errormsg());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.res_ != nullptr);
      if (_this->_impl_.res_ == nullptr) {
        _this->_impl_.res_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.res_);
      } else {
        _this->_impl_.res_->MergeFrom(*from._impl_.res_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.join_token_ = from._impl_.join_token_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.join_ipp_ = from._impl_.join_ipp_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientRequestJoinFriendData::CopyFrom(const CMsgGCCStrike15_v2_ClientRequestJoinFriendData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientRequestJoinFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientRequestJoinFriendData::InternalSwap(CMsgGCCStrike15_v2_ClientRequestJoinFriendData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormsg_, &other->_impl_.errormsg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.join_ipp_)
      + sizeof(CMsgGCCStrike15_v2_ClientRequestJoinFriendData::_impl_.join_ipp_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinFriendData, _impl_.res_)>(
          reinterpret_cast<char*>(&_impl_.res_),
          reinterpret_cast<char*>(&other->_impl_.res_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientRequestJoinFriendData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientRequestJoinServerData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientRequestJoinServerData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientRequestJoinServerData::CMsgGCCStrike15_v2_ClientRequestJoinServerData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestJoinServerData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientRequestJoinServerData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errormsg_(arena, from.errormsg_) {}

CMsgGCCStrike15_v2_ClientRequestJoinServerData::CMsgGCCStrike15_v2_ClientRequestJoinServerData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientRequestJoinServerData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientRequestJoinServerData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.res_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.res_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, server_port_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::server_port_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestJoinServerData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        errormsg_(arena) {}

inline void CMsgGCCStrike15_v2_ClientRequestJoinServerData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, res_),
           0,
           offsetof(Impl_, server_port_) -
               offsetof(Impl_, res_) +
               sizeof(Impl_::server_port_));
}
CMsgGCCStrike15_v2_ClientRequestJoinServerData::~CMsgGCCStrike15_v2_ClientRequestJoinServerData() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientRequestJoinServerData::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientRequestJoinServerData& this_ = static_cast<CMsgGCCStrike15_v2_ClientRequestJoinServerData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.errormsg_.Destroy();
  delete this_._impl_.res_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinServerData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientRequestJoinServerData(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestJoinServerData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientRequestJoinServerData),
                                            alignof(CMsgGCCStrike15_v2_ClientRequestJoinServerData));
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestJoinServerData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientRequestJoinServerData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientRequestJoinServerData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientRequestJoinServerData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientRequestJoinServerData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientRequestJoinServerData>(), &CMsgGCCStrike15_v2_ClientRequestJoinServerData::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientRequestJoinServerData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientRequestJoinServerData::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_ =
            CMsgGCCStrike15_v2_ClientRequestJoinServerData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinServerData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 63, 2>
CMsgGCCStrike15_v2_ClientRequestJoinServerData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientRequestJoinServerData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientRequestJoinServerData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.version_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.version_)}},
    // optional uint32 account_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.account_id_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.account_id_)}},
    // optional uint64 serverid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.serverid_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.serverid_)}},
    // optional uint32 server_ip = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_ip_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_ip_)}},
    // optional uint32 server_port = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_port_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_port_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.res_)}},
    // optional string errormsg = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.errormsg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.version_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 account_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.account_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 serverid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.serverid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 server_ip = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_ip_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 server_port = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_port_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.res_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string errormsg = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.errormsg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>()},
  }},
  {{
    "\56\0\0\0\0\0\0\10"
    "CMsgGCCStrike15_v2_ClientRequestJoinServerData"
    "errormsg"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientRequestJoinServerData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.errormsg_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.res_ != nullptr);
      _impl_.res_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.server_port_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.server_port_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinServerData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientRequestJoinServerData& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestJoinServerData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestJoinServerData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientRequestJoinServerData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 version = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_version(), target);
  }

  // optional uint32 account_id = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_account_id(), target);
  }

  // optional uint64 serverid = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_serverid(), target);
  }

  // optional uint32 server_ip = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_server_ip(), target);
  }

  // optional uint32 server_port = 5;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_server_port(), target);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 6;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.res_, this_._impl_.res_->GetCachedSize(), target,
        stream);
  }

  // optional string errormsg = 7;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_errormsg();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientRequestJoinServerData.errormsg");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientRequestJoinServerData::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientRequestJoinServerData& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestJoinServerData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientRequestJoinServerData::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientRequestJoinServerData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // optional string errormsg = 7;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_errormsg());
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 6;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.res_);
    }
    // optional uint32 version = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_version());
    }
    // optional uint32 account_id = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint64 serverid = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_serverid());
    }
    // optional uint32 server_ip = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_ip());
    }
    // optional uint32 server_port = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_port());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientRequestJoinServerData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientRequestJoinServerData*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientRequestJoinServerData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_errormsg(from._internal_errormsg());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.res_ != nullptr);
      if (_this->_impl_.res_ == nullptr) {
        _this->_impl_.res_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.res_);
      } else {
        _this->_impl_.res_->MergeFrom(*from._impl_.res_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.serverid_ = from._impl_.serverid_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.server_ip_ = from._impl_.server_ip_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.server_port_ = from._impl_.server_port_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientRequestJoinServerData::CopyFrom(const CMsgGCCStrike15_v2_ClientRequestJoinServerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientRequestJoinServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientRequestJoinServerData::InternalSwap(CMsgGCCStrike15_v2_ClientRequestJoinServerData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormsg_, &other->_impl_.errormsg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.server_port_)
      + sizeof(CMsgGCCStrike15_v2_ClientRequestJoinServerData::_impl_.server_port_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestJoinServerData, _impl_.res_)>(
          reinterpret_cast<char*>(&_impl_.res_),
          reinterpret_cast<char*>(&other->_impl_.res_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientRequestJoinServerData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCstrike15_v2_ClientRequestNewMission::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCstrike15_v2_ClientRequestNewMission>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_._has_bits_);
};

CMsgGCCstrike15_v2_ClientRequestNewMission::CMsgGCCstrike15_v2_ClientRequestNewMission(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCstrike15_v2_ClientRequestNewMission)
}
CMsgGCCstrike15_v2_ClientRequestNewMission::CMsgGCCstrike15_v2_ClientRequestNewMission(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCstrike15_v2_ClientRequestNewMission& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCstrike15_v2_ClientRequestNewMission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCstrike15_v2_ClientRequestNewMission::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mission_id_),
           0,
           offsetof(Impl_, campaign_id_) -
               offsetof(Impl_, mission_id_) +
               sizeof(Impl_::campaign_id_));
}
CMsgGCCstrike15_v2_ClientRequestNewMission::~CMsgGCCstrike15_v2_ClientRequestNewMission() {
  // @@protoc_insertion_point(destructor:CMsgGCCstrike15_v2_ClientRequestNewMission)
  SharedDtor(*this);
}
inline void CMsgGCCstrike15_v2_ClientRequestNewMission::SharedDtor(MessageLite& self) {
  CMsgGCCstrike15_v2_ClientRequestNewMission& this_ = static_cast<CMsgGCCstrike15_v2_ClientRequestNewMission&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRequestNewMission::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCstrike15_v2_ClientRequestNewMission(arena);
}
constexpr auto CMsgGCCstrike15_v2_ClientRequestNewMission::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCstrike15_v2_ClientRequestNewMission),
                                            alignof(CMsgGCCstrike15_v2_ClientRequestNewMission));
}
constexpr auto CMsgGCCstrike15_v2_ClientRequestNewMission::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCstrike15_v2_ClientRequestNewMission_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCstrike15_v2_ClientRequestNewMission::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCstrike15_v2_ClientRequestNewMission>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCstrike15_v2_ClientRequestNewMission::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCstrike15_v2_ClientRequestNewMission>(), &CMsgGCCstrike15_v2_ClientRequestNewMission::ByteSizeLong,
              &CMsgGCCstrike15_v2_ClientRequestNewMission::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_._cached_size_),
          false,
      },
      &CMsgGCCstrike15_v2_ClientRequestNewMission::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_ =
            CMsgGCCstrike15_v2_ClientRequestNewMission::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRequestNewMission::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_.tc_table);
  return CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCstrike15_v2_ClientRequestNewMission::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCstrike15_v2_ClientRequestNewMission_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCstrike15_v2_ClientRequestNewMission>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 mission_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.mission_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.mission_id_)}},
    // optional uint32 campaign_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.campaign_id_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.campaign_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 mission_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.mission_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 campaign_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.campaign_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCstrike15_v2_ClientRequestNewMission::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCstrike15_v2_ClientRequestNewMission)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.mission_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.campaign_id_) -
        reinterpret_cast<char*>(&_impl_.mission_id_)) + sizeof(_impl_.campaign_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRequestNewMission::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCstrike15_v2_ClientRequestNewMission& this_ = static_cast<const CMsgGCCstrike15_v2_ClientRequestNewMission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRequestNewMission::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCstrike15_v2_ClientRequestNewMission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCstrike15_v2_ClientRequestNewMission)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 mission_id = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_mission_id(), target);
  }

  // optional uint32 campaign_id = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_campaign_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCstrike15_v2_ClientRequestNewMission)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCstrike15_v2_ClientRequestNewMission::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCstrike15_v2_ClientRequestNewMission& this_ = static_cast<const CMsgGCCstrike15_v2_ClientRequestNewMission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCstrike15_v2_ClientRequestNewMission::ByteSizeLong() const {
  const CMsgGCCstrike15_v2_ClientRequestNewMission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCstrike15_v2_ClientRequestNewMission)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 mission_id = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_mission_id());
    }
    // optional uint32 campaign_id = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_campaign_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCstrike15_v2_ClientRequestNewMission::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCstrike15_v2_ClientRequestNewMission*>(&to_msg);
  auto& from = static_cast<const CMsgGCCstrike15_v2_ClientRequestNewMission&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCstrike15_v2_ClientRequestNewMission)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.mission_id_ = from._impl_.mission_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.campaign_id_ = from._impl_.campaign_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCstrike15_v2_ClientRequestNewMission::CopyFrom(const CMsgGCCstrike15_v2_ClientRequestNewMission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCstrike15_v2_ClientRequestNewMission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCstrike15_v2_ClientRequestNewMission::InternalSwap(CMsgGCCstrike15_v2_ClientRequestNewMission* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.campaign_id_)
      + sizeof(CMsgGCCstrike15_v2_ClientRequestNewMission::_impl_.campaign_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRequestNewMission, _impl_.mission_id_)>(
          reinterpret_cast<char*>(&_impl_.mission_id_),
          reinterpret_cast<char*>(&other->_impl_.mission_id_));
}

::google::protobuf::Metadata CMsgGCCstrike15_v2_ClientRequestNewMission::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCstrike15_v2_ClientRedeemMissionReward::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCstrike15_v2_ClientRedeemMissionReward>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_._has_bits_);
};

CMsgGCCstrike15_v2_ClientRedeemMissionReward::CMsgGCCstrike15_v2_ClientRedeemMissionReward(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
}
CMsgGCCstrike15_v2_ClientRedeemMissionReward::CMsgGCCstrike15_v2_ClientRedeemMissionReward(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCstrike15_v2_ClientRedeemMissionReward& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCstrike15_v2_ClientRedeemMissionReward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCstrike15_v2_ClientRedeemMissionReward::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, campaign_id_),
           0,
           offsetof(Impl_, expected_cost_) -
               offsetof(Impl_, campaign_id_) +
               sizeof(Impl_::expected_cost_));
}
CMsgGCCstrike15_v2_ClientRedeemMissionReward::~CMsgGCCstrike15_v2_ClientRedeemMissionReward() {
  // @@protoc_insertion_point(destructor:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
  SharedDtor(*this);
}
inline void CMsgGCCstrike15_v2_ClientRedeemMissionReward::SharedDtor(MessageLite& self) {
  CMsgGCCstrike15_v2_ClientRedeemMissionReward& this_ = static_cast<CMsgGCCstrike15_v2_ClientRedeemMissionReward&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemMissionReward::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCstrike15_v2_ClientRedeemMissionReward(arena);
}
constexpr auto CMsgGCCstrike15_v2_ClientRedeemMissionReward::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCstrike15_v2_ClientRedeemMissionReward),
                                            alignof(CMsgGCCstrike15_v2_ClientRedeemMissionReward));
}
constexpr auto CMsgGCCstrike15_v2_ClientRedeemMissionReward::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCstrike15_v2_ClientRedeemMissionReward_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCstrike15_v2_ClientRedeemMissionReward::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCstrike15_v2_ClientRedeemMissionReward>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCstrike15_v2_ClientRedeemMissionReward::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCstrike15_v2_ClientRedeemMissionReward>(), &CMsgGCCstrike15_v2_ClientRedeemMissionReward::ByteSizeLong,
              &CMsgGCCstrike15_v2_ClientRedeemMissionReward::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_._cached_size_),
          false,
      },
      &CMsgGCCstrike15_v2_ClientRedeemMissionReward::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_ =
            CMsgGCCstrike15_v2_ClientRedeemMissionReward::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemMissionReward::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_.tc_table);
  return CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCstrike15_v2_ClientRedeemMissionReward::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCstrike15_v2_ClientRedeemMissionReward_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCstrike15_v2_ClientRedeemMissionReward>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 expected_cost = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.expected_cost_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.expected_cost_)}},
    // optional uint32 campaign_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.campaign_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.campaign_id_)}},
    // optional uint32 redeem_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeem_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeem_id_)}},
    // optional uint32 redeemable_balance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeemable_balance_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeemable_balance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 campaign_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.campaign_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 redeem_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeem_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 redeemable_balance = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.redeemable_balance_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 expected_cost = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.expected_cost_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCstrike15_v2_ClientRedeemMissionReward::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.campaign_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.expected_cost_) -
        reinterpret_cast<char*>(&_impl_.campaign_id_)) + sizeof(_impl_.expected_cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemMissionReward::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCstrike15_v2_ClientRedeemMissionReward& this_ = static_cast<const CMsgGCCstrike15_v2_ClientRedeemMissionReward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemMissionReward::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCstrike15_v2_ClientRedeemMissionReward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 campaign_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_campaign_id(), target);
  }

  // optional uint32 redeem_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_redeem_id(), target);
  }

  // optional uint32 redeemable_balance = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_redeemable_balance(), target);
  }

  // optional uint32 expected_cost = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_expected_cost(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCstrike15_v2_ClientRedeemMissionReward::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCstrike15_v2_ClientRedeemMissionReward& this_ = static_cast<const CMsgGCCstrike15_v2_ClientRedeemMissionReward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCstrike15_v2_ClientRedeemMissionReward::ByteSizeLong() const {
  const CMsgGCCstrike15_v2_ClientRedeemMissionReward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional uint32 campaign_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_campaign_id());
    }
    // optional uint32 redeem_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_redeem_id());
    }
    // optional uint32 redeemable_balance = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_redeemable_balance());
    }
    // optional uint32 expected_cost = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_expected_cost());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCstrike15_v2_ClientRedeemMissionReward::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCstrike15_v2_ClientRedeemMissionReward*>(&to_msg);
  auto& from = static_cast<const CMsgGCCstrike15_v2_ClientRedeemMissionReward&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.campaign_id_ = from._impl_.campaign_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.redeem_id_ = from._impl_.redeem_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.redeemable_balance_ = from._impl_.redeemable_balance_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.expected_cost_ = from._impl_.expected_cost_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCstrike15_v2_ClientRedeemMissionReward::CopyFrom(const CMsgGCCstrike15_v2_ClientRedeemMissionReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCstrike15_v2_ClientRedeemMissionReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCstrike15_v2_ClientRedeemMissionReward::InternalSwap(CMsgGCCstrike15_v2_ClientRedeemMissionReward* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.expected_cost_)
      + sizeof(CMsgGCCstrike15_v2_ClientRedeemMissionReward::_impl_.expected_cost_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemMissionReward, _impl_.campaign_id_)>(
          reinterpret_cast<char*>(&_impl_.campaign_id_),
          reinterpret_cast<char*>(&other->_impl_.campaign_id_));
}

::google::protobuf::Metadata CMsgGCCstrike15_v2_ClientRedeemMissionReward::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCstrike15_v2_ClientRedeemFreeReward::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCstrike15_v2_ClientRedeemFreeReward>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_._has_bits_);
};

CMsgGCCstrike15_v2_ClientRedeemFreeReward::CMsgGCCstrike15_v2_ClientRedeemFreeReward(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCstrike15_v2_ClientRedeemFreeReward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCstrike15_v2_ClientRedeemFreeReward& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_} {}

CMsgGCCstrike15_v2_ClientRedeemFreeReward::CMsgGCCstrike15_v2_ClientRedeemFreeReward(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCstrike15_v2_ClientRedeemFreeReward& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCstrike15_v2_ClientRedeemFreeReward* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, generation_time_),
           offsetof(Impl_, redeemable_balance_) -
               offsetof(Impl_, generation_time_) +
               sizeof(Impl_::redeemable_balance_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCstrike15_v2_ClientRedeemFreeReward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        items_{visibility, arena} {}

inline void CMsgGCCstrike15_v2_ClientRedeemFreeReward::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_),
           0,
           offsetof(Impl_, redeemable_balance_) -
               offsetof(Impl_, generation_time_) +
               sizeof(Impl_::redeemable_balance_));
}
CMsgGCCstrike15_v2_ClientRedeemFreeReward::~CMsgGCCstrike15_v2_ClientRedeemFreeReward() {
  // @@protoc_insertion_point(destructor:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
  SharedDtor(*this);
}
inline void CMsgGCCstrike15_v2_ClientRedeemFreeReward::SharedDtor(MessageLite& self) {
  CMsgGCCstrike15_v2_ClientRedeemFreeReward& this_ = static_cast<CMsgGCCstrike15_v2_ClientRedeemFreeReward&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemFreeReward::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCstrike15_v2_ClientRedeemFreeReward(arena);
}
constexpr auto CMsgGCCstrike15_v2_ClientRedeemFreeReward::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.items_) +
          decltype(CMsgGCCstrike15_v2_ClientRedeemFreeReward::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCstrike15_v2_ClientRedeemFreeReward), alignof(CMsgGCCstrike15_v2_ClientRedeemFreeReward), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCstrike15_v2_ClientRedeemFreeReward::PlacementNew_,
                                 sizeof(CMsgGCCstrike15_v2_ClientRedeemFreeReward),
                                 alignof(CMsgGCCstrike15_v2_ClientRedeemFreeReward));
  }
}
constexpr auto CMsgGCCstrike15_v2_ClientRedeemFreeReward::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCstrike15_v2_ClientRedeemFreeReward_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCstrike15_v2_ClientRedeemFreeReward::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCstrike15_v2_ClientRedeemFreeReward>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCstrike15_v2_ClientRedeemFreeReward::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCstrike15_v2_ClientRedeemFreeReward>(), &CMsgGCCstrike15_v2_ClientRedeemFreeReward::ByteSizeLong,
              &CMsgGCCstrike15_v2_ClientRedeemFreeReward::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_._cached_size_),
          false,
      },
      &CMsgGCCstrike15_v2_ClientRedeemFreeReward::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_ =
            CMsgGCCstrike15_v2_ClientRedeemFreeReward::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemFreeReward::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_.tc_table);
  return CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGCCstrike15_v2_ClientRedeemFreeReward::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCstrike15_v2_ClientRedeemFreeReward_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCstrike15_v2_ClientRedeemFreeReward>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 generation_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.generation_time_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.generation_time_)}},
    // optional uint32 redeemable_balance = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.redeemable_balance_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.redeemable_balance_)}},
    // repeated uint64 items = 3;
    {::_pbi::TcParser::FastV64R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 generation_time = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.generation_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 redeemable_balance = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.redeemable_balance_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint64 items = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCstrike15_v2_ClientRedeemFreeReward::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.generation_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.redeemable_balance_) -
        reinterpret_cast<char*>(&_impl_.generation_time_)) + sizeof(_impl_.redeemable_balance_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemFreeReward::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCstrike15_v2_ClientRedeemFreeReward& this_ = static_cast<const CMsgGCCstrike15_v2_ClientRedeemFreeReward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_ClientRedeemFreeReward::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCstrike15_v2_ClientRedeemFreeReward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 generation_time = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_generation_time(), target);
  }

  // optional uint32 redeemable_balance = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_redeemable_balance(), target);
  }

  // repeated uint64 items = 3;
  for (int i = 0, n = this_._internal_items_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_items().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCstrike15_v2_ClientRedeemFreeReward::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCstrike15_v2_ClientRedeemFreeReward& this_ = static_cast<const CMsgGCCstrike15_v2_ClientRedeemFreeReward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCstrike15_v2_ClientRedeemFreeReward::ByteSizeLong() const {
  const CMsgGCCstrike15_v2_ClientRedeemFreeReward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint64 items = 3;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
          this_._internal_items());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_items_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 generation_time = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_generation_time());
    }
    // optional uint32 redeemable_balance = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_redeemable_balance());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCstrike15_v2_ClientRedeemFreeReward::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCstrike15_v2_ClientRedeemFreeReward*>(&to_msg);
  auto& from = static_cast<const CMsgGCCstrike15_v2_ClientRedeemFreeReward&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.generation_time_ = from._impl_.generation_time_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.redeemable_balance_ = from._impl_.redeemable_balance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCstrike15_v2_ClientRedeemFreeReward::CopyFrom(const CMsgGCCstrike15_v2_ClientRedeemFreeReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCstrike15_v2_ClientRedeemFreeReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCstrike15_v2_ClientRedeemFreeReward::InternalSwap(CMsgGCCstrike15_v2_ClientRedeemFreeReward* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.redeemable_balance_)
      + sizeof(CMsgGCCstrike15_v2_ClientRedeemFreeReward::_impl_.redeemable_balance_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_ClientRedeemFreeReward, _impl_.generation_time_)>(
          reinterpret_cast<char*>(&_impl_.generation_time_),
          reinterpret_cast<char*>(&other->_impl_.generation_time_));
}

::google::protobuf::Metadata CMsgGCCstrike15_v2_ClientRedeemFreeReward::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_._has_bits_);
};

CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        xp_progress_data_{visibility, arena, from.xp_progress_data_} {}

CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, account_id_),
           offsetof(Impl_, xp_trail_level_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::xp_trail_level_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        xp_progress_data_{visibility, arena} {}

inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_id_),
           0,
           offsetof(Impl_, xp_trail_level_) -
               offsetof(Impl_, account_id_) +
               sizeof(Impl_::xp_trail_level_));
}
CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::~CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded() {
  // @@protoc_insertion_point(destructor:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  SharedDtor(*this);
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::SharedDtor(MessageLite& self) {
  CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& this_ = static_cast<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(arena);
}
constexpr auto CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_progress_data_) +
          decltype(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::_impl_.xp_progress_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded), alignof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::PlacementNew_,
                                 sizeof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded),
                                 alignof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded));
  }
}
constexpr auto CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>(), &CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::ByteSizeLong,
              &CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_._cached_size_),
          false,
      },
      &CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_ =
            CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_.tc_table);
  return CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 0, 2>
CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .XpProgressData xp_progress_data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_progress_data_)}},
    // optional uint32 account_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.account_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.account_id_)}},
    // optional uint32 current_xp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_xp_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_xp_)}},
    // optional uint32 current_level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_level_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_level_)}},
    // optional uint32 upgraded_defidx = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.upgraded_defidx_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.upgraded_defidx_)}},
    // optional uint32 operation_points_awarded = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.operation_points_awarded_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.operation_points_awarded_)}},
    // optional uint32 free_rewards = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.free_rewards_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.free_rewards_)}},
    // optional uint32 xp_trail_remaining = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_remaining_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_remaining_)}},
    // optional int32 xp_trail_xp_needed = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_xp_needed_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_xp_needed_)}},
    // optional uint32 xp_trail_level = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_level_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .XpProgressData xp_progress_data = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_progress_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 account_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.account_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 current_xp = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_xp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 current_level = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.current_level_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 upgraded_defidx = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.upgraded_defidx_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 operation_points_awarded = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.operation_points_awarded_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 free_rewards = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.free_rewards_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 xp_trail_remaining = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_remaining_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 xp_trail_xp_needed = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_xp_needed_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 xp_trail_level = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_level_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::XpProgressData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xp_progress_data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.xp_trail_xp_needed_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.xp_trail_xp_needed_));
  }
  _impl_.xp_trail_level_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& this_ = static_cast<const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .XpProgressData xp_progress_data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_xp_progress_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_xp_progress_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_account_id(), target);
  }

  // optional uint32 current_xp = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_current_xp(), target);
  }

  // optional uint32 current_level = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_current_level(), target);
  }

  // optional uint32 upgraded_defidx = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_upgraded_defidx(), target);
  }

  // optional uint32 operation_points_awarded = 6;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_operation_points_awarded(), target);
  }

  // optional uint32 free_rewards = 7;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_free_rewards(), target);
  }

  // optional uint32 xp_trail_remaining = 8;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_xp_trail_remaining(), target);
  }

  // optional int32 xp_trail_xp_needed = 9;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
            stream, this_._internal_xp_trail_xp_needed(), target);
  }

  // optional uint32 xp_trail_level = 10;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_xp_trail_level(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& this_ = static_cast<const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::ByteSizeLong() const {
  const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .XpProgressData xp_progress_data = 1;
    {
      total_size += 1UL * this_._internal_xp_progress_data_size();
      for (const auto& msg : this_._internal_xp_progress_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional uint32 account_id = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 current_xp = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_current_xp());
    }
    // optional uint32 current_level = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_current_level());
    }
    // optional uint32 upgraded_defidx = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_upgraded_defidx());
    }
    // optional uint32 operation_points_awarded = 6;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_operation_points_awarded());
    }
    // optional uint32 free_rewards = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_free_rewards());
    }
    // optional uint32 xp_trail_remaining = 8;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_xp_trail_remaining());
    }
    // optional int32 xp_trail_xp_needed = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_xp_trail_xp_needed());
    }
  }
   {
    // optional uint32 xp_trail_level = 10;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_xp_trail_level());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded*>(&to_msg);
  auto& from = static_cast<const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_xp_progress_data()->MergeFrom(
      from._internal_xp_progress_data());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.current_xp_ = from._impl_.current_xp_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.current_level_ = from._impl_.current_level_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.upgraded_defidx_ = from._impl_.upgraded_defidx_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.operation_points_awarded_ = from._impl_.operation_points_awarded_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.free_rewards_ = from._impl_.free_rewards_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.xp_trail_remaining_ = from._impl_.xp_trail_remaining_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.xp_trail_xp_needed_ = from._impl_.xp_trail_xp_needed_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.xp_trail_level_ = from._impl_.xp_trail_level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::CopyFrom(const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::InternalSwap(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.xp_progress_data_.InternalSwap(&other->_impl_.xp_progress_data_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.xp_trail_level_)
      + sizeof(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::_impl_.xp_trail_level_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::google::protobuf::Metadata CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientNetworkConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientNetworkConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientNetworkConfig, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientNetworkConfig::CMsgGCCStrike15_v2_ClientNetworkConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientNetworkConfig)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientNetworkConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientNetworkConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_) {}

CMsgGCCStrike15_v2_ClientNetworkConfig::CMsgGCCStrike15_v2_ClientNetworkConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientNetworkConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientNetworkConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientNetworkConfig)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientNetworkConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_(arena) {}

inline void CMsgGCCStrike15_v2_ClientNetworkConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_ClientNetworkConfig::~CMsgGCCStrike15_v2_ClientNetworkConfig() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientNetworkConfig)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientNetworkConfig::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientNetworkConfig& this_ = static_cast<CMsgGCCStrike15_v2_ClientNetworkConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientNetworkConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientNetworkConfig(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientNetworkConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientNetworkConfig),
                                            alignof(CMsgGCCStrike15_v2_ClientNetworkConfig));
}
constexpr auto CMsgGCCStrike15_v2_ClientNetworkConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientNetworkConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientNetworkConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientNetworkConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientNetworkConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientNetworkConfig>(), &CMsgGCCStrike15_v2_ClientNetworkConfig::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientNetworkConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientNetworkConfig, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientNetworkConfig::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_ =
            CMsgGCCStrike15_v2_ClientNetworkConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientNetworkConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_ClientNetworkConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientNetworkConfig, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientNetworkConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientNetworkConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientNetworkConfig, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientNetworkConfig, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientNetworkConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientNetworkConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientNetworkConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientNetworkConfig& this_ = static_cast<const CMsgGCCStrike15_v2_ClientNetworkConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientNetworkConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientNetworkConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientNetworkConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes data = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientNetworkConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientNetworkConfig::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientNetworkConfig& this_ = static_cast<const CMsgGCCStrike15_v2_ClientNetworkConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientNetworkConfig::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientNetworkConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientNetworkConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional bytes data = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_data());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientNetworkConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientNetworkConfig*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientNetworkConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientNetworkConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientNetworkConfig::CopyFrom(const CMsgGCCStrike15_v2_ClientNetworkConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientNetworkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientNetworkConfig::InternalSwap(CMsgGCCStrike15_v2_ClientNetworkConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientNetworkConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_ClientDeepStats_DeepStatsRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_._has_bits_);
};

CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
}
CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, begin_),
           0,
           offsetof(Impl_, frozen_) -
               offsetof(Impl_, begin_) +
               sizeof(Impl_::frozen_));
}
CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::~CMsgGCCStrike15_ClientDeepStats_DeepStatsRange() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_ClientDeepStats_DeepStatsRange& this_ = static_cast<CMsgGCCStrike15_ClientDeepStats_DeepStatsRange&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_ClientDeepStats_DeepStatsRange(arena);
}
constexpr auto CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange),
                                            alignof(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange));
}
constexpr auto CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_ClientDeepStats_DeepStatsRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_ClientDeepStats_DeepStatsRange>(), &CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::ByteSizeLong,
              &CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_ =
            CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_.tc_table);
  return CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 begin = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.begin_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.begin_)}},
    // optional uint32 end = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.end_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.end_)}},
    // optional bool frozen = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.frozen_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.frozen_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 begin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 end = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool frozen = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.frozen_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.begin_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.frozen_) -
        reinterpret_cast<char*>(&_impl_.begin_)) + sizeof(_impl_.frozen_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange& this_ = static_cast<const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 begin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_begin(), target);
  }

  // optional uint32 end = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_end(), target);
  }

  // optional bool frozen = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_frozen(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange& this_ = static_cast<const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::ByteSizeLong() const {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 begin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_begin());
    }
    // optional uint32 end = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_end());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_ClientDeepStats_DeepStatsRange*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.begin_ = from._impl_.begin_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.end_ = from._impl_.end_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.frozen_ = from._impl_.frozen_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::CopyFrom(const CMsgGCCStrike15_ClientDeepStats_DeepStatsRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::InternalSwap(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.frozen_)
      + sizeof(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::_impl_.frozen_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsRange, _impl_.begin_)>(
          reinterpret_cast<char*>(&_impl_.begin_),
          reinterpret_cast<char*>(&other->_impl_.begin_));
}

::google::protobuf::Metadata CMsgGCCStrike15_ClientDeepStats_DeepStatsRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_._has_bits_);
};

CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        events_{visibility, arena, from.events_} {}

CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.player_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        events_{visibility, arena} {}

inline void CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_ = {};
}
CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::~CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& this_ = static_cast<CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.player_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch(arena);
}
constexpr auto CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_.events_) +
          decltype(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch), alignof(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch),
                                 alignof(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch));
  }
}
constexpr auto CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch>(), &CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::ByteSizeLong,
              &CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_ =
            CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_.tc_table);
  return CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DeepPlayerMatchEvent events = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_.events_)}},
    // optional .DeepPlayerStatsEntry player = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DeepPlayerStatsEntry player = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DeepPlayerMatchEvent events = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch, _impl_.events_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::DeepPlayerStatsEntry>()},
      {::_pbi::TcParser::GetTable<::DeepPlayerMatchEvent>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& this_ = static_cast<const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .DeepPlayerStatsEntry player = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
        stream);
  }

  // repeated .DeepPlayerMatchEvent events = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_events_size());
       i < n; i++) {
    const auto& repfield = this_._internal_events().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& this_ = static_cast<const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::ByteSizeLong() const {
  const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .DeepPlayerMatchEvent events = 2;
    {
      total_size += 1UL * this_._internal_events_size();
      for (const auto& msg : this_._internal_events()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional .DeepPlayerStatsEntry player = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::CopyFrom(const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::InternalSwap(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  swap(_impl_.player_, other->_impl_.player_);
}

::google::protobuf::Metadata CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_ClientDeepStats::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_ClientDeepStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_._has_bits_);
};

CMsgGCCStrike15_ClientDeepStats::CMsgGCCStrike15_ClientDeepStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_ClientDeepStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_ClientDeepStats)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_ClientDeepStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_ClientDeepStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        matches_{visibility, arena, from.matches_} {}

CMsgGCCStrike15_ClientDeepStats::CMsgGCCStrike15_ClientDeepStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_ClientDeepStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_ClientDeepStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_ClientDeepStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.range_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.range_)
                : nullptr;
  _impl_.account_id_ = from._impl_.account_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_ClientDeepStats)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_ClientDeepStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        matches_{visibility, arena} {}

inline void CMsgGCCStrike15_ClientDeepStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, range_),
           0,
           offsetof(Impl_, account_id_) -
               offsetof(Impl_, range_) +
               sizeof(Impl_::account_id_));
}
CMsgGCCStrike15_ClientDeepStats::~CMsgGCCStrike15_ClientDeepStats() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_ClientDeepStats)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_ClientDeepStats::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_ClientDeepStats& this_ = static_cast<CMsgGCCStrike15_ClientDeepStats&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.range_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_ClientDeepStats(arena);
}
constexpr auto CMsgGCCStrike15_ClientDeepStats::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.matches_) +
          decltype(CMsgGCCStrike15_ClientDeepStats::_impl_.matches_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_ClientDeepStats), alignof(CMsgGCCStrike15_ClientDeepStats), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_ClientDeepStats::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_ClientDeepStats),
                                 alignof(CMsgGCCStrike15_ClientDeepStats));
  }
}
constexpr auto CMsgGCCStrike15_ClientDeepStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_ClientDeepStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_ClientDeepStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_ClientDeepStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_ClientDeepStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_ClientDeepStats>(), &CMsgGCCStrike15_ClientDeepStats::ByteSizeLong,
              &CMsgGCCStrike15_ClientDeepStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_ClientDeepStats::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_ClientDeepStats_class_data_ =
            CMsgGCCStrike15_ClientDeepStats::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_ClientDeepStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_ClientDeepStats_class_data_.tc_table);
  return CMsgGCCStrike15_ClientDeepStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
CMsgGCCStrike15_ClientDeepStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_ClientDeepStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_ClientDeepStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_ClientDeepStats, _impl_.account_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.account_id_)}},
    // optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.range_)}},
    // repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.matches_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.matches_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_ClientDeepStats_DeepStatsRange>()},
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_ClientDeepStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_ClientDeepStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matches_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.range_ != nullptr);
    _impl_.range_->Clear();
  }
  _impl_.account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_ClientDeepStats& this_ = static_cast<const CMsgGCCStrike15_ClientDeepStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_ClientDeepStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_ClientDeepStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_ClientDeepStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.range_, this_._impl_.range_->GetCachedSize(), target,
        stream);
  }

  // repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_matches_size());
       i < n; i++) {
    const auto& repfield = this_._internal_matches().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_ClientDeepStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_ClientDeepStats::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_ClientDeepStats& this_ = static_cast<const CMsgGCCStrike15_ClientDeepStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_ClientDeepStats::ByteSizeLong() const {
  const CMsgGCCStrike15_ClientDeepStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_ClientDeepStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;
    {
      total_size += 1UL * this_._internal_matches_size();
      for (const auto& msg : this_._internal_matches()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.range_);
    }
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_ClientDeepStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_ClientDeepStats*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_ClientDeepStats&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_ClientDeepStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_matches()->MergeFrom(
      from._internal_matches());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.range_ != nullptr);
      if (_this->_impl_.range_ == nullptr) {
        _this->_impl_.range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.range_);
      } else {
        _this->_impl_.range_->MergeFrom(*from._impl_.range_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_ClientDeepStats::CopyFrom(const CMsgGCCStrike15_ClientDeepStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_ClientDeepStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_ClientDeepStats::InternalSwap(CMsgGCCStrike15_ClientDeepStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.matches_.InternalSwap(&other->_impl_.matches_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.account_id_)
      + sizeof(CMsgGCCStrike15_ClientDeepStats::_impl_.account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_ClientDeepStats, _impl_.range_)>(
          reinterpret_cast<char*>(&_impl_.range_),
          reinterpret_cast<char*>(&other->_impl_.range_));
}

::google::protobuf::Metadata CMsgGCCStrike15_ClientDeepStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_WatchInfoUsers::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_WatchInfoUsers>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_WatchInfoUsers::CMsgGCCStrike15_v2_WatchInfoUsers(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_WatchInfoUsers_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_WatchInfoUsers)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_WatchInfoUsers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_WatchInfoUsers& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_ids_{visibility, arena, from.account_ids_},
        watchable_match_infos_{visibility, arena, from.watchable_match_infos_} {}

CMsgGCCStrike15_v2_WatchInfoUsers::CMsgGCCStrike15_v2_WatchInfoUsers(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_WatchInfoUsers& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_WatchInfoUsers_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_WatchInfoUsers* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, request_id_),
           offsetof(Impl_, extended_timeout_) -
               offsetof(Impl_, request_id_) +
               sizeof(Impl_::extended_timeout_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_WatchInfoUsers)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_WatchInfoUsers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_ids_{visibility, arena},
        watchable_match_infos_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_WatchInfoUsers::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_id_),
           0,
           offsetof(Impl_, extended_timeout_) -
               offsetof(Impl_, request_id_) +
               sizeof(Impl_::extended_timeout_));
}
CMsgGCCStrike15_v2_WatchInfoUsers::~CMsgGCCStrike15_v2_WatchInfoUsers() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_WatchInfoUsers)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_WatchInfoUsers::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_WatchInfoUsers& this_ = static_cast<CMsgGCCStrike15_v2_WatchInfoUsers&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_WatchInfoUsers::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_WatchInfoUsers(arena);
}
constexpr auto CMsgGCCStrike15_v2_WatchInfoUsers::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.account_ids_) +
          decltype(CMsgGCCStrike15_v2_WatchInfoUsers::_impl_.account_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.watchable_match_infos_) +
          decltype(CMsgGCCStrike15_v2_WatchInfoUsers::_impl_.watchable_match_infos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_WatchInfoUsers), alignof(CMsgGCCStrike15_v2_WatchInfoUsers), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_WatchInfoUsers::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_WatchInfoUsers),
                                 alignof(CMsgGCCStrike15_v2_WatchInfoUsers));
  }
}
constexpr auto CMsgGCCStrike15_v2_WatchInfoUsers::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_WatchInfoUsers_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_WatchInfoUsers::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_WatchInfoUsers>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_WatchInfoUsers::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_WatchInfoUsers>(), &CMsgGCCStrike15_v2_WatchInfoUsers::ByteSizeLong,
              &CMsgGCCStrike15_v2_WatchInfoUsers::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_WatchInfoUsers::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_WatchInfoUsers_class_data_ =
            CMsgGCCStrike15_v2_WatchInfoUsers::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_WatchInfoUsers::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_WatchInfoUsers_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_WatchInfoUsers_class_data_.tc_table);
  return CMsgGCCStrike15_v2_WatchInfoUsers_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 1, 0, 2>
CMsgGCCStrike15_v2_WatchInfoUsers::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_WatchInfoUsers_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_WatchInfoUsers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 request_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.request_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.request_id_)}},
    // repeated uint32 account_ids = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.account_ids_)}},
    // repeated .WatchableMatchInfo watchable_match_infos = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.watchable_match_infos_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 extended_timeout = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.extended_timeout_), 1>(),
     {40, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.extended_timeout_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 request_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.request_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 account_ids = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.account_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated .WatchableMatchInfo watchable_match_infos = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.watchable_match_infos_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 extended_timeout = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.extended_timeout_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::WatchableMatchInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_WatchInfoUsers::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_WatchInfoUsers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_ids_.Clear();
  _impl_.watchable_match_infos_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.request_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.extended_timeout_) -
        reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.extended_timeout_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_WatchInfoUsers::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_WatchInfoUsers& this_ = static_cast<const CMsgGCCStrike15_v2_WatchInfoUsers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_WatchInfoUsers::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_WatchInfoUsers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_WatchInfoUsers)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 request_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_request_id(), target);
  }

  // repeated uint32 account_ids = 2;
  for (int i = 0, n = this_._internal_account_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_account_ids().Get(i), target);
  }

  // repeated .WatchableMatchInfo watchable_match_infos = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_watchable_match_infos_size());
       i < n; i++) {
    const auto& repfield = this_._internal_watchable_match_infos().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 extended_timeout = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_extended_timeout(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_WatchInfoUsers)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_WatchInfoUsers::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_WatchInfoUsers& this_ = static_cast<const CMsgGCCStrike15_v2_WatchInfoUsers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_WatchInfoUsers::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_WatchInfoUsers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_WatchInfoUsers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 account_ids = 2;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_account_ids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_account_ids_size());
      total_size += tag_size + data_size;
    }
    // repeated .WatchableMatchInfo watchable_match_infos = 3;
    {
      total_size += 1UL * this_._internal_watchable_match_infos_size();
      for (const auto& msg : this_._internal_watchable_match_infos()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 request_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_request_id());
    }
    // optional uint32 extended_timeout = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_extended_timeout());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_WatchInfoUsers::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_WatchInfoUsers*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_WatchInfoUsers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_WatchInfoUsers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_ids()->MergeFrom(from._internal_account_ids());
  _this->_internal_mutable_watchable_match_infos()->MergeFrom(
      from._internal_watchable_match_infos());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.extended_timeout_ = from._impl_.extended_timeout_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_WatchInfoUsers::CopyFrom(const CMsgGCCStrike15_v2_WatchInfoUsers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_WatchInfoUsers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_WatchInfoUsers::InternalSwap(CMsgGCCStrike15_v2_WatchInfoUsers* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_ids_.InternalSwap(&other->_impl_.account_ids_);
  _impl_.watchable_match_infos_.InternalSwap(&other->_impl_.watchable_match_infos_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.extended_timeout_)
      + sizeof(CMsgGCCStrike15_v2_WatchInfoUsers::_impl_.extended_timeout_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_WatchInfoUsers, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_WatchInfoUsers::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientRequestPlayersProfile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientRequestPlayersProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientRequestPlayersProfile::CMsgGCCStrike15_v2_ClientRequestPlayersProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestPlayersProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientRequestPlayersProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_ids__deprecated_{visibility, arena, from.account_ids__deprecated_} {}

CMsgGCCStrike15_v2_ClientRequestPlayersProfile::CMsgGCCStrike15_v2_ClientRequestPlayersProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientRequestPlayersProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientRequestPlayersProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_id__deprecated_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, request_id__deprecated_),
           offsetof(Impl_, request_level_) -
               offsetof(Impl_, request_id__deprecated_) +
               sizeof(Impl_::request_level_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestPlayersProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_ids__deprecated_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_ClientRequestPlayersProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_id__deprecated_),
           0,
           offsetof(Impl_, request_level_) -
               offsetof(Impl_, request_id__deprecated_) +
               sizeof(Impl_::request_level_));
}
CMsgGCCStrike15_v2_ClientRequestPlayersProfile::~CMsgGCCStrike15_v2_ClientRequestPlayersProfile() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientRequestPlayersProfile::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientRequestPlayersProfile& this_ = static_cast<CMsgGCCStrike15_v2_ClientRequestPlayersProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestPlayersProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientRequestPlayersProfile(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestPlayersProfile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_ids__deprecated_) +
          decltype(CMsgGCCStrike15_v2_ClientRequestPlayersProfile::_impl_.account_ids__deprecated_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile), alignof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientRequestPlayersProfile::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile),
                                 alignof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestPlayersProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientRequestPlayersProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientRequestPlayersProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientRequestPlayersProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientRequestPlayersProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientRequestPlayersProfile>(), &CMsgGCCStrike15_v2_ClientRequestPlayersProfile::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientRequestPlayersProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientRequestPlayersProfile::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_ =
            CMsgGCCStrike15_v2_ClientRequestPlayersProfile::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestPlayersProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_ClientRequestPlayersProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientRequestPlayersProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientRequestPlayersProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 request_level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_level_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_level_)}},
    // optional uint32 request_id__deprecated = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_id__deprecated_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_id__deprecated_)}},
    // repeated uint32 account_ids__deprecated = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_ids__deprecated_)}},
    // optional uint32 account_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_id_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 request_id__deprecated = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_id__deprecated_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 account_ids__deprecated = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_ids__deprecated_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint32 account_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 request_level = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_level_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientRequestPlayersProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_ids__deprecated_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.request_id__deprecated_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.request_level_) -
        reinterpret_cast<char*>(&_impl_.request_id__deprecated_)) + sizeof(_impl_.request_level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestPlayersProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientRequestPlayersProfile& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestPlayersProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestPlayersProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientRequestPlayersProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 request_id__deprecated = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_request_id__deprecated(), target);
  }

  // repeated uint32 account_ids__deprecated = 2;
  for (int i = 0, n = this_._internal_account_ids__deprecated_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_account_ids__deprecated().Get(i), target);
  }

  // optional uint32 account_id = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_account_id(), target);
  }

  // optional uint32 request_level = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_request_level(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientRequestPlayersProfile::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientRequestPlayersProfile& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestPlayersProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientRequestPlayersProfile::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientRequestPlayersProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 account_ids__deprecated = 2;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_account_ids__deprecated());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_account_ids__deprecated_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 request_id__deprecated = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_request_id__deprecated());
    }
    // optional uint32 account_id = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
    // optional uint32 request_level = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_request_level());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientRequestPlayersProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientRequestPlayersProfile*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientRequestPlayersProfile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_ids__deprecated()->MergeFrom(from._internal_account_ids__deprecated());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.request_id__deprecated_ = from._impl_.request_id__deprecated_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.request_level_ = from._impl_.request_level_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientRequestPlayersProfile::CopyFrom(const CMsgGCCStrike15_v2_ClientRequestPlayersProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientRequestPlayersProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientRequestPlayersProfile::InternalSwap(CMsgGCCStrike15_v2_ClientRequestPlayersProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_ids__deprecated_.InternalSwap(&other->_impl_.account_ids__deprecated_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_level_)
      + sizeof(CMsgGCCStrike15_v2_ClientRequestPlayersProfile::_impl_.request_level_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestPlayersProfile, _impl_.request_id__deprecated_)>(
          reinterpret_cast<char*>(&_impl_.request_id__deprecated_),
          reinterpret_cast<char*>(&other->_impl_.request_id__deprecated_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientRequestPlayersProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_PlayersProfile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_PlayersProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_PlayersProfile::CMsgGCCStrike15_v2_PlayersProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayersProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_PlayersProfile)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_PlayersProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_PlayersProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_profiles_{visibility, arena, from.account_profiles_} {}

CMsgGCCStrike15_v2_PlayersProfile::CMsgGCCStrike15_v2_PlayersProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_PlayersProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayersProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_PlayersProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.request_id_ = from._impl_.request_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_PlayersProfile)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_PlayersProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_profiles_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_PlayersProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.request_id_ = {};
}
CMsgGCCStrike15_v2_PlayersProfile::~CMsgGCCStrike15_v2_PlayersProfile() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_PlayersProfile)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_PlayersProfile::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_PlayersProfile& this_ = static_cast<CMsgGCCStrike15_v2_PlayersProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayersProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_PlayersProfile(arena);
}
constexpr auto CMsgGCCStrike15_v2_PlayersProfile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_.account_profiles_) +
          decltype(CMsgGCCStrike15_v2_PlayersProfile::_impl_.account_profiles_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_PlayersProfile), alignof(CMsgGCCStrike15_v2_PlayersProfile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_PlayersProfile::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_PlayersProfile),
                                 alignof(CMsgGCCStrike15_v2_PlayersProfile));
  }
}
constexpr auto CMsgGCCStrike15_v2_PlayersProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_PlayersProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_PlayersProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_PlayersProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_PlayersProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_PlayersProfile>(), &CMsgGCCStrike15_v2_PlayersProfile::ByteSizeLong,
              &CMsgGCCStrike15_v2_PlayersProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_PlayersProfile::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_PlayersProfile_class_data_ =
            CMsgGCCStrike15_v2_PlayersProfile::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayersProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_PlayersProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_PlayersProfile_class_data_.tc_table);
  return CMsgGCCStrike15_v2_PlayersProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgGCCStrike15_v2_PlayersProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_PlayersProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_PlayersProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientHello account_profiles = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_.account_profiles_)}},
    // optional uint32 request_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayersProfile, _impl_.request_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_.request_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 request_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_.request_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientHello account_profiles = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayersProfile, _impl_.account_profiles_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_PlayersProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_PlayersProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_profiles_.Clear();
  _impl_.request_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayersProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_PlayersProfile& this_ = static_cast<const CMsgGCCStrike15_v2_PlayersProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayersProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_PlayersProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_PlayersProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 request_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_request_id(), target);
  }

  // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientHello account_profiles = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_account_profiles_size());
       i < n; i++) {
    const auto& repfield = this_._internal_account_profiles().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_PlayersProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_PlayersProfile::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_PlayersProfile& this_ = static_cast<const CMsgGCCStrike15_v2_PlayersProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_PlayersProfile::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_PlayersProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_PlayersProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_MatchmakingGC2ClientHello account_profiles = 2;
    {
      total_size += 1UL * this_._internal_account_profiles_size();
      for (const auto& msg : this_._internal_account_profiles()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional uint32 request_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_request_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_PlayersProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_PlayersProfile*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_PlayersProfile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_PlayersProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_profiles()->MergeFrom(
      from._internal_account_profiles());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.request_id_ = from._impl_.request_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_PlayersProfile::CopyFrom(const CMsgGCCStrike15_v2_PlayersProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_PlayersProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_PlayersProfile::InternalSwap(CMsgGCCStrike15_v2_PlayersProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_profiles_.InternalSwap(&other->_impl_.account_profiles_);
  swap(_impl_.request_id_, other->_impl_.request_id_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_PlayersProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
}
CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, caseid_),
           0,
           offsetof(Impl_, reason_) -
               offsetof(Impl_, caseid_) +
               sizeof(Impl_::reason_));
}
CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::~CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate& this_ = static_cast<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate(arena);
}
constexpr auto CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate),
                                            alignof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate));
}
constexpr auto CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate>(), &CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::ByteSizeLong,
              &CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_ =
            CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_.tc_table);
  return CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 0, 2>
CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966786,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 caseid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.caseid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.caseid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 suspectid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.suspectid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.suspectid_)}},
    // optional uint32 fractionid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.fractionid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.fractionid_)}},
    // optional uint32 rpt_aimbot = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_aimbot_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_aimbot_)}},
    // optional uint32 rpt_wallhack = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_wallhack_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_wallhack_)}},
    // optional uint32 rpt_speedhack = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_speedhack_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_speedhack_)}},
    // optional uint32 rpt_teamharm = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_teamharm_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_teamharm_)}},
    // optional uint32 reason = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.reason_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.reason_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 caseid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.caseid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 suspectid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.suspectid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 fractionid = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.fractionid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_aimbot = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_aimbot_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_wallhack = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_wallhack_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_speedhack = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_speedhack_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rpt_teamharm = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.rpt_teamharm_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 reason = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.reason_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.caseid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reason_) -
        reinterpret_cast<char*>(&_impl_.caseid_)) + sizeof(_impl_.reason_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 caseid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_caseid(), target);
  }

  // optional uint32 suspectid = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_suspectid(), target);
  }

  // optional uint32 fractionid = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_fractionid(), target);
  }

  // optional uint32 rpt_aimbot = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_rpt_aimbot(), target);
  }

  // optional uint32 rpt_wallhack = 6;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_rpt_wallhack(), target);
  }

  // optional uint32 rpt_speedhack = 7;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_rpt_speedhack(), target);
  }

  // optional uint32 rpt_teamharm = 8;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_rpt_teamharm(), target);
  }

  // optional uint32 reason = 9;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_reason(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate& this_ = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional uint64 caseid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_caseid());
    }
    // optional uint32 suspectid = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_suspectid());
    }
    // optional uint32 fractionid = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_fractionid());
    }
    // optional uint32 rpt_aimbot = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_aimbot());
    }
    // optional uint32 rpt_wallhack = 6;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_wallhack());
    }
    // optional uint32 rpt_speedhack = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_speedhack());
    }
    // optional uint32 rpt_teamharm = 8;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rpt_teamharm());
    }
    // optional uint32 reason = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reason());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.caseid_ = from._impl_.caseid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.suspectid_ = from._impl_.suspectid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.fractionid_ = from._impl_.fractionid_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.rpt_aimbot_ = from._impl_.rpt_aimbot_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.rpt_wallhack_ = from._impl_.rpt_wallhack_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.rpt_speedhack_ = from._impl_.rpt_speedhack_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.rpt_teamharm_ = from._impl_.rpt_teamharm_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.reason_ = from._impl_.reason_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::CopyFrom(const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::InternalSwap(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.reason_)
      + sizeof(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::_impl_.reason_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate, _impl_.caseid_)>(
          reinterpret_cast<char*>(&_impl_.caseid_),
          reinterpret_cast<char*>(&other->_impl_.caseid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        caseurl_(arena, from.caseurl_) {}

CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, caseid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, caseid_),
           offsetof(Impl_, reason_) -
               offsetof(Impl_, caseid_) +
               sizeof(Impl_::reason_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        caseurl_(arena) {}

inline void CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, caseid_),
           0,
           offsetof(Impl_, reason_) -
               offsetof(Impl_, caseid_) +
               sizeof(Impl_::reason_));
}
CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::~CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& this_ = static_cast<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.caseurl_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment(arena);
}
constexpr auto CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment),
                                            alignof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment));
}
constexpr auto CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment>(), &CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::ByteSizeLong,
              &CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_ =
            CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_.tc_table);
  return CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 72, 2>
CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 caseid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseid_)}},
    // optional string caseurl = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseurl_)}},
    // optional uint32 verdict = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.verdict_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.verdict_)}},
    // optional uint32 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.timestamp_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.timestamp_)}},
    // optional uint32 throttleseconds = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.throttleseconds_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.throttleseconds_)}},
    // optional uint32 suspectid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.suspectid_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.suspectid_)}},
    // optional uint32 fractionid = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionid_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionid_)}},
    // optional uint32 numrounds = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.numrounds_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.numrounds_)}},
    // optional uint32 fractionrounds = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionrounds_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionrounds_)}},
    // optional int32 streakconvictions = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.streakconvictions_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.streakconvictions_)}},
    // optional uint32 reason = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.reason_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.reason_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 caseid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string caseurl = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseurl_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 verdict = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.verdict_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.timestamp_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 throttleseconds = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.throttleseconds_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 suspectid = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.suspectid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 fractionid = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 numrounds = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.numrounds_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 fractionrounds = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.fractionrounds_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 streakconvictions = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.streakconvictions_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 reason = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.reason_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\60\0\7\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment"
    "caseurl"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.caseurl_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.caseid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.numrounds_) -
        reinterpret_cast<char*>(&_impl_.caseid_)) + sizeof(_impl_.numrounds_));
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.fractionrounds_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reason_) -
        reinterpret_cast<char*>(&_impl_.fractionrounds_)) + sizeof(_impl_.reason_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& this_ = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 caseid = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_caseid(), target);
  }

  // optional string caseurl = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_caseurl();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment.caseurl");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional uint32 verdict = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_verdict(), target);
  }

  // optional uint32 timestamp = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_timestamp(), target);
  }

  // optional uint32 throttleseconds = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_throttleseconds(), target);
  }

  // optional uint32 suspectid = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_suspectid(), target);
  }

  // optional uint32 fractionid = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_fractionid(), target);
  }

  // optional uint32 numrounds = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_numrounds(), target);
  }

  // optional uint32 fractionrounds = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_fractionrounds(), target);
  }

  // optional int32 streakconvictions = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
            stream, this_._internal_streakconvictions(), target);
  }

  // optional uint32 reason = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_reason(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& this_ = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string caseurl = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_caseurl());
    }
    // optional uint64 caseid = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_caseid());
    }
    // optional uint32 verdict = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_verdict());
    }
    // optional uint32 timestamp = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_timestamp());
    }
    // optional uint32 throttleseconds = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_throttleseconds());
    }
    // optional uint32 suspectid = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_suspectid());
    }
    // optional uint32 fractionid = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_fractionid());
    }
    // optional uint32 numrounds = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_numrounds());
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // optional uint32 fractionrounds = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_fractionrounds());
    }
    // optional int32 streakconvictions = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_streakconvictions());
    }
    // optional uint32 reason = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_reason());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_caseurl(from._internal_caseurl());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.caseid_ = from._impl_.caseid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.verdict_ = from._impl_.verdict_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.throttleseconds_ = from._impl_.throttleseconds_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.suspectid_ = from._impl_.suspectid_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.fractionid_ = from._impl_.fractionid_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.numrounds_ = from._impl_.numrounds_;
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.fractionrounds_ = from._impl_.fractionrounds_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.streakconvictions_ = from._impl_.streakconvictions_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.reason_ = from._impl_.reason_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::CopyFrom(const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::InternalSwap(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.caseurl_, &other->_impl_.caseurl_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.reason_)
      + sizeof(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::_impl_.reason_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment, _impl_.caseid_)>(
          reinterpret_cast<char*>(&_impl_.caseid_),
          reinterpret_cast<char*>(&other->_impl_.caseid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
}
CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, caseid_),
           0,
           offsetof(Impl_, statusid_) -
               offsetof(Impl_, caseid_) +
               sizeof(Impl_::statusid_));
}
CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::~CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus& this_ = static_cast<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus(arena);
}
constexpr auto CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus),
                                            alignof(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus));
}
constexpr auto CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus>(), &CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::ByteSizeLong,
              &CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_ =
            CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_.tc_table);
  return CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 statusid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.statusid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.statusid_)}},
    // optional uint64 caseid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.caseid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.caseid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 caseid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.caseid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 statusid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.statusid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.caseid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.statusid_) -
        reinterpret_cast<char*>(&_impl_.caseid_)) + sizeof(_impl_.statusid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus& this_ = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 caseid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_caseid(), target);
  }

  // optional uint32 statusid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_statusid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus& this_ = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint64 caseid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_caseid());
    }
    // optional uint32 statusid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_statusid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.caseid_ = from._impl_.caseid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.statusid_ = from._impl_.statusid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::CopyFrom(const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::InternalSwap(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.statusid_)
      + sizeof(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::_impl_.statusid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus, _impl_.caseid_)>(
          reinterpret_cast<char*>(&_impl_.caseid_),
          reinterpret_cast<char*>(&other->_impl_.caseid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CClientHeaderOverwatchEvidence::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CClientHeaderOverwatchEvidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_._has_bits_);
};

CClientHeaderOverwatchEvidence::CClientHeaderOverwatchEvidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CClientHeaderOverwatchEvidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CClientHeaderOverwatchEvidence)
}
CClientHeaderOverwatchEvidence::CClientHeaderOverwatchEvidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CClientHeaderOverwatchEvidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CClientHeaderOverwatchEvidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CClientHeaderOverwatchEvidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CClientHeaderOverwatchEvidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, caseid_),
           0,
           offsetof(Impl_, accountid_) -
               offsetof(Impl_, caseid_) +
               sizeof(Impl_::accountid_));
}
CClientHeaderOverwatchEvidence::~CClientHeaderOverwatchEvidence() {
  // @@protoc_insertion_point(destructor:CClientHeaderOverwatchEvidence)
  SharedDtor(*this);
}
inline void CClientHeaderOverwatchEvidence::SharedDtor(MessageLite& self) {
  CClientHeaderOverwatchEvidence& this_ = static_cast<CClientHeaderOverwatchEvidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CClientHeaderOverwatchEvidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CClientHeaderOverwatchEvidence(arena);
}
constexpr auto CClientHeaderOverwatchEvidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CClientHeaderOverwatchEvidence),
                                            alignof(CClientHeaderOverwatchEvidence));
}
constexpr auto CClientHeaderOverwatchEvidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CClientHeaderOverwatchEvidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CClientHeaderOverwatchEvidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CClientHeaderOverwatchEvidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CClientHeaderOverwatchEvidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CClientHeaderOverwatchEvidence>(), &CClientHeaderOverwatchEvidence::ByteSizeLong,
              &CClientHeaderOverwatchEvidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_._cached_size_),
          false,
      },
      &CClientHeaderOverwatchEvidence::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CClientHeaderOverwatchEvidence_class_data_ =
            CClientHeaderOverwatchEvidence::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CClientHeaderOverwatchEvidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CClientHeaderOverwatchEvidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CClientHeaderOverwatchEvidence_class_data_.tc_table);
  return CClientHeaderOverwatchEvidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CClientHeaderOverwatchEvidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CClientHeaderOverwatchEvidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CClientHeaderOverwatchEvidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 caseid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CClientHeaderOverwatchEvidence, _impl_.caseid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_.caseid_)}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CClientHeaderOverwatchEvidence, _impl_.accountid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_.accountid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 caseid = 2;
    {PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_.caseid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CClientHeaderOverwatchEvidence::Clear() {
// @@protoc_insertion_point(message_clear_start:CClientHeaderOverwatchEvidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.caseid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.accountid_) -
        reinterpret_cast<char*>(&_impl_.caseid_)) + sizeof(_impl_.accountid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CClientHeaderOverwatchEvidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CClientHeaderOverwatchEvidence& this_ = static_cast<const CClientHeaderOverwatchEvidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CClientHeaderOverwatchEvidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CClientHeaderOverwatchEvidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CClientHeaderOverwatchEvidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint64 caseid = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_caseid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CClientHeaderOverwatchEvidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CClientHeaderOverwatchEvidence::ByteSizeLong(const MessageLite& base) {
  const CClientHeaderOverwatchEvidence& this_ = static_cast<const CClientHeaderOverwatchEvidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CClientHeaderOverwatchEvidence::ByteSizeLong() const {
  const CClientHeaderOverwatchEvidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CClientHeaderOverwatchEvidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint64 caseid = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_caseid());
    }
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CClientHeaderOverwatchEvidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CClientHeaderOverwatchEvidence*>(&to_msg);
  auto& from = static_cast<const CClientHeaderOverwatchEvidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CClientHeaderOverwatchEvidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.caseid_ = from._impl_.caseid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CClientHeaderOverwatchEvidence::CopyFrom(const CClientHeaderOverwatchEvidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CClientHeaderOverwatchEvidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CClientHeaderOverwatchEvidence::InternalSwap(CClientHeaderOverwatchEvidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_.accountid_)
      + sizeof(CClientHeaderOverwatchEvidence::_impl_.accountid_)
      - PROTOBUF_FIELD_OFFSET(CClientHeaderOverwatchEvidence, _impl_.caseid_)>(
          reinterpret_cast<char*>(&_impl_.caseid_),
          reinterpret_cast<char*>(&other->_impl_.caseid_));
}

::google::protobuf::Metadata CClientHeaderOverwatchEvidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ClientTextMsg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ClientTextMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ClientTextMsg::CMsgGCCStrike15_v2_GC2ClientTextMsg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ClientTextMsg)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientTextMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GC2ClientTextMsg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_(arena, from.payload_) {}

CMsgGCCStrike15_v2_GC2ClientTextMsg::CMsgGCCStrike15_v2_GC2ClientTextMsg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GC2ClientTextMsg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GC2ClientTextMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GC2ClientTextMsg)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientTextMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_(arena) {}

inline void CMsgGCCStrike15_v2_GC2ClientTextMsg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::type_));
}
CMsgGCCStrike15_v2_GC2ClientTextMsg::~CMsgGCCStrike15_v2_GC2ClientTextMsg() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ClientTextMsg)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ClientTextMsg::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ClientTextMsg& this_ = static_cast<CMsgGCCStrike15_v2_GC2ClientTextMsg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTextMsg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ClientTextMsg(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientTextMsg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_GC2ClientTextMsg),
                                            alignof(CMsgGCCStrike15_v2_GC2ClientTextMsg));
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientTextMsg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ClientTextMsg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ClientTextMsg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ClientTextMsg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ClientTextMsg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ClientTextMsg>(), &CMsgGCCStrike15_v2_GC2ClientTextMsg::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ClientTextMsg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ClientTextMsg::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_ =
            CMsgGCCStrike15_v2_GC2ClientTextMsg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTextMsg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGCCStrike15_v2_GC2ClientTextMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GC2ClientTextMsg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ClientTextMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.id_)}},
    // optional uint32 type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.type_)}},
    // optional bytes payload = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 type = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes payload = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ClientTextMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ClientTextMsg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.payload_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTextMsg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ClientTextMsg& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientTextMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTextMsg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ClientTextMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ClientTextMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_id(), target);
  }

  // optional uint32 type = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_type(), target);
  }

  // optional bytes payload = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_payload();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ClientTextMsg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ClientTextMsg::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ClientTextMsg& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientTextMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ClientTextMsg::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ClientTextMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ClientTextMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional bytes payload = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_payload());
    }
    // optional uint32 id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_id());
    }
    // optional uint32 type = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ClientTextMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ClientTextMsg*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ClientTextMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ClientTextMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_payload(from._internal_payload());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ClientTextMsg::CopyFrom(const CMsgGCCStrike15_v2_GC2ClientTextMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ClientTextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ClientTextMsg::InternalSwap(CMsgGCCStrike15_v2_GC2ClientTextMsg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.type_)
      + sizeof(CMsgGCCStrike15_v2_GC2ClientTextMsg::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTextMsg, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ClientTextMsg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Client2GCTextMsg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Client2GCTextMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Client2GCTextMsg::CMsgGCCStrike15_v2_Client2GCTextMsg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Client2GCTextMsg)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Client2GCTextMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Client2GCTextMsg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        args_{visibility, arena, from.args_} {}

CMsgGCCStrike15_v2_Client2GCTextMsg::CMsgGCCStrike15_v2_Client2GCTextMsg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Client2GCTextMsg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Client2GCTextMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Client2GCTextMsg)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Client2GCTextMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        args_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_Client2GCTextMsg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
CMsgGCCStrike15_v2_Client2GCTextMsg::~CMsgGCCStrike15_v2_Client2GCTextMsg() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Client2GCTextMsg)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Client2GCTextMsg::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Client2GCTextMsg& this_ = static_cast<CMsgGCCStrike15_v2_Client2GCTextMsg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCTextMsg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Client2GCTextMsg(arena);
}
constexpr auto CMsgGCCStrike15_v2_Client2GCTextMsg::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.args_) +
          decltype(CMsgGCCStrike15_v2_Client2GCTextMsg::_impl_.args_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_Client2GCTextMsg), alignof(CMsgGCCStrike15_v2_Client2GCTextMsg), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_Client2GCTextMsg::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_Client2GCTextMsg),
                                 alignof(CMsgGCCStrike15_v2_Client2GCTextMsg));
  }
}
constexpr auto CMsgGCCStrike15_v2_Client2GCTextMsg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Client2GCTextMsg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Client2GCTextMsg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Client2GCTextMsg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Client2GCTextMsg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Client2GCTextMsg>(), &CMsgGCCStrike15_v2_Client2GCTextMsg::ByteSizeLong,
              &CMsgGCCStrike15_v2_Client2GCTextMsg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Client2GCTextMsg::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_ =
            CMsgGCCStrike15_v2_Client2GCTextMsg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCTextMsg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_Client2GCTextMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Client2GCTextMsg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Client2GCTextMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes args = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.args_)}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated bytes args = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCTextMsg, _impl_.args_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Client2GCTextMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Client2GCTextMsg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.args_.Clear();
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCTextMsg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Client2GCTextMsg& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCTextMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCTextMsg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Client2GCTextMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Client2GCTextMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_id(), target);
  }

  // repeated bytes args = 2;
  for (int i = 0, n = this_._internal_args_size(); i < n; ++i) {
    const auto& s = this_._internal_args().Get(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Client2GCTextMsg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Client2GCTextMsg::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Client2GCTextMsg& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCTextMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Client2GCTextMsg::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Client2GCTextMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Client2GCTextMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated bytes args = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_args().size());
      for (int i = 0, n = this_._internal_args().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
            this_._internal_args().Get(i));
      }
    }
  }
   {
    // optional uint32 id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Client2GCTextMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Client2GCTextMsg*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Client2GCTextMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Client2GCTextMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_args()->MergeFrom(from._internal_args());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Client2GCTextMsg::CopyFrom(const CMsgGCCStrike15_v2_Client2GCTextMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Client2GCTextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Client2GCTextMsg::InternalSwap(CMsgGCCStrike15_v2_Client2GCTextMsg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.args_.InternalSwap(&other->_impl_.args_);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Client2GCTextMsg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchEndRunRewardDrops::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchEndRunRewardDrops::CMsgGCCStrike15_v2_MatchEndRunRewardDrops(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchEndRunRewardDrops::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchEndRunRewardDrops& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_MatchEndRunRewardDrops::CMsgGCCStrike15_v2_MatchEndRunRewardDrops(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchEndRunRewardDrops& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchEndRunRewardDrops* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.serverinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.serverinfo_)
                : nullptr;
  _impl_.match_end_quest_data_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.match_end_quest_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchEndRunRewardDrops::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchEndRunRewardDrops::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, serverinfo_),
           0,
           offsetof(Impl_, match_end_quest_data_) -
               offsetof(Impl_, serverinfo_) +
               sizeof(Impl_::match_end_quest_data_));
}
CMsgGCCStrike15_v2_MatchEndRunRewardDrops::~CMsgGCCStrike15_v2_MatchEndRunRewardDrops() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchEndRunRewardDrops::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchEndRunRewardDrops& this_ = static_cast<CMsgGCCStrike15_v2_MatchEndRunRewardDrops&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.serverinfo_;
  delete this_._impl_.match_end_quest_data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRunRewardDrops::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchEndRunRewardDrops(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchEndRunRewardDrops::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchEndRunRewardDrops),
                                            alignof(CMsgGCCStrike15_v2_MatchEndRunRewardDrops));
}
constexpr auto CMsgGCCStrike15_v2_MatchEndRunRewardDrops::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchEndRunRewardDrops_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchEndRunRewardDrops::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchEndRunRewardDrops::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>(), &CMsgGCCStrike15_v2_MatchEndRunRewardDrops::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchEndRunRewardDrops::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchEndRunRewardDrops::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_ =
            CMsgGCCStrike15_v2_MatchEndRunRewardDrops::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRunRewardDrops::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CMsgGCCStrike15_v2_MatchEndRunRewardDrops::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchEndRunRewardDrops_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchEndRunRewardDrops>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgGC_ServerQuestUpdateData match_end_quest_data = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.match_end_quest_data_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingServerReservationResponse serverinfo = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.serverinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgGCCStrike15_v2_MatchmakingServerReservationResponse serverinfo = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.serverinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgGC_ServerQuestUpdateData match_end_quest_data = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.match_end_quest_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>()},
      {::_pbi::TcParser::GetTable<::CMsgGC_ServerQuestUpdateData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchEndRunRewardDrops::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.serverinfo_ != nullptr);
      _impl_.serverinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.match_end_quest_data_ != nullptr);
      _impl_.match_end_quest_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRunRewardDrops::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchEndRunRewardDrops& this_ = static_cast<const CMsgGCCStrike15_v2_MatchEndRunRewardDrops&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRunRewardDrops::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchEndRunRewardDrops& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgGCCStrike15_v2_MatchmakingServerReservationResponse serverinfo = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.serverinfo_, this_._impl_.serverinfo_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgGC_ServerQuestUpdateData match_end_quest_data = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.match_end_quest_data_, this_._impl_.match_end_quest_data_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchEndRunRewardDrops::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchEndRunRewardDrops& this_ = static_cast<const CMsgGCCStrike15_v2_MatchEndRunRewardDrops&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchEndRunRewardDrops::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchEndRunRewardDrops& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .CMsgGCCStrike15_v2_MatchmakingServerReservationResponse serverinfo = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.serverinfo_);
    }
    // optional .CMsgGC_ServerQuestUpdateData match_end_quest_data = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.match_end_quest_data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchEndRunRewardDrops::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchEndRunRewardDrops*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchEndRunRewardDrops&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.serverinfo_ != nullptr);
      if (_this->_impl_.serverinfo_ == nullptr) {
        _this->_impl_.serverinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.serverinfo_);
      } else {
        _this->_impl_.serverinfo_->MergeFrom(*from._impl_.serverinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.match_end_quest_data_ != nullptr);
      if (_this->_impl_.match_end_quest_data_ == nullptr) {
        _this->_impl_.match_end_quest_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.match_end_quest_data_);
      } else {
        _this->_impl_.match_end_quest_data_->MergeFrom(*from._impl_.match_end_quest_data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchEndRunRewardDrops::CopyFrom(const CMsgGCCStrike15_v2_MatchEndRunRewardDrops& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchEndRunRewardDrops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchEndRunRewardDrops::InternalSwap(CMsgGCCStrike15_v2_MatchEndRunRewardDrops* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.match_end_quest_data_)
      + sizeof(CMsgGCCStrike15_v2_MatchEndRunRewardDrops::_impl_.match_end_quest_data_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRunRewardDrops, _impl_.serverinfo_)>(
          reinterpret_cast<char*>(&_impl_.serverinfo_),
          reinterpret_cast<char*>(&other->_impl_.serverinfo_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchEndRunRewardDrops::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CEconItemPreviewDataBlock_Sticker::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CEconItemPreviewDataBlock_Sticker>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_._has_bits_);
};

CEconItemPreviewDataBlock_Sticker::CEconItemPreviewDataBlock_Sticker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CEconItemPreviewDataBlock_Sticker_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CEconItemPreviewDataBlock.Sticker)
}
CEconItemPreviewDataBlock_Sticker::CEconItemPreviewDataBlock_Sticker(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CEconItemPreviewDataBlock_Sticker& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CEconItemPreviewDataBlock_Sticker_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CEconItemPreviewDataBlock_Sticker::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CEconItemPreviewDataBlock_Sticker::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           0,
           offsetof(Impl_, pattern_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::pattern_));
}
CEconItemPreviewDataBlock_Sticker::~CEconItemPreviewDataBlock_Sticker() {
  // @@protoc_insertion_point(destructor:CEconItemPreviewDataBlock.Sticker)
  SharedDtor(*this);
}
inline void CEconItemPreviewDataBlock_Sticker::SharedDtor(MessageLite& self) {
  CEconItemPreviewDataBlock_Sticker& this_ = static_cast<CEconItemPreviewDataBlock_Sticker&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CEconItemPreviewDataBlock_Sticker::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CEconItemPreviewDataBlock_Sticker(arena);
}
constexpr auto CEconItemPreviewDataBlock_Sticker::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CEconItemPreviewDataBlock_Sticker),
                                            alignof(CEconItemPreviewDataBlock_Sticker));
}
constexpr auto CEconItemPreviewDataBlock_Sticker::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CEconItemPreviewDataBlock_Sticker_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CEconItemPreviewDataBlock_Sticker::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CEconItemPreviewDataBlock_Sticker>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CEconItemPreviewDataBlock_Sticker::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CEconItemPreviewDataBlock_Sticker>(), &CEconItemPreviewDataBlock_Sticker::ByteSizeLong,
              &CEconItemPreviewDataBlock_Sticker::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_._cached_size_),
          false,
      },
      &CEconItemPreviewDataBlock_Sticker::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CEconItemPreviewDataBlock_Sticker_class_data_ =
            CEconItemPreviewDataBlock_Sticker::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CEconItemPreviewDataBlock_Sticker::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CEconItemPreviewDataBlock_Sticker_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CEconItemPreviewDataBlock_Sticker_class_data_.tc_table);
  return CEconItemPreviewDataBlock_Sticker_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 2>
CEconItemPreviewDataBlock_Sticker::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CEconItemPreviewDataBlock_Sticker_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CEconItemPreviewDataBlock_Sticker>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock_Sticker, _impl_.slot_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.slot_)}},
    // optional uint32 sticker_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock_Sticker, _impl_.sticker_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.sticker_id_)}},
    // optional float wear = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.wear_)}},
    // optional float scale = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.scale_)}},
    // optional float rotation = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.rotation_)}},
    // optional uint32 tint_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock_Sticker, _impl_.tint_id_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.tint_id_)}},
    // optional float offset_x = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.offset_x_)}},
    // optional float offset_y = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.offset_y_)}},
    // optional float offset_z = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 8, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.offset_z_)}},
    // optional uint32 pattern = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock_Sticker, _impl_.pattern_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.pattern_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 slot = 1;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.slot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 sticker_id = 2;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.sticker_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float wear = 3;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.wear_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float scale = 4;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.scale_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float rotation = 5;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.rotation_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 tint_id = 6;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.tint_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float offset_x = 7;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.offset_x_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float offset_y = 8;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.offset_y_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float offset_z = 9;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.offset_z_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 pattern = 10;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.pattern_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CEconItemPreviewDataBlock_Sticker::Clear() {
// @@protoc_insertion_point(message_clear_start:CEconItemPreviewDataBlock.Sticker)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.offset_y_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.offset_y_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.offset_z_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pattern_) -
        reinterpret_cast<char*>(&_impl_.offset_z_)) + sizeof(_impl_.pattern_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CEconItemPreviewDataBlock_Sticker::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CEconItemPreviewDataBlock_Sticker& this_ = static_cast<const CEconItemPreviewDataBlock_Sticker&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CEconItemPreviewDataBlock_Sticker::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CEconItemPreviewDataBlock_Sticker& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CEconItemPreviewDataBlock.Sticker)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 slot = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_slot(), target);
  }

  // optional uint32 sticker_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_sticker_id(), target);
  }

  // optional float wear = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this_._internal_wear(), target);
  }

  // optional float scale = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this_._internal_scale(), target);
  }

  // optional float rotation = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this_._internal_rotation(), target);
  }

  // optional uint32 tint_id = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_tint_id(), target);
  }

  // optional float offset_x = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this_._internal_offset_x(), target);
  }

  // optional float offset_y = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this_._internal_offset_y(), target);
  }

  // optional float offset_z = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this_._internal_offset_z(), target);
  }

  // optional uint32 pattern = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_pattern(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEconItemPreviewDataBlock.Sticker)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CEconItemPreviewDataBlock_Sticker::ByteSizeLong(const MessageLite& base) {
  const CEconItemPreviewDataBlock_Sticker& this_ = static_cast<const CEconItemPreviewDataBlock_Sticker&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CEconItemPreviewDataBlock_Sticker::ByteSizeLong() const {
  const CEconItemPreviewDataBlock_Sticker& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CEconItemPreviewDataBlock.Sticker)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x000001dcu & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000023u) != 0) {
    // optional uint32 slot = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_slot());
    }
    // optional uint32 sticker_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_sticker_id());
    }
    // optional uint32 tint_id = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tint_id());
    }
  }
   {
    // optional uint32 pattern = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_pattern());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CEconItemPreviewDataBlock_Sticker::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CEconItemPreviewDataBlock_Sticker*>(&to_msg);
  auto& from = static_cast<const CEconItemPreviewDataBlock_Sticker&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CEconItemPreviewDataBlock.Sticker)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.slot_ = from._impl_.slot_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.sticker_id_ = from._impl_.sticker_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.wear_ = from._impl_.wear_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.rotation_ = from._impl_.rotation_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.tint_id_ = from._impl_.tint_id_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.offset_x_ = from._impl_.offset_x_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.offset_y_ = from._impl_.offset_y_;
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.offset_z_ = from._impl_.offset_z_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.pattern_ = from._impl_.pattern_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CEconItemPreviewDataBlock_Sticker::CopyFrom(const CEconItemPreviewDataBlock_Sticker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEconItemPreviewDataBlock.Sticker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CEconItemPreviewDataBlock_Sticker::InternalSwap(CEconItemPreviewDataBlock_Sticker* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.pattern_)
      + sizeof(CEconItemPreviewDataBlock_Sticker::_impl_.pattern_)
      - PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock_Sticker, _impl_.slot_)>(
          reinterpret_cast<char*>(&_impl_.slot_),
          reinterpret_cast<char*>(&other->_impl_.slot_));
}

::google::protobuf::Metadata CEconItemPreviewDataBlock_Sticker::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CEconItemPreviewDataBlock::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CEconItemPreviewDataBlock>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_._has_bits_);
};

CEconItemPreviewDataBlock::CEconItemPreviewDataBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CEconItemPreviewDataBlock_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CEconItemPreviewDataBlock)
}
PROTOBUF_NDEBUG_INLINE CEconItemPreviewDataBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CEconItemPreviewDataBlock& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stickers_{visibility, arena, from.stickers_},
        keychains_{visibility, arena, from.keychains_},
        customname_(arena, from.customname_) {}

CEconItemPreviewDataBlock::CEconItemPreviewDataBlock(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CEconItemPreviewDataBlock& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CEconItemPreviewDataBlock_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CEconItemPreviewDataBlock* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, itemid_),
           offsetof(Impl_, petindex_) -
               offsetof(Impl_, itemid_) +
               sizeof(Impl_::petindex_));

  // @@protoc_insertion_point(copy_constructor:CEconItemPreviewDataBlock)
}
PROTOBUF_NDEBUG_INLINE CEconItemPreviewDataBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        stickers_{visibility, arena},
        keychains_{visibility, arena},
        customname_(arena) {}

inline void CEconItemPreviewDataBlock::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemid_),
           0,
           offsetof(Impl_, petindex_) -
               offsetof(Impl_, itemid_) +
               sizeof(Impl_::petindex_));
}
CEconItemPreviewDataBlock::~CEconItemPreviewDataBlock() {
  // @@protoc_insertion_point(destructor:CEconItemPreviewDataBlock)
  SharedDtor(*this);
}
inline void CEconItemPreviewDataBlock::SharedDtor(MessageLite& self) {
  CEconItemPreviewDataBlock& this_ = static_cast<CEconItemPreviewDataBlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.customname_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CEconItemPreviewDataBlock::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CEconItemPreviewDataBlock(arena);
}
constexpr auto CEconItemPreviewDataBlock::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.stickers_) +
          decltype(CEconItemPreviewDataBlock::_impl_.stickers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.keychains_) +
          decltype(CEconItemPreviewDataBlock::_impl_.keychains_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CEconItemPreviewDataBlock), alignof(CEconItemPreviewDataBlock), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CEconItemPreviewDataBlock::PlacementNew_,
                                 sizeof(CEconItemPreviewDataBlock),
                                 alignof(CEconItemPreviewDataBlock));
  }
}
constexpr auto CEconItemPreviewDataBlock::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CEconItemPreviewDataBlock_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CEconItemPreviewDataBlock::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CEconItemPreviewDataBlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CEconItemPreviewDataBlock::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CEconItemPreviewDataBlock>(), &CEconItemPreviewDataBlock::ByteSizeLong,
              &CEconItemPreviewDataBlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_._cached_size_),
          false,
      },
      &CEconItemPreviewDataBlock::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CEconItemPreviewDataBlock_class_data_ =
            CEconItemPreviewDataBlock::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CEconItemPreviewDataBlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CEconItemPreviewDataBlock_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CEconItemPreviewDataBlock_class_data_.tc_table);
  return CEconItemPreviewDataBlock_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 2, 60, 2>
CEconItemPreviewDataBlock::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CEconItemPreviewDataBlock_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CEconItemPreviewDataBlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.accountid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.accountid_)}},
    // optional uint64 itemid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CEconItemPreviewDataBlock, _impl_.itemid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.itemid_)}},
    // optional uint32 defindex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.defindex_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.defindex_)}},
    // optional uint32 paintindex = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.paintindex_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.paintindex_)}},
    // optional uint32 rarity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.rarity_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.rarity_)}},
    // optional uint32 quality = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.quality_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.quality_)}},
    // optional uint32 paintwear = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.paintwear_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.paintwear_)}},
    // optional uint32 paintseed = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.paintseed_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.paintseed_)}},
    // optional uint32 killeaterscoretype = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.killeaterscoretype_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.killeaterscoretype_)}},
    // optional uint32 killeatervalue = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.killeatervalue_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.killeatervalue_)}},
    // optional string customname = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.customname_)}},
    // repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.stickers_)}},
    // optional uint32 inventory = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.inventory_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.inventory_)}},
    // optional uint32 origin = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.origin_), 12>(),
     {112, 12, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.origin_)}},
    // optional uint32 questid = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEconItemPreviewDataBlock, _impl_.questid_), 13>(),
     {120, 13, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.questid_)}},
    // optional uint32 dropreason = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 14, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.dropreason_)}},
    // optional uint32 musicindex = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 15, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.musicindex_)}},
    // optional int32 entindex = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 16, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.entindex_)}},
    // optional uint32 petindex = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 17, 0, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.petindex_)}},
    // repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;
    {::_pbi::TcParser::FastMtR2,
     {418, 63, 1, PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.keychains_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.accountid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 itemid = 2;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.itemid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 defindex = 3;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.defindex_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 paintindex = 4;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.paintindex_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rarity = 5;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.rarity_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 quality = 6;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.quality_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 paintwear = 7;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.paintwear_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 paintseed = 8;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.paintseed_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 killeaterscoretype = 9;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.killeaterscoretype_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 killeatervalue = 10;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.killeatervalue_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string customname = 11;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.customname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.stickers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 inventory = 13;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.inventory_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 origin = 14;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.origin_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 questid = 15;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.questid_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 dropreason = 16;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.dropreason_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 musicindex = 17;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.musicindex_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 entindex = 18;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.entindex_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 petindex = 19;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.petindex_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;
    {PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.keychains_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CEconItemPreviewDataBlock_Sticker>()},
      {::_pbi::TcParser::GetTable<::CEconItemPreviewDataBlock_Sticker>()},
  }},
  {{
    "\31\0\0\0\0\0\0\0\0\0\0\12\0\0\0\0\0\0\0\0\0\0\0\0"
    "CEconItemPreviewDataBlock"
    "customname"
  }},
};
PROTOBUF_NOINLINE void CEconItemPreviewDataBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:CEconItemPreviewDataBlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stickers_.Clear();
  _impl_.keychains_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.customname_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.itemid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.paintwear_) -
        reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.paintwear_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.paintseed_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.musicindex_) -
        reinterpret_cast<char*>(&_impl_.paintseed_)) + sizeof(_impl_.musicindex_));
  }
  if ((cached_has_bits & 0x00030000u) != 0) {
    ::memset(&_impl_.entindex_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.petindex_) -
        reinterpret_cast<char*>(&_impl_.entindex_)) + sizeof(_impl_.petindex_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CEconItemPreviewDataBlock::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CEconItemPreviewDataBlock& this_ = static_cast<const CEconItemPreviewDataBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CEconItemPreviewDataBlock::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CEconItemPreviewDataBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CEconItemPreviewDataBlock)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint64 itemid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_itemid(), target);
  }

  // optional uint32 defindex = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_defindex(), target);
  }

  // optional uint32 paintindex = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_paintindex(), target);
  }

  // optional uint32 rarity = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_rarity(), target);
  }

  // optional uint32 quality = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_quality(), target);
  }

  // optional uint32 paintwear = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_paintwear(), target);
  }

  // optional uint32 paintseed = 8;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_paintseed(), target);
  }

  // optional uint32 killeaterscoretype = 9;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_killeaterscoretype(), target);
  }

  // optional uint32 killeatervalue = 10;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_killeatervalue(), target);
  }

  // optional string customname = 11;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_customname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CEconItemPreviewDataBlock.customname");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_stickers_size());
       i < n; i++) {
    const auto& repfield = this_._internal_stickers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            12, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 inventory = 13;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this_._internal_inventory(), target);
  }

  // optional uint32 origin = 14;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_origin(), target);
  }

  // optional uint32 questid = 15;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this_._internal_questid(), target);
  }

  // optional uint32 dropreason = 16;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_dropreason(), target);
  }

  // optional uint32 musicindex = 17;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        17, this_._internal_musicindex(), target);
  }

  // optional int32 entindex = 18;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this_._internal_entindex(), target);
  }

  // optional uint32 petindex = 19;
  if ((cached_has_bits & 0x00020000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this_._internal_petindex(), target);
  }

  // repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_keychains_size());
       i < n; i++) {
    const auto& repfield = this_._internal_keychains().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            20, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEconItemPreviewDataBlock)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CEconItemPreviewDataBlock::ByteSizeLong(const MessageLite& base) {
  const CEconItemPreviewDataBlock& this_ = static_cast<const CEconItemPreviewDataBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CEconItemPreviewDataBlock::ByteSizeLong() const {
  const CEconItemPreviewDataBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CEconItemPreviewDataBlock)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;
    {
      total_size += 1UL * this_._internal_stickers_size();
      for (const auto& msg : this_._internal_stickers()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .CEconItemPreviewDataBlock.Sticker keychains = 20;
    {
      total_size += 2UL * this_._internal_keychains_size();
      for (const auto& msg : this_._internal_keychains()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string customname = 11;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_customname());
    }
    // optional uint64 itemid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_itemid());
    }
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 defindex = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_defindex());
    }
    // optional uint32 paintindex = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_paintindex());
    }
    // optional uint32 rarity = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rarity());
    }
    // optional uint32 quality = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_quality());
    }
    // optional uint32 paintwear = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_paintwear());
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // optional uint32 paintseed = 8;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_paintseed());
    }
    // optional uint32 killeaterscoretype = 9;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_killeaterscoretype());
    }
    // optional uint32 killeatervalue = 10;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_killeatervalue());
    }
    // optional uint32 inventory = 13;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_inventory());
    }
    // optional uint32 origin = 14;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_origin());
    }
    // optional uint32 questid = 15;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_questid());
    }
    // optional uint32 dropreason = 16;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_dropreason());
    }
    // optional uint32 musicindex = 17;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_musicindex());
    }
  }
  if ((cached_has_bits & 0x00030000u) != 0) {
    // optional int32 entindex = 18;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this_._internal_entindex());
    }
    // optional uint32 petindex = 19;
    if ((cached_has_bits & 0x00020000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_petindex());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CEconItemPreviewDataBlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CEconItemPreviewDataBlock*>(&to_msg);
  auto& from = static_cast<const CEconItemPreviewDataBlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CEconItemPreviewDataBlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stickers()->MergeFrom(
      from._internal_stickers());
  _this->_internal_mutable_keychains()->MergeFrom(
      from._internal_keychains());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_customname(from._internal_customname());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.itemid_ = from._impl_.itemid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.defindex_ = from._impl_.defindex_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.paintindex_ = from._impl_.paintindex_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.rarity_ = from._impl_.rarity_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.quality_ = from._impl_.quality_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.paintwear_ = from._impl_.paintwear_;
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.paintseed_ = from._impl_.paintseed_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.killeaterscoretype_ = from._impl_.killeaterscoretype_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.killeatervalue_ = from._impl_.killeatervalue_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.inventory_ = from._impl_.inventory_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.origin_ = from._impl_.origin_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.questid_ = from._impl_.questid_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.dropreason_ = from._impl_.dropreason_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.musicindex_ = from._impl_.musicindex_;
    }
  }
  if ((cached_has_bits & 0x00030000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _this->_impl_.entindex_ = from._impl_.entindex_;
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _this->_impl_.petindex_ = from._impl_.petindex_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CEconItemPreviewDataBlock::CopyFrom(const CEconItemPreviewDataBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEconItemPreviewDataBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CEconItemPreviewDataBlock::InternalSwap(CEconItemPreviewDataBlock* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stickers_.InternalSwap(&other->_impl_.stickers_);
  _impl_.keychains_.InternalSwap(&other->_impl_.keychains_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.customname_, &other->_impl_.customname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.petindex_)
      + sizeof(CEconItemPreviewDataBlock::_impl_.petindex_)
      - PROTOBUF_FIELD_OFFSET(CEconItemPreviewDataBlock, _impl_.itemid_)>(
          reinterpret_cast<char*>(&_impl_.itemid_),
          reinterpret_cast<char*>(&other->_impl_.itemid_));
}

::google::protobuf::Metadata CEconItemPreviewDataBlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchEndRewardDropsNotification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.iteminfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iteminfo_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.iteminfo_ = {};
}
CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::~CMsgGCCStrike15_v2_MatchEndRewardDropsNotification() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& this_ = static_cast<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.iteminfo_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchEndRewardDropsNotification(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification),
                                            alignof(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification));
}
constexpr auto CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>(), &CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_ =
            CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _impl_._has_bits_),
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967263,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CEconItemPreviewDataBlock iteminfo = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _impl_.iteminfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CEconItemPreviewDataBlock iteminfo = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification, _impl_.iteminfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CEconItemPreviewDataBlock>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.iteminfo_ != nullptr);
    _impl_.iteminfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& this_ = static_cast<const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CEconItemPreviewDataBlock iteminfo = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.iteminfo_, this_._impl_.iteminfo_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& this_ = static_cast<const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .CEconItemPreviewDataBlock iteminfo = 6;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.iteminfo_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.iteminfo_ != nullptr);
    if (_this->_impl_.iteminfo_ == nullptr) {
      _this->_impl_.iteminfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iteminfo_);
    } else {
      _this->_impl_.iteminfo_->MergeFrom(*from._impl_.iteminfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::CopyFrom(const CMsgGCCStrike15_v2_MatchEndRewardDropsNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchEndRewardDropsNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::InternalSwap(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.iteminfo_, other->_impl_.iteminfo_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgItemAcknowledged::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgItemAcknowledged>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgItemAcknowledged, _impl_._has_bits_);
};

CMsgItemAcknowledged::CMsgItemAcknowledged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgItemAcknowledged_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgItemAcknowledged)
}
PROTOBUF_NDEBUG_INLINE CMsgItemAcknowledged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgItemAcknowledged& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgItemAcknowledged::CMsgItemAcknowledged(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgItemAcknowledged& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgItemAcknowledged_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgItemAcknowledged* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.iteminfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iteminfo_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgItemAcknowledged)
}
PROTOBUF_NDEBUG_INLINE CMsgItemAcknowledged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgItemAcknowledged::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.iteminfo_ = {};
}
CMsgItemAcknowledged::~CMsgItemAcknowledged() {
  // @@protoc_insertion_point(destructor:CMsgItemAcknowledged)
  SharedDtor(*this);
}
inline void CMsgItemAcknowledged::SharedDtor(MessageLite& self) {
  CMsgItemAcknowledged& this_ = static_cast<CMsgItemAcknowledged&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.iteminfo_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgItemAcknowledged::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgItemAcknowledged(arena);
}
constexpr auto CMsgItemAcknowledged::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgItemAcknowledged),
                                            alignof(CMsgItemAcknowledged));
}
constexpr auto CMsgItemAcknowledged::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgItemAcknowledged_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgItemAcknowledged::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgItemAcknowledged>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgItemAcknowledged::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgItemAcknowledged>(), &CMsgItemAcknowledged::ByteSizeLong,
              &CMsgItemAcknowledged::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgItemAcknowledged, _impl_._cached_size_),
          false,
      },
      &CMsgItemAcknowledged::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgItemAcknowledged_class_data_ =
            CMsgItemAcknowledged::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgItemAcknowledged::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgItemAcknowledged_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgItemAcknowledged_class_data_.tc_table);
  return CMsgItemAcknowledged_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgItemAcknowledged::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgItemAcknowledged, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgItemAcknowledged_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgItemAcknowledged>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgItemAcknowledged, _impl_.iteminfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgItemAcknowledged, _impl_.iteminfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CEconItemPreviewDataBlock>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgItemAcknowledged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgItemAcknowledged)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.iteminfo_ != nullptr);
    _impl_.iteminfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgItemAcknowledged::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgItemAcknowledged& this_ = static_cast<const CMsgItemAcknowledged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgItemAcknowledged::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgItemAcknowledged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgItemAcknowledged)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.iteminfo_, this_._impl_.iteminfo_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgItemAcknowledged)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgItemAcknowledged::ByteSizeLong(const MessageLite& base) {
  const CMsgItemAcknowledged& this_ = static_cast<const CMsgItemAcknowledged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgItemAcknowledged::ByteSizeLong() const {
  const CMsgItemAcknowledged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgItemAcknowledged)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.iteminfo_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgItemAcknowledged::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgItemAcknowledged*>(&to_msg);
  auto& from = static_cast<const CMsgItemAcknowledged&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgItemAcknowledged)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.iteminfo_ != nullptr);
    if (_this->_impl_.iteminfo_ == nullptr) {
      _this->_impl_.iteminfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iteminfo_);
    } else {
      _this->_impl_.iteminfo_->MergeFrom(*from._impl_.iteminfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgItemAcknowledged::CopyFrom(const CMsgItemAcknowledged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgItemAcknowledged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgItemAcknowledged::InternalSwap(CMsgItemAcknowledged* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.iteminfo_, other->_impl_.iteminfo_);
}

::google::protobuf::Metadata CMsgItemAcknowledged::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
}
CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, param_s_),
           0,
           offsetof(Impl_, param_m_) -
               offsetof(Impl_, param_s_) +
               sizeof(Impl_::param_m_));
}
CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::~CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest& this_ = static_cast<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest(arena);
}
constexpr auto CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest),
                                            alignof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest));
}
constexpr auto CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest>(), &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::ByteSizeLong,
              &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_ =
            CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 param_m = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_m_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_m_)}},
    // optional uint64 param_s = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_s_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_s_)}},
    // optional uint64 param_a = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_a_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_a_)}},
    // optional uint64 param_d = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_d_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_d_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 param_s = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 param_a = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 param_d = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_d_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 param_m = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_m_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.param_s_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.param_m_) -
        reinterpret_cast<char*>(&_impl_.param_s_)) + sizeof(_impl_.param_m_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 param_s = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_param_s(), target);
  }

  // optional uint64 param_a = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_param_a(), target);
  }

  // optional uint64 param_d = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_param_d(), target);
  }

  // optional uint64 param_m = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this_._internal_param_m(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional uint64 param_s = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_param_s());
    }
    // optional uint64 param_a = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_param_a());
    }
    // optional uint64 param_d = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_param_d());
    }
    // optional uint64 param_m = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_param_m());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.param_s_ = from._impl_.param_s_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.param_a_ = from._impl_.param_a_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.param_d_ = from._impl_.param_d_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.param_m_ = from._impl_.param_m_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::CopyFrom(const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::InternalSwap(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_m_)
      + sizeof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::_impl_.param_m_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest, _impl_.param_s_)>(
          reinterpret_cast<char*>(&_impl_.param_s_),
          reinterpret_cast<char*>(&other->_impl_.param_s_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.iteminfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iteminfo_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.iteminfo_ = {};
}
CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::~CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& this_ = static_cast<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.iteminfo_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse(arena);
}
constexpr auto CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse),
                                            alignof(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse));
}
constexpr auto CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse>(), &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::ByteSizeLong,
              &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_ =
            CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _impl_.iteminfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse, _impl_.iteminfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CEconItemPreviewDataBlock>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.iteminfo_ != nullptr);
    _impl_.iteminfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.iteminfo_, this_._impl_.iteminfo_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.iteminfo_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.iteminfo_ != nullptr);
    if (_this->_impl_.iteminfo_ == nullptr) {
      _this->_impl_.iteminfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.iteminfo_);
    } else {
      _this->_impl_.iteminfo_->MergeFrom(*from._impl_.iteminfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::CopyFrom(const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::InternalSwap(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.iteminfo_, other->_impl_.iteminfo_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::_Internal {
 public:
};

CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames)
}
CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames)
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames),
                                            alignof(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames));
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames>(), &CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_ =
            CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
}
CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::~CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser& this_ = static_cast<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser),
                                            alignof(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser));
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser>(), &CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_ =
            CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint32 accountid = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::CopyFrom(const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::InternalSwap(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
}
CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::~CMsgGCCStrike15_v2_MatchListRequestRecentUserGames() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchListRequestRecentUserGames& this_ = static_cast<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchListRequestRecentUserGames(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames),
                                            alignof(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames));
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames>(), &CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_ =
            CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint32 accountid = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::CopyFrom(const CMsgGCCStrike15_v2_MatchListRequestRecentUserGames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchListRequestRecentUserGames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::InternalSwap(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchListRequestTournamentGames::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchListRequestTournamentGames>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchListRequestTournamentGames::CMsgGCCStrike15_v2_MatchListRequestTournamentGames(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
}
CMsgGCCStrike15_v2_MatchListRequestTournamentGames::CMsgGCCStrike15_v2_MatchListRequestTournamentGames(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchListRequestTournamentGames& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchListRequestTournamentGames::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchListRequestTournamentGames::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.eventid_ = {};
}
CMsgGCCStrike15_v2_MatchListRequestTournamentGames::~CMsgGCCStrike15_v2_MatchListRequestTournamentGames() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchListRequestTournamentGames::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchListRequestTournamentGames& this_ = static_cast<CMsgGCCStrike15_v2_MatchListRequestTournamentGames&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestTournamentGames::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchListRequestTournamentGames(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestTournamentGames::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchListRequestTournamentGames),
                                            alignof(CMsgGCCStrike15_v2_MatchListRequestTournamentGames));
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestTournamentGames::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchListRequestTournamentGames_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchListRequestTournamentGames::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchListRequestTournamentGames>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchListRequestTournamentGames::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchListRequestTournamentGames>(), &CMsgGCCStrike15_v2_MatchListRequestTournamentGames::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchListRequestTournamentGames::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchListRequestTournamentGames::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_ =
            CMsgGCCStrike15_v2_MatchListRequestTournamentGames::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestTournamentGames::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_MatchListRequestTournamentGames::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchListRequestTournamentGames_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchListRequestTournamentGames>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 eventid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_.eventid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_.eventid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eventid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestTournamentGames, _impl_.eventid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchListRequestTournamentGames::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eventid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestTournamentGames::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchListRequestTournamentGames& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestTournamentGames&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestTournamentGames::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchListRequestTournamentGames& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 eventid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_eventid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchListRequestTournamentGames::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchListRequestTournamentGames& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestTournamentGames&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchListRequestTournamentGames::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchListRequestTournamentGames& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional int32 eventid = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_eventid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchListRequestTournamentGames::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchListRequestTournamentGames*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchListRequestTournamentGames&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.eventid_ = from._impl_.eventid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchListRequestTournamentGames::CopyFrom(const CMsgGCCStrike15_v2_MatchListRequestTournamentGames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchListRequestTournamentGames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchListRequestTournamentGames::InternalSwap(CMsgGCCStrike15_v2_MatchListRequestTournamentGames* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.eventid_, other->_impl_.eventid_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchListRequestTournamentGames::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
}
CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, matchid_),
           0,
           offsetof(Impl_, token_) -
               offsetof(Impl_, matchid_) +
               sizeof(Impl_::token_));
}
CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::~CMsgGCCStrike15_v2_MatchListRequestFullGameInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchListRequestFullGameInfo& this_ = static_cast<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchListRequestFullGameInfo(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo),
                                            alignof(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo));
}
constexpr auto CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo>(), &CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_ =
            CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 matchid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.matchid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.matchid_)}},
    // optional uint64 outcomeid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.outcomeid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.outcomeid_)}},
    // optional uint32 token = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.token_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 matchid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.matchid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 outcomeid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.outcomeid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 token = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.token_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.matchid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.token_) -
        reinterpret_cast<char*>(&_impl_.matchid_)) + sizeof(_impl_.token_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 matchid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_matchid(), target);
  }

  // optional uint64 outcomeid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_outcomeid(), target);
  }

  // optional uint32 token = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_token(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint64 matchid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_matchid());
    }
    // optional uint64 outcomeid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_outcomeid());
    }
    // optional uint32 token = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_token());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.matchid_ = from._impl_.matchid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.outcomeid_ = from._impl_.outcomeid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.token_ = from._impl_.token_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::CopyFrom(const CMsgGCCStrike15_v2_MatchListRequestFullGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchListRequestFullGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::InternalSwap(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.token_)
      + sizeof(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::_impl_.token_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo, _impl_.matchid_)>(
          reinterpret_cast<char*>(&_impl_.matchid_),
          reinterpret_cast<char*>(&other->_impl_.matchid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_MatchInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CDataGCCStrike15_v2_MatchInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_._has_bits_);
};

CDataGCCStrike15_v2_MatchInfo::CDataGCCStrike15_v2_MatchInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_MatchInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_MatchInfo)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_MatchInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CDataGCCStrike15_v2_MatchInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        roundstatsall_{visibility, arena, from.roundstatsall_} {}

CDataGCCStrike15_v2_MatchInfo::CDataGCCStrike15_v2_MatchInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CDataGCCStrike15_v2_MatchInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_MatchInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CDataGCCStrike15_v2_MatchInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.watchablematchinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.watchablematchinfo_)
                : nullptr;
  _impl_.roundstats_legacy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roundstats_legacy_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, matchid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, matchid_),
           offsetof(Impl_, matchtime_) -
               offsetof(Impl_, matchid_) +
               sizeof(Impl_::matchtime_));

  // @@protoc_insertion_point(copy_constructor:CDataGCCStrike15_v2_MatchInfo)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_MatchInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        roundstatsall_{visibility, arena} {}

inline void CDataGCCStrike15_v2_MatchInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, watchablematchinfo_),
           0,
           offsetof(Impl_, matchtime_) -
               offsetof(Impl_, watchablematchinfo_) +
               sizeof(Impl_::matchtime_));
}
CDataGCCStrike15_v2_MatchInfo::~CDataGCCStrike15_v2_MatchInfo() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_MatchInfo)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_MatchInfo::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_MatchInfo& this_ = static_cast<CDataGCCStrike15_v2_MatchInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.watchablematchinfo_;
  delete this_._impl_.roundstats_legacy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_MatchInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_MatchInfo(arena);
}
constexpr auto CDataGCCStrike15_v2_MatchInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.roundstatsall_) +
          decltype(CDataGCCStrike15_v2_MatchInfo::_impl_.roundstatsall_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CDataGCCStrike15_v2_MatchInfo), alignof(CDataGCCStrike15_v2_MatchInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CDataGCCStrike15_v2_MatchInfo::PlacementNew_,
                                 sizeof(CDataGCCStrike15_v2_MatchInfo),
                                 alignof(CDataGCCStrike15_v2_MatchInfo));
  }
}
constexpr auto CDataGCCStrike15_v2_MatchInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_MatchInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_MatchInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_MatchInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_MatchInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_MatchInfo>(), &CDataGCCStrike15_v2_MatchInfo::ByteSizeLong,
              &CDataGCCStrike15_v2_MatchInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_MatchInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_MatchInfo_class_data_ =
            CDataGCCStrike15_v2_MatchInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_MatchInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_MatchInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_MatchInfo_class_data_.tc_table);
  return CDataGCCStrike15_v2_MatchInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2>
CDataGCCStrike15_v2_MatchInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CDataGCCStrike15_v2_MatchInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_MatchInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 matchid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CDataGCCStrike15_v2_MatchInfo, _impl_.matchid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.matchid_)}},
    // optional uint32 matchtime = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_MatchInfo, _impl_.matchtime_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.matchtime_)}},
    // optional .WatchableMatchInfo watchablematchinfo = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.watchablematchinfo_)}},
    // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstats_legacy = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.roundstats_legacy_)}},
    // repeated .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstatsall = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.roundstatsall_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 matchid = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.matchid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 matchtime = 2;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.matchtime_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .WatchableMatchInfo watchablematchinfo = 3;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.watchablematchinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstats_legacy = 4;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.roundstats_legacy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstatsall = 5;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.roundstatsall_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::WatchableMatchInfo>()},
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingServerRoundStats>()},
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchmakingServerRoundStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_MatchInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_MatchInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roundstatsall_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.watchablematchinfo_ != nullptr);
      _impl_.watchablematchinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.roundstats_legacy_ != nullptr);
      _impl_.roundstats_legacy_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.matchid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.matchtime_) -
        reinterpret_cast<char*>(&_impl_.matchid_)) + sizeof(_impl_.matchtime_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_MatchInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_MatchInfo& this_ = static_cast<const CDataGCCStrike15_v2_MatchInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_MatchInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_MatchInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_MatchInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 matchid = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_matchid(), target);
  }

  // optional uint32 matchtime = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_matchtime(), target);
  }

  // optional .WatchableMatchInfo watchablematchinfo = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.watchablematchinfo_, this_._impl_.watchablematchinfo_->GetCachedSize(), target,
        stream);
  }

  // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstats_legacy = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.roundstats_legacy_, this_._impl_.roundstats_legacy_->GetCachedSize(), target,
        stream);
  }

  // repeated .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstatsall = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_roundstatsall_size());
       i < n; i++) {
    const auto& repfield = this_._internal_roundstatsall().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_MatchInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_MatchInfo::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_MatchInfo& this_ = static_cast<const CDataGCCStrike15_v2_MatchInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_MatchInfo::ByteSizeLong() const {
  const CDataGCCStrike15_v2_MatchInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_MatchInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstatsall = 5;
    {
      total_size += 1UL * this_._internal_roundstatsall_size();
      for (const auto& msg : this_._internal_roundstatsall()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .WatchableMatchInfo watchablematchinfo = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.watchablematchinfo_);
    }
    // optional .CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstats_legacy = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.roundstats_legacy_);
    }
    // optional uint64 matchid = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_matchid());
    }
    // optional uint32 matchtime = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_matchtime());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_MatchInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_MatchInfo*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_MatchInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_MatchInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roundstatsall()->MergeFrom(
      from._internal_roundstatsall());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.watchablematchinfo_ != nullptr);
      if (_this->_impl_.watchablematchinfo_ == nullptr) {
        _this->_impl_.watchablematchinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.watchablematchinfo_);
      } else {
        _this->_impl_.watchablematchinfo_->MergeFrom(*from._impl_.watchablematchinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.roundstats_legacy_ != nullptr);
      if (_this->_impl_.roundstats_legacy_ == nullptr) {
        _this->_impl_.roundstats_legacy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roundstats_legacy_);
      } else {
        _this->_impl_.roundstats_legacy_->MergeFrom(*from._impl_.roundstats_legacy_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.matchid_ = from._impl_.matchid_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.matchtime_ = from._impl_.matchtime_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_MatchInfo::CopyFrom(const CDataGCCStrike15_v2_MatchInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_MatchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_MatchInfo::InternalSwap(CDataGCCStrike15_v2_MatchInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roundstatsall_.InternalSwap(&other->_impl_.roundstatsall_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.matchtime_)
      + sizeof(CDataGCCStrike15_v2_MatchInfo::_impl_.matchtime_)
      - PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_MatchInfo, _impl_.watchablematchinfo_)>(
          reinterpret_cast<char*>(&_impl_.watchablematchinfo_),
          reinterpret_cast<char*>(&other->_impl_.watchablematchinfo_));
}

::google::protobuf::Metadata CDataGCCStrike15_v2_MatchInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_TournamentGroupTeam::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CDataGCCStrike15_v2_TournamentGroupTeam>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_._has_bits_);
};

CDataGCCStrike15_v2_TournamentGroupTeam::CDataGCCStrike15_v2_TournamentGroupTeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentGroupTeam_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_TournamentGroupTeam)
}
CDataGCCStrike15_v2_TournamentGroupTeam::CDataGCCStrike15_v2_TournamentGroupTeam(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDataGCCStrike15_v2_TournamentGroupTeam& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentGroupTeam_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentGroupTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CDataGCCStrike15_v2_TournamentGroupTeam::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, team_id_),
           0,
           offsetof(Impl_, correctpick_) -
               offsetof(Impl_, team_id_) +
               sizeof(Impl_::correctpick_));
}
CDataGCCStrike15_v2_TournamentGroupTeam::~CDataGCCStrike15_v2_TournamentGroupTeam() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_TournamentGroupTeam)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_TournamentGroupTeam::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_TournamentGroupTeam& this_ = static_cast<CDataGCCStrike15_v2_TournamentGroupTeam&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroupTeam::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_TournamentGroupTeam(arena);
}
constexpr auto CDataGCCStrike15_v2_TournamentGroupTeam::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CDataGCCStrike15_v2_TournamentGroupTeam),
                                            alignof(CDataGCCStrike15_v2_TournamentGroupTeam));
}
constexpr auto CDataGCCStrike15_v2_TournamentGroupTeam::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_TournamentGroupTeam_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_TournamentGroupTeam::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_TournamentGroupTeam>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_TournamentGroupTeam::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_TournamentGroupTeam>(), &CDataGCCStrike15_v2_TournamentGroupTeam::ByteSizeLong,
              &CDataGCCStrike15_v2_TournamentGroupTeam::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_TournamentGroupTeam::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_TournamentGroupTeam_class_data_ =
            CDataGCCStrike15_v2_TournamentGroupTeam::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroupTeam::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_TournamentGroupTeam_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_TournamentGroupTeam_class_data_.tc_table);
  return CDataGCCStrike15_v2_TournamentGroupTeam_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CDataGCCStrike15_v2_TournamentGroupTeam::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CDataGCCStrike15_v2_TournamentGroupTeam_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentGroupTeam>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 team_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.team_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.team_id_)}},
    // optional int32 score = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.score_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.score_)}},
    // optional bool correctpick = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.correctpick_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.correctpick_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 team_id = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.team_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 score = 2;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.score_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool correctpick = 3;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.correctpick_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_TournamentGroupTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_TournamentGroupTeam)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.team_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.correctpick_) -
        reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.correctpick_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroupTeam::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_TournamentGroupTeam& this_ = static_cast<const CDataGCCStrike15_v2_TournamentGroupTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroupTeam::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_TournamentGroupTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_TournamentGroupTeam)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 team_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_team_id(), target);
  }

  // optional int32 score = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_score(), target);
  }

  // optional bool correctpick = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_correctpick(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_TournamentGroupTeam)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_TournamentGroupTeam::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_TournamentGroupTeam& this_ = static_cast<const CDataGCCStrike15_v2_TournamentGroupTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_TournamentGroupTeam::ByteSizeLong() const {
  const CDataGCCStrike15_v2_TournamentGroupTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_TournamentGroupTeam)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional int32 team_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_team_id());
    }
    // optional int32 score = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_score());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_TournamentGroupTeam::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_TournamentGroupTeam*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_TournamentGroupTeam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_TournamentGroupTeam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.team_id_ = from._impl_.team_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.score_ = from._impl_.score_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.correctpick_ = from._impl_.correctpick_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_TournamentGroupTeam::CopyFrom(const CDataGCCStrike15_v2_TournamentGroupTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_TournamentGroupTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_TournamentGroupTeam::InternalSwap(CDataGCCStrike15_v2_TournamentGroupTeam* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.correctpick_)
      + sizeof(CDataGCCStrike15_v2_TournamentGroupTeam::_impl_.correctpick_)
      - PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroupTeam, _impl_.team_id_)>(
          reinterpret_cast<char*>(&_impl_.team_id_),
          reinterpret_cast<char*>(&other->_impl_.team_id_));
}

::google::protobuf::Metadata CDataGCCStrike15_v2_TournamentGroupTeam::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_TournamentGroup_Picks::_Internal {
 public:
};

CDataGCCStrike15_v2_TournamentGroup_Picks::CDataGCCStrike15_v2_TournamentGroup_Picks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_TournamentGroup.Picks)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentGroup_Picks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CDataGCCStrike15_v2_TournamentGroup_Picks& from_msg)
      : pickids_{visibility, arena, from.pickids_},
        _cached_size_{0} {}

CDataGCCStrike15_v2_TournamentGroup_Picks::CDataGCCStrike15_v2_TournamentGroup_Picks(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CDataGCCStrike15_v2_TournamentGroup_Picks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CDataGCCStrike15_v2_TournamentGroup_Picks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CDataGCCStrike15_v2_TournamentGroup.Picks)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentGroup_Picks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : pickids_{visibility, arena},
        _cached_size_{0} {}

inline void CDataGCCStrike15_v2_TournamentGroup_Picks::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CDataGCCStrike15_v2_TournamentGroup_Picks::~CDataGCCStrike15_v2_TournamentGroup_Picks() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_TournamentGroup.Picks)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_TournamentGroup_Picks::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_TournamentGroup_Picks& this_ = static_cast<CDataGCCStrike15_v2_TournamentGroup_Picks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup_Picks::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_TournamentGroup_Picks(arena);
}
constexpr auto CDataGCCStrike15_v2_TournamentGroup_Picks::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup_Picks, _impl_.pickids_) +
          decltype(CDataGCCStrike15_v2_TournamentGroup_Picks::_impl_.pickids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CDataGCCStrike15_v2_TournamentGroup_Picks), alignof(CDataGCCStrike15_v2_TournamentGroup_Picks), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CDataGCCStrike15_v2_TournamentGroup_Picks::PlacementNew_,
                                 sizeof(CDataGCCStrike15_v2_TournamentGroup_Picks),
                                 alignof(CDataGCCStrike15_v2_TournamentGroup_Picks));
  }
}
constexpr auto CDataGCCStrike15_v2_TournamentGroup_Picks::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_TournamentGroup_Picks_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_TournamentGroup_Picks::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_TournamentGroup_Picks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_TournamentGroup_Picks::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_TournamentGroup_Picks>(), &CDataGCCStrike15_v2_TournamentGroup_Picks::ByteSizeLong,
              &CDataGCCStrike15_v2_TournamentGroup_Picks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup_Picks, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_TournamentGroup_Picks::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_ =
            CDataGCCStrike15_v2_TournamentGroup_Picks::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup_Picks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_.tc_table);
  return CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CDataGCCStrike15_v2_TournamentGroup_Picks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CDataGCCStrike15_v2_TournamentGroup_Picks_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentGroup_Picks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 pickids = 1;
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup_Picks, _impl_.pickids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 pickids = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup_Picks, _impl_.pickids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_TournamentGroup_Picks::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_TournamentGroup.Picks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pickids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup_Picks::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_TournamentGroup_Picks& this_ = static_cast<const CDataGCCStrike15_v2_TournamentGroup_Picks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup_Picks::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_TournamentGroup_Picks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_TournamentGroup.Picks)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 pickids = 1;
  for (int i = 0, n = this_._internal_pickids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this_._internal_pickids().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_TournamentGroup.Picks)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_TournamentGroup_Picks::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_TournamentGroup_Picks& this_ = static_cast<const CDataGCCStrike15_v2_TournamentGroup_Picks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_TournamentGroup_Picks::ByteSizeLong() const {
  const CDataGCCStrike15_v2_TournamentGroup_Picks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_TournamentGroup.Picks)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 pickids = 1;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_pickids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_pickids_size());
      total_size += tag_size + data_size;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_TournamentGroup_Picks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_TournamentGroup_Picks*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_TournamentGroup_Picks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_TournamentGroup.Picks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pickids()->MergeFrom(from._internal_pickids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_TournamentGroup_Picks::CopyFrom(const CDataGCCStrike15_v2_TournamentGroup_Picks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_TournamentGroup.Picks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_TournamentGroup_Picks::InternalSwap(CDataGCCStrike15_v2_TournamentGroup_Picks* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pickids_.InternalSwap(&other->_impl_.pickids_);
}

::google::protobuf::Metadata CDataGCCStrike15_v2_TournamentGroup_Picks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_TournamentGroup::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CDataGCCStrike15_v2_TournamentGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_._has_bits_);
};

CDataGCCStrike15_v2_TournamentGroup::CDataGCCStrike15_v2_TournamentGroup(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentGroup_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_TournamentGroup)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CDataGCCStrike15_v2_TournamentGroup& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        teams_{visibility, arena, from.teams_},
        stage_ids_{visibility, arena, from.stage_ids_},
        picks_{visibility, arena, from.picks_},
        name_(arena, from.name_),
        desc_(arena, from.desc_) {}

CDataGCCStrike15_v2_TournamentGroup::CDataGCCStrike15_v2_TournamentGroup(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CDataGCCStrike15_v2_TournamentGroup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentGroup_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CDataGCCStrike15_v2_TournamentGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, groupid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, groupid_),
           offsetof(Impl_, points_per_pick_) -
               offsetof(Impl_, groupid_) +
               sizeof(Impl_::points_per_pick_));

  // @@protoc_insertion_point(copy_constructor:CDataGCCStrike15_v2_TournamentGroup)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        teams_{visibility, arena},
        stage_ids_{visibility, arena},
        picks_{visibility, arena},
        name_(arena),
        desc_(arena) {}

inline void CDataGCCStrike15_v2_TournamentGroup::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, groupid_),
           0,
           offsetof(Impl_, points_per_pick_) -
               offsetof(Impl_, groupid_) +
               sizeof(Impl_::points_per_pick_));
}
CDataGCCStrike15_v2_TournamentGroup::~CDataGCCStrike15_v2_TournamentGroup() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_TournamentGroup)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_TournamentGroup::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_TournamentGroup& this_ = static_cast<CDataGCCStrike15_v2_TournamentGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.desc_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_TournamentGroup(arena);
}
constexpr auto CDataGCCStrike15_v2_TournamentGroup::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.teams_) +
          decltype(CDataGCCStrike15_v2_TournamentGroup::_impl_.teams_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.stage_ids_) +
          decltype(CDataGCCStrike15_v2_TournamentGroup::_impl_.stage_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.picks_) +
          decltype(CDataGCCStrike15_v2_TournamentGroup::_impl_.picks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CDataGCCStrike15_v2_TournamentGroup), alignof(CDataGCCStrike15_v2_TournamentGroup), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CDataGCCStrike15_v2_TournamentGroup::PlacementNew_,
                                 sizeof(CDataGCCStrike15_v2_TournamentGroup),
                                 alignof(CDataGCCStrike15_v2_TournamentGroup));
  }
}
constexpr auto CDataGCCStrike15_v2_TournamentGroup::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_TournamentGroup_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_TournamentGroup::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_TournamentGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_TournamentGroup::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_TournamentGroup>(), &CDataGCCStrike15_v2_TournamentGroup::ByteSizeLong,
              &CDataGCCStrike15_v2_TournamentGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_TournamentGroup::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_TournamentGroup_class_data_ =
            CDataGCCStrike15_v2_TournamentGroup::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_TournamentGroup_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_TournamentGroup_class_data_.tc_table);
  return CDataGCCStrike15_v2_TournamentGroup_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 60, 2>
CDataGCCStrike15_v2_TournamentGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CDataGCCStrike15_v2_TournamentGroup_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 groupid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentGroup, _impl_.groupid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.groupid_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.name_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.desc_)}},
    // optional uint32 picks__deprecated = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentGroup, _impl_.picks__deprecated_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.picks__deprecated_)}},
    // repeated .CDataGCCStrike15_v2_TournamentGroupTeam teams = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.teams_)}},
    // repeated int32 stage_ids = 6;
    {::_pbi::TcParser::FastV32R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.stage_ids_)}},
    // optional uint32 picklockuntiltime = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentGroup, _impl_.picklockuntiltime_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.picklockuntiltime_)}},
    // optional uint32 pickableteams = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentGroup, _impl_.pickableteams_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.pickableteams_)}},
    // optional uint32 points_per_pick = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentGroup, _impl_.points_per_pick_), 6>(),
     {72, 6, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.points_per_pick_)}},
    // repeated .CDataGCCStrike15_v2_TournamentGroup.Picks picks = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.picks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 groupid = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.groupid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.desc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 picks__deprecated = 4;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.picks__deprecated_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CDataGCCStrike15_v2_TournamentGroupTeam teams = 5;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.teams_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 stage_ids = 6;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.stage_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional uint32 picklockuntiltime = 7;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.picklockuntiltime_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 pickableteams = 8;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.pickableteams_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 points_per_pick = 9;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.points_per_pick_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CDataGCCStrike15_v2_TournamentGroup.Picks picks = 10;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.picks_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentGroupTeam>()},
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentGroup_Picks>()},
  }},
  {{
    "\43\0\4\4\0\0\0\0\0\0\0\0\0\0\0\0"
    "CDataGCCStrike15_v2_TournamentGroup"
    "name"
    "desc"
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_TournamentGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_TournamentGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.teams_.Clear();
  _impl_.stage_ids_.Clear();
  _impl_.picks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.groupid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.points_per_pick_) -
        reinterpret_cast<char*>(&_impl_.groupid_)) + sizeof(_impl_.points_per_pick_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_TournamentGroup& this_ = static_cast<const CDataGCCStrike15_v2_TournamentGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentGroup::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_TournamentGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_TournamentGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 groupid = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_groupid(), target);
  }

  // optional string name = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDataGCCStrike15_v2_TournamentGroup.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDataGCCStrike15_v2_TournamentGroup.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 picks__deprecated = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_picks__deprecated(), target);
  }

  // repeated .CDataGCCStrike15_v2_TournamentGroupTeam teams = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_teams_size());
       i < n; i++) {
    const auto& repfield = this_._internal_teams().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated int32 stage_ids = 6;
  for (int i = 0, n = this_._internal_stage_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        6, this_._internal_stage_ids().Get(i), target);
  }

  // optional uint32 picklockuntiltime = 7;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_picklockuntiltime(), target);
  }

  // optional uint32 pickableteams = 8;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_pickableteams(), target);
  }

  // optional uint32 points_per_pick = 9;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_points_per_pick(), target);
  }

  // repeated .CDataGCCStrike15_v2_TournamentGroup.Picks picks = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_picks_size());
       i < n; i++) {
    const auto& repfield = this_._internal_picks().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_TournamentGroup)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_TournamentGroup::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_TournamentGroup& this_ = static_cast<const CDataGCCStrike15_v2_TournamentGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_TournamentGroup::ByteSizeLong() const {
  const CDataGCCStrike15_v2_TournamentGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_TournamentGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CDataGCCStrike15_v2_TournamentGroupTeam teams = 5;
    {
      total_size += 1UL * this_._internal_teams_size();
      for (const auto& msg : this_._internal_teams()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated int32 stage_ids = 6;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_stage_ids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_stage_ids_size());
      total_size += tag_size + data_size;
    }
    // repeated .CDataGCCStrike15_v2_TournamentGroup.Picks picks = 10;
    {
      total_size += 1UL * this_._internal_picks_size();
      for (const auto& msg : this_._internal_picks()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // optional string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string desc = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_desc());
    }
    // optional uint32 groupid = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_groupid());
    }
    // optional uint32 picks__deprecated = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_picks__deprecated());
    }
    // optional uint32 picklockuntiltime = 7;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_picklockuntiltime());
    }
    // optional uint32 pickableteams = 8;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_pickableteams());
    }
    // optional uint32 points_per_pick = 9;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_points_per_pick());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_TournamentGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_TournamentGroup*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_TournamentGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_TournamentGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_teams()->MergeFrom(
      from._internal_teams());
  _this->_internal_mutable_stage_ids()->MergeFrom(from._internal_stage_ids());
  _this->_internal_mutable_picks()->MergeFrom(
      from._internal_picks());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.groupid_ = from._impl_.groupid_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.picks__deprecated_ = from._impl_.picks__deprecated_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.picklockuntiltime_ = from._impl_.picklockuntiltime_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.pickableteams_ = from._impl_.pickableteams_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.points_per_pick_ = from._impl_.points_per_pick_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_TournamentGroup::CopyFrom(const CDataGCCStrike15_v2_TournamentGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_TournamentGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_TournamentGroup::InternalSwap(CDataGCCStrike15_v2_TournamentGroup* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.teams_.InternalSwap(&other->_impl_.teams_);
  _impl_.stage_ids_.InternalSwap(&other->_impl_.stage_ids_);
  _impl_.picks_.InternalSwap(&other->_impl_.picks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.points_per_pick_)
      + sizeof(CDataGCCStrike15_v2_TournamentGroup::_impl_.points_per_pick_)
      - PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentGroup, _impl_.groupid_)>(
          reinterpret_cast<char*>(&_impl_.groupid_),
          reinterpret_cast<char*>(&other->_impl_.groupid_));
}

::google::protobuf::Metadata CDataGCCStrike15_v2_TournamentGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_TournamentSection::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CDataGCCStrike15_v2_TournamentSection>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_._has_bits_);
};

CDataGCCStrike15_v2_TournamentSection::CDataGCCStrike15_v2_TournamentSection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentSection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_TournamentSection)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentSection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CDataGCCStrike15_v2_TournamentSection& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        groups_{visibility, arena, from.groups_},
        name_(arena, from.name_),
        desc_(arena, from.desc_) {}

CDataGCCStrike15_v2_TournamentSection::CDataGCCStrike15_v2_TournamentSection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CDataGCCStrike15_v2_TournamentSection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentSection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CDataGCCStrike15_v2_TournamentSection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.sectionid_ = from._impl_.sectionid_;

  // @@protoc_insertion_point(copy_constructor:CDataGCCStrike15_v2_TournamentSection)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentSection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        groups_{visibility, arena},
        name_(arena),
        desc_(arena) {}

inline void CDataGCCStrike15_v2_TournamentSection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sectionid_ = {};
}
CDataGCCStrike15_v2_TournamentSection::~CDataGCCStrike15_v2_TournamentSection() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_TournamentSection)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_TournamentSection::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_TournamentSection& this_ = static_cast<CDataGCCStrike15_v2_TournamentSection&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.desc_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentSection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_TournamentSection(arena);
}
constexpr auto CDataGCCStrike15_v2_TournamentSection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.groups_) +
          decltype(CDataGCCStrike15_v2_TournamentSection::_impl_.groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CDataGCCStrike15_v2_TournamentSection), alignof(CDataGCCStrike15_v2_TournamentSection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CDataGCCStrike15_v2_TournamentSection::PlacementNew_,
                                 sizeof(CDataGCCStrike15_v2_TournamentSection),
                                 alignof(CDataGCCStrike15_v2_TournamentSection));
  }
}
constexpr auto CDataGCCStrike15_v2_TournamentSection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_TournamentSection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_TournamentSection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_TournamentSection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_TournamentSection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_TournamentSection>(), &CDataGCCStrike15_v2_TournamentSection::ByteSizeLong,
              &CDataGCCStrike15_v2_TournamentSection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_TournamentSection::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_TournamentSection_class_data_ =
            CDataGCCStrike15_v2_TournamentSection::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentSection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_TournamentSection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_TournamentSection_class_data_.tc_table);
  return CDataGCCStrike15_v2_TournamentSection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 54, 2>
CDataGCCStrike15_v2_TournamentSection::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CDataGCCStrike15_v2_TournamentSection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentSection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CDataGCCStrike15_v2_TournamentGroup groups = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.groups_)}},
    // optional uint32 sectionid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDataGCCStrike15_v2_TournamentSection, _impl_.sectionid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.sectionid_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.name_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.desc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 sectionid = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.sectionid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.desc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .CDataGCCStrike15_v2_TournamentGroup groups = 4;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentSection, _impl_.groups_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentGroup>()},
  }},
  {{
    "\45\0\4\4\0\0\0\0"
    "CDataGCCStrike15_v2_TournamentSection"
    "name"
    "desc"
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_TournamentSection::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_TournamentSection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.sectionid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentSection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_TournamentSection& this_ = static_cast<const CDataGCCStrike15_v2_TournamentSection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentSection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_TournamentSection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_TournamentSection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 sectionid = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_sectionid(), target);
  }

  // optional string name = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDataGCCStrike15_v2_TournamentSection.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDataGCCStrike15_v2_TournamentSection.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .CDataGCCStrike15_v2_TournamentGroup groups = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_groups_size());
       i < n; i++) {
    const auto& repfield = this_._internal_groups().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_TournamentSection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_TournamentSection::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_TournamentSection& this_ = static_cast<const CDataGCCStrike15_v2_TournamentSection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_TournamentSection::ByteSizeLong() const {
  const CDataGCCStrike15_v2_TournamentSection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_TournamentSection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CDataGCCStrike15_v2_TournamentGroup groups = 4;
    {
      total_size += 1UL * this_._internal_groups_size();
      for (const auto& msg : this_._internal_groups()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string desc = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_desc());
    }
    // optional uint32 sectionid = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_sectionid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_TournamentSection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_TournamentSection*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_TournamentSection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_TournamentSection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.sectionid_ = from._impl_.sectionid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_TournamentSection::CopyFrom(const CDataGCCStrike15_v2_TournamentSection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_TournamentSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_TournamentSection::InternalSwap(CDataGCCStrike15_v2_TournamentSection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  swap(_impl_.sectionid_, other->_impl_.sectionid_);
}

::google::protobuf::Metadata CDataGCCStrike15_v2_TournamentSection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CDataGCCStrike15_v2_TournamentInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CDataGCCStrike15_v2_TournamentInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_._has_bits_);
};

CDataGCCStrike15_v2_TournamentInfo::CDataGCCStrike15_v2_TournamentInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDataGCCStrike15_v2_TournamentInfo)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CDataGCCStrike15_v2_TournamentInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sections_{visibility, arena, from.sections_},
        tournament_teams_{visibility, arena, from.tournament_teams_} {}

CDataGCCStrike15_v2_TournamentInfo::CDataGCCStrike15_v2_TournamentInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CDataGCCStrike15_v2_TournamentInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CDataGCCStrike15_v2_TournamentInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CDataGCCStrike15_v2_TournamentInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tournament_event_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournament_event_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CDataGCCStrike15_v2_TournamentInfo)
}
PROTOBUF_NDEBUG_INLINE CDataGCCStrike15_v2_TournamentInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        sections_{visibility, arena},
        tournament_teams_{visibility, arena} {}

inline void CDataGCCStrike15_v2_TournamentInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tournament_event_ = {};
}
CDataGCCStrike15_v2_TournamentInfo::~CDataGCCStrike15_v2_TournamentInfo() {
  // @@protoc_insertion_point(destructor:CDataGCCStrike15_v2_TournamentInfo)
  SharedDtor(*this);
}
inline void CDataGCCStrike15_v2_TournamentInfo::SharedDtor(MessageLite& self) {
  CDataGCCStrike15_v2_TournamentInfo& this_ = static_cast<CDataGCCStrike15_v2_TournamentInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tournament_event_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CDataGCCStrike15_v2_TournamentInfo(arena);
}
constexpr auto CDataGCCStrike15_v2_TournamentInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.sections_) +
          decltype(CDataGCCStrike15_v2_TournamentInfo::_impl_.sections_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.tournament_teams_) +
          decltype(CDataGCCStrike15_v2_TournamentInfo::_impl_.tournament_teams_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CDataGCCStrike15_v2_TournamentInfo), alignof(CDataGCCStrike15_v2_TournamentInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CDataGCCStrike15_v2_TournamentInfo::PlacementNew_,
                                 sizeof(CDataGCCStrike15_v2_TournamentInfo),
                                 alignof(CDataGCCStrike15_v2_TournamentInfo));
  }
}
constexpr auto CDataGCCStrike15_v2_TournamentInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CDataGCCStrike15_v2_TournamentInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CDataGCCStrike15_v2_TournamentInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CDataGCCStrike15_v2_TournamentInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CDataGCCStrike15_v2_TournamentInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CDataGCCStrike15_v2_TournamentInfo>(), &CDataGCCStrike15_v2_TournamentInfo::ByteSizeLong,
              &CDataGCCStrike15_v2_TournamentInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_._cached_size_),
          false,
      },
      &CDataGCCStrike15_v2_TournamentInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CDataGCCStrike15_v2_TournamentInfo_class_data_ =
            CDataGCCStrike15_v2_TournamentInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CDataGCCStrike15_v2_TournamentInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CDataGCCStrike15_v2_TournamentInfo_class_data_.tc_table);
  return CDataGCCStrike15_v2_TournamentInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
CDataGCCStrike15_v2_TournamentInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CDataGCCStrike15_v2_TournamentInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .CDataGCCStrike15_v2_TournamentSection sections = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.sections_)}},
    // optional .TournamentEvent tournament_event = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.tournament_event_)}},
    // repeated .TournamentTeam tournament_teams = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.tournament_teams_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CDataGCCStrike15_v2_TournamentSection sections = 1;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.sections_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .TournamentEvent tournament_event = 2;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.tournament_event_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .TournamentTeam tournament_teams = 3;
    {PROTOBUF_FIELD_OFFSET(CDataGCCStrike15_v2_TournamentInfo, _impl_.tournament_teams_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentSection>()},
      {::_pbi::TcParser::GetTable<::TournamentEvent>()},
      {::_pbi::TcParser::GetTable<::TournamentTeam>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CDataGCCStrike15_v2_TournamentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CDataGCCStrike15_v2_TournamentInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sections_.Clear();
  _impl_.tournament_teams_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.tournament_event_ != nullptr);
    _impl_.tournament_event_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CDataGCCStrike15_v2_TournamentInfo& this_ = static_cast<const CDataGCCStrike15_v2_TournamentInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CDataGCCStrike15_v2_TournamentInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CDataGCCStrike15_v2_TournamentInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CDataGCCStrike15_v2_TournamentInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CDataGCCStrike15_v2_TournamentSection sections = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_sections_size());
       i < n; i++) {
    const auto& repfield = this_._internal_sections().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .TournamentEvent tournament_event = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.tournament_event_, this_._impl_.tournament_event_->GetCachedSize(), target,
        stream);
  }

  // repeated .TournamentTeam tournament_teams = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_tournament_teams_size());
       i < n; i++) {
    const auto& repfield = this_._internal_tournament_teams().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDataGCCStrike15_v2_TournamentInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CDataGCCStrike15_v2_TournamentInfo::ByteSizeLong(const MessageLite& base) {
  const CDataGCCStrike15_v2_TournamentInfo& this_ = static_cast<const CDataGCCStrike15_v2_TournamentInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CDataGCCStrike15_v2_TournamentInfo::ByteSizeLong() const {
  const CDataGCCStrike15_v2_TournamentInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CDataGCCStrike15_v2_TournamentInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CDataGCCStrike15_v2_TournamentSection sections = 1;
    {
      total_size += 1UL * this_._internal_sections_size();
      for (const auto& msg : this_._internal_sections()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .TournamentTeam tournament_teams = 3;
    {
      total_size += 1UL * this_._internal_tournament_teams_size();
      for (const auto& msg : this_._internal_tournament_teams()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional .TournamentEvent tournament_event = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tournament_event_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CDataGCCStrike15_v2_TournamentInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDataGCCStrike15_v2_TournamentInfo*>(&to_msg);
  auto& from = static_cast<const CDataGCCStrike15_v2_TournamentInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CDataGCCStrike15_v2_TournamentInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sections()->MergeFrom(
      from._internal_sections());
  _this->_internal_mutable_tournament_teams()->MergeFrom(
      from._internal_tournament_teams());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.tournament_event_ != nullptr);
    if (_this->_impl_.tournament_event_ == nullptr) {
      _this->_impl_.tournament_event_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournament_event_);
    } else {
      _this->_impl_.tournament_event_->MergeFrom(*from._impl_.tournament_event_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDataGCCStrike15_v2_TournamentInfo::CopyFrom(const CDataGCCStrike15_v2_TournamentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDataGCCStrike15_v2_TournamentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CDataGCCStrike15_v2_TournamentInfo::InternalSwap(CDataGCCStrike15_v2_TournamentInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sections_.InternalSwap(&other->_impl_.sections_);
  _impl_.tournament_teams_.InternalSwap(&other->_impl_.tournament_teams_);
  swap(_impl_.tournament_event_, other->_impl_.tournament_event_);
}

::google::protobuf::Metadata CDataGCCStrike15_v2_TournamentInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchList::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchList::CMsgGCCStrike15_v2_MatchList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchList)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchList& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        matches_{visibility, arena, from.matches_},
        streams_{visibility, arena, from.streams_} {}

CMsgGCCStrike15_v2_MatchList::CMsgGCCStrike15_v2_MatchList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tournamentinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournamentinfo_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msgrequestid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, msgrequestid_),
           offsetof(Impl_, servertime_) -
               offsetof(Impl_, msgrequestid_) +
               sizeof(Impl_::servertime_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchList)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        matches_{visibility, arena},
        streams_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_MatchList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tournamentinfo_),
           0,
           offsetof(Impl_, servertime_) -
               offsetof(Impl_, tournamentinfo_) +
               sizeof(Impl_::servertime_));
}
CMsgGCCStrike15_v2_MatchList::~CMsgGCCStrike15_v2_MatchList() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchList)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchList::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchList& this_ = static_cast<CMsgGCCStrike15_v2_MatchList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tournamentinfo_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchList(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.matches_) +
          decltype(CMsgGCCStrike15_v2_MatchList::_impl_.matches_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.streams_) +
          decltype(CMsgGCCStrike15_v2_MatchList::_impl_.streams_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_MatchList), alignof(CMsgGCCStrike15_v2_MatchList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchList::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchList),
                                 alignof(CMsgGCCStrike15_v2_MatchList));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchList>(), &CMsgGCCStrike15_v2_MatchList::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchList::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchList_class_data_ =
            CMsgGCCStrike15_v2_MatchList::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchList_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2>
CMsgGCCStrike15_v2_MatchList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 msgrequestid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchList, _impl_.msgrequestid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.msgrequestid_)}},
    // optional uint32 accountid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchList, _impl_.accountid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.accountid_)}},
    // optional uint32 servertime = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchList, _impl_.servertime_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.servertime_)}},
    // repeated .CDataGCCStrike15_v2_MatchInfo matches = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.matches_)}},
    // repeated .TournamentTeam streams = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.streams_)}},
    // optional .CDataGCCStrike15_v2_TournamentInfo tournamentinfo = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 2, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.tournamentinfo_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 msgrequestid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.msgrequestid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 accountid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.accountid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 servertime = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.servertime_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CDataGCCStrike15_v2_MatchInfo matches = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.matches_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .TournamentTeam streams = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.streams_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CDataGCCStrike15_v2_TournamentInfo tournamentinfo = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.tournamentinfo_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_MatchInfo>()},
      {::_pbi::TcParser::GetTable<::TournamentTeam>()},
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_TournamentInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matches_.Clear();
  _impl_.streams_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.tournamentinfo_ != nullptr);
    _impl_.tournamentinfo_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.msgrequestid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.servertime_) -
        reinterpret_cast<char*>(&_impl_.msgrequestid_)) + sizeof(_impl_.servertime_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchList& this_ = static_cast<const CMsgGCCStrike15_v2_MatchList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 msgrequestid = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_msgrequestid(), target);
  }

  // optional uint32 accountid = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_accountid(), target);
  }

  // optional uint32 servertime = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_servertime(), target);
  }

  // repeated .CDataGCCStrike15_v2_MatchInfo matches = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_matches_size());
       i < n; i++) {
    const auto& repfield = this_._internal_matches().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .TournamentTeam streams = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_streams_size());
       i < n; i++) {
    const auto& repfield = this_._internal_streams().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .CDataGCCStrike15_v2_TournamentInfo tournamentinfo = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.tournamentinfo_, this_._impl_.tournamentinfo_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchList::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchList& this_ = static_cast<const CMsgGCCStrike15_v2_MatchList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchList::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CDataGCCStrike15_v2_MatchInfo matches = 4;
    {
      total_size += 1UL * this_._internal_matches_size();
      for (const auto& msg : this_._internal_matches()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .TournamentTeam streams = 5;
    {
      total_size += 1UL * this_._internal_streams_size();
      for (const auto& msg : this_._internal_streams()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .CDataGCCStrike15_v2_TournamentInfo tournamentinfo = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tournamentinfo_);
    }
    // optional uint32 msgrequestid = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_msgrequestid());
    }
    // optional uint32 accountid = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 servertime = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_servertime());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchList*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchList&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_matches()->MergeFrom(
      from._internal_matches());
  _this->_internal_mutable_streams()->MergeFrom(
      from._internal_streams());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.tournamentinfo_ != nullptr);
      if (_this->_impl_.tournamentinfo_ == nullptr) {
        _this->_impl_.tournamentinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tournamentinfo_);
      } else {
        _this->_impl_.tournamentinfo_->MergeFrom(*from._impl_.tournamentinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.msgrequestid_ = from._impl_.msgrequestid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.servertime_ = from._impl_.servertime_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchList::CopyFrom(const CMsgGCCStrike15_v2_MatchList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchList::InternalSwap(CMsgGCCStrike15_v2_MatchList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.matches_.InternalSwap(&other->_impl_.matches_);
  _impl_.streams_.InternalSwap(&other->_impl_.streams_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.servertime_)
      + sizeof(CMsgGCCStrike15_v2_MatchList::_impl_.servertime_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchList, _impl_.tournamentinfo_)>(
          reinterpret_cast<char*>(&_impl_.tournamentinfo_),
          reinterpret_cast<char*>(&other->_impl_.tournamentinfo_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        matches_{visibility, arena, from.matches_} {}

CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, eventid_),
           offsetof(Impl_, accountid_) -
               offsetof(Impl_, eventid_) +
               sizeof(Impl_::accountid_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        matches_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventid_),
           0,
           offsetof(Impl_, accountid_) -
               offsetof(Impl_, eventid_) +
               sizeof(Impl_::accountid_));
}
CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::~CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& this_ = static_cast<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt(arena);
}
constexpr auto CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.matches_) +
          decltype(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::_impl_.matches_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt), alignof(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt),
                                 alignof(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt));
  }
}
constexpr auto CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt>(), &CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::ByteSizeLong,
              &CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_ =
            CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_.tc_table);
  return CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 eventid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.eventid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.eventid_)}},
    // repeated .CDataGCCStrike15_v2_MatchInfo matches = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.matches_)}},
    // optional uint32 accountid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.accountid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eventid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.eventid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .CDataGCCStrike15_v2_MatchInfo matches = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.matches_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 accountid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.accountid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CDataGCCStrike15_v2_MatchInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matches_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.eventid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.accountid_) -
        reinterpret_cast<char*>(&_impl_.eventid_)) + sizeof(_impl_.accountid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 eventid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_eventid(), target);
  }

  // repeated .CDataGCCStrike15_v2_MatchInfo matches = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_matches_size());
       i < n; i++) {
    const auto& repfield = this_._internal_matches().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint32 accountid = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_accountid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& this_ = static_cast<const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CDataGCCStrike15_v2_MatchInfo matches = 2;
    {
      total_size += 1UL * this_._internal_matches_size();
      for (const auto& msg : this_._internal_matches()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional int32 eventid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_eventid());
    }
    // optional uint32 accountid = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_matches()->MergeFrom(
      from._internal_matches());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.eventid_ = from._impl_.eventid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::CopyFrom(const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::InternalSwap(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.matches_.InternalSwap(&other->_impl_.matches_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.accountid_)
      + sizeof(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::_impl_.accountid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt, _impl_.eventid_)>(
          reinterpret_cast<char*>(&_impl_.eventid_),
          reinterpret_cast<char*>(&other->_impl_.eventid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
}
CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sectionid_),
           0,
           offsetof(Impl_, itemid_) -
               offsetof(Impl_, sectionid_) +
               sizeof(Impl_::itemid_));
}
CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::~CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick& this_ = static_cast<CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick(arena);
}
constexpr auto CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick),
                                            alignof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick));
}
constexpr auto CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick>(), &CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::ByteSizeLong,
              &CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_ =
            CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 sectionid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.sectionid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.sectionid_)}},
    // optional int32 groupid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.groupid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.groupid_)}},
    // optional int32 index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.index_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.index_)}},
    // optional int32 teamid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.teamid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.teamid_)}},
    // optional uint64 itemid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.itemid_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.itemid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 sectionid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.sectionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 groupid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.groupid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 index = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 teamid = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.teamid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 itemid = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.itemid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    ::memset(&_impl_.sectionid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.itemid_) -
        reinterpret_cast<char*>(&_impl_.sectionid_)) + sizeof(_impl_.itemid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick& this_ = static_cast<const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 sectionid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_sectionid(), target);
  }

  // optional int32 groupid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_groupid(), target);
  }

  // optional int32 index = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_index(), target);
  }

  // optional int32 teamid = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_teamid(), target);
  }

  // optional uint64 itemid = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this_._internal_itemid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick& this_ = static_cast<const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional int32 sectionid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_sectionid());
    }
    // optional int32 groupid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_groupid());
    }
    // optional int32 index = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_index());
    }
    // optional int32 teamid = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_teamid());
    }
    // optional uint64 itemid = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_itemid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.sectionid_ = from._impl_.sectionid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.groupid_ = from._impl_.groupid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.teamid_ = from._impl_.teamid_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.itemid_ = from._impl_.itemid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::CopyFrom(const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::InternalSwap(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.itemid_)
      + sizeof(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::_impl_.itemid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick, _impl_.sectionid_)>(
          reinterpret_cast<char*>(&_impl_.sectionid_),
          reinterpret_cast<char*>(&other->_impl_.sectionid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Predictions::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Predictions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Predictions::CMsgGCCStrike15_v2_Predictions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Predictions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Predictions)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Predictions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Predictions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        group_match_team_picks_{visibility, arena, from.group_match_team_picks_} {}

CMsgGCCStrike15_v2_Predictions::CMsgGCCStrike15_v2_Predictions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Predictions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Predictions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Predictions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.event_id_ = from._impl_.event_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Predictions)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Predictions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        group_match_team_picks_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_Predictions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_id_ = {};
}
CMsgGCCStrike15_v2_Predictions::~CMsgGCCStrike15_v2_Predictions() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Predictions)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Predictions::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Predictions& this_ = static_cast<CMsgGCCStrike15_v2_Predictions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Predictions(arena);
}
constexpr auto CMsgGCCStrike15_v2_Predictions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_.group_match_team_picks_) +
          decltype(CMsgGCCStrike15_v2_Predictions::_impl_.group_match_team_picks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_Predictions), alignof(CMsgGCCStrike15_v2_Predictions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_Predictions::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_Predictions),
                                 alignof(CMsgGCCStrike15_v2_Predictions));
  }
}
constexpr auto CMsgGCCStrike15_v2_Predictions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Predictions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Predictions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Predictions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Predictions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Predictions>(), &CMsgGCCStrike15_v2_Predictions::ByteSizeLong,
              &CMsgGCCStrike15_v2_Predictions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Predictions::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Predictions_class_data_ =
            CMsgGCCStrike15_v2_Predictions::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Predictions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Predictions_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Predictions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgGCCStrike15_v2_Predictions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_Predictions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Predictions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick group_match_team_picks = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_.group_match_team_picks_)}},
    // optional uint32 event_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Predictions, _impl_.event_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_.event_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 event_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_.event_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick group_match_team_picks = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Predictions, _impl_.group_match_team_picks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Predictions::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Predictions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_match_team_picks_.Clear();
  _impl_.event_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Predictions& this_ = static_cast<const CMsgGCCStrike15_v2_Predictions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Predictions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Predictions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Predictions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 event_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_event_id(), target);
  }

  // repeated .CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick group_match_team_picks = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_group_match_team_picks_size());
       i < n; i++) {
    const auto& repfield = this_._internal_group_match_team_picks().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Predictions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Predictions::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Predictions& this_ = static_cast<const CMsgGCCStrike15_v2_Predictions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Predictions::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Predictions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Predictions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick group_match_team_picks = 2;
    {
      total_size += 1UL * this_._internal_group_match_team_picks_size();
      for (const auto& msg : this_._internal_group_match_team_picks()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional uint32 event_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_event_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Predictions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Predictions*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Predictions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Predictions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_group_match_team_picks()->MergeFrom(
      from._internal_group_match_team_picks());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.event_id_ = from._impl_.event_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Predictions::CopyFrom(const CMsgGCCStrike15_v2_Predictions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Predictions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Predictions::InternalSwap(CMsgGCCStrike15_v2_Predictions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.group_match_team_picks_.InternalSwap(&other->_impl_.group_match_team_picks_);
  swap(_impl_.event_id_, other->_impl_.event_id_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Predictions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Fantasy_FantasySlot::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Fantasy_FantasySlot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Fantasy_FantasySlot::CMsgGCCStrike15_v2_Fantasy_FantasySlot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
}
CMsgGCCStrike15_v2_Fantasy_FantasySlot::CMsgGCCStrike15_v2_Fantasy_FantasySlot(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Fantasy_FantasySlot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Fantasy_FantasySlot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Fantasy_FantasySlot::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, itemid_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::itemid_));
}
CMsgGCCStrike15_v2_Fantasy_FantasySlot::~CMsgGCCStrike15_v2_Fantasy_FantasySlot() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Fantasy_FantasySlot::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Fantasy_FantasySlot& this_ = static_cast<CMsgGCCStrike15_v2_Fantasy_FantasySlot&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasySlot::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Fantasy_FantasySlot(arena);
}
constexpr auto CMsgGCCStrike15_v2_Fantasy_FantasySlot::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Fantasy_FantasySlot),
                                            alignof(CMsgGCCStrike15_v2_Fantasy_FantasySlot));
}
constexpr auto CMsgGCCStrike15_v2_Fantasy_FantasySlot::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Fantasy_FantasySlot_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Fantasy_FantasySlot::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Fantasy_FantasySlot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Fantasy_FantasySlot::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Fantasy_FantasySlot>(), &CMsgGCCStrike15_v2_Fantasy_FantasySlot::ByteSizeLong,
              &CMsgGCCStrike15_v2_Fantasy_FantasySlot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Fantasy_FantasySlot::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_ =
            CMsgGCCStrike15_v2_Fantasy_FantasySlot::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasySlot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGCCStrike15_v2_Fantasy_FantasySlot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Fantasy_FantasySlot_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Fantasy_FantasySlot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.type_)}},
    // optional int32 pick = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.pick_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.pick_)}},
    // optional uint64 itemid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.itemid_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.itemid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 pick = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.pick_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 itemid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.itemid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Fantasy_FantasySlot::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.itemid_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.itemid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasySlot::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Fantasy_FantasySlot& this_ = static_cast<const CMsgGCCStrike15_v2_Fantasy_FantasySlot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasySlot::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Fantasy_FantasySlot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 type = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_type(), target);
  }

  // optional int32 pick = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_pick(), target);
  }

  // optional uint64 itemid = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_itemid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Fantasy_FantasySlot::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Fantasy_FantasySlot& this_ = static_cast<const CMsgGCCStrike15_v2_Fantasy_FantasySlot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Fantasy_FantasySlot::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Fantasy_FantasySlot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional int32 type = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_type());
    }
    // optional int32 pick = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_pick());
    }
    // optional uint64 itemid = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_itemid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Fantasy_FantasySlot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Fantasy_FantasySlot*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Fantasy_FantasySlot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.pick_ = from._impl_.pick_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.itemid_ = from._impl_.itemid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Fantasy_FantasySlot::CopyFrom(const CMsgGCCStrike15_v2_Fantasy_FantasySlot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Fantasy.FantasySlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Fantasy_FantasySlot::InternalSwap(CMsgGCCStrike15_v2_Fantasy_FantasySlot* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.itemid_)
      + sizeof(CMsgGCCStrike15_v2_Fantasy_FantasySlot::_impl_.itemid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasySlot, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Fantasy_FantasySlot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Fantasy_FantasyTeam::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Fantasy_FantasyTeam>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Fantasy_FantasyTeam::CMsgGCCStrike15_v2_Fantasy_FantasyTeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Fantasy_FantasyTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Fantasy_FantasyTeam& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        slots_{visibility, arena, from.slots_} {}

CMsgGCCStrike15_v2_Fantasy_FantasyTeam::CMsgGCCStrike15_v2_Fantasy_FantasyTeam(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Fantasy_FantasyTeam& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Fantasy_FantasyTeam* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.sectionid_ = from._impl_.sectionid_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Fantasy_FantasyTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        slots_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_Fantasy_FantasyTeam::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sectionid_ = {};
}
CMsgGCCStrike15_v2_Fantasy_FantasyTeam::~CMsgGCCStrike15_v2_Fantasy_FantasyTeam() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Fantasy_FantasyTeam::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Fantasy_FantasyTeam& this_ = static_cast<CMsgGCCStrike15_v2_Fantasy_FantasyTeam&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasyTeam::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Fantasy_FantasyTeam(arena);
}
constexpr auto CMsgGCCStrike15_v2_Fantasy_FantasyTeam::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.slots_) +
          decltype(CMsgGCCStrike15_v2_Fantasy_FantasyTeam::_impl_.slots_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_Fantasy_FantasyTeam), alignof(CMsgGCCStrike15_v2_Fantasy_FantasyTeam), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_Fantasy_FantasyTeam::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_Fantasy_FantasyTeam),
                                 alignof(CMsgGCCStrike15_v2_Fantasy_FantasyTeam));
  }
}
constexpr auto CMsgGCCStrike15_v2_Fantasy_FantasyTeam::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Fantasy_FantasyTeam_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Fantasy_FantasyTeam::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Fantasy_FantasyTeam>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Fantasy_FantasyTeam::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Fantasy_FantasyTeam>(), &CMsgGCCStrike15_v2_Fantasy_FantasyTeam::ByteSizeLong,
              &CMsgGCCStrike15_v2_Fantasy_FantasyTeam::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Fantasy_FantasyTeam::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_ =
            CMsgGCCStrike15_v2_Fantasy_FantasyTeam::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasyTeam::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgGCCStrike15_v2_Fantasy_FantasyTeam::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_Fantasy_FantasyTeam_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Fantasy_FantasyTeam>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_Fantasy.FantasySlot slots = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.slots_)}},
    // optional int32 sectionid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.sectionid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.sectionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 sectionid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.sectionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .CMsgGCCStrike15_v2_Fantasy.FantasySlot slots = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy_FantasyTeam, _impl_.slots_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Fantasy_FantasySlot>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Fantasy_FantasyTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slots_.Clear();
  _impl_.sectionid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasyTeam::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Fantasy_FantasyTeam& this_ = static_cast<const CMsgGCCStrike15_v2_Fantasy_FantasyTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy_FantasyTeam::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Fantasy_FantasyTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 sectionid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_sectionid(), target);
  }

  // repeated .CMsgGCCStrike15_v2_Fantasy.FantasySlot slots = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_slots_size());
       i < n; i++) {
    const auto& repfield = this_._internal_slots().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Fantasy_FantasyTeam::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Fantasy_FantasyTeam& this_ = static_cast<const CMsgGCCStrike15_v2_Fantasy_FantasyTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Fantasy_FantasyTeam::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Fantasy_FantasyTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_Fantasy.FantasySlot slots = 2;
    {
      total_size += 1UL * this_._internal_slots_size();
      for (const auto& msg : this_._internal_slots()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional int32 sectionid = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_sectionid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Fantasy_FantasyTeam::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Fantasy_FantasyTeam*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Fantasy_FantasyTeam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_slots()->MergeFrom(
      from._internal_slots());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.sectionid_ = from._impl_.sectionid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Fantasy_FantasyTeam::CopyFrom(const CMsgGCCStrike15_v2_Fantasy_FantasyTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Fantasy.FantasyTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Fantasy_FantasyTeam::InternalSwap(CMsgGCCStrike15_v2_Fantasy_FantasyTeam* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.slots_.InternalSwap(&other->_impl_.slots_);
  swap(_impl_.sectionid_, other->_impl_.sectionid_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Fantasy_FantasyTeam::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Fantasy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Fantasy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Fantasy::CMsgGCCStrike15_v2_Fantasy(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Fantasy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Fantasy)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Fantasy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Fantasy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        teams_{visibility, arena, from.teams_} {}

CMsgGCCStrike15_v2_Fantasy::CMsgGCCStrike15_v2_Fantasy(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Fantasy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Fantasy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Fantasy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.event_id_ = from._impl_.event_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Fantasy)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Fantasy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        teams_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_Fantasy::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_id_ = {};
}
CMsgGCCStrike15_v2_Fantasy::~CMsgGCCStrike15_v2_Fantasy() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Fantasy)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Fantasy::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Fantasy& this_ = static_cast<CMsgGCCStrike15_v2_Fantasy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Fantasy(arena);
}
constexpr auto CMsgGCCStrike15_v2_Fantasy::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_.teams_) +
          decltype(CMsgGCCStrike15_v2_Fantasy::_impl_.teams_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_Fantasy), alignof(CMsgGCCStrike15_v2_Fantasy), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_Fantasy::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_Fantasy),
                                 alignof(CMsgGCCStrike15_v2_Fantasy));
  }
}
constexpr auto CMsgGCCStrike15_v2_Fantasy::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Fantasy_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Fantasy::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Fantasy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Fantasy::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Fantasy>(), &CMsgGCCStrike15_v2_Fantasy::ByteSizeLong,
              &CMsgGCCStrike15_v2_Fantasy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Fantasy::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Fantasy_class_data_ =
            CMsgGCCStrike15_v2_Fantasy::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Fantasy_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Fantasy_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Fantasy_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgGCCStrike15_v2_Fantasy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_Fantasy_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Fantasy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_Fantasy.FantasyTeam teams = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_.teams_)}},
    // optional uint32 event_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Fantasy, _impl_.event_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_.event_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 event_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_.event_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgGCCStrike15_v2_Fantasy.FantasyTeam teams = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Fantasy, _impl_.teams_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Fantasy_FantasyTeam>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Fantasy::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Fantasy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.teams_.Clear();
  _impl_.event_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Fantasy& this_ = static_cast<const CMsgGCCStrike15_v2_Fantasy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Fantasy::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Fantasy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Fantasy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 event_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_event_id(), target);
  }

  // repeated .CMsgGCCStrike15_v2_Fantasy.FantasyTeam teams = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_teams_size());
       i < n; i++) {
    const auto& repfield = this_._internal_teams().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Fantasy)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Fantasy::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Fantasy& this_ = static_cast<const CMsgGCCStrike15_v2_Fantasy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Fantasy::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Fantasy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Fantasy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_Fantasy.FantasyTeam teams = 2;
    {
      total_size += 1UL * this_._internal_teams_size();
      for (const auto& msg : this_._internal_teams()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional uint32 event_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_event_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Fantasy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Fantasy*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Fantasy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Fantasy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_teams()->MergeFrom(
      from._internal_teams());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.event_id_ = from._impl_.event_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Fantasy::CopyFrom(const CMsgGCCStrike15_v2_Fantasy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Fantasy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Fantasy::InternalSwap(CMsgGCCStrike15_v2_Fantasy* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.teams_.InternalSwap(&other->_impl_.teams_);
  swap(_impl_.event_id_, other->_impl_.event_id_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Fantasy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CAttribute_String::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CAttribute_String>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CAttribute_String, _impl_._has_bits_);
};

CAttribute_String::CAttribute_String(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CAttribute_String_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CAttribute_String)
}
PROTOBUF_NDEBUG_INLINE CAttribute_String::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CAttribute_String& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_(arena, from.value_) {}

CAttribute_String::CAttribute_String(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CAttribute_String& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CAttribute_String_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CAttribute_String* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CAttribute_String)
}
PROTOBUF_NDEBUG_INLINE CAttribute_String::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        value_(arena) {}

inline void CAttribute_String::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CAttribute_String::~CAttribute_String() {
  // @@protoc_insertion_point(destructor:CAttribute_String)
  SharedDtor(*this);
}
inline void CAttribute_String::SharedDtor(MessageLite& self) {
  CAttribute_String& this_ = static_cast<CAttribute_String&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CAttribute_String::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CAttribute_String(arena);
}
constexpr auto CAttribute_String::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CAttribute_String),
                                            alignof(CAttribute_String));
}
constexpr auto CAttribute_String::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CAttribute_String_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CAttribute_String::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CAttribute_String>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CAttribute_String::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CAttribute_String>(), &CAttribute_String::ByteSizeLong,
              &CAttribute_String::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CAttribute_String, _impl_._cached_size_),
          false,
      },
      &CAttribute_String::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CAttribute_String_class_data_ =
            CAttribute_String::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CAttribute_String::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CAttribute_String_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CAttribute_String_class_data_.tc_table);
  return CAttribute_String_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 31, 2>
CAttribute_String::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CAttribute_String, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CAttribute_String_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CAttribute_String>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string value = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CAttribute_String, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string value = 1;
    {PROTOBUF_FIELD_OFFSET(CAttribute_String, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\5\0\0\0\0\0\0"
    "CAttribute_String"
    "value"
  }},
};
PROTOBUF_NOINLINE void CAttribute_String::Clear() {
// @@protoc_insertion_point(message_clear_start:CAttribute_String)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.value_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CAttribute_String::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CAttribute_String& this_ = static_cast<const CAttribute_String&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CAttribute_String::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CAttribute_String& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CAttribute_String)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string value = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CAttribute_String.value");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CAttribute_String)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CAttribute_String::ByteSizeLong(const MessageLite& base) {
  const CAttribute_String& this_ = static_cast<const CAttribute_String&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CAttribute_String::ByteSizeLong() const {
  const CAttribute_String& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CAttribute_String)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional string value = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_value());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CAttribute_String::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CAttribute_String*>(&to_msg);
  auto& from = static_cast<const CAttribute_String&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CAttribute_String)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CAttribute_String::CopyFrom(const CAttribute_String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CAttribute_String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CAttribute_String::InternalSwap(CAttribute_String* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata CAttribute_String::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgLegacySource1ClientWelcome_Location::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgLegacySource1ClientWelcome_Location>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_._has_bits_);
};

CMsgLegacySource1ClientWelcome_Location::CMsgLegacySource1ClientWelcome_Location(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgLegacySource1ClientWelcome_Location_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgLegacySource1ClientWelcome.Location)
}
PROTOBUF_NDEBUG_INLINE CMsgLegacySource1ClientWelcome_Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgLegacySource1ClientWelcome_Location& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        country_(arena, from.country_) {}

CMsgLegacySource1ClientWelcome_Location::CMsgLegacySource1ClientWelcome_Location(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgLegacySource1ClientWelcome_Location& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgLegacySource1ClientWelcome_Location_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgLegacySource1ClientWelcome_Location* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, latitude_),
           offsetof(Impl_, longitude_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::longitude_));

  // @@protoc_insertion_point(copy_constructor:CMsgLegacySource1ClientWelcome.Location)
}
PROTOBUF_NDEBUG_INLINE CMsgLegacySource1ClientWelcome_Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        country_(arena) {}

inline void CMsgLegacySource1ClientWelcome_Location::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           0,
           offsetof(Impl_, longitude_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::longitude_));
}
CMsgLegacySource1ClientWelcome_Location::~CMsgLegacySource1ClientWelcome_Location() {
  // @@protoc_insertion_point(destructor:CMsgLegacySource1ClientWelcome.Location)
  SharedDtor(*this);
}
inline void CMsgLegacySource1ClientWelcome_Location::SharedDtor(MessageLite& self) {
  CMsgLegacySource1ClientWelcome_Location& this_ = static_cast<CMsgLegacySource1ClientWelcome_Location&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.country_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome_Location::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgLegacySource1ClientWelcome_Location(arena);
}
constexpr auto CMsgLegacySource1ClientWelcome_Location::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgLegacySource1ClientWelcome_Location),
                                            alignof(CMsgLegacySource1ClientWelcome_Location));
}
constexpr auto CMsgLegacySource1ClientWelcome_Location::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgLegacySource1ClientWelcome_Location_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgLegacySource1ClientWelcome_Location::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgLegacySource1ClientWelcome_Location>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgLegacySource1ClientWelcome_Location::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgLegacySource1ClientWelcome_Location>(), &CMsgLegacySource1ClientWelcome_Location::ByteSizeLong,
              &CMsgLegacySource1ClientWelcome_Location::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_._cached_size_),
          false,
      },
      &CMsgLegacySource1ClientWelcome_Location::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgLegacySource1ClientWelcome_Location_class_data_ =
            CMsgLegacySource1ClientWelcome_Location::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome_Location::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgLegacySource1ClientWelcome_Location_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgLegacySource1ClientWelcome_Location_class_data_.tc_table);
  return CMsgLegacySource1ClientWelcome_Location_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 55, 2>
CMsgLegacySource1ClientWelcome_Location::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgLegacySource1ClientWelcome_Location_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgLegacySource1ClientWelcome_Location>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional float latitude = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.latitude_)}},
    // optional float longitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.longitude_)}},
    // optional string country = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.country_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float latitude = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.latitude_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float longitude = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.longitude_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string country = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.country_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\0\7\0\0\0\0"
    "CMsgLegacySource1ClientWelcome.Location"
    "country"
  }},
};
PROTOBUF_NOINLINE void CMsgLegacySource1ClientWelcome_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLegacySource1ClientWelcome.Location)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.country_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.latitude_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.longitude_) -
        reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.longitude_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome_Location::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgLegacySource1ClientWelcome_Location& this_ = static_cast<const CMsgLegacySource1ClientWelcome_Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome_Location::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgLegacySource1ClientWelcome_Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLegacySource1ClientWelcome.Location)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional float latitude = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this_._internal_latitude(), target);
  }

  // optional float longitude = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this_._internal_longitude(), target);
  }

  // optional string country = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_country();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgLegacySource1ClientWelcome.Location.country");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLegacySource1ClientWelcome.Location)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgLegacySource1ClientWelcome_Location::ByteSizeLong(const MessageLite& base) {
  const CMsgLegacySource1ClientWelcome_Location& this_ = static_cast<const CMsgLegacySource1ClientWelcome_Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgLegacySource1ClientWelcome_Location::ByteSizeLong() const {
  const CMsgLegacySource1ClientWelcome_Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgLegacySource1ClientWelcome.Location)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000006u & cached_has_bits) * 5;
   {
    // optional string country = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_country());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgLegacySource1ClientWelcome_Location::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgLegacySource1ClientWelcome_Location*>(&to_msg);
  auto& from = static_cast<const CMsgLegacySource1ClientWelcome_Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgLegacySource1ClientWelcome.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_country(from._internal_country());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.latitude_ = from._impl_.latitude_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.longitude_ = from._impl_.longitude_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgLegacySource1ClientWelcome_Location::CopyFrom(const CMsgLegacySource1ClientWelcome_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLegacySource1ClientWelcome.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgLegacySource1ClientWelcome_Location::InternalSwap(CMsgLegacySource1ClientWelcome_Location* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.longitude_)
      + sizeof(CMsgLegacySource1ClientWelcome_Location::_impl_.longitude_)
      - PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome_Location, _impl_.latitude_)>(
          reinterpret_cast<char*>(&_impl_.latitude_),
          reinterpret_cast<char*>(&other->_impl_.latitude_));
}

::google::protobuf::Metadata CMsgLegacySource1ClientWelcome_Location::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgLegacySource1ClientWelcome::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgLegacySource1ClientWelcome>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_._has_bits_);
};

void CMsgLegacySource1ClientWelcome::clear_outofdate_subscribed_caches() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outofdate_subscribed_caches_.Clear();
}
void CMsgLegacySource1ClientWelcome::clear_uptodate_subscribed_caches() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uptodate_subscribed_caches_.Clear();
}
CMsgLegacySource1ClientWelcome::CMsgLegacySource1ClientWelcome(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgLegacySource1ClientWelcome_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgLegacySource1ClientWelcome)
}
PROTOBUF_NDEBUG_INLINE CMsgLegacySource1ClientWelcome::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgLegacySource1ClientWelcome& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        outofdate_subscribed_caches_{visibility, arena, from.outofdate_subscribed_caches_},
        uptodate_subscribed_caches_{visibility, arena, from.uptodate_subscribed_caches_},
        game_data_(arena, from.game_data_),
        game_data2_(arena, from.game_data2_),
        balance_url_(arena, from.balance_url_),
        txn_country_code_(arena, from.txn_country_code_) {}

CMsgLegacySource1ClientWelcome::CMsgLegacySource1ClientWelcome(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgLegacySource1ClientWelcome& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgLegacySource1ClientWelcome_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgLegacySource1ClientWelcome* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.location_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, balance_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::balance_));

  // @@protoc_insertion_point(copy_constructor:CMsgLegacySource1ClientWelcome)
}
PROTOBUF_NDEBUG_INLINE CMsgLegacySource1ClientWelcome::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        outofdate_subscribed_caches_{visibility, arena},
        uptodate_subscribed_caches_{visibility, arena},
        game_data_(arena),
        game_data2_(arena),
        balance_url_(arena),
        txn_country_code_(arena) {}

inline void CMsgLegacySource1ClientWelcome::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, location_),
           0,
           offsetof(Impl_, balance_) -
               offsetof(Impl_, location_) +
               sizeof(Impl_::balance_));
}
CMsgLegacySource1ClientWelcome::~CMsgLegacySource1ClientWelcome() {
  // @@protoc_insertion_point(destructor:CMsgLegacySource1ClientWelcome)
  SharedDtor(*this);
}
inline void CMsgLegacySource1ClientWelcome::SharedDtor(MessageLite& self) {
  CMsgLegacySource1ClientWelcome& this_ = static_cast<CMsgLegacySource1ClientWelcome&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.game_data_.Destroy();
  this_._impl_.game_data2_.Destroy();
  this_._impl_.balance_url_.Destroy();
  this_._impl_.txn_country_code_.Destroy();
  delete this_._impl_.location_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgLegacySource1ClientWelcome(arena);
}
constexpr auto CMsgLegacySource1ClientWelcome::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.outofdate_subscribed_caches_) +
          decltype(CMsgLegacySource1ClientWelcome::_impl_.outofdate_subscribed_caches_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.uptodate_subscribed_caches_) +
          decltype(CMsgLegacySource1ClientWelcome::_impl_.uptodate_subscribed_caches_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgLegacySource1ClientWelcome), alignof(CMsgLegacySource1ClientWelcome), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgLegacySource1ClientWelcome::PlacementNew_,
                                 sizeof(CMsgLegacySource1ClientWelcome),
                                 alignof(CMsgLegacySource1ClientWelcome));
  }
}
constexpr auto CMsgLegacySource1ClientWelcome::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgLegacySource1ClientWelcome_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgLegacySource1ClientWelcome::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgLegacySource1ClientWelcome>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgLegacySource1ClientWelcome::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgLegacySource1ClientWelcome>(), &CMsgLegacySource1ClientWelcome::ByteSizeLong,
              &CMsgLegacySource1ClientWelcome::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_._cached_size_),
          false,
      },
      &CMsgLegacySource1ClientWelcome::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgLegacySource1ClientWelcome_class_data_ =
            CMsgLegacySource1ClientWelcome::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgLegacySource1ClientWelcome_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgLegacySource1ClientWelcome_class_data_.tc_table);
  return CMsgLegacySource1ClientWelcome_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 3, 74, 2>
CMsgLegacySource1ClientWelcome::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgLegacySource1ClientWelcome_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgLegacySource1ClientWelcome>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgLegacySource1ClientWelcome, _impl_.version_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.version_)}},
    // optional bytes game_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.game_data_)}},
    // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.outofdate_subscribed_caches_)}},
    // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.uptodate_subscribed_caches_)}},
    // optional .CMsgLegacySource1ClientWelcome.Location location = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.location_)}},
    // optional bytes game_data2 = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.game_data2_)}},
    // optional uint32 rtime32_gc_welcome_timestamp = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgLegacySource1ClientWelcome, _impl_.rtime32_gc_welcome_timestamp_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.rtime32_gc_welcome_timestamp_)}},
    // optional uint32 currency = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgLegacySource1ClientWelcome, _impl_.currency_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.currency_)}},
    // optional uint32 balance = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgLegacySource1ClientWelcome, _impl_.balance_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.balance_)}},
    // optional string balance_url = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.balance_url_)}},
    // optional string txn_country_code = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.txn_country_code_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.version_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes game_data = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.game_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.outofdate_subscribed_caches_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.uptodate_subscribed_caches_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgLegacySource1ClientWelcome.Location location = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.location_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes game_data2 = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.game_data2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 rtime32_gc_welcome_timestamp = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.rtime32_gc_welcome_timestamp_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 currency = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.currency_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 balance = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.balance_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string balance_url = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.balance_url_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string txn_country_code = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.txn_country_code_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgSOCacheSubscribed>()},
      {::_pbi::TcParser::GetTable<::CMsgSOCacheSubscriptionCheck>()},
      {::_pbi::TcParser::GetTable<::CMsgLegacySource1ClientWelcome_Location>()},
  }},
  {{
    "\36\0\0\0\0\0\0\0\0\0\13\20\0\0\0\0"
    "CMsgLegacySource1ClientWelcome"
    "balance_url"
    "txn_country_code"
  }},
};
PROTOBUF_NOINLINE void CMsgLegacySource1ClientWelcome::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLegacySource1ClientWelcome)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.outofdate_subscribed_caches_.Clear();
  _impl_.uptodate_subscribed_caches_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.game_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.game_data2_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.balance_url_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.txn_country_code_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.currency_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.currency_));
  }
  _impl_.balance_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgLegacySource1ClientWelcome& this_ = static_cast<const CMsgLegacySource1ClientWelcome&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgLegacySource1ClientWelcome::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgLegacySource1ClientWelcome& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLegacySource1ClientWelcome)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 version = 1;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_version(), target);
  }

  // optional bytes game_data = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_game_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_outofdate_subscribed_caches_size());
       i < n; i++) {
    const auto& repfield = this_._internal_outofdate_subscribed_caches().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_uptodate_subscribed_caches_size());
       i < n; i++) {
    const auto& repfield = this_._internal_uptodate_subscribed_caches().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .CMsgLegacySource1ClientWelcome.Location location = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.location_, this_._impl_.location_->GetCachedSize(), target,
        stream);
  }

  // optional bytes game_data2 = 6;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_game_data2();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // optional uint32 rtime32_gc_welcome_timestamp = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_rtime32_gc_welcome_timestamp(), target);
  }

  // optional uint32 currency = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_currency(), target);
  }

  // optional uint32 balance = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_balance(), target);
  }

  // optional string balance_url = 10;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_balance_url();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgLegacySource1ClientWelcome.balance_url");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string txn_country_code = 11;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const std::string& _s = this_._internal_txn_country_code();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgLegacySource1ClientWelcome.txn_country_code");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLegacySource1ClientWelcome)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgLegacySource1ClientWelcome::ByteSizeLong(const MessageLite& base) {
  const CMsgLegacySource1ClientWelcome& this_ = static_cast<const CMsgLegacySource1ClientWelcome&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgLegacySource1ClientWelcome::ByteSizeLong() const {
  const CMsgLegacySource1ClientWelcome& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgLegacySource1ClientWelcome)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
    {
      total_size += 1UL * this_._internal_outofdate_subscribed_caches_size();
      for (const auto& msg : this_._internal_outofdate_subscribed_caches()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
    {
      total_size += 1UL * this_._internal_uptodate_subscribed_caches_size();
      for (const auto& msg : this_._internal_uptodate_subscribed_caches()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional bytes game_data = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_game_data());
    }
    // optional bytes game_data2 = 6;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_game_data2());
    }
    // optional string balance_url = 10;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_balance_url());
    }
    // optional string txn_country_code = 11;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_txn_country_code());
    }
    // optional .CMsgLegacySource1ClientWelcome.Location location = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.location_);
    }
    // optional uint32 version = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_version());
    }
    // optional uint32 rtime32_gc_welcome_timestamp = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rtime32_gc_welcome_timestamp());
    }
    // optional uint32 currency = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_currency());
    }
  }
   {
    // optional uint32 balance = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_balance());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgLegacySource1ClientWelcome::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgLegacySource1ClientWelcome*>(&to_msg);
  auto& from = static_cast<const CMsgLegacySource1ClientWelcome&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgLegacySource1ClientWelcome)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_outofdate_subscribed_caches()->MergeFrom(
      from._internal_outofdate_subscribed_caches());
  _this->_internal_mutable_uptodate_subscribed_caches()->MergeFrom(
      from._internal_uptodate_subscribed_caches());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_game_data(from._internal_game_data());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_game_data2(from._internal_game_data2());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_balance_url(from._internal_balance_url());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_txn_country_code(from._internal_txn_country_code());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.location_ != nullptr);
      if (_this->_impl_.location_ == nullptr) {
        _this->_impl_.location_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.location_);
      } else {
        _this->_impl_.location_->MergeFrom(*from._impl_.location_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.rtime32_gc_welcome_timestamp_ = from._impl_.rtime32_gc_welcome_timestamp_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.currency_ = from._impl_.currency_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.balance_ = from._impl_.balance_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgLegacySource1ClientWelcome::CopyFrom(const CMsgLegacySource1ClientWelcome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLegacySource1ClientWelcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgLegacySource1ClientWelcome::InternalSwap(CMsgLegacySource1ClientWelcome* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.outofdate_subscribed_caches_.InternalSwap(&other->_impl_.outofdate_subscribed_caches_);
  _impl_.uptodate_subscribed_caches_.InternalSwap(&other->_impl_.uptodate_subscribed_caches_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_data_, &other->_impl_.game_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_data2_, &other->_impl_.game_data2_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.balance_url_, &other->_impl_.balance_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.txn_country_code_, &other->_impl_.txn_country_code_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.balance_)
      + sizeof(CMsgLegacySource1ClientWelcome::_impl_.balance_)
      - PROTOBUF_FIELD_OFFSET(CMsgLegacySource1ClientWelcome, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf::Metadata CMsgLegacySource1ClientWelcome::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgCStrike15Welcome::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgCStrike15Welcome>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_._has_bits_);
};

CMsgCStrike15Welcome::CMsgCStrike15Welcome(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgCStrike15Welcome_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgCStrike15Welcome)
}
CMsgCStrike15Welcome::CMsgCStrike15Welcome(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgCStrike15Welcome& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgCStrike15Welcome_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgCStrike15Welcome::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgCStrike15Welcome::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, store_item_hash_),
           0,
           offsetof(Impl_, last_ip_address_) -
               offsetof(Impl_, store_item_hash_) +
               sizeof(Impl_::last_ip_address_));
}
CMsgCStrike15Welcome::~CMsgCStrike15Welcome() {
  // @@protoc_insertion_point(destructor:CMsgCStrike15Welcome)
  SharedDtor(*this);
}
inline void CMsgCStrike15Welcome::SharedDtor(MessageLite& self) {
  CMsgCStrike15Welcome& this_ = static_cast<CMsgCStrike15Welcome&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgCStrike15Welcome::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgCStrike15Welcome(arena);
}
constexpr auto CMsgCStrike15Welcome::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgCStrike15Welcome),
                                            alignof(CMsgCStrike15Welcome));
}
constexpr auto CMsgCStrike15Welcome::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgCStrike15Welcome_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgCStrike15Welcome::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgCStrike15Welcome>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgCStrike15Welcome::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgCStrike15Welcome>(), &CMsgCStrike15Welcome::ByteSizeLong,
              &CMsgCStrike15Welcome::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_._cached_size_),
          false,
      },
      &CMsgCStrike15Welcome::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgCStrike15Welcome_class_data_ =
            CMsgCStrike15Welcome::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgCStrike15Welcome::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgCStrike15Welcome_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgCStrike15Welcome_class_data_.tc_table);
  return CMsgCStrike15Welcome_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
CMsgCStrike15Welcome::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_._has_bits_),
    0, // no _extensions_
    19, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294567375,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgCStrike15Welcome_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgCStrike15Welcome>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 time_first_played = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgCStrike15Welcome, _impl_.time_first_played_), 2>(),
     {80, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.time_first_played_)}},
    // optional uint64 uniqueid = 19;
    {::_pbi::TcParser::FastV64S2,
     {408, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.uniqueid_)}},
    // optional uint32 last_time_played = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgCStrike15Welcome, _impl_.last_time_played_), 3>(),
     {96, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.last_time_played_)}},
    // optional uint32 store_item_hash = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgCStrike15Welcome, _impl_.store_item_hash_), 0>(),
     {40, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.store_item_hash_)}},
    // optional uint32 timeplayedconsecutively = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgCStrike15Welcome, _impl_.timeplayedconsecutively_), 1>(),
     {48, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.timeplayedconsecutively_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 store_item_hash = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.store_item_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 timeplayedconsecutively = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.timeplayedconsecutively_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 time_first_played = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.time_first_played_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 last_time_played = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.last_time_played_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 last_ip_address = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.last_ip_address_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 gscookieid = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.gscookieid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 uniqueid = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.uniqueid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgCStrike15Welcome::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCStrike15Welcome)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    ::memset(&_impl_.store_item_hash_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_ip_address_) -
        reinterpret_cast<char*>(&_impl_.store_item_hash_)) + sizeof(_impl_.last_ip_address_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgCStrike15Welcome::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgCStrike15Welcome& this_ = static_cast<const CMsgCStrike15Welcome&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgCStrike15Welcome::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgCStrike15Welcome& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCStrike15Welcome)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 store_item_hash = 5;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_store_item_hash(), target);
  }

  // optional uint32 timeplayedconsecutively = 6;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_timeplayedconsecutively(), target);
  }

  // optional uint32 time_first_played = 10;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_time_first_played(), target);
  }

  // optional uint32 last_time_played = 12;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_last_time_played(), target);
  }

  // optional uint32 last_ip_address = 13;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this_._internal_last_ip_address(), target);
  }

  // optional uint64 gscookieid = 18;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        18, this_._internal_gscookieid(), target);
  }

  // optional uint64 uniqueid = 19;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        19, this_._internal_uniqueid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCStrike15Welcome)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgCStrike15Welcome::ByteSizeLong(const MessageLite& base) {
  const CMsgCStrike15Welcome& this_ = static_cast<const CMsgCStrike15Welcome&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgCStrike15Welcome::ByteSizeLong() const {
  const CMsgCStrike15Welcome& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgCStrike15Welcome)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // optional uint32 store_item_hash = 5;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_store_item_hash());
    }
    // optional uint32 timeplayedconsecutively = 6;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_timeplayedconsecutively());
    }
    // optional uint32 time_first_played = 10;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_time_first_played());
    }
    // optional uint32 last_time_played = 12;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_last_time_played());
    }
    // optional uint64 gscookieid = 18;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this_._internal_gscookieid());
    }
    // optional uint64 uniqueid = 19;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this_._internal_uniqueid());
    }
    // optional uint32 last_ip_address = 13;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_last_ip_address());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgCStrike15Welcome::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgCStrike15Welcome*>(&to_msg);
  auto& from = static_cast<const CMsgCStrike15Welcome&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgCStrike15Welcome)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.store_item_hash_ = from._impl_.store_item_hash_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.timeplayedconsecutively_ = from._impl_.timeplayedconsecutively_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.time_first_played_ = from._impl_.time_first_played_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.last_time_played_ = from._impl_.last_time_played_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.gscookieid_ = from._impl_.gscookieid_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.uniqueid_ = from._impl_.uniqueid_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.last_ip_address_ = from._impl_.last_ip_address_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgCStrike15Welcome::CopyFrom(const CMsgCStrike15Welcome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCStrike15Welcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgCStrike15Welcome::InternalSwap(CMsgCStrike15Welcome* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.last_ip_address_)
      + sizeof(CMsgCStrike15Welcome::_impl_.last_ip_address_)
      - PROTOBUF_FIELD_OFFSET(CMsgCStrike15Welcome, _impl_.store_item_hash_)>(
          reinterpret_cast<char*>(&_impl_.store_item_hash_),
          reinterpret_cast<char*>(&other->_impl_.store_item_hash_));
}

::google::protobuf::Metadata CMsgCStrike15Welcome::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choked_blocks_{visibility, arena, from.choked_blocks_},
        value_name_(arena, from.value_name_) {}

CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientVarValueNotificationInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_int_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, value_int_),
           offsetof(Impl_, server_port_) -
               offsetof(Impl_, value_int_) +
               sizeof(Impl_::server_port_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choked_blocks_{visibility, arena},
        value_name_(arena) {}

inline void CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_int_),
           0,
           offsetof(Impl_, server_port_) -
               offsetof(Impl_, value_int_) +
               sizeof(Impl_::server_port_));
}
CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::~CMsgGCCStrike15_v2_ClientVarValueNotificationInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& this_ = static_cast<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientVarValueNotificationInfo(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.choked_blocks_) +
          decltype(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::_impl_.choked_blocks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo), alignof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo),
                                 alignof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo>(), &CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_ =
            CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 81, 2>
CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string value_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_name_)}},
    // optional int32 value_int = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_int_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_int_)}},
    // optional uint32 server_addr = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_addr_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_addr_)}},
    // optional uint32 server_port = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_port_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_port_)}},
    // repeated string choked_blocks = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.choked_blocks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string value_name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 value_int = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_int_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 server_addr = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_addr_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 server_port = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_port_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated string choked_blocks = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.choked_blocks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\61\12\0\0\0\15\0\0"
    "CMsgGCCStrike15_v2_ClientVarValueNotificationInfo"
    "value_name"
    "choked_blocks"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.choked_blocks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.value_name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.value_int_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.server_port_) -
        reinterpret_cast<char*>(&_impl_.value_int_)) + sizeof(_impl_.server_port_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& this_ = static_cast<const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string value_name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_value_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientVarValueNotificationInfo.value_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 value_int = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_value_int(), target);
  }

  // optional uint32 server_addr = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_server_addr(), target);
  }

  // optional uint32 server_port = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_server_port(), target);
  }

  // repeated string choked_blocks = 5;
  for (int i = 0, n = this_._internal_choked_blocks_size(); i < n; ++i) {
    const auto& s = this_._internal_choked_blocks().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientVarValueNotificationInfo.choked_blocks");
    target = stream->WriteString(5, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& this_ = static_cast<const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string choked_blocks = 5;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_choked_blocks().size());
      for (int i = 0, n = this_._internal_choked_blocks().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_choked_blocks().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional string value_name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_value_name());
    }
    // optional int32 value_int = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_value_int());
    }
    // optional uint32 server_addr = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_addr());
    }
    // optional uint32 server_port = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_server_port());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_choked_blocks()->MergeFrom(from._internal_choked_blocks());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_value_name(from._internal_value_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.value_int_ = from._impl_.value_int_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.server_addr_ = from._impl_.server_addr_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.server_port_ = from._impl_.server_port_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::CopyFrom(const CMsgGCCStrike15_v2_ClientVarValueNotificationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientVarValueNotificationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::InternalSwap(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.choked_blocks_.InternalSwap(&other->_impl_.choked_blocks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_name_, &other->_impl_.value_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.server_port_)
      + sizeof(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::_impl_.server_port_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo, _impl_.value_int_)>(
          reinterpret_cast<char*>(&_impl_.value_int_),
          reinterpret_cast<char*>(&other->_impl_.value_int_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        viewangles_{visibility, arena, from.viewangles_},
        userdata_{visibility, arena, from.userdata_} {}

CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ServerVarValueNotificationInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        viewangles_{visibility, arena},
        userdata_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::type_));
}
CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::~CMsgGCCStrike15_v2_ServerVarValueNotificationInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& this_ = static_cast<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ServerVarValueNotificationInfo(arena);
}
constexpr auto CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.viewangles_) +
          decltype(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_impl_.viewangles_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.userdata_) +
          decltype(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_impl_.userdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo), alignof(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo),
                                 alignof(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo));
  }
}
constexpr auto CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo>(), &CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::ByteSizeLong,
              &CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_ =
            CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 userdata = 4;
    {::_pbi::TcParser::FastV32R1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.userdata_)}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.accountid_)}},
    // repeated uint32 viewangles = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.viewangles_)}},
    // optional uint32 type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.type_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 viewangles = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.viewangles_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint32 type = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 userdata = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.userdata_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.viewangles_.Clear();
  _impl_.userdata_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& this_ = static_cast<const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // repeated uint32 viewangles = 2;
  for (int i = 0, n = this_._internal_viewangles_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_viewangles().Get(i), target);
  }

  // optional uint32 type = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_type(), target);
  }

  // repeated uint32 userdata = 4;
  for (int i = 0, n = this_._internal_userdata_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_userdata().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& this_ = static_cast<const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 viewangles = 2;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_viewangles());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_viewangles_size());
      total_size += tag_size + data_size;
    }
    // repeated uint32 userdata = 4;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_userdata());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_userdata_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 type = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_viewangles()->MergeFrom(from._internal_viewangles());
  _this->_internal_mutable_userdata()->MergeFrom(from._internal_userdata());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::CopyFrom(const CMsgGCCStrike15_v2_ServerVarValueNotificationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ServerVarValueNotificationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::InternalSwap(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.viewangles_.InternalSwap(&other->_impl_.viewangles_);
  _impl_.userdata_.InternalSwap(&other->_impl_.userdata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.type_)
      + sizeof(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GiftsLeaderboardRequest::_Internal {
 public:
};

CMsgGCCStrike15_v2_GiftsLeaderboardRequest::CMsgGCCStrike15_v2_GiftsLeaderboardRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GiftsLeaderboardRequest)
}
CMsgGCCStrike15_v2_GiftsLeaderboardRequest::CMsgGCCStrike15_v2_GiftsLeaderboardRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GiftsLeaderboardRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GiftsLeaderboardRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GiftsLeaderboardRequest)
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GiftsLeaderboardRequest(arena);
}
constexpr auto CMsgGCCStrike15_v2_GiftsLeaderboardRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_GiftsLeaderboardRequest),
                                            alignof(CMsgGCCStrike15_v2_GiftsLeaderboardRequest));
}
constexpr auto CMsgGCCStrike15_v2_GiftsLeaderboardRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GiftsLeaderboardRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GiftsLeaderboardRequest::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GiftsLeaderboardRequest::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>(), &CMsgGCCStrike15_v2_GiftsLeaderboardRequest::ByteSizeLong,
              &CMsgGCCStrike15_v2_GiftsLeaderboardRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardRequest, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GiftsLeaderboardRequest::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_ =
            CMsgGCCStrike15_v2_GiftsLeaderboardRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
CMsgGCCStrike15_v2_GiftsLeaderboardRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GiftsLeaderboardRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GiftsLeaderboardRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata CMsgGCCStrike15_v2_GiftsLeaderboardRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
}
CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, gifts_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::gifts_));
}
CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::~CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry& this_ = static_cast<CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry(arena);
}
constexpr auto CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry),
                                            alignof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry));
}
constexpr auto CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry>(), &CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::ByteSizeLong,
              &CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_ =
            CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 gifts = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.gifts_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.gifts_)}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 gifts = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.gifts_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gifts_) -
        reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.gifts_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry& this_ = static_cast<const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint32 gifts = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_gifts(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry& this_ = static_cast<const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 gifts = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_gifts());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.gifts_ = from._impl_.gifts_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::CopyFrom(const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::InternalSwap(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.gifts_)
      + sizeof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::_impl_.gifts_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GiftsLeaderboardResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GiftsLeaderboardResponse::CMsgGCCStrike15_v2_GiftsLeaderboardResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GiftsLeaderboardResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GiftsLeaderboardResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entries_{visibility, arena, from.entries_} {}

CMsgGCCStrike15_v2_GiftsLeaderboardResponse::CMsgGCCStrike15_v2_GiftsLeaderboardResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GiftsLeaderboardResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GiftsLeaderboardResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, servertime_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, servertime_),
           offsetof(Impl_, total_givers_) -
               offsetof(Impl_, servertime_) +
               sizeof(Impl_::total_givers_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GiftsLeaderboardResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entries_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_GiftsLeaderboardResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, servertime_),
           0,
           offsetof(Impl_, total_givers_) -
               offsetof(Impl_, servertime_) +
               sizeof(Impl_::total_givers_));
}
CMsgGCCStrike15_v2_GiftsLeaderboardResponse::~CMsgGCCStrike15_v2_GiftsLeaderboardResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GiftsLeaderboardResponse::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GiftsLeaderboardResponse& this_ = static_cast<CMsgGCCStrike15_v2_GiftsLeaderboardResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GiftsLeaderboardResponse(arena);
}
constexpr auto CMsgGCCStrike15_v2_GiftsLeaderboardResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.entries_) +
          decltype(CMsgGCCStrike15_v2_GiftsLeaderboardResponse::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse), alignof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_GiftsLeaderboardResponse::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse),
                                 alignof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse));
  }
}
constexpr auto CMsgGCCStrike15_v2_GiftsLeaderboardResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GiftsLeaderboardResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GiftsLeaderboardResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GiftsLeaderboardResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>(), &CMsgGCCStrike15_v2_GiftsLeaderboardResponse::ByteSizeLong,
              &CMsgGCCStrike15_v2_GiftsLeaderboardResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GiftsLeaderboardResponse::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_ =
            CMsgGCCStrike15_v2_GiftsLeaderboardResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2>
CMsgGCCStrike15_v2_GiftsLeaderboardResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_GiftsLeaderboardResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GiftsLeaderboardResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 servertime = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.servertime_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.servertime_)}},
    // optional uint32 time_period_seconds = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.time_period_seconds_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.time_period_seconds_)}},
    // optional uint32 total_gifts_given = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_gifts_given_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_gifts_given_)}},
    // optional uint32 total_givers = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_givers_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_givers_)}},
    // repeated .CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry entries = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.entries_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 servertime = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.servertime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 time_period_seconds = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.time_period_seconds_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total_gifts_given = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_gifts_given_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total_givers = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_givers_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry entries = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.entries_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GiftsLeaderboardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.servertime_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_givers_) -
        reinterpret_cast<char*>(&_impl_.servertime_)) + sizeof(_impl_.total_givers_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse& this_ = static_cast<const CMsgGCCStrike15_v2_GiftsLeaderboardResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GiftsLeaderboardResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 servertime = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_servertime(), target);
  }

  // optional uint32 time_period_seconds = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_time_period_seconds(), target);
  }

  // optional uint32 total_gifts_given = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_total_gifts_given(), target);
  }

  // optional uint32 total_givers = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_total_givers(), target);
  }

  // repeated .CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry entries = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GiftsLeaderboardResponse::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse& this_ = static_cast<const CMsgGCCStrike15_v2_GiftsLeaderboardResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GiftsLeaderboardResponse::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GiftsLeaderboardResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry entries = 5;
    {
      total_size += 1UL * this_._internal_entries_size();
      for (const auto& msg : this_._internal_entries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional uint32 servertime = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_servertime());
    }
    // optional uint32 time_period_seconds = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_time_period_seconds());
    }
    // optional uint32 total_gifts_given = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_total_gifts_given());
    }
    // optional uint32 total_givers = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_total_givers());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GiftsLeaderboardResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GiftsLeaderboardResponse*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GiftsLeaderboardResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.servertime_ = from._impl_.servertime_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.time_period_seconds_ = from._impl_.time_period_seconds_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.total_gifts_given_ = from._impl_.total_gifts_given_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.total_givers_ = from._impl_.total_givers_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GiftsLeaderboardResponse::CopyFrom(const CMsgGCCStrike15_v2_GiftsLeaderboardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GiftsLeaderboardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GiftsLeaderboardResponse::InternalSwap(CMsgGCCStrike15_v2_GiftsLeaderboardResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.total_givers_)
      + sizeof(CMsgGCCStrike15_v2_GiftsLeaderboardResponse::_impl_.total_givers_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GiftsLeaderboardResponse, _impl_.servertime_)>(
          reinterpret_cast<char*>(&_impl_.servertime_),
          reinterpret_cast<char*>(&other->_impl_.servertime_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GiftsLeaderboardResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientSubmitSurveyVote::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientSubmitSurveyVote>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientSubmitSurveyVote::CMsgGCCStrike15_v2_ClientSubmitSurveyVote(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
}
CMsgGCCStrike15_v2_ClientSubmitSurveyVote::CMsgGCCStrike15_v2_ClientSubmitSurveyVote(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientSubmitSurveyVote& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientSubmitSurveyVote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientSubmitSurveyVote::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, survey_id_),
           0,
           offsetof(Impl_, vote_) -
               offsetof(Impl_, survey_id_) +
               sizeof(Impl_::vote_));
}
CMsgGCCStrike15_v2_ClientSubmitSurveyVote::~CMsgGCCStrike15_v2_ClientSubmitSurveyVote() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientSubmitSurveyVote::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientSubmitSurveyVote& this_ = static_cast<CMsgGCCStrike15_v2_ClientSubmitSurveyVote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientSubmitSurveyVote::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientSubmitSurveyVote(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientSubmitSurveyVote::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientSubmitSurveyVote),
                                            alignof(CMsgGCCStrike15_v2_ClientSubmitSurveyVote));
}
constexpr auto CMsgGCCStrike15_v2_ClientSubmitSurveyVote::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientSubmitSurveyVote_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientSubmitSurveyVote::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientSubmitSurveyVote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientSubmitSurveyVote::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientSubmitSurveyVote>(), &CMsgGCCStrike15_v2_ClientSubmitSurveyVote::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientSubmitSurveyVote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientSubmitSurveyVote::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_ =
            CMsgGCCStrike15_v2_ClientSubmitSurveyVote::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientSubmitSurveyVote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_ClientSubmitSurveyVote::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientSubmitSurveyVote_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientSubmitSurveyVote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 vote = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.vote_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.vote_)}},
    // optional uint32 survey_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.survey_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.survey_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 survey_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.survey_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 vote = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.vote_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientSubmitSurveyVote::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.survey_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.vote_) -
        reinterpret_cast<char*>(&_impl_.survey_id_)) + sizeof(_impl_.vote_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientSubmitSurveyVote::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientSubmitSurveyVote& this_ = static_cast<const CMsgGCCStrike15_v2_ClientSubmitSurveyVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientSubmitSurveyVote::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientSubmitSurveyVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 survey_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_survey_id(), target);
  }

  // optional uint32 vote = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_vote(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientSubmitSurveyVote::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientSubmitSurveyVote& this_ = static_cast<const CMsgGCCStrike15_v2_ClientSubmitSurveyVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientSubmitSurveyVote::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientSubmitSurveyVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 survey_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_survey_id());
    }
    // optional uint32 vote = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_vote());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientSubmitSurveyVote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientSubmitSurveyVote*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientSubmitSurveyVote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.survey_id_ = from._impl_.survey_id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.vote_ = from._impl_.vote_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientSubmitSurveyVote::CopyFrom(const CMsgGCCStrike15_v2_ClientSubmitSurveyVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientSubmitSurveyVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientSubmitSurveyVote::InternalSwap(CMsgGCCStrike15_v2_ClientSubmitSurveyVote* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.vote_)
      + sizeof(CMsgGCCStrike15_v2_ClientSubmitSurveyVote::_impl_.vote_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientSubmitSurveyVote, _impl_.survey_id_)>(
          reinterpret_cast<char*>(&_impl_.survey_id_),
          reinterpret_cast<char*>(&other->_impl_.survey_id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientSubmitSurveyVote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Server2GCClientValidate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Server2GCClientValidate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Server2GCClientValidate::CMsgGCCStrike15_v2_Server2GCClientValidate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Server2GCClientValidate)
}
CMsgGCCStrike15_v2_Server2GCClientValidate::CMsgGCCStrike15_v2_Server2GCClientValidate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Server2GCClientValidate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Server2GCClientValidate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Server2GCClientValidate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accountid_ = {};
}
CMsgGCCStrike15_v2_Server2GCClientValidate::~CMsgGCCStrike15_v2_Server2GCClientValidate() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Server2GCClientValidate)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Server2GCClientValidate::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Server2GCClientValidate& this_ = static_cast<CMsgGCCStrike15_v2_Server2GCClientValidate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Server2GCClientValidate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Server2GCClientValidate(arena);
}
constexpr auto CMsgGCCStrike15_v2_Server2GCClientValidate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Server2GCClientValidate),
                                            alignof(CMsgGCCStrike15_v2_Server2GCClientValidate));
}
constexpr auto CMsgGCCStrike15_v2_Server2GCClientValidate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Server2GCClientValidate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Server2GCClientValidate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Server2GCClientValidate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Server2GCClientValidate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Server2GCClientValidate>(), &CMsgGCCStrike15_v2_Server2GCClientValidate::ByteSizeLong,
              &CMsgGCCStrike15_v2_Server2GCClientValidate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Server2GCClientValidate::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_ =
            CMsgGCCStrike15_v2_Server2GCClientValidate::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Server2GCClientValidate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_Server2GCClientValidate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Server2GCClientValidate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Server2GCClientValidate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Server2GCClientValidate, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Server2GCClientValidate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Server2GCClientValidate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accountid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Server2GCClientValidate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Server2GCClientValidate& this_ = static_cast<const CMsgGCCStrike15_v2_Server2GCClientValidate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Server2GCClientValidate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Server2GCClientValidate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Server2GCClientValidate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Server2GCClientValidate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Server2GCClientValidate::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Server2GCClientValidate& this_ = static_cast<const CMsgGCCStrike15_v2_Server2GCClientValidate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Server2GCClientValidate::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Server2GCClientValidate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Server2GCClientValidate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint32 accountid = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Server2GCClientValidate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Server2GCClientValidate*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Server2GCClientValidate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Server2GCClientValidate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Server2GCClientValidate::CopyFrom(const CMsgGCCStrike15_v2_Server2GCClientValidate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Server2GCClientValidate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Server2GCClientValidate::InternalSwap(CMsgGCCStrike15_v2_Server2GCClientValidate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.accountid_, other->_impl_.accountid_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Server2GCClientValidate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ClientTournamentInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ClientTournamentInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ClientTournamentInfo::CMsgGCCStrike15_v2_GC2ClientTournamentInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientTournamentInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GC2ClientTournamentInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        teamids_{visibility, arena, from.teamids_} {}

CMsgGCCStrike15_v2_GC2ClientTournamentInfo::CMsgGCCStrike15_v2_GC2ClientTournamentInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GC2ClientTournamentInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GC2ClientTournamentInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, eventid_),
           offsetof(Impl_, game_type_) -
               offsetof(Impl_, eventid_) +
               sizeof(Impl_::game_type_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientTournamentInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        teamids_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_GC2ClientTournamentInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventid_),
           0,
           offsetof(Impl_, game_type_) -
               offsetof(Impl_, eventid_) +
               sizeof(Impl_::game_type_));
}
CMsgGCCStrike15_v2_GC2ClientTournamentInfo::~CMsgGCCStrike15_v2_GC2ClientTournamentInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ClientTournamentInfo::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ClientTournamentInfo& this_ = static_cast<CMsgGCCStrike15_v2_GC2ClientTournamentInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTournamentInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ClientTournamentInfo(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientTournamentInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.teamids_) +
          decltype(CMsgGCCStrike15_v2_GC2ClientTournamentInfo::_impl_.teamids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo), alignof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_GC2ClientTournamentInfo::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo),
                                 alignof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo));
  }
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientTournamentInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ClientTournamentInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ClientTournamentInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ClientTournamentInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ClientTournamentInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ClientTournamentInfo>(), &CMsgGCCStrike15_v2_GC2ClientTournamentInfo::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ClientTournamentInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ClientTournamentInfo::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_ =
            CMsgGCCStrike15_v2_GC2ClientTournamentInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTournamentInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_GC2ClientTournamentInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GC2ClientTournamentInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ClientTournamentInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 teamids = 4;
    {::_pbi::TcParser::FastV32R1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.teamids_)}},
    // optional uint32 eventid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.eventid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.eventid_)}},
    // optional uint32 stageid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.stageid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.stageid_)}},
    // optional uint32 game_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.game_type_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.game_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 eventid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.eventid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stageid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.stageid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 game_type = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.game_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 teamids = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.teamids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ClientTournamentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.teamids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.eventid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.game_type_) -
        reinterpret_cast<char*>(&_impl_.eventid_)) + sizeof(_impl_.game_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTournamentInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ClientTournamentInfo& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientTournamentInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientTournamentInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ClientTournamentInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 eventid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_eventid(), target);
  }

  // optional uint32 stageid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_stageid(), target);
  }

  // optional uint32 game_type = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_game_type(), target);
  }

  // repeated uint32 teamids = 4;
  for (int i = 0, n = this_._internal_teamids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_teamids().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ClientTournamentInfo::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ClientTournamentInfo& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientTournamentInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ClientTournamentInfo::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ClientTournamentInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 teamids = 4;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_teamids());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_teamids_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 eventid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_eventid());
    }
    // optional uint32 stageid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_stageid());
    }
    // optional uint32 game_type = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ClientTournamentInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ClientTournamentInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ClientTournamentInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_teamids()->MergeFrom(from._internal_teamids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.eventid_ = from._impl_.eventid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.stageid_ = from._impl_.stageid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ClientTournamentInfo::CopyFrom(const CMsgGCCStrike15_v2_GC2ClientTournamentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ClientTournamentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ClientTournamentInfo::InternalSwap(CMsgGCCStrike15_v2_GC2ClientTournamentInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.teamids_.InternalSwap(&other->_impl_.teamids_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.game_type_)
      + sizeof(CMsgGCCStrike15_v2_GC2ClientTournamentInfo::_impl_.game_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientTournamentInfo, _impl_.eventid_)>(
          reinterpret_cast<char*>(&_impl_.eventid_),
          reinterpret_cast<char*>(&other->_impl_.eventid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ClientTournamentInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOEconCoupon::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOEconCoupon>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_._has_bits_);
};

CSOEconCoupon::CSOEconCoupon(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOEconCoupon_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOEconCoupon)
}
CSOEconCoupon::CSOEconCoupon(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CSOEconCoupon& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOEconCoupon_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CSOEconCoupon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CSOEconCoupon::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entryid_),
           0,
           offsetof(Impl_, expiration_date_) -
               offsetof(Impl_, entryid_) +
               sizeof(Impl_::expiration_date_));
}
CSOEconCoupon::~CSOEconCoupon() {
  // @@protoc_insertion_point(destructor:CSOEconCoupon)
  SharedDtor(*this);
}
inline void CSOEconCoupon::SharedDtor(MessageLite& self) {
  CSOEconCoupon& this_ = static_cast<CSOEconCoupon&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOEconCoupon::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOEconCoupon(arena);
}
constexpr auto CSOEconCoupon::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CSOEconCoupon),
                                            alignof(CSOEconCoupon));
}
constexpr auto CSOEconCoupon::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOEconCoupon_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOEconCoupon::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOEconCoupon>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOEconCoupon::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOEconCoupon>(), &CSOEconCoupon::ByteSizeLong,
              &CSOEconCoupon::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_._cached_size_),
          false,
      },
      &CSOEconCoupon::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOEconCoupon_class_data_ =
            CSOEconCoupon::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOEconCoupon::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOEconCoupon_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOEconCoupon_class_data_.tc_table);
  return CSOEconCoupon_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CSOEconCoupon::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSOEconCoupon_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOEconCoupon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 entryid = 1 [(.key_field) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOEconCoupon, _impl_.entryid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.entryid_)}},
    // optional uint32 defidx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOEconCoupon, _impl_.defidx_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.defidx_)}},
    // optional fixed32 expiration_date = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.expiration_date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 entryid = 1 [(.key_field) = true];
    {PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.entryid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 defidx = 2;
    {PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.defidx_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 expiration_date = 3;
    {PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.expiration_date_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSOEconCoupon::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconCoupon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.entryid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.expiration_date_) -
        reinterpret_cast<char*>(&_impl_.entryid_)) + sizeof(_impl_.expiration_date_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOEconCoupon::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOEconCoupon& this_ = static_cast<const CSOEconCoupon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOEconCoupon::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOEconCoupon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconCoupon)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 entryid = 1 [(.key_field) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_entryid(), target);
  }

  // optional uint32 defidx = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_defidx(), target);
  }

  // optional fixed32 expiration_date = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        3, this_._internal_expiration_date(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconCoupon)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOEconCoupon::ByteSizeLong(const MessageLite& base) {
  const CSOEconCoupon& this_ = static_cast<const CSOEconCoupon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOEconCoupon::ByteSizeLong() const {
  const CSOEconCoupon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOEconCoupon)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 entryid = 1 [(.key_field) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_entryid());
    }
    // optional uint32 defidx = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_defidx());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOEconCoupon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOEconCoupon*>(&to_msg);
  auto& from = static_cast<const CSOEconCoupon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOEconCoupon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.entryid_ = from._impl_.entryid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.defidx_ = from._impl_.defidx_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.expiration_date_ = from._impl_.expiration_date_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOEconCoupon::CopyFrom(const CSOEconCoupon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconCoupon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOEconCoupon::InternalSwap(CSOEconCoupon* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.expiration_date_)
      + sizeof(CSOEconCoupon::_impl_.expiration_date_)
      - PROTOBUF_FIELD_OFFSET(CSOEconCoupon, _impl_.entryid_)>(
          reinterpret_cast<char*>(&_impl_.entryid_),
          reinterpret_cast<char*>(&other->_impl_.entryid_));
}

::google::protobuf::Metadata CSOEconCoupon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOAccountItemPersonalStore::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOAccountItemPersonalStore>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_._has_bits_);
};

CSOAccountItemPersonalStore::CSOAccountItemPersonalStore(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountItemPersonalStore_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOAccountItemPersonalStore)
}
PROTOBUF_NDEBUG_INLINE CSOAccountItemPersonalStore::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CSOAccountItemPersonalStore& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_} {}

CSOAccountItemPersonalStore::CSOAccountItemPersonalStore(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CSOAccountItemPersonalStore& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountItemPersonalStore_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CSOAccountItemPersonalStore* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, generation_time_),
           offsetof(Impl_, redeemable_balance_) -
               offsetof(Impl_, generation_time_) +
               sizeof(Impl_::redeemable_balance_));

  // @@protoc_insertion_point(copy_constructor:CSOAccountItemPersonalStore)
}
PROTOBUF_NDEBUG_INLINE CSOAccountItemPersonalStore::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        items_{visibility, arena} {}

inline void CSOAccountItemPersonalStore::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_),
           0,
           offsetof(Impl_, redeemable_balance_) -
               offsetof(Impl_, generation_time_) +
               sizeof(Impl_::redeemable_balance_));
}
CSOAccountItemPersonalStore::~CSOAccountItemPersonalStore() {
  // @@protoc_insertion_point(destructor:CSOAccountItemPersonalStore)
  SharedDtor(*this);
}
inline void CSOAccountItemPersonalStore::SharedDtor(MessageLite& self) {
  CSOAccountItemPersonalStore& this_ = static_cast<CSOAccountItemPersonalStore&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOAccountItemPersonalStore::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOAccountItemPersonalStore(arena);
}
constexpr auto CSOAccountItemPersonalStore::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.items_) +
          decltype(CSOAccountItemPersonalStore::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CSOAccountItemPersonalStore), alignof(CSOAccountItemPersonalStore), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CSOAccountItemPersonalStore::PlacementNew_,
                                 sizeof(CSOAccountItemPersonalStore),
                                 alignof(CSOAccountItemPersonalStore));
  }
}
constexpr auto CSOAccountItemPersonalStore::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOAccountItemPersonalStore_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOAccountItemPersonalStore::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOAccountItemPersonalStore>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOAccountItemPersonalStore::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOAccountItemPersonalStore>(), &CSOAccountItemPersonalStore::ByteSizeLong,
              &CSOAccountItemPersonalStore::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_._cached_size_),
          false,
      },
      &CSOAccountItemPersonalStore::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOAccountItemPersonalStore_class_data_ =
            CSOAccountItemPersonalStore::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOAccountItemPersonalStore::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOAccountItemPersonalStore_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOAccountItemPersonalStore_class_data_.tc_table);
  return CSOAccountItemPersonalStore_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CSOAccountItemPersonalStore::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSOAccountItemPersonalStore_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOAccountItemPersonalStore>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 generation_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountItemPersonalStore, _impl_.generation_time_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.generation_time_)}},
    // optional uint32 redeemable_balance = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountItemPersonalStore, _impl_.redeemable_balance_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.redeemable_balance_)}},
    // repeated uint64 items = 3;
    {::_pbi::TcParser::FastV64R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 generation_time = 1;
    {PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.generation_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 redeemable_balance = 2;
    {PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.redeemable_balance_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint64 items = 3;
    {PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSOAccountItemPersonalStore::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOAccountItemPersonalStore)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.generation_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.redeemable_balance_) -
        reinterpret_cast<char*>(&_impl_.generation_time_)) + sizeof(_impl_.redeemable_balance_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOAccountItemPersonalStore::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOAccountItemPersonalStore& this_ = static_cast<const CSOAccountItemPersonalStore&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOAccountItemPersonalStore::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOAccountItemPersonalStore& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOAccountItemPersonalStore)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 generation_time = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_generation_time(), target);
  }

  // optional uint32 redeemable_balance = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_redeemable_balance(), target);
  }

  // repeated uint64 items = 3;
  for (int i = 0, n = this_._internal_items_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_items().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOAccountItemPersonalStore)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOAccountItemPersonalStore::ByteSizeLong(const MessageLite& base) {
  const CSOAccountItemPersonalStore& this_ = static_cast<const CSOAccountItemPersonalStore&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOAccountItemPersonalStore::ByteSizeLong() const {
  const CSOAccountItemPersonalStore& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOAccountItemPersonalStore)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint64 items = 3;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
          this_._internal_items());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_items_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 generation_time = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_generation_time());
    }
    // optional uint32 redeemable_balance = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_redeemable_balance());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOAccountItemPersonalStore::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOAccountItemPersonalStore*>(&to_msg);
  auto& from = static_cast<const CSOAccountItemPersonalStore&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOAccountItemPersonalStore)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.generation_time_ = from._impl_.generation_time_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.redeemable_balance_ = from._impl_.redeemable_balance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOAccountItemPersonalStore::CopyFrom(const CSOAccountItemPersonalStore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOAccountItemPersonalStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOAccountItemPersonalStore::InternalSwap(CSOAccountItemPersonalStore* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.redeemable_balance_)
      + sizeof(CSOAccountItemPersonalStore::_impl_.redeemable_balance_)
      - PROTOBUF_FIELD_OFFSET(CSOAccountItemPersonalStore, _impl_.generation_time_)>(
          reinterpret_cast<char*>(&_impl_.generation_time_),
          reinterpret_cast<char*>(&other->_impl_.generation_time_));
}

::google::protobuf::Metadata CSOAccountItemPersonalStore::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOAccountXpShop::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOAccountXpShop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_._has_bits_);
};

CSOAccountXpShop::CSOAccountXpShop(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountXpShop_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOAccountXpShop)
}
PROTOBUF_NDEBUG_INLINE CSOAccountXpShop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CSOAccountXpShop& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        xp_tracks_{visibility, arena, from.xp_tracks_} {}

CSOAccountXpShop::CSOAccountXpShop(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CSOAccountXpShop& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountXpShop_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CSOAccountXpShop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, generation_time_),
           offsetof(Impl_, redeemable_balance_) -
               offsetof(Impl_, generation_time_) +
               sizeof(Impl_::redeemable_balance_));

  // @@protoc_insertion_point(copy_constructor:CSOAccountXpShop)
}
PROTOBUF_NDEBUG_INLINE CSOAccountXpShop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        xp_tracks_{visibility, arena} {}

inline void CSOAccountXpShop::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_),
           0,
           offsetof(Impl_, redeemable_balance_) -
               offsetof(Impl_, generation_time_) +
               sizeof(Impl_::redeemable_balance_));
}
CSOAccountXpShop::~CSOAccountXpShop() {
  // @@protoc_insertion_point(destructor:CSOAccountXpShop)
  SharedDtor(*this);
}
inline void CSOAccountXpShop::SharedDtor(MessageLite& self) {
  CSOAccountXpShop& this_ = static_cast<CSOAccountXpShop&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOAccountXpShop::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOAccountXpShop(arena);
}
constexpr auto CSOAccountXpShop::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.xp_tracks_) +
          decltype(CSOAccountXpShop::_impl_.xp_tracks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CSOAccountXpShop), alignof(CSOAccountXpShop), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CSOAccountXpShop::PlacementNew_,
                                 sizeof(CSOAccountXpShop),
                                 alignof(CSOAccountXpShop));
  }
}
constexpr auto CSOAccountXpShop::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOAccountXpShop_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOAccountXpShop::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOAccountXpShop>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOAccountXpShop::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOAccountXpShop>(), &CSOAccountXpShop::ByteSizeLong,
              &CSOAccountXpShop::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_._cached_size_),
          false,
      },
      &CSOAccountXpShop::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOAccountXpShop_class_data_ =
            CSOAccountXpShop::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOAccountXpShop::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOAccountXpShop_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOAccountXpShop_class_data_.tc_table);
  return CSOAccountXpShop_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CSOAccountXpShop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSOAccountXpShop_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOAccountXpShop>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 generation_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountXpShop, _impl_.generation_time_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.generation_time_)}},
    // optional uint32 redeemable_balance = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountXpShop, _impl_.redeemable_balance_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.redeemable_balance_)}},
    // repeated uint32 xp_tracks = 3;
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.xp_tracks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 generation_time = 1;
    {PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.generation_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 redeemable_balance = 2;
    {PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.redeemable_balance_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 xp_tracks = 3;
    {PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.xp_tracks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSOAccountXpShop::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOAccountXpShop)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xp_tracks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.generation_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.redeemable_balance_) -
        reinterpret_cast<char*>(&_impl_.generation_time_)) + sizeof(_impl_.redeemable_balance_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOAccountXpShop::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOAccountXpShop& this_ = static_cast<const CSOAccountXpShop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOAccountXpShop::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOAccountXpShop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOAccountXpShop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 generation_time = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_generation_time(), target);
  }

  // optional uint32 redeemable_balance = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_redeemable_balance(), target);
  }

  // repeated uint32 xp_tracks = 3;
  for (int i = 0, n = this_._internal_xp_tracks_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_xp_tracks().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOAccountXpShop)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOAccountXpShop::ByteSizeLong(const MessageLite& base) {
  const CSOAccountXpShop& this_ = static_cast<const CSOAccountXpShop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOAccountXpShop::ByteSizeLong() const {
  const CSOAccountXpShop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOAccountXpShop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 xp_tracks = 3;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_xp_tracks());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_xp_tracks_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 generation_time = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_generation_time());
    }
    // optional uint32 redeemable_balance = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_redeemable_balance());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOAccountXpShop::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOAccountXpShop*>(&to_msg);
  auto& from = static_cast<const CSOAccountXpShop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOAccountXpShop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_xp_tracks()->MergeFrom(from._internal_xp_tracks());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.generation_time_ = from._impl_.generation_time_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.redeemable_balance_ = from._impl_.redeemable_balance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOAccountXpShop::CopyFrom(const CSOAccountXpShop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOAccountXpShop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOAccountXpShop::InternalSwap(CSOAccountXpShop* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.xp_tracks_.InternalSwap(&other->_impl_.xp_tracks_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.redeemable_balance_)
      + sizeof(CSOAccountXpShop::_impl_.redeemable_balance_)
      - PROTOBUF_FIELD_OFFSET(CSOAccountXpShop, _impl_.generation_time_)>(
          reinterpret_cast<char*>(&_impl_.generation_time_),
          reinterpret_cast<char*>(&other->_impl_.generation_time_));
}

::google::protobuf::Metadata CSOAccountXpShop::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOAccountKeychainRemoveToolCharges::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOAccountKeychainRemoveToolCharges>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOAccountKeychainRemoveToolCharges, _impl_._has_bits_);
};

CSOAccountKeychainRemoveToolCharges::CSOAccountKeychainRemoveToolCharges(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountKeychainRemoveToolCharges_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOAccountKeychainRemoveToolCharges)
}
CSOAccountKeychainRemoveToolCharges::CSOAccountKeychainRemoveToolCharges(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CSOAccountKeychainRemoveToolCharges& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountKeychainRemoveToolCharges_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CSOAccountKeychainRemoveToolCharges::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CSOAccountKeychainRemoveToolCharges::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.charges_ = {};
}
CSOAccountKeychainRemoveToolCharges::~CSOAccountKeychainRemoveToolCharges() {
  // @@protoc_insertion_point(destructor:CSOAccountKeychainRemoveToolCharges)
  SharedDtor(*this);
}
inline void CSOAccountKeychainRemoveToolCharges::SharedDtor(MessageLite& self) {
  CSOAccountKeychainRemoveToolCharges& this_ = static_cast<CSOAccountKeychainRemoveToolCharges&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOAccountKeychainRemoveToolCharges::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOAccountKeychainRemoveToolCharges(arena);
}
constexpr auto CSOAccountKeychainRemoveToolCharges::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CSOAccountKeychainRemoveToolCharges),
                                            alignof(CSOAccountKeychainRemoveToolCharges));
}
constexpr auto CSOAccountKeychainRemoveToolCharges::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOAccountKeychainRemoveToolCharges_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOAccountKeychainRemoveToolCharges::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOAccountKeychainRemoveToolCharges>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOAccountKeychainRemoveToolCharges::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOAccountKeychainRemoveToolCharges>(), &CSOAccountKeychainRemoveToolCharges::ByteSizeLong,
              &CSOAccountKeychainRemoveToolCharges::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOAccountKeychainRemoveToolCharges, _impl_._cached_size_),
          false,
      },
      &CSOAccountKeychainRemoveToolCharges::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOAccountKeychainRemoveToolCharges_class_data_ =
            CSOAccountKeychainRemoveToolCharges::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOAccountKeychainRemoveToolCharges::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOAccountKeychainRemoveToolCharges_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOAccountKeychainRemoveToolCharges_class_data_.tc_table);
  return CSOAccountKeychainRemoveToolCharges_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CSOAccountKeychainRemoveToolCharges::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOAccountKeychainRemoveToolCharges, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSOAccountKeychainRemoveToolCharges_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOAccountKeychainRemoveToolCharges>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 charges = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountKeychainRemoveToolCharges, _impl_.charges_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSOAccountKeychainRemoveToolCharges, _impl_.charges_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 charges = 1;
    {PROTOBUF_FIELD_OFFSET(CSOAccountKeychainRemoveToolCharges, _impl_.charges_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSOAccountKeychainRemoveToolCharges::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOAccountKeychainRemoveToolCharges)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.charges_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOAccountKeychainRemoveToolCharges::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOAccountKeychainRemoveToolCharges& this_ = static_cast<const CSOAccountKeychainRemoveToolCharges&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOAccountKeychainRemoveToolCharges::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOAccountKeychainRemoveToolCharges& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOAccountKeychainRemoveToolCharges)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 charges = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_charges(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOAccountKeychainRemoveToolCharges)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOAccountKeychainRemoveToolCharges::ByteSizeLong(const MessageLite& base) {
  const CSOAccountKeychainRemoveToolCharges& this_ = static_cast<const CSOAccountKeychainRemoveToolCharges&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOAccountKeychainRemoveToolCharges::ByteSizeLong() const {
  const CSOAccountKeychainRemoveToolCharges& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOAccountKeychainRemoveToolCharges)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint32 charges = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_charges());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOAccountKeychainRemoveToolCharges::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOAccountKeychainRemoveToolCharges*>(&to_msg);
  auto& from = static_cast<const CSOAccountKeychainRemoveToolCharges&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOAccountKeychainRemoveToolCharges)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.charges_ = from._impl_.charges_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOAccountKeychainRemoveToolCharges::CopyFrom(const CSOAccountKeychainRemoveToolCharges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOAccountKeychainRemoveToolCharges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOAccountKeychainRemoveToolCharges::InternalSwap(CSOAccountKeychainRemoveToolCharges* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.charges_, other->_impl_.charges_);
}

::google::protobuf::Metadata CSOAccountKeychainRemoveToolCharges::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOQuestProgress::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOQuestProgress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_._has_bits_);
};

CSOQuestProgress::CSOQuestProgress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOQuestProgress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOQuestProgress)
}
CSOQuestProgress::CSOQuestProgress(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CSOQuestProgress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOQuestProgress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CSOQuestProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CSOQuestProgress::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, questid_),
           0,
           offsetof(Impl_, bonus_points_) -
               offsetof(Impl_, questid_) +
               sizeof(Impl_::bonus_points_));
}
CSOQuestProgress::~CSOQuestProgress() {
  // @@protoc_insertion_point(destructor:CSOQuestProgress)
  SharedDtor(*this);
}
inline void CSOQuestProgress::SharedDtor(MessageLite& self) {
  CSOQuestProgress& this_ = static_cast<CSOQuestProgress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOQuestProgress::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOQuestProgress(arena);
}
constexpr auto CSOQuestProgress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CSOQuestProgress),
                                            alignof(CSOQuestProgress));
}
constexpr auto CSOQuestProgress::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOQuestProgress_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOQuestProgress::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOQuestProgress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOQuestProgress::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOQuestProgress>(), &CSOQuestProgress::ByteSizeLong,
              &CSOQuestProgress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_._cached_size_),
          false,
      },
      &CSOQuestProgress::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOQuestProgress_class_data_ =
            CSOQuestProgress::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOQuestProgress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOQuestProgress_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOQuestProgress_class_data_.tc_table);
  return CSOQuestProgress_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CSOQuestProgress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSOQuestProgress_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOQuestProgress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 questid = 1 [(.key_field) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOQuestProgress, _impl_.questid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.questid_)}},
    // optional uint32 points_remaining = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOQuestProgress, _impl_.points_remaining_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.points_remaining_)}},
    // optional uint32 bonus_points = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOQuestProgress, _impl_.bonus_points_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.bonus_points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 questid = 1 [(.key_field) = true];
    {PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.questid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 points_remaining = 2;
    {PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.points_remaining_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 bonus_points = 3;
    {PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.bonus_points_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSOQuestProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOQuestProgress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.questid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bonus_points_) -
        reinterpret_cast<char*>(&_impl_.questid_)) + sizeof(_impl_.bonus_points_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOQuestProgress::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOQuestProgress& this_ = static_cast<const CSOQuestProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOQuestProgress::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOQuestProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOQuestProgress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 questid = 1 [(.key_field) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_questid(), target);
  }

  // optional uint32 points_remaining = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_points_remaining(), target);
  }

  // optional uint32 bonus_points = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_bonus_points(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOQuestProgress)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOQuestProgress::ByteSizeLong(const MessageLite& base) {
  const CSOQuestProgress& this_ = static_cast<const CSOQuestProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOQuestProgress::ByteSizeLong() const {
  const CSOQuestProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOQuestProgress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint32 questid = 1 [(.key_field) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_questid());
    }
    // optional uint32 points_remaining = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_points_remaining());
    }
    // optional uint32 bonus_points = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_bonus_points());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOQuestProgress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOQuestProgress*>(&to_msg);
  auto& from = static_cast<const CSOQuestProgress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOQuestProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.questid_ = from._impl_.questid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.points_remaining_ = from._impl_.points_remaining_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.bonus_points_ = from._impl_.bonus_points_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOQuestProgress::CopyFrom(const CSOQuestProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOQuestProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOQuestProgress::InternalSwap(CSOQuestProgress* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.bonus_points_)
      + sizeof(CSOQuestProgress::_impl_.bonus_points_)
      - PROTOBUF_FIELD_OFFSET(CSOQuestProgress, _impl_.questid_)>(
          reinterpret_cast<char*>(&_impl_.questid_),
          reinterpret_cast<char*>(&other->_impl_.questid_));
}

::google::protobuf::Metadata CSOQuestProgress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOAccountSeasonalOperation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOAccountSeasonalOperation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_._has_bits_);
};

CSOAccountSeasonalOperation::CSOAccountSeasonalOperation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountSeasonalOperation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOAccountSeasonalOperation)
}
CSOAccountSeasonalOperation::CSOAccountSeasonalOperation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CSOAccountSeasonalOperation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountSeasonalOperation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CSOAccountSeasonalOperation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CSOAccountSeasonalOperation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, season_value_),
           0,
           offsetof(Impl_, season_pass_time_) -
               offsetof(Impl_, season_value_) +
               sizeof(Impl_::season_pass_time_));
}
CSOAccountSeasonalOperation::~CSOAccountSeasonalOperation() {
  // @@protoc_insertion_point(destructor:CSOAccountSeasonalOperation)
  SharedDtor(*this);
}
inline void CSOAccountSeasonalOperation::SharedDtor(MessageLite& self) {
  CSOAccountSeasonalOperation& this_ = static_cast<CSOAccountSeasonalOperation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOAccountSeasonalOperation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOAccountSeasonalOperation(arena);
}
constexpr auto CSOAccountSeasonalOperation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CSOAccountSeasonalOperation),
                                            alignof(CSOAccountSeasonalOperation));
}
constexpr auto CSOAccountSeasonalOperation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOAccountSeasonalOperation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOAccountSeasonalOperation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOAccountSeasonalOperation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOAccountSeasonalOperation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOAccountSeasonalOperation>(), &CSOAccountSeasonalOperation::ByteSizeLong,
              &CSOAccountSeasonalOperation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_._cached_size_),
          false,
      },
      &CSOAccountSeasonalOperation::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOAccountSeasonalOperation_class_data_ =
            CSOAccountSeasonalOperation::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOAccountSeasonalOperation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOAccountSeasonalOperation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOAccountSeasonalOperation_class_data_.tc_table);
  return CSOAccountSeasonalOperation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
CSOAccountSeasonalOperation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSOAccountSeasonalOperation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOAccountSeasonalOperation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 season_value = 1 [(.key_field) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountSeasonalOperation, _impl_.season_value_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.season_value_)}},
    // optional uint32 tier_unlocked = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountSeasonalOperation, _impl_.tier_unlocked_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.tier_unlocked_)}},
    // optional uint32 premium_tiers = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountSeasonalOperation, _impl_.premium_tiers_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.premium_tiers_)}},
    // optional uint32 mission_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountSeasonalOperation, _impl_.mission_id_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.mission_id_)}},
    // optional uint32 missions_completed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountSeasonalOperation, _impl_.missions_completed_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.missions_completed_)}},
    // optional uint32 redeemable_balance = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountSeasonalOperation, _impl_.redeemable_balance_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.redeemable_balance_)}},
    // optional uint32 season_pass_time = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountSeasonalOperation, _impl_.season_pass_time_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.season_pass_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 season_value = 1 [(.key_field) = true];
    {PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.season_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tier_unlocked = 2;
    {PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.tier_unlocked_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 premium_tiers = 3;
    {PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.premium_tiers_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 mission_id = 4;
    {PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.mission_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 missions_completed = 5;
    {PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.missions_completed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 redeemable_balance = 6;
    {PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.redeemable_balance_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 season_pass_time = 7;
    {PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.season_pass_time_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSOAccountSeasonalOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOAccountSeasonalOperation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    ::memset(&_impl_.season_value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.season_pass_time_) -
        reinterpret_cast<char*>(&_impl_.season_value_)) + sizeof(_impl_.season_pass_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOAccountSeasonalOperation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOAccountSeasonalOperation& this_ = static_cast<const CSOAccountSeasonalOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOAccountSeasonalOperation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOAccountSeasonalOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOAccountSeasonalOperation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 season_value = 1 [(.key_field) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_season_value(), target);
  }

  // optional uint32 tier_unlocked = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_tier_unlocked(), target);
  }

  // optional uint32 premium_tiers = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_premium_tiers(), target);
  }

  // optional uint32 mission_id = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_mission_id(), target);
  }

  // optional uint32 missions_completed = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_missions_completed(), target);
  }

  // optional uint32 redeemable_balance = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_redeemable_balance(), target);
  }

  // optional uint32 season_pass_time = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_season_pass_time(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOAccountSeasonalOperation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOAccountSeasonalOperation::ByteSizeLong(const MessageLite& base) {
  const CSOAccountSeasonalOperation& this_ = static_cast<const CSOAccountSeasonalOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOAccountSeasonalOperation::ByteSizeLong() const {
  const CSOAccountSeasonalOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOAccountSeasonalOperation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // optional uint32 season_value = 1 [(.key_field) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_season_value());
    }
    // optional uint32 tier_unlocked = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tier_unlocked());
    }
    // optional uint32 premium_tiers = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_premium_tiers());
    }
    // optional uint32 mission_id = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_mission_id());
    }
    // optional uint32 missions_completed = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_missions_completed());
    }
    // optional uint32 redeemable_balance = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_redeemable_balance());
    }
    // optional uint32 season_pass_time = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_season_pass_time());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOAccountSeasonalOperation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOAccountSeasonalOperation*>(&to_msg);
  auto& from = static_cast<const CSOAccountSeasonalOperation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOAccountSeasonalOperation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.season_value_ = from._impl_.season_value_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.tier_unlocked_ = from._impl_.tier_unlocked_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.premium_tiers_ = from._impl_.premium_tiers_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.mission_id_ = from._impl_.mission_id_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.missions_completed_ = from._impl_.missions_completed_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.redeemable_balance_ = from._impl_.redeemable_balance_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.season_pass_time_ = from._impl_.season_pass_time_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOAccountSeasonalOperation::CopyFrom(const CSOAccountSeasonalOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOAccountSeasonalOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOAccountSeasonalOperation::InternalSwap(CSOAccountSeasonalOperation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.season_pass_time_)
      + sizeof(CSOAccountSeasonalOperation::_impl_.season_pass_time_)
      - PROTOBUF_FIELD_OFFSET(CSOAccountSeasonalOperation, _impl_.season_value_)>(
          reinterpret_cast<char*>(&_impl_.season_value_),
          reinterpret_cast<char*>(&other->_impl_.season_value_));
}

::google::protobuf::Metadata CSOAccountSeasonalOperation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOAccountRecurringSubscription::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOAccountRecurringSubscription>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_._has_bits_);
};

CSOAccountRecurringSubscription::CSOAccountRecurringSubscription(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountRecurringSubscription_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOAccountRecurringSubscription)
}
CSOAccountRecurringSubscription::CSOAccountRecurringSubscription(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CSOAccountRecurringSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOAccountRecurringSubscription_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CSOAccountRecurringSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CSOAccountRecurringSubscription::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_next_cycle_),
           0,
           offsetof(Impl_, time_initiated_) -
               offsetof(Impl_, time_next_cycle_) +
               sizeof(Impl_::time_initiated_));
}
CSOAccountRecurringSubscription::~CSOAccountRecurringSubscription() {
  // @@protoc_insertion_point(destructor:CSOAccountRecurringSubscription)
  SharedDtor(*this);
}
inline void CSOAccountRecurringSubscription::SharedDtor(MessageLite& self) {
  CSOAccountRecurringSubscription& this_ = static_cast<CSOAccountRecurringSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOAccountRecurringSubscription::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOAccountRecurringSubscription(arena);
}
constexpr auto CSOAccountRecurringSubscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CSOAccountRecurringSubscription),
                                            alignof(CSOAccountRecurringSubscription));
}
constexpr auto CSOAccountRecurringSubscription::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOAccountRecurringSubscription_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOAccountRecurringSubscription::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOAccountRecurringSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOAccountRecurringSubscription::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOAccountRecurringSubscription>(), &CSOAccountRecurringSubscription::ByteSizeLong,
              &CSOAccountRecurringSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_._cached_size_),
          false,
      },
      &CSOAccountRecurringSubscription::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOAccountRecurringSubscription_class_data_ =
            CSOAccountRecurringSubscription::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOAccountRecurringSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOAccountRecurringSubscription_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOAccountRecurringSubscription_class_data_.tc_table);
  return CSOAccountRecurringSubscription_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CSOAccountRecurringSubscription::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CSOAccountRecurringSubscription_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOAccountRecurringSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 time_initiated = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountRecurringSubscription, _impl_.time_initiated_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_.time_initiated_)}},
    // optional uint32 time_next_cycle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOAccountRecurringSubscription, _impl_.time_next_cycle_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_.time_next_cycle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 time_next_cycle = 1;
    {PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_.time_next_cycle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 time_initiated = 2;
    {PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_.time_initiated_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CSOAccountRecurringSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOAccountRecurringSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.time_next_cycle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.time_initiated_) -
        reinterpret_cast<char*>(&_impl_.time_next_cycle_)) + sizeof(_impl_.time_initiated_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOAccountRecurringSubscription::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOAccountRecurringSubscription& this_ = static_cast<const CSOAccountRecurringSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOAccountRecurringSubscription::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOAccountRecurringSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOAccountRecurringSubscription)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 time_next_cycle = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_time_next_cycle(), target);
  }

  // optional uint32 time_initiated = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_time_initiated(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOAccountRecurringSubscription)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOAccountRecurringSubscription::ByteSizeLong(const MessageLite& base) {
  const CSOAccountRecurringSubscription& this_ = static_cast<const CSOAccountRecurringSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOAccountRecurringSubscription::ByteSizeLong() const {
  const CSOAccountRecurringSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOAccountRecurringSubscription)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 time_next_cycle = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_time_next_cycle());
    }
    // optional uint32 time_initiated = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_time_initiated());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOAccountRecurringSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOAccountRecurringSubscription*>(&to_msg);
  auto& from = static_cast<const CSOAccountRecurringSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOAccountRecurringSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.time_next_cycle_ = from._impl_.time_next_cycle_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.time_initiated_ = from._impl_.time_initiated_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOAccountRecurringSubscription::CopyFrom(const CSOAccountRecurringSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOAccountRecurringSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOAccountRecurringSubscription::InternalSwap(CSOAccountRecurringSubscription* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_.time_initiated_)
      + sizeof(CSOAccountRecurringSubscription::_impl_.time_initiated_)
      - PROTOBUF_FIELD_OFFSET(CSOAccountRecurringSubscription, _impl_.time_next_cycle_)>(
          reinterpret_cast<char*>(&_impl_.time_next_cycle_),
          reinterpret_cast<char*>(&other->_impl_.time_next_cycle_));
}

::google::protobuf::Metadata CSOAccountRecurringSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CSOPersonaDataPublic::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CSOPersonaDataPublic>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_._has_bits_);
};

CSOPersonaDataPublic::CSOPersonaDataPublic(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOPersonaDataPublic_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSOPersonaDataPublic)
}
PROTOBUF_NDEBUG_INLINE CSOPersonaDataPublic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CSOPersonaDataPublic& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CSOPersonaDataPublic::CSOPersonaDataPublic(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CSOPersonaDataPublic& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CSOPersonaDataPublic_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CSOPersonaDataPublic* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.commendation_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commendation_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, player_level_),
           offsetof(Impl_, xp_trail_level_) -
               offsetof(Impl_, player_level_) +
               sizeof(Impl_::xp_trail_level_));

  // @@protoc_insertion_point(copy_constructor:CSOPersonaDataPublic)
}
PROTOBUF_NDEBUG_INLINE CSOPersonaDataPublic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CSOPersonaDataPublic::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, commendation_),
           0,
           offsetof(Impl_, xp_trail_level_) -
               offsetof(Impl_, commendation_) +
               sizeof(Impl_::xp_trail_level_));
}
CSOPersonaDataPublic::~CSOPersonaDataPublic() {
  // @@protoc_insertion_point(destructor:CSOPersonaDataPublic)
  SharedDtor(*this);
}
inline void CSOPersonaDataPublic::SharedDtor(MessageLite& self) {
  CSOPersonaDataPublic& this_ = static_cast<CSOPersonaDataPublic&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.commendation_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CSOPersonaDataPublic::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CSOPersonaDataPublic(arena);
}
constexpr auto CSOPersonaDataPublic::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CSOPersonaDataPublic),
                                            alignof(CSOPersonaDataPublic));
}
constexpr auto CSOPersonaDataPublic::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CSOPersonaDataPublic_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CSOPersonaDataPublic::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CSOPersonaDataPublic>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CSOPersonaDataPublic::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CSOPersonaDataPublic>(), &CSOPersonaDataPublic::ByteSizeLong,
              &CSOPersonaDataPublic::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_._cached_size_),
          false,
      },
      &CSOPersonaDataPublic::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CSOPersonaDataPublic_class_data_ =
            CSOPersonaDataPublic::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CSOPersonaDataPublic::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CSOPersonaDataPublic_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CSOPersonaDataPublic_class_data_.tc_table);
  return CSOPersonaDataPublic_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2>
CSOPersonaDataPublic::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CSOPersonaDataPublic_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSOPersonaDataPublic>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 player_level = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOPersonaDataPublic, _impl_.player_level_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.player_level_)}},
    // optional .PlayerCommendationInfo commendation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.commendation_)}},
    // optional bool elevated_state = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSOPersonaDataPublic, _impl_.elevated_state_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.elevated_state_)}},
    // optional uint32 xp_trail_timestamp_refresh = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOPersonaDataPublic, _impl_.xp_trail_timestamp_refresh_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.xp_trail_timestamp_refresh_)}},
    // optional uint32 xp_trail_level = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSOPersonaDataPublic, _impl_.xp_trail_level_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.xp_trail_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 player_level = 1;
    {PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.player_level_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .PlayerCommendationInfo commendation = 2;
    {PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.commendation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool elevated_state = 3;
    {PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.elevated_state_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 xp_trail_timestamp_refresh = 4;
    {PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.xp_trail_timestamp_refresh_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 xp_trail_level = 5;
    {PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.xp_trail_level_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerCommendationInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CSOPersonaDataPublic::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOPersonaDataPublic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.commendation_ != nullptr);
    _impl_.commendation_->Clear();
  }
  if ((cached_has_bits & 0x0000001eu) != 0) {
    ::memset(&_impl_.player_level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.xp_trail_level_) -
        reinterpret_cast<char*>(&_impl_.player_level_)) + sizeof(_impl_.xp_trail_level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CSOPersonaDataPublic::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CSOPersonaDataPublic& this_ = static_cast<const CSOPersonaDataPublic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CSOPersonaDataPublic::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CSOPersonaDataPublic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CSOPersonaDataPublic)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 player_level = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_player_level(), target);
  }

  // optional .PlayerCommendationInfo commendation = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.commendation_, this_._impl_.commendation_->GetCachedSize(), target,
        stream);
  }

  // optional bool elevated_state = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_elevated_state(), target);
  }

  // optional uint32 xp_trail_timestamp_refresh = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_xp_trail_timestamp_refresh(), target);
  }

  // optional uint32 xp_trail_level = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_xp_trail_level(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOPersonaDataPublic)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CSOPersonaDataPublic::ByteSizeLong(const MessageLite& base) {
  const CSOPersonaDataPublic& this_ = static_cast<const CSOPersonaDataPublic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CSOPersonaDataPublic::ByteSizeLong() const {
  const CSOPersonaDataPublic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CSOPersonaDataPublic)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000001bu) != 0) {
    // optional .PlayerCommendationInfo commendation = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commendation_);
    }
    // optional int32 player_level = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_player_level());
    }
    // optional uint32 xp_trail_timestamp_refresh = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_xp_trail_timestamp_refresh());
    }
    // optional uint32 xp_trail_level = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_xp_trail_level());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CSOPersonaDataPublic::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSOPersonaDataPublic*>(&to_msg);
  auto& from = static_cast<const CSOPersonaDataPublic&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CSOPersonaDataPublic)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.commendation_ != nullptr);
      if (_this->_impl_.commendation_ == nullptr) {
        _this->_impl_.commendation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commendation_);
      } else {
        _this->_impl_.commendation_->MergeFrom(*from._impl_.commendation_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.player_level_ = from._impl_.player_level_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.elevated_state_ = from._impl_.elevated_state_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.xp_trail_timestamp_refresh_ = from._impl_.xp_trail_timestamp_refresh_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.xp_trail_level_ = from._impl_.xp_trail_level_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSOPersonaDataPublic::CopyFrom(const CSOPersonaDataPublic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOPersonaDataPublic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSOPersonaDataPublic::InternalSwap(CSOPersonaDataPublic* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.xp_trail_level_)
      + sizeof(CSOPersonaDataPublic::_impl_.xp_trail_level_)
      - PROTOBUF_FIELD_OFFSET(CSOPersonaDataPublic, _impl_.commendation_)>(
          reinterpret_cast<char*>(&_impl_.commendation_),
          reinterpret_cast<char*>(&other->_impl_.commendation_));
}

::google::protobuf::Metadata CSOPersonaDataPublic::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GC2ClientNotifyXPShop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.prematch_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.prematch_)
                : nullptr;
  _impl_.postmatch_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.postmatch_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_xp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, current_xp_),
           offsetof(Impl_, current_level_) -
               offsetof(Impl_, current_xp_) +
               sizeof(Impl_::current_level_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, prematch_),
           0,
           offsetof(Impl_, current_level_) -
               offsetof(Impl_, prematch_) +
               sizeof(Impl_::current_level_));
}
CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::~CMsgGCCStrike15_v2_GC2ClientNotifyXPShop() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& this_ = static_cast<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.prematch_;
  delete this_._impl_.postmatch_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ClientNotifyXPShop(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop),
                                            alignof(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop));
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop>(), &CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_ =
            CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_GC2ClientNotifyXPShop_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 current_level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_level_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_level_)}},
    // optional .CSOAccountXpShop prematch = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.prematch_)}},
    // optional .CSOAccountXpShop postmatch = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.postmatch_)}},
    // optional uint32 current_xp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_xp_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_xp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSOAccountXpShop prematch = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.prematch_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CSOAccountXpShop postmatch = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.postmatch_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 current_xp = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_xp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 current_level = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_level_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CSOAccountXpShop>()},
      {::_pbi::TcParser::GetTable<::CSOAccountXpShop>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.prematch_ != nullptr);
      _impl_.prematch_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.postmatch_ != nullptr);
      _impl_.postmatch_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.current_xp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.current_level_) -
        reinterpret_cast<char*>(&_impl_.current_xp_)) + sizeof(_impl_.current_level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CSOAccountXpShop prematch = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.prematch_, this_._impl_.prematch_->GetCachedSize(), target,
        stream);
  }

  // optional .CSOAccountXpShop postmatch = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.postmatch_, this_._impl_.postmatch_->GetCachedSize(), target,
        stream);
  }

  // optional uint32 current_xp = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_current_xp(), target);
  }

  // optional uint32 current_level = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_current_level(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .CSOAccountXpShop prematch = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.prematch_);
    }
    // optional .CSOAccountXpShop postmatch = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.postmatch_);
    }
    // optional uint32 current_xp = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_current_xp());
    }
    // optional uint32 current_level = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_current_level());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.prematch_ != nullptr);
      if (_this->_impl_.prematch_ == nullptr) {
        _this->_impl_.prematch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.prematch_);
      } else {
        _this->_impl_.prematch_->MergeFrom(*from._impl_.prematch_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.postmatch_ != nullptr);
      if (_this->_impl_.postmatch_ == nullptr) {
        _this->_impl_.postmatch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.postmatch_);
      } else {
        _this->_impl_.postmatch_->MergeFrom(*from._impl_.postmatch_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.current_xp_ = from._impl_.current_xp_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.current_level_ = from._impl_.current_level_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::CopyFrom(const CMsgGCCStrike15_v2_GC2ClientNotifyXPShop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ClientNotifyXPShop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::InternalSwap(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.current_level_)
      + sizeof(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::_impl_.current_level_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop, _impl_.prematch_)>(
          reinterpret_cast<char*>(&_impl_.prematch_),
          reinterpret_cast<char*>(&other->_impl_.prematch_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ClientNotifyXPShop::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::_Internal {
 public:
};

CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Client2GcAckXPShopTracks)
}
CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Client2GcAckXPShopTracks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Client2GcAckXPShopTracks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Client2GcAckXPShopTracks)
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Client2GcAckXPShopTracks(arena);
}
constexpr auto CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks),
                                            alignof(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks));
}
constexpr auto CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CMsgGCCStrike15_v2_Client2GcAckXPShopTracks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CMsgGCCStrike15_v2_Client2GcAckXPShopTracks>(), &CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::ByteSizeLong,
              &CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_ =
            CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Client2GcAckXPShopTracks_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata CMsgGCCStrike15_v2_Client2GcAckXPShopTracks::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGC_GlobalGame_Subscribe::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGC_GlobalGame_Subscribe>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Subscribe, _impl_._has_bits_);
};

CMsgGC_GlobalGame_Subscribe::CMsgGC_GlobalGame_Subscribe(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_GlobalGame_Subscribe_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGC_GlobalGame_Subscribe)
}
CMsgGC_GlobalGame_Subscribe::CMsgGC_GlobalGame_Subscribe(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGC_GlobalGame_Subscribe& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_GlobalGame_Subscribe_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGC_GlobalGame_Subscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGC_GlobalGame_Subscribe::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ticket_ = {};
}
CMsgGC_GlobalGame_Subscribe::~CMsgGC_GlobalGame_Subscribe() {
  // @@protoc_insertion_point(destructor:CMsgGC_GlobalGame_Subscribe)
  SharedDtor(*this);
}
inline void CMsgGC_GlobalGame_Subscribe::SharedDtor(MessageLite& self) {
  CMsgGC_GlobalGame_Subscribe& this_ = static_cast<CMsgGC_GlobalGame_Subscribe&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGC_GlobalGame_Subscribe::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGC_GlobalGame_Subscribe(arena);
}
constexpr auto CMsgGC_GlobalGame_Subscribe::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGC_GlobalGame_Subscribe),
                                            alignof(CMsgGC_GlobalGame_Subscribe));
}
constexpr auto CMsgGC_GlobalGame_Subscribe::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGC_GlobalGame_Subscribe_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGC_GlobalGame_Subscribe::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGC_GlobalGame_Subscribe>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGC_GlobalGame_Subscribe::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGC_GlobalGame_Subscribe>(), &CMsgGC_GlobalGame_Subscribe::ByteSizeLong,
              &CMsgGC_GlobalGame_Subscribe::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Subscribe, _impl_._cached_size_),
          false,
      },
      &CMsgGC_GlobalGame_Subscribe::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGC_GlobalGame_Subscribe_class_data_ =
            CMsgGC_GlobalGame_Subscribe::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGC_GlobalGame_Subscribe::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGC_GlobalGame_Subscribe_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGC_GlobalGame_Subscribe_class_data_.tc_table);
  return CMsgGC_GlobalGame_Subscribe_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGC_GlobalGame_Subscribe::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Subscribe, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGC_GlobalGame_Subscribe_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGC_GlobalGame_Subscribe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 ticket = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGC_GlobalGame_Subscribe, _impl_.ticket_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Subscribe, _impl_.ticket_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 ticket = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Subscribe, _impl_.ticket_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGC_GlobalGame_Subscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGC_GlobalGame_Subscribe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ticket_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGC_GlobalGame_Subscribe::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGC_GlobalGame_Subscribe& this_ = static_cast<const CMsgGC_GlobalGame_Subscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGC_GlobalGame_Subscribe::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGC_GlobalGame_Subscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGC_GlobalGame_Subscribe)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 ticket = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_ticket(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGC_GlobalGame_Subscribe)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGC_GlobalGame_Subscribe::ByteSizeLong(const MessageLite& base) {
  const CMsgGC_GlobalGame_Subscribe& this_ = static_cast<const CMsgGC_GlobalGame_Subscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGC_GlobalGame_Subscribe::ByteSizeLong() const {
  const CMsgGC_GlobalGame_Subscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGC_GlobalGame_Subscribe)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint64 ticket = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_ticket());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGC_GlobalGame_Subscribe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGC_GlobalGame_Subscribe*>(&to_msg);
  auto& from = static_cast<const CMsgGC_GlobalGame_Subscribe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGC_GlobalGame_Subscribe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.ticket_ = from._impl_.ticket_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGC_GlobalGame_Subscribe::CopyFrom(const CMsgGC_GlobalGame_Subscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGC_GlobalGame_Subscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGC_GlobalGame_Subscribe::InternalSwap(CMsgGC_GlobalGame_Subscribe* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ticket_, other->_impl_.ticket_);
}

::google::protobuf::Metadata CMsgGC_GlobalGame_Subscribe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGC_GlobalGame_Unsubscribe::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGC_GlobalGame_Unsubscribe>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Unsubscribe, _impl_._has_bits_);
};

CMsgGC_GlobalGame_Unsubscribe::CMsgGC_GlobalGame_Unsubscribe(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_GlobalGame_Unsubscribe_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGC_GlobalGame_Unsubscribe)
}
CMsgGC_GlobalGame_Unsubscribe::CMsgGC_GlobalGame_Unsubscribe(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGC_GlobalGame_Unsubscribe& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_GlobalGame_Unsubscribe_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGC_GlobalGame_Unsubscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGC_GlobalGame_Unsubscribe::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timeleft_ = {};
}
CMsgGC_GlobalGame_Unsubscribe::~CMsgGC_GlobalGame_Unsubscribe() {
  // @@protoc_insertion_point(destructor:CMsgGC_GlobalGame_Unsubscribe)
  SharedDtor(*this);
}
inline void CMsgGC_GlobalGame_Unsubscribe::SharedDtor(MessageLite& self) {
  CMsgGC_GlobalGame_Unsubscribe& this_ = static_cast<CMsgGC_GlobalGame_Unsubscribe&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGC_GlobalGame_Unsubscribe::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGC_GlobalGame_Unsubscribe(arena);
}
constexpr auto CMsgGC_GlobalGame_Unsubscribe::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGC_GlobalGame_Unsubscribe),
                                            alignof(CMsgGC_GlobalGame_Unsubscribe));
}
constexpr auto CMsgGC_GlobalGame_Unsubscribe::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGC_GlobalGame_Unsubscribe_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGC_GlobalGame_Unsubscribe::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGC_GlobalGame_Unsubscribe>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGC_GlobalGame_Unsubscribe::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGC_GlobalGame_Unsubscribe>(), &CMsgGC_GlobalGame_Unsubscribe::ByteSizeLong,
              &CMsgGC_GlobalGame_Unsubscribe::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Unsubscribe, _impl_._cached_size_),
          false,
      },
      &CMsgGC_GlobalGame_Unsubscribe::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGC_GlobalGame_Unsubscribe_class_data_ =
            CMsgGC_GlobalGame_Unsubscribe::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGC_GlobalGame_Unsubscribe::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGC_GlobalGame_Unsubscribe_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGC_GlobalGame_Unsubscribe_class_data_.tc_table);
  return CMsgGC_GlobalGame_Unsubscribe_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGC_GlobalGame_Unsubscribe::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Unsubscribe, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGC_GlobalGame_Unsubscribe_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGC_GlobalGame_Unsubscribe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 timeleft = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGC_GlobalGame_Unsubscribe, _impl_.timeleft_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Unsubscribe, _impl_.timeleft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 timeleft = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Unsubscribe, _impl_.timeleft_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGC_GlobalGame_Unsubscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGC_GlobalGame_Unsubscribe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timeleft_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGC_GlobalGame_Unsubscribe::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGC_GlobalGame_Unsubscribe& this_ = static_cast<const CMsgGC_GlobalGame_Unsubscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGC_GlobalGame_Unsubscribe::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGC_GlobalGame_Unsubscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGC_GlobalGame_Unsubscribe)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 timeleft = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_timeleft(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGC_GlobalGame_Unsubscribe)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGC_GlobalGame_Unsubscribe::ByteSizeLong(const MessageLite& base) {
  const CMsgGC_GlobalGame_Unsubscribe& this_ = static_cast<const CMsgGC_GlobalGame_Unsubscribe&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGC_GlobalGame_Unsubscribe::ByteSizeLong() const {
  const CMsgGC_GlobalGame_Unsubscribe& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGC_GlobalGame_Unsubscribe)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional int32 timeleft = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_timeleft());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGC_GlobalGame_Unsubscribe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGC_GlobalGame_Unsubscribe*>(&to_msg);
  auto& from = static_cast<const CMsgGC_GlobalGame_Unsubscribe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGC_GlobalGame_Unsubscribe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.timeleft_ = from._impl_.timeleft_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGC_GlobalGame_Unsubscribe::CopyFrom(const CMsgGC_GlobalGame_Unsubscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGC_GlobalGame_Unsubscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGC_GlobalGame_Unsubscribe::InternalSwap(CMsgGC_GlobalGame_Unsubscribe* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.timeleft_, other->_impl_.timeleft_);
}

::google::protobuf::Metadata CMsgGC_GlobalGame_Unsubscribe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGC_GlobalGame_Play::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGC_GlobalGame_Play>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_._has_bits_);
};

CMsgGC_GlobalGame_Play::CMsgGC_GlobalGame_Play(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_GlobalGame_Play_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGC_GlobalGame_Play)
}
CMsgGC_GlobalGame_Play::CMsgGC_GlobalGame_Play(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGC_GlobalGame_Play& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGC_GlobalGame_Play_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGC_GlobalGame_Play::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGC_GlobalGame_Play::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ticket_),
           0,
           offsetof(Impl_, msperpoint_) -
               offsetof(Impl_, ticket_) +
               sizeof(Impl_::msperpoint_));
}
CMsgGC_GlobalGame_Play::~CMsgGC_GlobalGame_Play() {
  // @@protoc_insertion_point(destructor:CMsgGC_GlobalGame_Play)
  SharedDtor(*this);
}
inline void CMsgGC_GlobalGame_Play::SharedDtor(MessageLite& self) {
  CMsgGC_GlobalGame_Play& this_ = static_cast<CMsgGC_GlobalGame_Play&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGC_GlobalGame_Play::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGC_GlobalGame_Play(arena);
}
constexpr auto CMsgGC_GlobalGame_Play::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGC_GlobalGame_Play),
                                            alignof(CMsgGC_GlobalGame_Play));
}
constexpr auto CMsgGC_GlobalGame_Play::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGC_GlobalGame_Play_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGC_GlobalGame_Play::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGC_GlobalGame_Play>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGC_GlobalGame_Play::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGC_GlobalGame_Play>(), &CMsgGC_GlobalGame_Play::ByteSizeLong,
              &CMsgGC_GlobalGame_Play::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_._cached_size_),
          false,
      },
      &CMsgGC_GlobalGame_Play::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGC_GlobalGame_Play_class_data_ =
            CMsgGC_GlobalGame_Play::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGC_GlobalGame_Play::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGC_GlobalGame_Play_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGC_GlobalGame_Play_class_data_.tc_table);
  return CMsgGC_GlobalGame_Play_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGC_GlobalGame_Play::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGC_GlobalGame_Play_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGC_GlobalGame_Play>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 ticket = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGC_GlobalGame_Play, _impl_.ticket_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.ticket_)}},
    // optional uint32 gametimems = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGC_GlobalGame_Play, _impl_.gametimems_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.gametimems_)}},
    // optional uint32 msperpoint = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGC_GlobalGame_Play, _impl_.msperpoint_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.msperpoint_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 ticket = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.ticket_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 gametimems = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.gametimems_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 msperpoint = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.msperpoint_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGC_GlobalGame_Play::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGC_GlobalGame_Play)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.ticket_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.msperpoint_) -
        reinterpret_cast<char*>(&_impl_.ticket_)) + sizeof(_impl_.msperpoint_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGC_GlobalGame_Play::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGC_GlobalGame_Play& this_ = static_cast<const CMsgGC_GlobalGame_Play&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGC_GlobalGame_Play::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGC_GlobalGame_Play& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGC_GlobalGame_Play)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 ticket = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_ticket(), target);
  }

  // optional uint32 gametimems = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_gametimems(), target);
  }

  // optional uint32 msperpoint = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_msperpoint(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGC_GlobalGame_Play)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGC_GlobalGame_Play::ByteSizeLong(const MessageLite& base) {
  const CMsgGC_GlobalGame_Play& this_ = static_cast<const CMsgGC_GlobalGame_Play&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGC_GlobalGame_Play::ByteSizeLong() const {
  const CMsgGC_GlobalGame_Play& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGC_GlobalGame_Play)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint64 ticket = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_ticket());
    }
    // optional uint32 gametimems = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_gametimems());
    }
    // optional uint32 msperpoint = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_msperpoint());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGC_GlobalGame_Play::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGC_GlobalGame_Play*>(&to_msg);
  auto& from = static_cast<const CMsgGC_GlobalGame_Play&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGC_GlobalGame_Play)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.ticket_ = from._impl_.ticket_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.gametimems_ = from._impl_.gametimems_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.msperpoint_ = from._impl_.msperpoint_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGC_GlobalGame_Play::CopyFrom(const CMsgGC_GlobalGame_Play& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGC_GlobalGame_Play)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGC_GlobalGame_Play::InternalSwap(CMsgGC_GlobalGame_Play* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.msperpoint_)
      + sizeof(CMsgGC_GlobalGame_Play::_impl_.msperpoint_)
      - PROTOBUF_FIELD_OFFSET(CMsgGC_GlobalGame_Play, _impl_.ticket_)>(
          reinterpret_cast<char*>(&_impl_.ticket_),
          reinterpret_cast<char*>(&other->_impl_.ticket_));
}

::google::protobuf::Metadata CMsgGC_GlobalGame_Play::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_AcknowledgePenalty::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_AcknowledgePenalty>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_AcknowledgePenalty::CMsgGCCStrike15_v2_AcknowledgePenalty(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_AcknowledgePenalty)
}
CMsgGCCStrike15_v2_AcknowledgePenalty::CMsgGCCStrike15_v2_AcknowledgePenalty(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_AcknowledgePenalty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_AcknowledgePenalty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_AcknowledgePenalty::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.acknowledged_ = {};
}
CMsgGCCStrike15_v2_AcknowledgePenalty::~CMsgGCCStrike15_v2_AcknowledgePenalty() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_AcknowledgePenalty)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_AcknowledgePenalty::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_AcknowledgePenalty& this_ = static_cast<CMsgGCCStrike15_v2_AcknowledgePenalty&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AcknowledgePenalty::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_AcknowledgePenalty(arena);
}
constexpr auto CMsgGCCStrike15_v2_AcknowledgePenalty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_AcknowledgePenalty),
                                            alignof(CMsgGCCStrike15_v2_AcknowledgePenalty));
}
constexpr auto CMsgGCCStrike15_v2_AcknowledgePenalty::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_AcknowledgePenalty_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_AcknowledgePenalty::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_AcknowledgePenalty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_AcknowledgePenalty::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_AcknowledgePenalty>(), &CMsgGCCStrike15_v2_AcknowledgePenalty::ByteSizeLong,
              &CMsgGCCStrike15_v2_AcknowledgePenalty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_AcknowledgePenalty::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_ =
            CMsgGCCStrike15_v2_AcknowledgePenalty::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AcknowledgePenalty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_.tc_table);
  return CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_AcknowledgePenalty::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_AcknowledgePenalty_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_AcknowledgePenalty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 acknowledged = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_.acknowledged_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_.acknowledged_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 acknowledged = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_AcknowledgePenalty, _impl_.acknowledged_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_AcknowledgePenalty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_AcknowledgePenalty)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.acknowledged_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AcknowledgePenalty::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_AcknowledgePenalty& this_ = static_cast<const CMsgGCCStrike15_v2_AcknowledgePenalty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_AcknowledgePenalty::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_AcknowledgePenalty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_AcknowledgePenalty)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 acknowledged = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_acknowledged(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_AcknowledgePenalty)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_AcknowledgePenalty::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_AcknowledgePenalty& this_ = static_cast<const CMsgGCCStrike15_v2_AcknowledgePenalty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_AcknowledgePenalty::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_AcknowledgePenalty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_AcknowledgePenalty)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional int32 acknowledged = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_acknowledged());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_AcknowledgePenalty::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_AcknowledgePenalty*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_AcknowledgePenalty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_AcknowledgePenalty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.acknowledged_ = from._impl_.acknowledged_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_AcknowledgePenalty::CopyFrom(const CMsgGCCStrike15_v2_AcknowledgePenalty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_AcknowledgePenalty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_AcknowledgePenalty::InternalSwap(CMsgGCCStrike15_v2_AcknowledgePenalty* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.acknowledged_, other->_impl_.acknowledged_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_AcknowledgePenalty::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
}
CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, upgradeid_),
           0,
           offsetof(Impl_, prestigetime_) -
               offsetof(Impl_, upgradeid_) +
               sizeof(Impl_::prestigetime_));
}
CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::~CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin& this_ = static_cast<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin(arena);
}
constexpr auto CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin),
                                            alignof(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin));
}
constexpr auto CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin>(), &CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::ByteSizeLong,
              &CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_ =
            CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 prestigetime = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.prestigetime_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.prestigetime_)}},
    // optional uint32 defindex = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.defindex_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.defindex_)}},
    // optional uint64 upgradeid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.upgradeid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.upgradeid_)}},
    // optional uint32 hours = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.hours_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.hours_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 defindex = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.defindex_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 upgradeid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.upgradeid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 hours = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.hours_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 prestigetime = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.prestigetime_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.upgradeid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.prestigetime_) -
        reinterpret_cast<char*>(&_impl_.upgradeid_)) + sizeof(_impl_.prestigetime_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 defindex = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_defindex(), target);
  }

  // optional uint64 upgradeid = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_upgradeid(), target);
  }

  // optional uint32 hours = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_hours(), target);
  }

  // optional uint32 prestigetime = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_prestigetime(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional uint64 upgradeid = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_upgradeid());
    }
    // optional uint32 defindex = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_defindex());
    }
    // optional uint32 hours = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_hours());
    }
    // optional uint32 prestigetime = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_prestigetime());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.upgradeid_ = from._impl_.upgradeid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.defindex_ = from._impl_.defindex_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.hours_ = from._impl_.hours_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.prestigetime_ = from._impl_.prestigetime_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::CopyFrom(const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::InternalSwap(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.prestigetime_)
      + sizeof(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::_impl_.prestigetime_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin, _impl_.upgradeid_)>(
          reinterpret_cast<char*>(&_impl_.upgradeid_),
          reinterpret_cast<char*>(&other->_impl_.upgradeid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Client2GCStreamUnlock::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Client2GCStreamUnlock>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Client2GCStreamUnlock::CMsgGCCStrike15_v2_Client2GCStreamUnlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
}
CMsgGCCStrike15_v2_Client2GCStreamUnlock::CMsgGCCStrike15_v2_Client2GCStreamUnlock(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Client2GCStreamUnlock& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Client2GCStreamUnlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Client2GCStreamUnlock::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ticket_),
           0,
           offsetof(Impl_, os_) -
               offsetof(Impl_, ticket_) +
               sizeof(Impl_::os_));
}
CMsgGCCStrike15_v2_Client2GCStreamUnlock::~CMsgGCCStrike15_v2_Client2GCStreamUnlock() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Client2GCStreamUnlock::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Client2GCStreamUnlock& this_ = static_cast<CMsgGCCStrike15_v2_Client2GCStreamUnlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCStreamUnlock::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Client2GCStreamUnlock(arena);
}
constexpr auto CMsgGCCStrike15_v2_Client2GCStreamUnlock::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Client2GCStreamUnlock),
                                            alignof(CMsgGCCStrike15_v2_Client2GCStreamUnlock));
}
constexpr auto CMsgGCCStrike15_v2_Client2GCStreamUnlock::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Client2GCStreamUnlock_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Client2GCStreamUnlock::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Client2GCStreamUnlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Client2GCStreamUnlock::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Client2GCStreamUnlock>(), &CMsgGCCStrike15_v2_Client2GCStreamUnlock::ByteSizeLong,
              &CMsgGCCStrike15_v2_Client2GCStreamUnlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Client2GCStreamUnlock::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_ =
            CMsgGCCStrike15_v2_Client2GCStreamUnlock::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCStreamUnlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_Client2GCStreamUnlock::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Client2GCStreamUnlock_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Client2GCStreamUnlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 os = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.os_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.os_)}},
    // optional uint64 ticket = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.ticket_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.ticket_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 ticket = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.ticket_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 os = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.os_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Client2GCStreamUnlock::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.ticket_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.os_) -
        reinterpret_cast<char*>(&_impl_.ticket_)) + sizeof(_impl_.os_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCStreamUnlock::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Client2GCStreamUnlock& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCStreamUnlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Client2GCStreamUnlock::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Client2GCStreamUnlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 ticket = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_ticket(), target);
  }

  // optional int32 os = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_os(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Client2GCStreamUnlock::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Client2GCStreamUnlock& this_ = static_cast<const CMsgGCCStrike15_v2_Client2GCStreamUnlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Client2GCStreamUnlock::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Client2GCStreamUnlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint64 ticket = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_ticket());
    }
    // optional int32 os = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_os());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Client2GCStreamUnlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Client2GCStreamUnlock*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Client2GCStreamUnlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.ticket_ = from._impl_.ticket_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.os_ = from._impl_.os_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Client2GCStreamUnlock::CopyFrom(const CMsgGCCStrike15_v2_Client2GCStreamUnlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Client2GCStreamUnlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Client2GCStreamUnlock::InternalSwap(CMsgGCCStrike15_v2_Client2GCStreamUnlock* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.os_)
      + sizeof(CMsgGCCStrike15_v2_Client2GCStreamUnlock::_impl_.os_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Client2GCStreamUnlock, _impl_.ticket_)>(
          reinterpret_cast<char*>(&_impl_.ticket_),
          reinterpret_cast<char*>(&other->_impl_.ticket_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Client2GCStreamUnlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientToGCRequestElevate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientToGCRequestElevate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientToGCRequestElevate::CMsgGCCStrike15_v2_ClientToGCRequestElevate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
}
CMsgGCCStrike15_v2_ClientToGCRequestElevate::CMsgGCCStrike15_v2_ClientToGCRequestElevate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientToGCRequestElevate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientToGCRequestElevate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientToGCRequestElevate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stage_ = {};
}
CMsgGCCStrike15_v2_ClientToGCRequestElevate::~CMsgGCCStrike15_v2_ClientToGCRequestElevate() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientToGCRequestElevate::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientToGCRequestElevate& this_ = static_cast<CMsgGCCStrike15_v2_ClientToGCRequestElevate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestElevate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientToGCRequestElevate(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientToGCRequestElevate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientToGCRequestElevate),
                                            alignof(CMsgGCCStrike15_v2_ClientToGCRequestElevate));
}
constexpr auto CMsgGCCStrike15_v2_ClientToGCRequestElevate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientToGCRequestElevate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientToGCRequestElevate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientToGCRequestElevate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientToGCRequestElevate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientToGCRequestElevate>(), &CMsgGCCStrike15_v2_ClientToGCRequestElevate::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientToGCRequestElevate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientToGCRequestElevate::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_ =
            CMsgGCCStrike15_v2_ClientToGCRequestElevate::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestElevate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_ClientToGCRequestElevate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientToGCRequestElevate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientToGCRequestElevate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 stage = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_.stage_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_.stage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 stage = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestElevate, _impl_.stage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientToGCRequestElevate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stage_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestElevate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientToGCRequestElevate& this_ = static_cast<const CMsgGCCStrike15_v2_ClientToGCRequestElevate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestElevate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientToGCRequestElevate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 stage = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_stage(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientToGCRequestElevate::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientToGCRequestElevate& this_ = static_cast<const CMsgGCCStrike15_v2_ClientToGCRequestElevate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientToGCRequestElevate::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientToGCRequestElevate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint32 stage = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_stage());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientToGCRequestElevate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientToGCRequestElevate*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientToGCRequestElevate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.stage_ = from._impl_.stage_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientToGCRequestElevate::CopyFrom(const CMsgGCCStrike15_v2_ClientToGCRequestElevate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientToGCRequestElevate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientToGCRequestElevate::InternalSwap(CMsgGCCStrike15_v2_ClientToGCRequestElevate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.stage_, other->_impl_.stage_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientToGCRequestElevate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientToGCChat::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientToGCChat>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCChat, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientToGCChat::CMsgGCCStrike15_v2_ClientToGCChat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientToGCChat_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientToGCChat)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientToGCChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientToGCChat& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        text_(arena, from.text_) {}

CMsgGCCStrike15_v2_ClientToGCChat::CMsgGCCStrike15_v2_ClientToGCChat(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientToGCChat& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientToGCChat_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientToGCChat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.match_id_ = from._impl_.match_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientToGCChat)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientToGCChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        text_(arena) {}

inline void CMsgGCCStrike15_v2_ClientToGCChat::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.match_id_ = {};
}
CMsgGCCStrike15_v2_ClientToGCChat::~CMsgGCCStrike15_v2_ClientToGCChat() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientToGCChat)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientToGCChat::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientToGCChat& this_ = static_cast<CMsgGCCStrike15_v2_ClientToGCChat&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCChat::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientToGCChat(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientToGCChat::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientToGCChat),
                                            alignof(CMsgGCCStrike15_v2_ClientToGCChat));
}
constexpr auto CMsgGCCStrike15_v2_ClientToGCChat::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientToGCChat_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientToGCChat::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientToGCChat>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientToGCChat::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientToGCChat>(), &CMsgGCCStrike15_v2_ClientToGCChat::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientToGCChat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCChat, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientToGCChat::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientToGCChat_class_data_ =
            CMsgGCCStrike15_v2_ClientToGCChat::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCChat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientToGCChat_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientToGCChat_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientToGCChat_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2>
CMsgGCCStrike15_v2_ClientToGCChat::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCChat, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientToGCChat_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientToGCChat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string text = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCChat, _impl_.text_)}},
    // optional uint64 match_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientToGCChat, _impl_.match_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCChat, _impl_.match_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 match_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCChat, _impl_.match_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string text = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCChat, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\4\0\0\0\0\0"
    "CMsgGCCStrike15_v2_ClientToGCChat"
    "text"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientToGCChat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientToGCChat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.text_.ClearNonDefaultToEmpty();
  }
  _impl_.match_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCChat::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientToGCChat& this_ = static_cast<const CMsgGCCStrike15_v2_ClientToGCChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCChat::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientToGCChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientToGCChat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_match_id(), target);
  }

  // optional string text = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientToGCChat.text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientToGCChat)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientToGCChat::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientToGCChat& this_ = static_cast<const CMsgGCCStrike15_v2_ClientToGCChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientToGCChat::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientToGCChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientToGCChat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string text = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_text());
    }
    // optional uint64 match_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_match_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientToGCChat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientToGCChat*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientToGCChat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientToGCChat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_text(from._internal_text());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientToGCChat::CopyFrom(const CMsgGCCStrike15_v2_ClientToGCChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientToGCChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientToGCChat::InternalSwap(CMsgGCCStrike15_v2_ClientToGCChat* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  swap(_impl_.match_id_, other->_impl_.match_id_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientToGCChat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GCToClientChat::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GCToClientChat>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GCToClientChat, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GCToClientChat::CMsgGCCStrike15_v2_GCToClientChat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GCToClientChat_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GCToClientChat)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GCToClientChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GCToClientChat& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        text_(arena, from.text_) {}

CMsgGCCStrike15_v2_GCToClientChat::CMsgGCCStrike15_v2_GCToClientChat(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GCToClientChat& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GCToClientChat_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GCToClientChat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.account_id_ = from._impl_.account_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GCToClientChat)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GCToClientChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        text_(arena) {}

inline void CMsgGCCStrike15_v2_GCToClientChat::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.account_id_ = {};
}
CMsgGCCStrike15_v2_GCToClientChat::~CMsgGCCStrike15_v2_GCToClientChat() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GCToClientChat)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GCToClientChat::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GCToClientChat& this_ = static_cast<CMsgGCCStrike15_v2_GCToClientChat&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GCToClientChat::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GCToClientChat(arena);
}
constexpr auto CMsgGCCStrike15_v2_GCToClientChat::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_GCToClientChat),
                                            alignof(CMsgGCCStrike15_v2_GCToClientChat));
}
constexpr auto CMsgGCCStrike15_v2_GCToClientChat::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GCToClientChat_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GCToClientChat::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GCToClientChat>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GCToClientChat::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GCToClientChat>(), &CMsgGCCStrike15_v2_GCToClientChat::ByteSizeLong,
              &CMsgGCCStrike15_v2_GCToClientChat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GCToClientChat, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GCToClientChat::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GCToClientChat_class_data_ =
            CMsgGCCStrike15_v2_GCToClientChat::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GCToClientChat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GCToClientChat_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GCToClientChat_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GCToClientChat_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2>
CMsgGCCStrike15_v2_GCToClientChat::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GCToClientChat, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GCToClientChat_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GCToClientChat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string text = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GCToClientChat, _impl_.text_)}},
    // optional uint32 account_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GCToClientChat, _impl_.account_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GCToClientChat, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GCToClientChat, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string text = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GCToClientChat, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\4\0\0\0\0\0"
    "CMsgGCCStrike15_v2_GCToClientChat"
    "text"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GCToClientChat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GCToClientChat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.text_.ClearNonDefaultToEmpty();
  }
  _impl_.account_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GCToClientChat::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GCToClientChat& this_ = static_cast<const CMsgGCCStrike15_v2_GCToClientChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GCToClientChat::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GCToClientChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GCToClientChat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 account_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_account_id(), target);
  }

  // optional string text = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GCToClientChat.text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GCToClientChat)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GCToClientChat::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GCToClientChat& this_ = static_cast<const CMsgGCCStrike15_v2_GCToClientChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GCToClientChat::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GCToClientChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GCToClientChat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string text = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_text());
    }
    // optional uint32 account_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_account_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GCToClientChat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GCToClientChat*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GCToClientChat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GCToClientChat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_text(from._internal_text());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GCToClientChat::CopyFrom(const CMsgGCCStrike15_v2_GCToClientChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GCToClientChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GCToClientChat::InternalSwap(CMsgGCCStrike15_v2_GCToClientChat* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  swap(_impl_.account_id_, other->_impl_.account_id_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GCToClientChat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientAuthKeyCode::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientAuthKeyCode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientAuthKeyCode::CMsgGCCStrike15_v2_ClientAuthKeyCode(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientAuthKeyCode)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientAuthKeyCode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientAuthKeyCode& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        code_(arena, from.code_) {}

CMsgGCCStrike15_v2_ClientAuthKeyCode::CMsgGCCStrike15_v2_ClientAuthKeyCode(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientAuthKeyCode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientAuthKeyCode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.eventid_ = from._impl_.eventid_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientAuthKeyCode)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientAuthKeyCode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        code_(arena) {}

inline void CMsgGCCStrike15_v2_ClientAuthKeyCode::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.eventid_ = {};
}
CMsgGCCStrike15_v2_ClientAuthKeyCode::~CMsgGCCStrike15_v2_ClientAuthKeyCode() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientAuthKeyCode)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientAuthKeyCode::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientAuthKeyCode& this_ = static_cast<CMsgGCCStrike15_v2_ClientAuthKeyCode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.code_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAuthKeyCode::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientAuthKeyCode(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientAuthKeyCode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientAuthKeyCode),
                                            alignof(CMsgGCCStrike15_v2_ClientAuthKeyCode));
}
constexpr auto CMsgGCCStrike15_v2_ClientAuthKeyCode::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientAuthKeyCode_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientAuthKeyCode::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientAuthKeyCode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientAuthKeyCode::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientAuthKeyCode>(), &CMsgGCCStrike15_v2_ClientAuthKeyCode::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientAuthKeyCode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientAuthKeyCode::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_ =
            CMsgGCCStrike15_v2_ClientAuthKeyCode::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAuthKeyCode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2>
CMsgGCCStrike15_v2_ClientAuthKeyCode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientAuthKeyCode_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientAuthKeyCode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string code = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_.code_)}},
    // optional uint32 eventid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_.eventid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_.eventid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 eventid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_.eventid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string code = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAuthKeyCode, _impl_.code_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\4\0\0\0\0\0"
    "CMsgGCCStrike15_v2_ClientAuthKeyCode"
    "code"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientAuthKeyCode::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientAuthKeyCode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.code_.ClearNonDefaultToEmpty();
  }
  _impl_.eventid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAuthKeyCode::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientAuthKeyCode& this_ = static_cast<const CMsgGCCStrike15_v2_ClientAuthKeyCode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAuthKeyCode::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientAuthKeyCode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientAuthKeyCode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 eventid = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_eventid(), target);
  }

  // optional string code = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_code();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientAuthKeyCode.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientAuthKeyCode)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientAuthKeyCode::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientAuthKeyCode& this_ = static_cast<const CMsgGCCStrike15_v2_ClientAuthKeyCode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientAuthKeyCode::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientAuthKeyCode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientAuthKeyCode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string code = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_code());
    }
    // optional uint32 eventid = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_eventid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientAuthKeyCode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientAuthKeyCode*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientAuthKeyCode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientAuthKeyCode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_code(from._internal_code());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.eventid_ = from._impl_.eventid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientAuthKeyCode::CopyFrom(const CMsgGCCStrike15_v2_ClientAuthKeyCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientAuthKeyCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientAuthKeyCode::InternalSwap(CMsgGCCStrike15_v2_ClientAuthKeyCode* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  swap(_impl_.eventid_, other->_impl_.eventid_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientAuthKeyCode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_GotvSyncPacket::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_GotvSyncPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_GotvSyncPacket, _impl_._has_bits_);
};

void CMsgGCCStrike15_GotvSyncPacket::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgGCCStrike15_GotvSyncPacket::CMsgGCCStrike15_GotvSyncPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_GotvSyncPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_GotvSyncPacket)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_GotvSyncPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_GotvSyncPacket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_GotvSyncPacket::CMsgGCCStrike15_GotvSyncPacket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_GotvSyncPacket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_GotvSyncPacket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_GotvSyncPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_GotvSyncPacket)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_GotvSyncPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_GotvSyncPacket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.data_ = {};
}
CMsgGCCStrike15_GotvSyncPacket::~CMsgGCCStrike15_GotvSyncPacket() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_GotvSyncPacket)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_GotvSyncPacket::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_GotvSyncPacket& this_ = static_cast<CMsgGCCStrike15_GotvSyncPacket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_GotvSyncPacket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_GotvSyncPacket(arena);
}
constexpr auto CMsgGCCStrike15_GotvSyncPacket::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_GotvSyncPacket),
                                            alignof(CMsgGCCStrike15_GotvSyncPacket));
}
constexpr auto CMsgGCCStrike15_GotvSyncPacket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_GotvSyncPacket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_GotvSyncPacket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_GotvSyncPacket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_GotvSyncPacket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_GotvSyncPacket>(), &CMsgGCCStrike15_GotvSyncPacket::ByteSizeLong,
              &CMsgGCCStrike15_GotvSyncPacket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_GotvSyncPacket, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_GotvSyncPacket::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_GotvSyncPacket_class_data_ =
            CMsgGCCStrike15_GotvSyncPacket::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_GotvSyncPacket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_GotvSyncPacket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_GotvSyncPacket_class_data_.tc_table);
  return CMsgGCCStrike15_GotvSyncPacket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_GotvSyncPacket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_GotvSyncPacket, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_GotvSyncPacket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_GotvSyncPacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CEngineGotvSyncPacket data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_GotvSyncPacket, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CEngineGotvSyncPacket data = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_GotvSyncPacket, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CEngineGotvSyncPacket>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_GotvSyncPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_GotvSyncPacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_GotvSyncPacket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_GotvSyncPacket& this_ = static_cast<const CMsgGCCStrike15_GotvSyncPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_GotvSyncPacket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_GotvSyncPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_GotvSyncPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CEngineGotvSyncPacket data = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_GotvSyncPacket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_GotvSyncPacket::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_GotvSyncPacket& this_ = static_cast<const CMsgGCCStrike15_GotvSyncPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_GotvSyncPacket::ByteSizeLong() const {
  const CMsgGCCStrike15_GotvSyncPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_GotvSyncPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .CEngineGotvSyncPacket data = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_GotvSyncPacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_GotvSyncPacket*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_GotvSyncPacket&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_GotvSyncPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.data_ != nullptr);
    if (_this->_impl_.data_ == nullptr) {
      _this->_impl_.data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_);
    } else {
      _this->_impl_.data_->MergeFrom(*from._impl_.data_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_GotvSyncPacket::CopyFrom(const CMsgGCCStrike15_GotvSyncPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_GotvSyncPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_GotvSyncPacket::InternalSwap(CMsgGCCStrike15_GotvSyncPacket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata CMsgGCCStrike15_GotvSyncPacket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerDecalDigitalSignature::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerDecalDigitalSignature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_._has_bits_);
};

PlayerDecalDigitalSignature::PlayerDecalDigitalSignature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerDecalDigitalSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerDecalDigitalSignature)
}
PROTOBUF_NDEBUG_INLINE PlayerDecalDigitalSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::PlayerDecalDigitalSignature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        endpos_{visibility, arena, from.endpos_},
        startpos_{visibility, arena, from.startpos_},
        left_{visibility, arena, from.left_},
        normal_{visibility, arena, from.normal_},
        signature_(arena, from.signature_) {}

PlayerDecalDigitalSignature::PlayerDecalDigitalSignature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PlayerDecalDigitalSignature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlayerDecalDigitalSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerDecalDigitalSignature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, tint_id_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::tint_id_));

  // @@protoc_insertion_point(copy_constructor:PlayerDecalDigitalSignature)
}
PROTOBUF_NDEBUG_INLINE PlayerDecalDigitalSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        endpos_{visibility, arena},
        startpos_{visibility, arena},
        left_{visibility, arena},
        normal_{visibility, arena},
        signature_(arena) {}

inline void PlayerDecalDigitalSignature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, tint_id_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::tint_id_));
}
PlayerDecalDigitalSignature::~PlayerDecalDigitalSignature() {
  // @@protoc_insertion_point(destructor:PlayerDecalDigitalSignature)
  SharedDtor(*this);
}
inline void PlayerDecalDigitalSignature::SharedDtor(MessageLite& self) {
  PlayerDecalDigitalSignature& this_ = static_cast<PlayerDecalDigitalSignature&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signature_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlayerDecalDigitalSignature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlayerDecalDigitalSignature(arena);
}
constexpr auto PlayerDecalDigitalSignature::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.endpos_) +
          decltype(PlayerDecalDigitalSignature::_impl_.endpos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.startpos_) +
          decltype(PlayerDecalDigitalSignature::_impl_.startpos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.left_) +
          decltype(PlayerDecalDigitalSignature::_impl_.left_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.normal_) +
          decltype(PlayerDecalDigitalSignature::_impl_.normal_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PlayerDecalDigitalSignature), alignof(PlayerDecalDigitalSignature), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PlayerDecalDigitalSignature::PlacementNew_,
                                 sizeof(PlayerDecalDigitalSignature),
                                 alignof(PlayerDecalDigitalSignature));
  }
}
constexpr auto PlayerDecalDigitalSignature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlayerDecalDigitalSignature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlayerDecalDigitalSignature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlayerDecalDigitalSignature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlayerDecalDigitalSignature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlayerDecalDigitalSignature>(), &PlayerDecalDigitalSignature::ByteSizeLong,
              &PlayerDecalDigitalSignature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_._cached_size_),
          false,
      },
      &PlayerDecalDigitalSignature::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PlayerDecalDigitalSignature_class_data_ =
            PlayerDecalDigitalSignature::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PlayerDecalDigitalSignature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlayerDecalDigitalSignature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlayerDecalDigitalSignature_class_data_.tc_table);
  return PlayerDecalDigitalSignature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 2>
PlayerDecalDigitalSignature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlayerDecalDigitalSignature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerDecalDigitalSignature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes signature = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.signature_)}},
    // optional uint32 accountid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.accountid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.accountid_)}},
    // optional uint32 rtime = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.rtime_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.rtime_)}},
    // repeated float endpos = 4;
    {::_pbi::TcParser::FastF32R1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.endpos_)}},
    // repeated float startpos = 5;
    {::_pbi::TcParser::FastF32R1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.startpos_)}},
    // repeated float left = 6;
    {::_pbi::TcParser::FastF32R1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.left_)}},
    // optional uint32 tx_defidx = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.tx_defidx_), 3>(),
     {56, 3, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.tx_defidx_)}},
    // optional int32 entindex = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.entindex_), 4>(),
     {64, 4, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.entindex_)}},
    // optional uint32 hitbox = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.hitbox_), 5>(),
     {72, 5, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.hitbox_)}},
    // optional float creationtime = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 6, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.creationtime_)}},
    // optional uint32 equipslot = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.equipslot_), 7>(),
     {88, 7, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.equipslot_)}},
    // optional uint32 trace_id = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.trace_id_), 8>(),
     {96, 8, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.trace_id_)}},
    // repeated float normal = 13;
    {::_pbi::TcParser::FastF32R1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.normal_)}},
    // optional uint32 tint_id = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDecalDigitalSignature, _impl_.tint_id_), 9>(),
     {112, 9, 0, PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.tint_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes signature = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 accountid = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.accountid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rtime = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.rtime_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated float endpos = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.endpos_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated float startpos = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.startpos_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated float left = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.left_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // optional uint32 tx_defidx = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.tx_defidx_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 entindex = 8;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.entindex_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 hitbox = 9;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.hitbox_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float creationtime = 10;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.creationtime_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 equipslot = 11;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.equipslot_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 trace_id = 12;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.trace_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated float normal = 13;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.normal_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // optional uint32 tint_id = 14;
    {PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.tint_id_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PlayerDecalDigitalSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerDecalDigitalSignature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.endpos_.Clear();
  _impl_.startpos_.Clear();
  _impl_.left_.Clear();
  _impl_.normal_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.signature_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.equipslot_) -
        reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.equipslot_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.trace_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tint_id_) -
        reinterpret_cast<char*>(&_impl_.trace_id_)) + sizeof(_impl_.tint_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlayerDecalDigitalSignature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlayerDecalDigitalSignature& this_ = static_cast<const PlayerDecalDigitalSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlayerDecalDigitalSignature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlayerDecalDigitalSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:PlayerDecalDigitalSignature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes signature = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_signature();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional uint32 accountid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_accountid(), target);
  }

  // optional uint32 rtime = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_rtime(), target);
  }

  // repeated float endpos = 4;
  for (int i = 0, n = this_._internal_endpos_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this_._internal_endpos().Get(i), target);
  }

  // repeated float startpos = 5;
  for (int i = 0, n = this_._internal_startpos_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this_._internal_startpos().Get(i), target);
  }

  // repeated float left = 6;
  for (int i = 0, n = this_._internal_left_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this_._internal_left().Get(i), target);
  }

  // optional uint32 tx_defidx = 7;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_tx_defidx(), target);
  }

  // optional int32 entindex = 8;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
            stream, this_._internal_entindex(), target);
  }

  // optional uint32 hitbox = 9;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_hitbox(), target);
  }

  // optional float creationtime = 10;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this_._internal_creationtime(), target);
  }

  // optional uint32 equipslot = 11;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_equipslot(), target);
  }

  // optional uint32 trace_id = 12;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_trace_id(), target);
  }

  // repeated float normal = 13;
  for (int i = 0, n = this_._internal_normal_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        13, this_._internal_normal().Get(i), target);
  }

  // optional uint32 tint_id = 14;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this_._internal_tint_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerDecalDigitalSignature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlayerDecalDigitalSignature::ByteSizeLong(const MessageLite& base) {
  const PlayerDecalDigitalSignature& this_ = static_cast<const PlayerDecalDigitalSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlayerDecalDigitalSignature::ByteSizeLong() const {
  const PlayerDecalDigitalSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:PlayerDecalDigitalSignature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated float endpos = 4;
    {
      std::size_t data_size = std::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_endpos_size());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_endpos_size());
      total_size += tag_size + data_size;
    }
    // repeated float startpos = 5;
    {
      std::size_t data_size = std::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_startpos_size());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_startpos_size());
      total_size += tag_size + data_size;
    }
    // repeated float left = 6;
    {
      std::size_t data_size = std::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_left_size());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_left_size());
      total_size += tag_size + data_size;
    }
    // repeated float normal = 13;
    {
      std::size_t data_size = std::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_normal_size());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_normal_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000040u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x000000bfu) != 0) {
    // optional bytes signature = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_signature());
    }
    // optional uint32 accountid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 rtime = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rtime());
    }
    // optional uint32 tx_defidx = 7;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tx_defidx());
    }
    // optional int32 entindex = 8;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_entindex());
    }
    // optional uint32 hitbox = 9;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_hitbox());
    }
    // optional uint32 equipslot = 11;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_equipslot());
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // optional uint32 trace_id = 12;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_trace_id());
    }
    // optional uint32 tint_id = 14;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_tint_id());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlayerDecalDigitalSignature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerDecalDigitalSignature*>(&to_msg);
  auto& from = static_cast<const PlayerDecalDigitalSignature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerDecalDigitalSignature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_endpos()->MergeFrom(from._internal_endpos());
  _this->_internal_mutable_startpos()->MergeFrom(from._internal_startpos());
  _this->_internal_mutable_left()->MergeFrom(from._internal_left());
  _this->_internal_mutable_normal()->MergeFrom(from._internal_normal());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_signature(from._internal_signature());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.rtime_ = from._impl_.rtime_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.tx_defidx_ = from._impl_.tx_defidx_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.entindex_ = from._impl_.entindex_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.hitbox_ = from._impl_.hitbox_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.creationtime_ = from._impl_.creationtime_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.equipslot_ = from._impl_.equipslot_;
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.trace_id_ = from._impl_.trace_id_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.tint_id_ = from._impl_.tint_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerDecalDigitalSignature::CopyFrom(const PlayerDecalDigitalSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerDecalDigitalSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerDecalDigitalSignature::InternalSwap(PlayerDecalDigitalSignature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.endpos_.InternalSwap(&other->_impl_.endpos_);
  _impl_.startpos_.InternalSwap(&other->_impl_.startpos_);
  _impl_.left_.InternalSwap(&other->_impl_.left_);
  _impl_.normal_.InternalSwap(&other->_impl_.normal_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.tint_id_)
      + sizeof(PlayerDecalDigitalSignature::_impl_.tint_id_)
      - PROTOBUF_FIELD_OFFSET(PlayerDecalDigitalSignature, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata PlayerDecalDigitalSignature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientPlayerDecalSign::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientPlayerDecalSign>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientPlayerDecalSign::CMsgGCCStrike15_v2_ClientPlayerDecalSign(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPlayerDecalSign::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientPlayerDecalSign& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_ClientPlayerDecalSign::CMsgGCCStrike15_v2_ClientPlayerDecalSign(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientPlayerDecalSign& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientPlayerDecalSign* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_)
                : nullptr;
  _impl_.itemid_ = from._impl_.itemid_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPlayerDecalSign::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientPlayerDecalSign::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_),
           0,
           offsetof(Impl_, itemid_) -
               offsetof(Impl_, data_) +
               sizeof(Impl_::itemid_));
}
CMsgGCCStrike15_v2_ClientPlayerDecalSign::~CMsgGCCStrike15_v2_ClientPlayerDecalSign() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientPlayerDecalSign::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientPlayerDecalSign& this_ = static_cast<CMsgGCCStrike15_v2_ClientPlayerDecalSign&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPlayerDecalSign::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientPlayerDecalSign(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientPlayerDecalSign::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientPlayerDecalSign),
                                            alignof(CMsgGCCStrike15_v2_ClientPlayerDecalSign));
}
constexpr auto CMsgGCCStrike15_v2_ClientPlayerDecalSign::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientPlayerDecalSign_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientPlayerDecalSign::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientPlayerDecalSign>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientPlayerDecalSign::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientPlayerDecalSign>(), &CMsgGCCStrike15_v2_ClientPlayerDecalSign::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientPlayerDecalSign::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientPlayerDecalSign::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_ =
            CMsgGCCStrike15_v2_ClientPlayerDecalSign::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPlayerDecalSign::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgGCCStrike15_v2_ClientPlayerDecalSign::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientPlayerDecalSign_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPlayerDecalSign>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 itemid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.itemid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.itemid_)}},
    // optional .PlayerDecalDigitalSignature data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .PlayerDecalDigitalSignature data = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 itemid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.itemid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::PlayerDecalDigitalSignature>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientPlayerDecalSign::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_.itemid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPlayerDecalSign::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientPlayerDecalSign& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPlayerDecalSign&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPlayerDecalSign::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientPlayerDecalSign& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .PlayerDecalDigitalSignature data = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
        stream);
  }

  // optional uint64 itemid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_itemid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientPlayerDecalSign::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientPlayerDecalSign& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPlayerDecalSign&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientPlayerDecalSign::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientPlayerDecalSign& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .PlayerDecalDigitalSignature data = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
    }
    // optional uint64 itemid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_itemid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientPlayerDecalSign::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientPlayerDecalSign*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientPlayerDecalSign&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.itemid_ = from._impl_.itemid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientPlayerDecalSign::CopyFrom(const CMsgGCCStrike15_v2_ClientPlayerDecalSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientPlayerDecalSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientPlayerDecalSign::InternalSwap(CMsgGCCStrike15_v2_ClientPlayerDecalSign* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.itemid_)
      + sizeof(CMsgGCCStrike15_v2_ClientPlayerDecalSign::_impl_.itemid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPlayerDecalSign, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientPlayerDecalSign::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_BetaEnrollment::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_BetaEnrollment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_BetaEnrollment, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_BetaEnrollment::CMsgGCCStrike15_v2_BetaEnrollment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_BetaEnrollment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_BetaEnrollment)
}
CMsgGCCStrike15_v2_BetaEnrollment::CMsgGCCStrike15_v2_BetaEnrollment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_BetaEnrollment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_BetaEnrollment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_BetaEnrollment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_BetaEnrollment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.eresult_ = {};
}
CMsgGCCStrike15_v2_BetaEnrollment::~CMsgGCCStrike15_v2_BetaEnrollment() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_BetaEnrollment)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_BetaEnrollment::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_BetaEnrollment& this_ = static_cast<CMsgGCCStrike15_v2_BetaEnrollment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_BetaEnrollment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_BetaEnrollment(arena);
}
constexpr auto CMsgGCCStrike15_v2_BetaEnrollment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_BetaEnrollment),
                                            alignof(CMsgGCCStrike15_v2_BetaEnrollment));
}
constexpr auto CMsgGCCStrike15_v2_BetaEnrollment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_BetaEnrollment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_BetaEnrollment::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_BetaEnrollment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_BetaEnrollment::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_BetaEnrollment>(), &CMsgGCCStrike15_v2_BetaEnrollment::ByteSizeLong,
              &CMsgGCCStrike15_v2_BetaEnrollment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_BetaEnrollment, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_BetaEnrollment::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_BetaEnrollment_class_data_ =
            CMsgGCCStrike15_v2_BetaEnrollment::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_BetaEnrollment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_BetaEnrollment_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_BetaEnrollment_class_data_.tc_table);
  return CMsgGCCStrike15_v2_BetaEnrollment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_BetaEnrollment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_BetaEnrollment, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_BetaEnrollment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_BetaEnrollment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 eresult = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_BetaEnrollment, _impl_.eresult_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_BetaEnrollment, _impl_.eresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 eresult = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_BetaEnrollment, _impl_.eresult_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_BetaEnrollment::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_BetaEnrollment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eresult_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_BetaEnrollment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_BetaEnrollment& this_ = static_cast<const CMsgGCCStrike15_v2_BetaEnrollment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_BetaEnrollment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_BetaEnrollment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_BetaEnrollment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 eresult = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_eresult(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_BetaEnrollment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_BetaEnrollment::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_BetaEnrollment& this_ = static_cast<const CMsgGCCStrike15_v2_BetaEnrollment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_BetaEnrollment::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_BetaEnrollment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_BetaEnrollment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint32 eresult = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_eresult());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_BetaEnrollment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_BetaEnrollment*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_BetaEnrollment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_BetaEnrollment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.eresult_ = from._impl_.eresult_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_BetaEnrollment::CopyFrom(const CMsgGCCStrike15_v2_BetaEnrollment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_BetaEnrollment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_BetaEnrollment::InternalSwap(CMsgGCCStrike15_v2_BetaEnrollment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.eresult_, other->_impl_.eresult_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_BetaEnrollment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientLogonFatalError::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientLogonFatalError>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientLogonFatalError::CMsgGCCStrike15_v2_ClientLogonFatalError(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientLogonFatalError)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientLogonFatalError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientLogonFatalError& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_),
        country_(arena, from.country_) {}

CMsgGCCStrike15_v2_ClientLogonFatalError::CMsgGCCStrike15_v2_ClientLogonFatalError(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientLogonFatalError& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientLogonFatalError* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.errorcode_ = from._impl_.errorcode_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientLogonFatalError)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientLogonFatalError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena),
        country_(arena) {}

inline void CMsgGCCStrike15_v2_ClientLogonFatalError::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.errorcode_ = {};
}
CMsgGCCStrike15_v2_ClientLogonFatalError::~CMsgGCCStrike15_v2_ClientLogonFatalError() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientLogonFatalError)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientLogonFatalError::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientLogonFatalError& this_ = static_cast<CMsgGCCStrike15_v2_ClientLogonFatalError&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.country_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientLogonFatalError::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientLogonFatalError(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientLogonFatalError::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientLogonFatalError),
                                            alignof(CMsgGCCStrike15_v2_ClientLogonFatalError));
}
constexpr auto CMsgGCCStrike15_v2_ClientLogonFatalError::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientLogonFatalError_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientLogonFatalError::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientLogonFatalError>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientLogonFatalError::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientLogonFatalError>(), &CMsgGCCStrike15_v2_ClientLogonFatalError::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientLogonFatalError::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientLogonFatalError::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_ =
            CMsgGCCStrike15_v2_ClientLogonFatalError::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientLogonFatalError::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2>
CMsgGCCStrike15_v2_ClientLogonFatalError::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientLogonFatalError_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientLogonFatalError>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 errorcode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.errorcode_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.errorcode_)}},
    // optional string message = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.message_)}},
    // optional string country = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.country_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 errorcode = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.errorcode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string message = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string country = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientLogonFatalError, _impl_.country_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\0\7\7\0\0\0\0"
    "CMsgGCCStrike15_v2_ClientLogonFatalError"
    "message"
    "country"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientLogonFatalError::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientLogonFatalError)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.country_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.errorcode_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientLogonFatalError::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientLogonFatalError& this_ = static_cast<const CMsgGCCStrike15_v2_ClientLogonFatalError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientLogonFatalError::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientLogonFatalError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientLogonFatalError)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 errorcode = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_errorcode(), target);
  }

  // optional string message = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientLogonFatalError.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string country = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_country();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientLogonFatalError.country");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientLogonFatalError)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientLogonFatalError::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientLogonFatalError& this_ = static_cast<const CMsgGCCStrike15_v2_ClientLogonFatalError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientLogonFatalError::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientLogonFatalError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientLogonFatalError)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string message = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_message());
    }
    // optional string country = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_country());
    }
    // optional uint32 errorcode = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_errorcode());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientLogonFatalError::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientLogonFatalError*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientLogonFatalError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientLogonFatalError)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_message(from._internal_message());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_country(from._internal_country());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.errorcode_ = from._impl_.errorcode_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientLogonFatalError::CopyFrom(const CMsgGCCStrike15_v2_ClientLogonFatalError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientLogonFatalError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientLogonFatalError::InternalSwap(CMsgGCCStrike15_v2_ClientLogonFatalError* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  swap(_impl_.errorcode_, other->_impl_.errorcode_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientLogonFatalError::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientPollState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientPollState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientPollState::CMsgGCCStrike15_v2_ClientPollState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPollState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientPollState)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPollState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientPollState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        names_{visibility, arena, from.names_},
        values_{visibility, arena, from.values_} {}

CMsgGCCStrike15_v2_ClientPollState::CMsgGCCStrike15_v2_ClientPollState(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientPollState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPollState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientPollState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.pollid_ = from._impl_.pollid_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientPollState)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPollState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        names_{visibility, arena},
        values_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_ClientPollState::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pollid_ = {};
}
CMsgGCCStrike15_v2_ClientPollState::~CMsgGCCStrike15_v2_ClientPollState() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientPollState)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientPollState::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientPollState& this_ = static_cast<CMsgGCCStrike15_v2_ClientPollState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPollState::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientPollState(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientPollState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.names_) +
          decltype(CMsgGCCStrike15_v2_ClientPollState::_impl_.names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.values_) +
          decltype(CMsgGCCStrike15_v2_ClientPollState::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_ClientPollState), alignof(CMsgGCCStrike15_v2_ClientPollState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientPollState::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientPollState),
                                 alignof(CMsgGCCStrike15_v2_ClientPollState));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientPollState::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientPollState_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientPollState::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientPollState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientPollState::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientPollState>(), &CMsgGCCStrike15_v2_ClientPollState::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientPollState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientPollState::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientPollState_class_data_ =
            CMsgGCCStrike15_v2_ClientPollState::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPollState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientPollState_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientPollState_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientPollState_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2>
CMsgGCCStrike15_v2_ClientPollState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientPollState_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPollState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 pollid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPollState, _impl_.pollid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.pollid_)}},
    // repeated string names = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.names_)}},
    // repeated int32 values = 3;
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 pollid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.pollid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated string names = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated int32 values = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPollState, _impl_.values_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\42\0\5\0\0\0\0\0"
    "CMsgGCCStrike15_v2_ClientPollState"
    "names"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientPollState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientPollState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.names_.Clear();
  _impl_.values_.Clear();
  _impl_.pollid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPollState::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientPollState& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPollState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPollState::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientPollState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientPollState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 pollid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_pollid(), target);
  }

  // repeated string names = 2;
  for (int i = 0, n = this_._internal_names_size(); i < n; ++i) {
    const auto& s = this_._internal_names().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientPollState.names");
    target = stream->WriteString(2, s, target);
  }

  // repeated int32 values = 3;
  for (int i = 0, n = this_._internal_values_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this_._internal_values().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientPollState)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientPollState::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientPollState& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPollState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientPollState::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientPollState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientPollState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string names = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_names().size());
      for (int i = 0, n = this_._internal_names().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_names().Get(i));
      }
    }
    // repeated int32 values = 3;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_values());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_values_size());
      total_size += tag_size + data_size;
    }
  }
   {
    // optional uint32 pollid = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_pollid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientPollState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientPollState*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientPollState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientPollState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_names()->MergeFrom(from._internal_names());
  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.pollid_ = from._impl_.pollid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientPollState::CopyFrom(const CMsgGCCStrike15_v2_ClientPollState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientPollState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientPollState::InternalSwap(CMsgGCCStrike15_v2_ClientPollState* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.names_.InternalSwap(&other->_impl_.names_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  swap(_impl_.pollid_, other->_impl_.pollid_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientPollState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Party_Register::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Party_Register>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Party_Register::CMsgGCCStrike15_v2_Party_Register(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_Register_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Party_Register)
}
CMsgGCCStrike15_v2_Party_Register::CMsgGCCStrike15_v2_Party_Register(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Party_Register& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_Register_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Party_Register::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Party_Register::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, game_type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::game_type_));
}
CMsgGCCStrike15_v2_Party_Register::~CMsgGCCStrike15_v2_Party_Register() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Party_Register)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Party_Register::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Party_Register& this_ = static_cast<CMsgGCCStrike15_v2_Party_Register&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Register::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Party_Register(arena);
}
constexpr auto CMsgGCCStrike15_v2_Party_Register::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Party_Register),
                                            alignof(CMsgGCCStrike15_v2_Party_Register));
}
constexpr auto CMsgGCCStrike15_v2_Party_Register::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Party_Register_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Party_Register::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Party_Register>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Party_Register::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Party_Register>(), &CMsgGCCStrike15_v2_Party_Register::ByteSizeLong,
              &CMsgGCCStrike15_v2_Party_Register::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Party_Register::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Party_Register_class_data_ =
            CMsgGCCStrike15_v2_Party_Register::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Register::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Party_Register_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Party_Register_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Party_Register_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2>
CMsgGCCStrike15_v2_Party_Register::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Party_Register_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Party_Register>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.id_)}},
    // optional uint32 ver = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.ver_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.ver_)}},
    // optional uint32 apr = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.apr_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.apr_)}},
    // optional uint32 ark = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.ark_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.ark_)}},
    // optional uint32 nby = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.nby_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.nby_)}},
    // optional uint32 grp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.grp_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.grp_)}},
    // optional uint32 slots = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.slots_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.slots_)}},
    // optional uint32 launcher = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.launcher_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.launcher_)}},
    // optional uint32 game_type = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Register, _impl_.game_type_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.game_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ver = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.ver_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 apr = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.apr_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ark = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.ark_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 nby = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.nby_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 grp = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.grp_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 slots = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.slots_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 launcher = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.launcher_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 game_type = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.game_type_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Party_Register::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Party_Register)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.launcher_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.launcher_));
  }
  _impl_.game_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Register::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Party_Register& this_ = static_cast<const CMsgGCCStrike15_v2_Party_Register&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Register::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Party_Register& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Party_Register)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_id(), target);
  }

  // optional uint32 ver = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_ver(), target);
  }

  // optional uint32 apr = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_apr(), target);
  }

  // optional uint32 ark = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_ark(), target);
  }

  // optional uint32 nby = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_nby(), target);
  }

  // optional uint32 grp = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_grp(), target);
  }

  // optional uint32 slots = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_slots(), target);
  }

  // optional uint32 launcher = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_launcher(), target);
  }

  // optional uint32 game_type = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_game_type(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Party_Register)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Party_Register::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Party_Register& this_ = static_cast<const CMsgGCCStrike15_v2_Party_Register&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Party_Register::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Party_Register& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Party_Register)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional uint32 id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_id());
    }
    // optional uint32 ver = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ver());
    }
    // optional uint32 apr = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_apr());
    }
    // optional uint32 ark = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ark());
    }
    // optional uint32 nby = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_nby());
    }
    // optional uint32 grp = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_grp());
    }
    // optional uint32 slots = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_slots());
    }
    // optional uint32 launcher = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_launcher());
    }
  }
   {
    // optional uint32 game_type = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Party_Register::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Party_Register*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Party_Register&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Party_Register)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.ver_ = from._impl_.ver_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.apr_ = from._impl_.apr_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.ark_ = from._impl_.ark_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.nby_ = from._impl_.nby_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.grp_ = from._impl_.grp_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.slots_ = from._impl_.slots_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.launcher_ = from._impl_.launcher_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.game_type_ = from._impl_.game_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Party_Register::CopyFrom(const CMsgGCCStrike15_v2_Party_Register& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Party_Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Party_Register::InternalSwap(CMsgGCCStrike15_v2_Party_Register* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.game_type_)
      + sizeof(CMsgGCCStrike15_v2_Party_Register::_impl_.game_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Register, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Party_Register::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Party_Search::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Party_Search>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Party_Search::CMsgGCCStrike15_v2_Party_Search(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_Search_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Party_Search)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Party_Search::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Party_Search& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        grps_{visibility, arena, from.grps_} {}

CMsgGCCStrike15_v2_Party_Search::CMsgGCCStrike15_v2_Party_Search(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Party_Search& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_Search_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Party_Search* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ver_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ver_),
           offsetof(Impl_, game_type_) -
               offsetof(Impl_, ver_) +
               sizeof(Impl_::game_type_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Party_Search)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Party_Search::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        grps_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_Party_Search::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ver_),
           0,
           offsetof(Impl_, game_type_) -
               offsetof(Impl_, ver_) +
               sizeof(Impl_::game_type_));
}
CMsgGCCStrike15_v2_Party_Search::~CMsgGCCStrike15_v2_Party_Search() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Party_Search)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Party_Search::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Party_Search& this_ = static_cast<CMsgGCCStrike15_v2_Party_Search&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Search::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Party_Search(arena);
}
constexpr auto CMsgGCCStrike15_v2_Party_Search::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.grps_) +
          decltype(CMsgGCCStrike15_v2_Party_Search::_impl_.grps_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_Party_Search), alignof(CMsgGCCStrike15_v2_Party_Search), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_Party_Search::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_Party_Search),
                                 alignof(CMsgGCCStrike15_v2_Party_Search));
  }
}
constexpr auto CMsgGCCStrike15_v2_Party_Search::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Party_Search_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Party_Search::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Party_Search>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Party_Search::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Party_Search>(), &CMsgGCCStrike15_v2_Party_Search::ByteSizeLong,
              &CMsgGCCStrike15_v2_Party_Search::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Party_Search::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Party_Search_class_data_ =
            CMsgGCCStrike15_v2_Party_Search::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Search::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Party_Search_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Party_Search_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Party_Search_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
CMsgGCCStrike15_v2_Party_Search::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Party_Search_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Party_Search>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 ver = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Search, _impl_.ver_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.ver_)}},
    // optional uint32 apr = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Search, _impl_.apr_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.apr_)}},
    // optional uint32 ark = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Search, _impl_.ark_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.ark_)}},
    // repeated uint32 grps = 4;
    {::_pbi::TcParser::FastV32R1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.grps_)}},
    // optional uint32 launcher = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Search, _impl_.launcher_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.launcher_)}},
    // optional uint32 game_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Search, _impl_.game_type_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.game_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 ver = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.ver_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 apr = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.apr_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ark = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.ark_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 grps = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.grps_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional uint32 launcher = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.launcher_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 game_type = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.game_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Party_Search::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Party_Search)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grps_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    ::memset(&_impl_.ver_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.game_type_) -
        reinterpret_cast<char*>(&_impl_.ver_)) + sizeof(_impl_.game_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Search::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Party_Search& this_ = static_cast<const CMsgGCCStrike15_v2_Party_Search&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Search::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Party_Search& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Party_Search)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 ver = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_ver(), target);
  }

  // optional uint32 apr = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_apr(), target);
  }

  // optional uint32 ark = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_ark(), target);
  }

  // repeated uint32 grps = 4;
  for (int i = 0, n = this_._internal_grps_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_grps().Get(i), target);
  }

  // optional uint32 launcher = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_launcher(), target);
  }

  // optional uint32 game_type = 6;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_game_type(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Party_Search)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Party_Search::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Party_Search& this_ = static_cast<const CMsgGCCStrike15_v2_Party_Search&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Party_Search::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Party_Search& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Party_Search)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 grps = 4;
    {
      std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
          this_._internal_grps());
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_grps_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional uint32 ver = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ver());
    }
    // optional uint32 apr = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_apr());
    }
    // optional uint32 ark = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ark());
    }
    // optional uint32 launcher = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_launcher());
    }
    // optional uint32 game_type = 6;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Party_Search::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Party_Search*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Party_Search&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Party_Search)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_grps()->MergeFrom(from._internal_grps());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.ver_ = from._impl_.ver_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.apr_ = from._impl_.apr_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.ark_ = from._impl_.ark_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.launcher_ = from._impl_.launcher_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Party_Search::CopyFrom(const CMsgGCCStrike15_v2_Party_Search& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Party_Search)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Party_Search::InternalSwap(CMsgGCCStrike15_v2_Party_Search* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.grps_.InternalSwap(&other->_impl_.grps_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.game_type_)
      + sizeof(CMsgGCCStrike15_v2_Party_Search::_impl_.game_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Search, _impl_.ver_)>(
          reinterpret_cast<char*>(&_impl_.ver_),
          reinterpret_cast<char*>(&other->_impl_.ver_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Party_Search::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Party_SearchResults_Entry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Party_SearchResults_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Party_SearchResults_Entry::CMsgGCCStrike15_v2_Party_SearchResults_Entry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
}
CMsgGCCStrike15_v2_Party_SearchResults_Entry::CMsgGCCStrike15_v2_Party_SearchResults_Entry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Party_SearchResults_Entry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Party_SearchResults_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Party_SearchResults_Entry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, accountid_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::accountid_));
}
CMsgGCCStrike15_v2_Party_SearchResults_Entry::~CMsgGCCStrike15_v2_Party_SearchResults_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Party_SearchResults_Entry::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Party_SearchResults_Entry& this_ = static_cast<CMsgGCCStrike15_v2_Party_SearchResults_Entry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults_Entry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Party_SearchResults_Entry(arena);
}
constexpr auto CMsgGCCStrike15_v2_Party_SearchResults_Entry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Party_SearchResults_Entry),
                                            alignof(CMsgGCCStrike15_v2_Party_SearchResults_Entry));
}
constexpr auto CMsgGCCStrike15_v2_Party_SearchResults_Entry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Party_SearchResults_Entry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Party_SearchResults_Entry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Party_SearchResults_Entry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Party_SearchResults_Entry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Party_SearchResults_Entry>(), &CMsgGCCStrike15_v2_Party_SearchResults_Entry::ByteSizeLong,
              &CMsgGCCStrike15_v2_Party_SearchResults_Entry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Party_SearchResults_Entry::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_ =
            CMsgGCCStrike15_v2_Party_SearchResults_Entry::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults_Entry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
CMsgGCCStrike15_v2_Party_SearchResults_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Party_SearchResults_Entry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Party_SearchResults_Entry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.id_)}},
    // optional uint32 grp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.grp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.grp_)}},
    // optional uint32 game_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.game_type_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.game_type_)}},
    // optional uint32 apr = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.apr_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.apr_)}},
    // optional uint32 ark = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.ark_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.ark_)}},
    // optional uint32 loc = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.loc_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.loc_)}},
    // optional uint32 accountid = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.accountid_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 grp = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.grp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 game_type = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.game_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 apr = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.apr_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ark = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.ark_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 loc = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.loc_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 accountid = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.accountid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Party_SearchResults_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.accountid_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.accountid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults_Entry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Party_SearchResults_Entry& this_ = static_cast<const CMsgGCCStrike15_v2_Party_SearchResults_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults_Entry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Party_SearchResults_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_id(), target);
  }

  // optional uint32 grp = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_grp(), target);
  }

  // optional uint32 game_type = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_game_type(), target);
  }

  // optional uint32 apr = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_apr(), target);
  }

  // optional uint32 ark = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_ark(), target);
  }

  // optional uint32 loc = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_loc(), target);
  }

  // optional uint32 accountid = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_accountid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Party_SearchResults_Entry::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Party_SearchResults_Entry& this_ = static_cast<const CMsgGCCStrike15_v2_Party_SearchResults_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Party_SearchResults_Entry::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Party_SearchResults_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // optional uint32 id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_id());
    }
    // optional uint32 grp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_grp());
    }
    // optional uint32 game_type = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_game_type());
    }
    // optional uint32 apr = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_apr());
    }
    // optional uint32 ark = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ark());
    }
    // optional uint32 loc = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_loc());
    }
    // optional uint32 accountid = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Party_SearchResults_Entry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Party_SearchResults_Entry*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Party_SearchResults_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.grp_ = from._impl_.grp_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.game_type_ = from._impl_.game_type_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.apr_ = from._impl_.apr_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.ark_ = from._impl_.ark_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.loc_ = from._impl_.loc_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Party_SearchResults_Entry::CopyFrom(const CMsgGCCStrike15_v2_Party_SearchResults_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Party_SearchResults.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Party_SearchResults_Entry::InternalSwap(CMsgGCCStrike15_v2_Party_SearchResults_Entry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.accountid_)
      + sizeof(CMsgGCCStrike15_v2_Party_SearchResults_Entry::_impl_.accountid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults_Entry, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Party_SearchResults_Entry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Party_SearchResults::_Internal {
 public:
};

CMsgGCCStrike15_v2_Party_SearchResults::CMsgGCCStrike15_v2_Party_SearchResults(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_SearchResults_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Party_SearchResults)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Party_SearchResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Party_SearchResults& from_msg)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_Party_SearchResults::CMsgGCCStrike15_v2_Party_SearchResults(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Party_SearchResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_SearchResults_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Party_SearchResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Party_SearchResults)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Party_SearchResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Party_SearchResults::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_Party_SearchResults::~CMsgGCCStrike15_v2_Party_SearchResults() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Party_SearchResults)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Party_SearchResults::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Party_SearchResults& this_ = static_cast<CMsgGCCStrike15_v2_Party_SearchResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Party_SearchResults(arena);
}
constexpr auto CMsgGCCStrike15_v2_Party_SearchResults::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults, _impl_.entries_) +
          decltype(CMsgGCCStrike15_v2_Party_SearchResults::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_Party_SearchResults), alignof(CMsgGCCStrike15_v2_Party_SearchResults), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_Party_SearchResults::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_Party_SearchResults),
                                 alignof(CMsgGCCStrike15_v2_Party_SearchResults));
  }
}
constexpr auto CMsgGCCStrike15_v2_Party_SearchResults::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Party_SearchResults_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Party_SearchResults::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Party_SearchResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Party_SearchResults::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Party_SearchResults>(), &CMsgGCCStrike15_v2_Party_SearchResults::ByteSizeLong,
              &CMsgGCCStrike15_v2_Party_SearchResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Party_SearchResults::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Party_SearchResults_class_data_ =
            CMsgGCCStrike15_v2_Party_SearchResults::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Party_SearchResults_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Party_SearchResults_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Party_SearchResults_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_v2_Party_SearchResults::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_Party_SearchResults_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Party_SearchResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_Party_SearchResults.Entry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCCStrike15_v2_Party_SearchResults.Entry entries = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_SearchResults, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Party_SearchResults_Entry>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Party_SearchResults::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Party_SearchResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Party_SearchResults& this_ = static_cast<const CMsgGCCStrike15_v2_Party_SearchResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_SearchResults::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Party_SearchResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Party_SearchResults)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCCStrike15_v2_Party_SearchResults.Entry entries = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Party_SearchResults)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Party_SearchResults::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Party_SearchResults& this_ = static_cast<const CMsgGCCStrike15_v2_Party_SearchResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Party_SearchResults::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Party_SearchResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Party_SearchResults)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_Party_SearchResults.Entry entries = 1;
    {
      total_size += 1UL * this_._internal_entries_size();
      for (const auto& msg : this_._internal_entries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Party_SearchResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Party_SearchResults*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Party_SearchResults&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Party_SearchResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Party_SearchResults::CopyFrom(const CMsgGCCStrike15_v2_Party_SearchResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Party_SearchResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Party_SearchResults::InternalSwap(CMsgGCCStrike15_v2_Party_SearchResults* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Party_SearchResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Party_Invite::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Party_Invite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Party_Invite::CMsgGCCStrike15_v2_Party_Invite(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_Invite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Party_Invite)
}
CMsgGCCStrike15_v2_Party_Invite::CMsgGCCStrike15_v2_Party_Invite(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Party_Invite& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Party_Invite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Party_Invite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Party_Invite::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, lobbyid_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::lobbyid_));
}
CMsgGCCStrike15_v2_Party_Invite::~CMsgGCCStrike15_v2_Party_Invite() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Party_Invite)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Party_Invite::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Party_Invite& this_ = static_cast<CMsgGCCStrike15_v2_Party_Invite&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Invite::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Party_Invite(arena);
}
constexpr auto CMsgGCCStrike15_v2_Party_Invite::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Party_Invite),
                                            alignof(CMsgGCCStrike15_v2_Party_Invite));
}
constexpr auto CMsgGCCStrike15_v2_Party_Invite::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Party_Invite_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Party_Invite::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Party_Invite>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Party_Invite::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Party_Invite>(), &CMsgGCCStrike15_v2_Party_Invite::ByteSizeLong,
              &CMsgGCCStrike15_v2_Party_Invite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Party_Invite::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Party_Invite_class_data_ =
            CMsgGCCStrike15_v2_Party_Invite::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Invite::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Party_Invite_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Party_Invite_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Party_Invite_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_Party_Invite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Party_Invite_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Party_Invite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 lobbyid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Invite, _impl_.lobbyid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_.lobbyid_)}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Party_Invite, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 lobbyid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_.lobbyid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Party_Invite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Party_Invite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lobbyid_) -
        reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.lobbyid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Invite::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Party_Invite& this_ = static_cast<const CMsgGCCStrike15_v2_Party_Invite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Party_Invite::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Party_Invite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Party_Invite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint32 lobbyid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_lobbyid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Party_Invite)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Party_Invite::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Party_Invite& this_ = static_cast<const CMsgGCCStrike15_v2_Party_Invite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Party_Invite::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Party_Invite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Party_Invite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 lobbyid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_lobbyid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Party_Invite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Party_Invite*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Party_Invite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Party_Invite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.lobbyid_ = from._impl_.lobbyid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Party_Invite::CopyFrom(const CMsgGCCStrike15_v2_Party_Invite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Party_Invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Party_Invite::InternalSwap(CMsgGCCStrike15_v2_Party_Invite* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_.lobbyid_)
      + sizeof(CMsgGCCStrike15_v2_Party_Invite::_impl_.lobbyid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Party_Invite, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Party_Invite::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Account_RequestCoPlays_Player>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
}
CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, online_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::online_));
}
CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::~CMsgGCCStrike15_v2_Account_RequestCoPlays_Player() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Account_RequestCoPlays_Player& this_ = static_cast<CMsgGCCStrike15_v2_Account_RequestCoPlays_Player&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Account_RequestCoPlays_Player(arena);
}
constexpr auto CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player),
                                            alignof(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player));
}
constexpr auto CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Account_RequestCoPlays_Player>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Account_RequestCoPlays_Player>(), &CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::ByteSizeLong,
              &CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_ =
            CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_Account_RequestCoPlays_Player_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.accountid_)}},
    // optional uint32 rtcoplay = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.rtcoplay_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.rtcoplay_)}},
    // optional bool online = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.online_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.online_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rtcoplay = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.rtcoplay_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool online = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.online_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.online_) -
        reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.online_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player& this_ = static_cast<const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint32 rtcoplay = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_rtcoplay(), target);
  }

  // optional bool online = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_online(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player& this_ = static_cast<const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 rtcoplay = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_rtcoplay());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Account_RequestCoPlays_Player*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.rtcoplay_ = from._impl_.rtcoplay_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.online_ = from._impl_.online_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::CopyFrom(const CMsgGCCStrike15_v2_Account_RequestCoPlays_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Account_RequestCoPlays.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::InternalSwap(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.online_)
      + sizeof(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::_impl_.online_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays_Player, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Account_RequestCoPlays_Player::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_Account_RequestCoPlays::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_Account_RequestCoPlays>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_Account_RequestCoPlays::CMsgGCCStrike15_v2_Account_RequestCoPlays(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_Account_RequestCoPlays)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Account_RequestCoPlays::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_Account_RequestCoPlays& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        players_{visibility, arena, from.players_} {}

CMsgGCCStrike15_v2_Account_RequestCoPlays::CMsgGCCStrike15_v2_Account_RequestCoPlays(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_Account_RequestCoPlays& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_Account_RequestCoPlays* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.servertime_ = from._impl_.servertime_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_Account_RequestCoPlays)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_Account_RequestCoPlays::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        players_{visibility, arena} {}

inline void CMsgGCCStrike15_v2_Account_RequestCoPlays::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.servertime_ = {};
}
CMsgGCCStrike15_v2_Account_RequestCoPlays::~CMsgGCCStrike15_v2_Account_RequestCoPlays() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_Account_RequestCoPlays)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_Account_RequestCoPlays::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_Account_RequestCoPlays& this_ = static_cast<CMsgGCCStrike15_v2_Account_RequestCoPlays&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_Account_RequestCoPlays(arena);
}
constexpr auto CMsgGCCStrike15_v2_Account_RequestCoPlays::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.players_) +
          decltype(CMsgGCCStrike15_v2_Account_RequestCoPlays::_impl_.players_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_Account_RequestCoPlays), alignof(CMsgGCCStrike15_v2_Account_RequestCoPlays), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_Account_RequestCoPlays::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_Account_RequestCoPlays),
                                 alignof(CMsgGCCStrike15_v2_Account_RequestCoPlays));
  }
}
constexpr auto CMsgGCCStrike15_v2_Account_RequestCoPlays::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_Account_RequestCoPlays_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_Account_RequestCoPlays::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_Account_RequestCoPlays>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_Account_RequestCoPlays::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_Account_RequestCoPlays>(), &CMsgGCCStrike15_v2_Account_RequestCoPlays::ByteSizeLong,
              &CMsgGCCStrike15_v2_Account_RequestCoPlays::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_Account_RequestCoPlays::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_ =
            CMsgGCCStrike15_v2_Account_RequestCoPlays::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_.tc_table);
  return CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
CMsgGCCStrike15_v2_Account_RequestCoPlays::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_Account_RequestCoPlays_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Account_RequestCoPlays>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 servertime = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.servertime_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.servertime_)}},
    // repeated .CMsgGCCStrike15_v2_Account_RequestCoPlays.Player players = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCCStrike15_v2_Account_RequestCoPlays.Player players = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.players_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 servertime = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_Account_RequestCoPlays, _impl_.servertime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_Account_RequestCoPlays_Player>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_Account_RequestCoPlays::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_Account_RequestCoPlays)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.servertime_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays& this_ = static_cast<const CMsgGCCStrike15_v2_Account_RequestCoPlays&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_Account_RequestCoPlays::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_Account_RequestCoPlays)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCCStrike15_v2_Account_RequestCoPlays.Player players = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_players_size());
       i < n; i++) {
    const auto& repfield = this_._internal_players().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 servertime = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_servertime(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_Account_RequestCoPlays)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_Account_RequestCoPlays::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays& this_ = static_cast<const CMsgGCCStrike15_v2_Account_RequestCoPlays&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_Account_RequestCoPlays::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_Account_RequestCoPlays& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_Account_RequestCoPlays)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_Account_RequestCoPlays.Player players = 1;
    {
      total_size += 1UL * this_._internal_players_size();
      for (const auto& msg : this_._internal_players()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional uint32 servertime = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_servertime());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_Account_RequestCoPlays::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_Account_RequestCoPlays*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_Account_RequestCoPlays&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_Account_RequestCoPlays)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.servertime_ = from._impl_.servertime_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_Account_RequestCoPlays::CopyFrom(const CMsgGCCStrike15_v2_Account_RequestCoPlays& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_Account_RequestCoPlays)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_Account_RequestCoPlays::InternalSwap(CMsgGCCStrike15_v2_Account_RequestCoPlays* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  swap(_impl_.servertime_, other->_impl_.servertime_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_Account_RequestCoPlays::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientToGCRequestTicket::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientToGCRequestTicket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientToGCRequestTicket::CMsgGCCStrike15_v2_ClientToGCRequestTicket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientToGCRequestTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientToGCRequestTicket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        gameserver_sdr_routing_(arena, from.gameserver_sdr_routing_) {}

CMsgGCCStrike15_v2_ClientToGCRequestTicket::CMsgGCCStrike15_v2_ClientToGCRequestTicket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientToGCRequestTicket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientToGCRequestTicket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, authorized_steam_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, authorized_steam_id_),
           offsetof(Impl_, authorized_public_ip_) -
               offsetof(Impl_, authorized_steam_id_) +
               sizeof(Impl_::authorized_public_ip_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientToGCRequestTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        gameserver_sdr_routing_(arena) {}

inline void CMsgGCCStrike15_v2_ClientToGCRequestTicket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, authorized_steam_id_),
           0,
           offsetof(Impl_, authorized_public_ip_) -
               offsetof(Impl_, authorized_steam_id_) +
               sizeof(Impl_::authorized_public_ip_));
}
CMsgGCCStrike15_v2_ClientToGCRequestTicket::~CMsgGCCStrike15_v2_ClientToGCRequestTicket() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientToGCRequestTicket::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientToGCRequestTicket& this_ = static_cast<CMsgGCCStrike15_v2_ClientToGCRequestTicket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.gameserver_sdr_routing_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestTicket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientToGCRequestTicket(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientToGCRequestTicket::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientToGCRequestTicket),
                                            alignof(CMsgGCCStrike15_v2_ClientToGCRequestTicket));
}
constexpr auto CMsgGCCStrike15_v2_ClientToGCRequestTicket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientToGCRequestTicket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientToGCRequestTicket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientToGCRequestTicket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientToGCRequestTicket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientToGCRequestTicket>(), &CMsgGCCStrike15_v2_ClientToGCRequestTicket::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientToGCRequestTicket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientToGCRequestTicket::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_ =
            CMsgGCCStrike15_v2_ClientToGCRequestTicket::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestTicket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 73, 2>
CMsgGCCStrike15_v2_ClientToGCRequestTicket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientToGCRequestTicket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientToGCRequestTicket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 authorized_steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_steam_id_)}},
    // optional fixed32 authorized_public_ip = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_public_ip_)}},
    // optional fixed64 gameserver_steam_id = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.gameserver_steam_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string gameserver_sdr_routing = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.gameserver_sdr_routing_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 authorized_steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_steam_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed32 authorized_public_ip = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_public_ip_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 gameserver_steam_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.gameserver_steam_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string gameserver_sdr_routing = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.gameserver_sdr_routing_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\0\0\0\26\0\0\0"
    "CMsgGCCStrike15_v2_ClientToGCRequestTicket"
    "gameserver_sdr_routing"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientToGCRequestTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.gameserver_sdr_routing_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.authorized_steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.authorized_public_ip_) -
        reinterpret_cast<char*>(&_impl_.authorized_steam_id_)) + sizeof(_impl_.authorized_public_ip_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestTicket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientToGCRequestTicket& this_ = static_cast<const CMsgGCCStrike15_v2_ClientToGCRequestTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientToGCRequestTicket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientToGCRequestTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional fixed64 authorized_steam_id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this_._internal_authorized_steam_id(), target);
  }

  // optional fixed32 authorized_public_ip = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        2, this_._internal_authorized_public_ip(), target);
  }

  // optional fixed64 gameserver_steam_id = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        3, this_._internal_gameserver_steam_id(), target);
  }

  // optional string gameserver_sdr_routing = 5;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_gameserver_sdr_routing();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientToGCRequestTicket.gameserver_sdr_routing");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientToGCRequestTicket::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientToGCRequestTicket& this_ = static_cast<const CMsgGCCStrike15_v2_ClientToGCRequestTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientToGCRequestTicket::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientToGCRequestTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000006u & cached_has_bits) * 9;
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 5;
   {
    // optional string gameserver_sdr_routing = 5;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_gameserver_sdr_routing());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientToGCRequestTicket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientToGCRequestTicket*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientToGCRequestTicket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_gameserver_sdr_routing(from._internal_gameserver_sdr_routing());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.authorized_steam_id_ = from._impl_.authorized_steam_id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.gameserver_steam_id_ = from._impl_.gameserver_steam_id_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.authorized_public_ip_ = from._impl_.authorized_public_ip_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientToGCRequestTicket::CopyFrom(const CMsgGCCStrike15_v2_ClientToGCRequestTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientToGCRequestTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientToGCRequestTicket::InternalSwap(CMsgGCCStrike15_v2_ClientToGCRequestTicket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gameserver_sdr_routing_, &other->_impl_.gameserver_sdr_routing_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_public_ip_)
      + sizeof(CMsgGCCStrike15_v2_ClientToGCRequestTicket::_impl_.authorized_public_ip_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientToGCRequestTicket, _impl_.authorized_steam_id_)>(
          reinterpret_cast<char*>(&_impl_.authorized_steam_id_),
          reinterpret_cast<char*>(&other->_impl_.authorized_steam_id_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientToGCRequestTicket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCToClientSteamDatagramTicket::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCToClientSteamDatagramTicket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCToClientSteamDatagramTicket, _impl_._has_bits_);
};

CMsgGCToClientSteamDatagramTicket::CMsgGCToClientSteamDatagramTicket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCToClientSteamDatagramTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientSteamDatagramTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgGCToClientSteamDatagramTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCToClientSteamDatagramTicket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        serialized_ticket_(arena, from.serialized_ticket_) {}

CMsgGCToClientSteamDatagramTicket::CMsgGCToClientSteamDatagramTicket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCToClientSteamDatagramTicket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCToClientSteamDatagramTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCToClientSteamDatagramTicket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientSteamDatagramTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgGCToClientSteamDatagramTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        serialized_ticket_(arena) {}

inline void CMsgGCToClientSteamDatagramTicket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCToClientSteamDatagramTicket::~CMsgGCToClientSteamDatagramTicket() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientSteamDatagramTicket)
  SharedDtor(*this);
}
inline void CMsgGCToClientSteamDatagramTicket::SharedDtor(MessageLite& self) {
  CMsgGCToClientSteamDatagramTicket& this_ = static_cast<CMsgGCToClientSteamDatagramTicket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.serialized_ticket_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCToClientSteamDatagramTicket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCToClientSteamDatagramTicket(arena);
}
constexpr auto CMsgGCToClientSteamDatagramTicket::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCToClientSteamDatagramTicket),
                                            alignof(CMsgGCToClientSteamDatagramTicket));
}
constexpr auto CMsgGCToClientSteamDatagramTicket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCToClientSteamDatagramTicket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCToClientSteamDatagramTicket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCToClientSteamDatagramTicket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCToClientSteamDatagramTicket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCToClientSteamDatagramTicket>(), &CMsgGCToClientSteamDatagramTicket::ByteSizeLong,
              &CMsgGCToClientSteamDatagramTicket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCToClientSteamDatagramTicket, _impl_._cached_size_),
          false,
      },
      &CMsgGCToClientSteamDatagramTicket::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCToClientSteamDatagramTicket_class_data_ =
            CMsgGCToClientSteamDatagramTicket::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCToClientSteamDatagramTicket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCToClientSteamDatagramTicket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCToClientSteamDatagramTicket_class_data_.tc_table);
  return CMsgGCToClientSteamDatagramTicket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCToClientSteamDatagramTicket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCToClientSteamDatagramTicket, _impl_._has_bits_),
    0, // no _extensions_
    16, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934527,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCToClientSteamDatagramTicket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCToClientSteamDatagramTicket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes serialized_ticket = 16;
    {::_pbi::TcParser::FastBS2,
     {386, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCToClientSteamDatagramTicket, _impl_.serialized_ticket_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes serialized_ticket = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgGCToClientSteamDatagramTicket, _impl_.serialized_ticket_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCToClientSteamDatagramTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientSteamDatagramTicket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.serialized_ticket_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCToClientSteamDatagramTicket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCToClientSteamDatagramTicket& this_ = static_cast<const CMsgGCToClientSteamDatagramTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCToClientSteamDatagramTicket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCToClientSteamDatagramTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientSteamDatagramTicket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes serialized_ticket = 16;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_serialized_ticket();
    target = stream->WriteBytesMaybeAliased(16, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientSteamDatagramTicket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCToClientSteamDatagramTicket::ByteSizeLong(const MessageLite& base) {
  const CMsgGCToClientSteamDatagramTicket& this_ = static_cast<const CMsgGCToClientSteamDatagramTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCToClientSteamDatagramTicket::ByteSizeLong() const {
  const CMsgGCToClientSteamDatagramTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientSteamDatagramTicket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional bytes serialized_ticket = 16;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_serialized_ticket());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCToClientSteamDatagramTicket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCToClientSteamDatagramTicket*>(&to_msg);
  auto& from = static_cast<const CMsgGCToClientSteamDatagramTicket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientSteamDatagramTicket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_serialized_ticket(from._internal_serialized_ticket());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCToClientSteamDatagramTicket::CopyFrom(const CMsgGCToClientSteamDatagramTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientSteamDatagramTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCToClientSteamDatagramTicket::InternalSwap(CMsgGCToClientSteamDatagramTicket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serialized_ticket_, &other->_impl_.serialized_ticket_, arena);
}

::google::protobuf::Metadata CMsgGCToClientSteamDatagramTicket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientRequestOffers::_Internal {
 public:
};

CMsgGCCStrike15_v2_ClientRequestOffers::CMsgGCCStrike15_v2_ClientRequestOffers(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_ClientRequestOffers_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientRequestOffers)
}
CMsgGCCStrike15_v2_ClientRequestOffers::CMsgGCCStrike15_v2_ClientRequestOffers(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientRequestOffers& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, CMsgGCCStrike15_v2_ClientRequestOffers_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientRequestOffers* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientRequestOffers)
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestOffers::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientRequestOffers(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestOffers::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientRequestOffers),
                                            alignof(CMsgGCCStrike15_v2_ClientRequestOffers));
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestOffers::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientRequestOffers_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientRequestOffers::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CMsgGCCStrike15_v2_ClientRequestOffers>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientRequestOffers::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CMsgGCCStrike15_v2_ClientRequestOffers>(), &CMsgGCCStrike15_v2_ClientRequestOffers::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientRequestOffers::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestOffers, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientRequestOffers::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientRequestOffers_class_data_ =
            CMsgGCCStrike15_v2_ClientRequestOffers::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestOffers::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientRequestOffers_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientRequestOffers_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientRequestOffers_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
CMsgGCCStrike15_v2_ClientRequestOffers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientRequestOffers_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientRequestOffers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientRequestOffers::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientRequestSouvenir::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientRequestSouvenir>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientRequestSouvenir::CMsgGCCStrike15_v2_ClientRequestSouvenir(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientRequestSouvenir)
}
CMsgGCCStrike15_v2_ClientRequestSouvenir::CMsgGCCStrike15_v2_ClientRequestSouvenir(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientRequestSouvenir& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientRequestSouvenir::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientRequestSouvenir::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemid_),
           0,
           offsetof(Impl_, eventid_) -
               offsetof(Impl_, itemid_) +
               sizeof(Impl_::eventid_));
}
CMsgGCCStrike15_v2_ClientRequestSouvenir::~CMsgGCCStrike15_v2_ClientRequestSouvenir() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientRequestSouvenir)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientRequestSouvenir::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientRequestSouvenir& this_ = static_cast<CMsgGCCStrike15_v2_ClientRequestSouvenir&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestSouvenir::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientRequestSouvenir(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestSouvenir::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientRequestSouvenir),
                                            alignof(CMsgGCCStrike15_v2_ClientRequestSouvenir));
}
constexpr auto CMsgGCCStrike15_v2_ClientRequestSouvenir::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientRequestSouvenir_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientRequestSouvenir::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientRequestSouvenir>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientRequestSouvenir::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientRequestSouvenir>(), &CMsgGCCStrike15_v2_ClientRequestSouvenir::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientRequestSouvenir::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientRequestSouvenir::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_ =
            CMsgGCCStrike15_v2_ClientRequestSouvenir::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestSouvenir::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgGCCStrike15_v2_ClientRequestSouvenir::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientRequestSouvenir_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientRequestSouvenir>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 itemid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.itemid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.itemid_)}},
    // optional uint64 matchid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.matchid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.matchid_)}},
    // optional int32 eventid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.eventid_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.eventid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 itemid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.itemid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 matchid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.matchid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 eventid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.eventid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientRequestSouvenir::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientRequestSouvenir)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.itemid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.eventid_) -
        reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.eventid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestSouvenir::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientRequestSouvenir& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestSouvenir&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientRequestSouvenir::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientRequestSouvenir& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientRequestSouvenir)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 itemid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_itemid(), target);
  }

  // optional uint64 matchid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_matchid(), target);
  }

  // optional int32 eventid = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_eventid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientRequestSouvenir)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientRequestSouvenir::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientRequestSouvenir& this_ = static_cast<const CMsgGCCStrike15_v2_ClientRequestSouvenir&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientRequestSouvenir::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientRequestSouvenir& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientRequestSouvenir)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional uint64 itemid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_itemid());
    }
    // optional uint64 matchid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_matchid());
    }
    // optional int32 eventid = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_eventid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientRequestSouvenir::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientRequestSouvenir*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientRequestSouvenir&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientRequestSouvenir)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.itemid_ = from._impl_.itemid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.matchid_ = from._impl_.matchid_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.eventid_ = from._impl_.eventid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientRequestSouvenir::CopyFrom(const CMsgGCCStrike15_v2_ClientRequestSouvenir& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientRequestSouvenir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientRequestSouvenir::InternalSwap(CMsgGCCStrike15_v2_ClientRequestSouvenir* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.eventid_)
      + sizeof(CMsgGCCStrike15_v2_ClientRequestSouvenir::_impl_.eventid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientRequestSouvenir, _impl_.itemid_)>(
          reinterpret_cast<char*>(&_impl_.itemid_),
          reinterpret_cast<char*>(&other->_impl_.itemid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientRequestSouvenir::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientAccountBalance::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientAccountBalance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientAccountBalance::CMsgGCCStrike15_v2_ClientAccountBalance(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientAccountBalance_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientAccountBalance)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientAccountBalance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientAccountBalance& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        url_(arena, from.url_) {}

CMsgGCCStrike15_v2_ClientAccountBalance::CMsgGCCStrike15_v2_ClientAccountBalance(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientAccountBalance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientAccountBalance_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientAccountBalance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.amount_ = from._impl_.amount_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientAccountBalance)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientAccountBalance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        url_(arena) {}

inline void CMsgGCCStrike15_v2_ClientAccountBalance::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
CMsgGCCStrike15_v2_ClientAccountBalance::~CMsgGCCStrike15_v2_ClientAccountBalance() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientAccountBalance)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientAccountBalance::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientAccountBalance& this_ = static_cast<CMsgGCCStrike15_v2_ClientAccountBalance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.url_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAccountBalance::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientAccountBalance(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientAccountBalance::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientAccountBalance),
                                            alignof(CMsgGCCStrike15_v2_ClientAccountBalance));
}
constexpr auto CMsgGCCStrike15_v2_ClientAccountBalance::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientAccountBalance_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientAccountBalance::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientAccountBalance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientAccountBalance::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientAccountBalance>(), &CMsgGCCStrike15_v2_ClientAccountBalance::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientAccountBalance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientAccountBalance::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientAccountBalance_class_data_ =
            CMsgGCCStrike15_v2_ClientAccountBalance::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAccountBalance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientAccountBalance_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientAccountBalance_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientAccountBalance_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2>
CMsgGCCStrike15_v2_ClientAccountBalance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientAccountBalance_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientAccountBalance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string url = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_.url_)}},
    // optional uint64 amount = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_.amount_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 amount = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_.amount_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string url = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientAccountBalance, _impl_.url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\3\0\0\0\0\0"
    "CMsgGCCStrike15_v2_ClientAccountBalance"
    "url"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientAccountBalance::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientAccountBalance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.url_.ClearNonDefaultToEmpty();
  }
  _impl_.amount_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAccountBalance::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientAccountBalance& this_ = static_cast<const CMsgGCCStrike15_v2_ClientAccountBalance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientAccountBalance::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientAccountBalance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientAccountBalance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 amount = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_amount(), target);
  }

  // optional string url = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_url();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientAccountBalance.url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientAccountBalance)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientAccountBalance::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientAccountBalance& this_ = static_cast<const CMsgGCCStrike15_v2_ClientAccountBalance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientAccountBalance::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientAccountBalance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientAccountBalance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string url = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_url());
    }
    // optional uint64 amount = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_amount());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientAccountBalance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientAccountBalance*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientAccountBalance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientAccountBalance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_url(from._internal_url());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.amount_ = from._impl_.amount_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientAccountBalance::CopyFrom(const CMsgGCCStrike15_v2_ClientAccountBalance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientAccountBalance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientAccountBalance::InternalSwap(CMsgGCCStrike15_v2_ClientAccountBalance* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientAccountBalance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientPartyJoinRelay::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientPartyJoinRelay>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientPartyJoinRelay::CMsgGCCStrike15_v2_ClientPartyJoinRelay(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
}
CMsgGCCStrike15_v2_ClientPartyJoinRelay::CMsgGCCStrike15_v2_ClientPartyJoinRelay(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientPartyJoinRelay& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPartyJoinRelay::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientPartyJoinRelay::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lobbyid_),
           0,
           offsetof(Impl_, accountid_) -
               offsetof(Impl_, lobbyid_) +
               sizeof(Impl_::accountid_));
}
CMsgGCCStrike15_v2_ClientPartyJoinRelay::~CMsgGCCStrike15_v2_ClientPartyJoinRelay() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientPartyJoinRelay::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientPartyJoinRelay& this_ = static_cast<CMsgGCCStrike15_v2_ClientPartyJoinRelay&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyJoinRelay::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientPartyJoinRelay(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientPartyJoinRelay::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientPartyJoinRelay),
                                            alignof(CMsgGCCStrike15_v2_ClientPartyJoinRelay));
}
constexpr auto CMsgGCCStrike15_v2_ClientPartyJoinRelay::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientPartyJoinRelay_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientPartyJoinRelay::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientPartyJoinRelay>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientPartyJoinRelay::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientPartyJoinRelay>(), &CMsgGCCStrike15_v2_ClientPartyJoinRelay::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientPartyJoinRelay::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientPartyJoinRelay::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_ =
            CMsgGCCStrike15_v2_ClientPartyJoinRelay::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyJoinRelay::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_ClientPartyJoinRelay::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientPartyJoinRelay_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPartyJoinRelay>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 lobbyid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.lobbyid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.lobbyid_)}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.accountid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.accountid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 lobbyid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.lobbyid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientPartyJoinRelay::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.lobbyid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.accountid_) -
        reinterpret_cast<char*>(&_impl_.lobbyid_)) + sizeof(_impl_.accountid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyJoinRelay::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientPartyJoinRelay& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPartyJoinRelay&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyJoinRelay::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientPartyJoinRelay& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint64 lobbyid = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_lobbyid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientPartyJoinRelay::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientPartyJoinRelay& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPartyJoinRelay&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientPartyJoinRelay::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientPartyJoinRelay& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint64 lobbyid = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_lobbyid());
    }
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientPartyJoinRelay::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientPartyJoinRelay*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientPartyJoinRelay&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.lobbyid_ = from._impl_.lobbyid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientPartyJoinRelay::CopyFrom(const CMsgGCCStrike15_v2_ClientPartyJoinRelay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientPartyJoinRelay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientPartyJoinRelay::InternalSwap(CMsgGCCStrike15_v2_ClientPartyJoinRelay* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.accountid_)
      + sizeof(CMsgGCCStrike15_v2_ClientPartyJoinRelay::_impl_.accountid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyJoinRelay, _impl_.lobbyid_)>(
          reinterpret_cast<char*>(&_impl_.lobbyid_),
          reinterpret_cast<char*>(&other->_impl_.lobbyid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientPartyJoinRelay::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientPartyWarning_Entry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientPartyWarning_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientPartyWarning_Entry::CMsgGCCStrike15_v2_ClientPartyWarning_Entry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
}
CMsgGCCStrike15_v2_ClientPartyWarning_Entry::CMsgGCCStrike15_v2_ClientPartyWarning_Entry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_ClientPartyWarning_Entry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPartyWarning_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientPartyWarning_Entry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           0,
           offsetof(Impl_, warntype_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::warntype_));
}
CMsgGCCStrike15_v2_ClientPartyWarning_Entry::~CMsgGCCStrike15_v2_ClientPartyWarning_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientPartyWarning_Entry::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientPartyWarning_Entry& this_ = static_cast<CMsgGCCStrike15_v2_ClientPartyWarning_Entry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning_Entry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientPartyWarning_Entry(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientPartyWarning_Entry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_ClientPartyWarning_Entry),
                                            alignof(CMsgGCCStrike15_v2_ClientPartyWarning_Entry));
}
constexpr auto CMsgGCCStrike15_v2_ClientPartyWarning_Entry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientPartyWarning_Entry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientPartyWarning_Entry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientPartyWarning_Entry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientPartyWarning_Entry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientPartyWarning_Entry>(), &CMsgGCCStrike15_v2_ClientPartyWarning_Entry::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientPartyWarning_Entry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientPartyWarning_Entry::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_ =
            CMsgGCCStrike15_v2_ClientPartyWarning_Entry::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning_Entry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_ClientPartyWarning_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientPartyWarning_Entry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPartyWarning_Entry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 warntype = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.warntype_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.warntype_)}},
    // optional uint32 accountid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.accountid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.accountid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 accountid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.accountid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 warntype = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.warntype_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientPartyWarning_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.warntype_) -
        reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.warntype_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning_Entry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientPartyWarning_Entry& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPartyWarning_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning_Entry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientPartyWarning_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 accountid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_accountid(), target);
  }

  // optional uint32 warntype = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_warntype(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientPartyWarning_Entry::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientPartyWarning_Entry& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPartyWarning_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientPartyWarning_Entry::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientPartyWarning_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional uint32 accountid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_accountid());
    }
    // optional uint32 warntype = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_warntype());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientPartyWarning_Entry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientPartyWarning_Entry*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientPartyWarning_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.warntype_ = from._impl_.warntype_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientPartyWarning_Entry::CopyFrom(const CMsgGCCStrike15_v2_ClientPartyWarning_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientPartyWarning.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientPartyWarning_Entry::InternalSwap(CMsgGCCStrike15_v2_ClientPartyWarning_Entry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.warntype_)
      + sizeof(CMsgGCCStrike15_v2_ClientPartyWarning_Entry::_impl_.warntype_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning_Entry, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientPartyWarning_Entry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientPartyWarning::_Internal {
 public:
};

CMsgGCCStrike15_v2_ClientPartyWarning::CMsgGCCStrike15_v2_ClientPartyWarning(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPartyWarning_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientPartyWarning)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPartyWarning::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientPartyWarning& from_msg)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_ClientPartyWarning::CMsgGCCStrike15_v2_ClientPartyWarning(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientPartyWarning& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPartyWarning_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientPartyWarning* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientPartyWarning)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPartyWarning::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientPartyWarning::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_ClientPartyWarning::~CMsgGCCStrike15_v2_ClientPartyWarning() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientPartyWarning)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientPartyWarning::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientPartyWarning& this_ = static_cast<CMsgGCCStrike15_v2_ClientPartyWarning&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientPartyWarning(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientPartyWarning::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning, _impl_.entries_) +
          decltype(CMsgGCCStrike15_v2_ClientPartyWarning::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_ClientPartyWarning), alignof(CMsgGCCStrike15_v2_ClientPartyWarning), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientPartyWarning::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientPartyWarning),
                                 alignof(CMsgGCCStrike15_v2_ClientPartyWarning));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientPartyWarning::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientPartyWarning_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientPartyWarning::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientPartyWarning>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientPartyWarning::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientPartyWarning>(), &CMsgGCCStrike15_v2_ClientPartyWarning::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientPartyWarning::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientPartyWarning::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientPartyWarning_class_data_ =
            CMsgGCCStrike15_v2_ClientPartyWarning::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientPartyWarning_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientPartyWarning_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientPartyWarning_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_v2_ClientPartyWarning::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientPartyWarning_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPartyWarning>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_ClientPartyWarning.Entry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCCStrike15_v2_ClientPartyWarning.Entry entries = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPartyWarning, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPartyWarning_Entry>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientPartyWarning::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientPartyWarning)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientPartyWarning& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPartyWarning&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPartyWarning::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientPartyWarning& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientPartyWarning)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCCStrike15_v2_ClientPartyWarning.Entry entries = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientPartyWarning)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientPartyWarning::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientPartyWarning& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPartyWarning&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientPartyWarning::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientPartyWarning& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientPartyWarning)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_ClientPartyWarning.Entry entries = 1;
    {
      total_size += 1UL * this_._internal_entries_size();
      for (const auto& msg : this_._internal_entries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientPartyWarning::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientPartyWarning*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientPartyWarning&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientPartyWarning)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientPartyWarning::CopyFrom(const CMsgGCCStrike15_v2_ClientPartyWarning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientPartyWarning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientPartyWarning::InternalSwap(CMsgGCCStrike15_v2_ClientPartyWarning* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientPartyWarning::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_SetEventFavorite::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_SetEventFavorite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_SetEventFavorite::CMsgGCCStrike15_v2_SetEventFavorite(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_SetEventFavorite_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_SetEventFavorite)
}
CMsgGCCStrike15_v2_SetEventFavorite::CMsgGCCStrike15_v2_SetEventFavorite(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_SetEventFavorite& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_SetEventFavorite_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_SetEventFavorite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_SetEventFavorite::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventid_),
           0,
           offsetof(Impl_, is_favorite_) -
               offsetof(Impl_, eventid_) +
               sizeof(Impl_::is_favorite_));
}
CMsgGCCStrike15_v2_SetEventFavorite::~CMsgGCCStrike15_v2_SetEventFavorite() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_SetEventFavorite)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_SetEventFavorite::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_SetEventFavorite& this_ = static_cast<CMsgGCCStrike15_v2_SetEventFavorite&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetEventFavorite::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_SetEventFavorite(arena);
}
constexpr auto CMsgGCCStrike15_v2_SetEventFavorite::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_SetEventFavorite),
                                            alignof(CMsgGCCStrike15_v2_SetEventFavorite));
}
constexpr auto CMsgGCCStrike15_v2_SetEventFavorite::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_SetEventFavorite_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_SetEventFavorite::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_SetEventFavorite>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_SetEventFavorite::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_SetEventFavorite>(), &CMsgGCCStrike15_v2_SetEventFavorite::ByteSizeLong,
              &CMsgGCCStrike15_v2_SetEventFavorite::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_SetEventFavorite::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_SetEventFavorite_class_data_ =
            CMsgGCCStrike15_v2_SetEventFavorite::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetEventFavorite::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_SetEventFavorite_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_SetEventFavorite_class_data_.tc_table);
  return CMsgGCCStrike15_v2_SetEventFavorite_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CMsgGCCStrike15_v2_SetEventFavorite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_SetEventFavorite_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_SetEventFavorite>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool is_favorite = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.is_favorite_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.is_favorite_)}},
    // optional uint64 eventid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.eventid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.eventid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 eventid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.eventid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool is_favorite = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.is_favorite_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_SetEventFavorite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_SetEventFavorite)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.eventid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_favorite_) -
        reinterpret_cast<char*>(&_impl_.eventid_)) + sizeof(_impl_.is_favorite_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetEventFavorite::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_SetEventFavorite& this_ = static_cast<const CMsgGCCStrike15_v2_SetEventFavorite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetEventFavorite::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_SetEventFavorite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_SetEventFavorite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 eventid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_eventid(), target);
  }

  // optional bool is_favorite = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_is_favorite(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_SetEventFavorite)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_SetEventFavorite::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_SetEventFavorite& this_ = static_cast<const CMsgGCCStrike15_v2_SetEventFavorite&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_SetEventFavorite::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_SetEventFavorite& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_SetEventFavorite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000002u & cached_has_bits) * 2;
   {
    // optional uint64 eventid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_eventid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_SetEventFavorite::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_SetEventFavorite*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_SetEventFavorite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_SetEventFavorite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.eventid_ = from._impl_.eventid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.is_favorite_ = from._impl_.is_favorite_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_SetEventFavorite::CopyFrom(const CMsgGCCStrike15_v2_SetEventFavorite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_SetEventFavorite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_SetEventFavorite::InternalSwap(CMsgGCCStrike15_v2_SetEventFavorite* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.is_favorite_)
      + sizeof(CMsgGCCStrike15_v2_SetEventFavorite::_impl_.is_favorite_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetEventFavorite, _impl_.eventid_)>(
          reinterpret_cast<char*>(&_impl_.eventid_),
          reinterpret_cast<char*>(&other->_impl_.eventid_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_SetEventFavorite::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GetEventFavorites_Request::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GetEventFavorites_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GetEventFavorites_Request::CMsgGCCStrike15_v2_GetEventFavorites_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GetEventFavorites_Request)
}
CMsgGCCStrike15_v2_GetEventFavorites_Request::CMsgGCCStrike15_v2_GetEventFavorites_Request(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgGCCStrike15_v2_GetEventFavorites_Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GetEventFavorites_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_GetEventFavorites_Request::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.all_events_ = {};
}
CMsgGCCStrike15_v2_GetEventFavorites_Request::~CMsgGCCStrike15_v2_GetEventFavorites_Request() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GetEventFavorites_Request)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GetEventFavorites_Request::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GetEventFavorites_Request& this_ = static_cast<CMsgGCCStrike15_v2_GetEventFavorites_Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Request::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GetEventFavorites_Request(arena);
}
constexpr auto CMsgGCCStrike15_v2_GetEventFavorites_Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CMsgGCCStrike15_v2_GetEventFavorites_Request),
                                            alignof(CMsgGCCStrike15_v2_GetEventFavorites_Request));
}
constexpr auto CMsgGCCStrike15_v2_GetEventFavorites_Request::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GetEventFavorites_Request_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GetEventFavorites_Request::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GetEventFavorites_Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GetEventFavorites_Request::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GetEventFavorites_Request>(), &CMsgGCCStrike15_v2_GetEventFavorites_Request::ByteSizeLong,
              &CMsgGCCStrike15_v2_GetEventFavorites_Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GetEventFavorites_Request::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_ =
            CMsgGCCStrike15_v2_GetEventFavorites_Request::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CMsgGCCStrike15_v2_GetEventFavorites_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GetEventFavorites_Request_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GetEventFavorites_Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool all_events = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_.all_events_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_.all_events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool all_events = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Request, _impl_.all_events_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GetEventFavorites_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GetEventFavorites_Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.all_events_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Request::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GetEventFavorites_Request& this_ = static_cast<const CMsgGCCStrike15_v2_GetEventFavorites_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Request::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GetEventFavorites_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GetEventFavorites_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool all_events = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_all_events(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GetEventFavorites_Request)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GetEventFavorites_Request::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GetEventFavorites_Request& this_ = static_cast<const CMsgGCCStrike15_v2_GetEventFavorites_Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GetEventFavorites_Request::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GetEventFavorites_Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GetEventFavorites_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000001u & cached_has_bits) * 2;
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GetEventFavorites_Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GetEventFavorites_Request*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GetEventFavorites_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GetEventFavorites_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.all_events_ = from._impl_.all_events_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GetEventFavorites_Request::CopyFrom(const CMsgGCCStrike15_v2_GetEventFavorites_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GetEventFavorites_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GetEventFavorites_Request::InternalSwap(CMsgGCCStrike15_v2_GetEventFavorites_Request* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.all_events_, other->_impl_.all_events_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GetEventFavorites_Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GetEventFavorites_Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GetEventFavorites_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GetEventFavorites_Response::CMsgGCCStrike15_v2_GetEventFavorites_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GetEventFavorites_Response)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GetEventFavorites_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GetEventFavorites_Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        json_favorites_(arena, from.json_favorites_),
        json_featured_(arena, from.json_featured_) {}

CMsgGCCStrike15_v2_GetEventFavorites_Response::CMsgGCCStrike15_v2_GetEventFavorites_Response(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GetEventFavorites_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GetEventFavorites_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.all_events_ = from._impl_.all_events_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GetEventFavorites_Response)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GetEventFavorites_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        json_favorites_(arena),
        json_featured_(arena) {}

inline void CMsgGCCStrike15_v2_GetEventFavorites_Response::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.all_events_ = {};
}
CMsgGCCStrike15_v2_GetEventFavorites_Response::~CMsgGCCStrike15_v2_GetEventFavorites_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GetEventFavorites_Response)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GetEventFavorites_Response::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GetEventFavorites_Response& this_ = static_cast<CMsgGCCStrike15_v2_GetEventFavorites_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.json_favorites_.Destroy();
  this_._impl_.json_featured_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Response::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GetEventFavorites_Response(arena);
}
constexpr auto CMsgGCCStrike15_v2_GetEventFavorites_Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_GetEventFavorites_Response),
                                            alignof(CMsgGCCStrike15_v2_GetEventFavorites_Response));
}
constexpr auto CMsgGCCStrike15_v2_GetEventFavorites_Response::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GetEventFavorites_Response_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GetEventFavorites_Response::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GetEventFavorites_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GetEventFavorites_Response::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GetEventFavorites_Response>(), &CMsgGCCStrike15_v2_GetEventFavorites_Response::ByteSizeLong,
              &CMsgGCCStrike15_v2_GetEventFavorites_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GetEventFavorites_Response::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_ =
            CMsgGCCStrike15_v2_GetEventFavorites_Response::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 81, 2>
CMsgGCCStrike15_v2_GetEventFavorites_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GetEventFavorites_Response_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GetEventFavorites_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool all_events = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.all_events_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.all_events_)}},
    // optional string json_favorites = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.json_favorites_)}},
    // optional string json_featured = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.json_featured_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool all_events = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.all_events_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string json_favorites = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.json_favorites_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string json_featured = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GetEventFavorites_Response, _impl_.json_featured_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\16\15\0\0\0\0"
    "CMsgGCCStrike15_v2_GetEventFavorites_Response"
    "json_favorites"
    "json_featured"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GetEventFavorites_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GetEventFavorites_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.json_favorites_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.json_featured_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.all_events_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Response::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GetEventFavorites_Response& this_ = static_cast<const CMsgGCCStrike15_v2_GetEventFavorites_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GetEventFavorites_Response::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GetEventFavorites_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GetEventFavorites_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool all_events = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_all_events(), target);
  }

  // optional string json_favorites = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_json_favorites();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GetEventFavorites_Response.json_favorites");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string json_featured = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_json_featured();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GetEventFavorites_Response.json_featured");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GetEventFavorites_Response)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GetEventFavorites_Response::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GetEventFavorites_Response& this_ = static_cast<const CMsgGCCStrike15_v2_GetEventFavorites_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GetEventFavorites_Response::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GetEventFavorites_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GetEventFavorites_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string json_favorites = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_json_favorites());
    }
    // optional string json_featured = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_json_featured());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GetEventFavorites_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GetEventFavorites_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GetEventFavorites_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GetEventFavorites_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_json_favorites(from._internal_json_favorites());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_json_featured(from._internal_json_featured());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.all_events_ = from._impl_.all_events_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GetEventFavorites_Response::CopyFrom(const CMsgGCCStrike15_v2_GetEventFavorites_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GetEventFavorites_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GetEventFavorites_Response::InternalSwap(CMsgGCCStrike15_v2_GetEventFavorites_Response* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.json_favorites_, &other->_impl_.json_favorites_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.json_featured_, &other->_impl_.json_featured_, arena);
  swap(_impl_.all_events_, other->_impl_.all_events_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GetEventFavorites_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientPerfReport_Entry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientPerfReport_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientPerfReport_Entry::CMsgGCCStrike15_v2_ClientPerfReport_Entry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPerfReport_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientPerfReport_Entry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reference_(arena, from.reference_),
        actual_(arena, from.actual_) {}

CMsgGCCStrike15_v2_ClientPerfReport_Entry::CMsgGCCStrike15_v2_ClientPerfReport_Entry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientPerfReport_Entry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientPerfReport_Entry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, perfcounter_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, perfcounter_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, perfcounter_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPerfReport_Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        reference_(arena),
        actual_(arena) {}

inline void CMsgGCCStrike15_v2_ClientPerfReport_Entry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, perfcounter_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, perfcounter_) +
               sizeof(Impl_::status_));
}
CMsgGCCStrike15_v2_ClientPerfReport_Entry::~CMsgGCCStrike15_v2_ClientPerfReport_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientPerfReport_Entry::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientPerfReport_Entry& this_ = static_cast<CMsgGCCStrike15_v2_ClientPerfReport_Entry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.reference_.Destroy();
  this_._impl_.actual_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport_Entry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientPerfReport_Entry(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientPerfReport_Entry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_ClientPerfReport_Entry),
                                            alignof(CMsgGCCStrike15_v2_ClientPerfReport_Entry));
}
constexpr auto CMsgGCCStrike15_v2_ClientPerfReport_Entry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientPerfReport_Entry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientPerfReport_Entry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientPerfReport_Entry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientPerfReport_Entry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientPerfReport_Entry>(), &CMsgGCCStrike15_v2_ClientPerfReport_Entry::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientPerfReport_Entry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientPerfReport_Entry::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_ =
            CMsgGCCStrike15_v2_ClientPerfReport_Entry::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport_Entry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
CMsgGCCStrike15_v2_ClientPerfReport_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_ClientPerfReport_Entry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPerfReport_Entry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 perfcounter = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.perfcounter_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.perfcounter_)}},
    // optional uint32 length = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.length_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.length_)}},
    // optional bytes reference = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.reference_)}},
    // optional bytes actual = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.actual_)}},
    // optional uint32 sourceid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.sourceid_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.sourceid_)}},
    // optional uint32 status = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.status_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 perfcounter = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.perfcounter_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 length = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.length_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes reference = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.reference_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes actual = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.actual_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 sourceid = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.sourceid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 status = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.status_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientPerfReport_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.reference_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.actual_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.perfcounter_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.perfcounter_)) + sizeof(_impl_.status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport_Entry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientPerfReport_Entry& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPerfReport_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport_Entry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientPerfReport_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 perfcounter = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_perfcounter(), target);
  }

  // optional uint32 length = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_length(), target);
  }

  // optional bytes reference = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_reference();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // optional bytes actual = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_actual();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // optional uint32 sourceid = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_sourceid(), target);
  }

  // optional uint32 status = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_status(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientPerfReport_Entry::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientPerfReport_Entry& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPerfReport_Entry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientPerfReport_Entry::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientPerfReport_Entry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional bytes reference = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_reference());
    }
    // optional bytes actual = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_actual());
    }
    // optional uint32 perfcounter = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_perfcounter());
    }
    // optional uint32 length = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_length());
    }
    // optional uint32 sourceid = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_sourceid());
    }
    // optional uint32 status = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_status());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientPerfReport_Entry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientPerfReport_Entry*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientPerfReport_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_reference(from._internal_reference());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_actual(from._internal_actual());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.perfcounter_ = from._impl_.perfcounter_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.length_ = from._impl_.length_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.sourceid_ = from._impl_.sourceid_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.status_ = from._impl_.status_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientPerfReport_Entry::CopyFrom(const CMsgGCCStrike15_v2_ClientPerfReport_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientPerfReport.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientPerfReport_Entry::InternalSwap(CMsgGCCStrike15_v2_ClientPerfReport_Entry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reference_, &other->_impl_.reference_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.actual_, &other->_impl_.actual_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.status_)
      + sizeof(CMsgGCCStrike15_v2_ClientPerfReport_Entry::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport_Entry, _impl_.perfcounter_)>(
          reinterpret_cast<char*>(&_impl_.perfcounter_),
          reinterpret_cast<char*>(&other->_impl_.perfcounter_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientPerfReport_Entry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientPerfReport::_Internal {
 public:
};

CMsgGCCStrike15_v2_ClientPerfReport::CMsgGCCStrike15_v2_ClientPerfReport(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPerfReport_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientPerfReport)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPerfReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientPerfReport& from_msg)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

CMsgGCCStrike15_v2_ClientPerfReport::CMsgGCCStrike15_v2_ClientPerfReport(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientPerfReport& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientPerfReport_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientPerfReport* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientPerfReport)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientPerfReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void CMsgGCCStrike15_v2_ClientPerfReport::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_ClientPerfReport::~CMsgGCCStrike15_v2_ClientPerfReport() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientPerfReport)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientPerfReport::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientPerfReport& this_ = static_cast<CMsgGCCStrike15_v2_ClientPerfReport&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientPerfReport(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientPerfReport::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport, _impl_.entries_) +
          decltype(CMsgGCCStrike15_v2_ClientPerfReport::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CMsgGCCStrike15_v2_ClientPerfReport), alignof(CMsgGCCStrike15_v2_ClientPerfReport), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientPerfReport::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientPerfReport),
                                 alignof(CMsgGCCStrike15_v2_ClientPerfReport));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientPerfReport::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientPerfReport_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientPerfReport::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientPerfReport>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientPerfReport::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientPerfReport>(), &CMsgGCCStrike15_v2_ClientPerfReport::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientPerfReport::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientPerfReport::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientPerfReport_class_data_ =
            CMsgGCCStrike15_v2_ClientPerfReport::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientPerfReport_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientPerfReport_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientPerfReport_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CMsgGCCStrike15_v2_ClientPerfReport::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientPerfReport_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPerfReport>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CMsgGCCStrike15_v2_ClientPerfReport.Entry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCCStrike15_v2_ClientPerfReport.Entry entries = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientPerfReport, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientPerfReport_Entry>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientPerfReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientPerfReport)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientPerfReport& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPerfReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientPerfReport::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientPerfReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientPerfReport)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCCStrike15_v2_ClientPerfReport.Entry entries = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientPerfReport)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientPerfReport::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientPerfReport& this_ = static_cast<const CMsgGCCStrike15_v2_ClientPerfReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientPerfReport::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientPerfReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientPerfReport)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgGCCStrike15_v2_ClientPerfReport.Entry entries = 1;
    {
      total_size += 1UL * this_._internal_entries_size();
      for (const auto& msg : this_._internal_entries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientPerfReport::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientPerfReport*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientPerfReport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientPerfReport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientPerfReport::CopyFrom(const CMsgGCCStrike15_v2_ClientPerfReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientPerfReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientPerfReport::InternalSwap(CMsgGCCStrike15_v2_ClientPerfReport* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientPerfReport::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CVDiagnostic::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CVDiagnostic>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_._has_bits_);
};

CVDiagnostic::CVDiagnostic(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CVDiagnostic_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CVDiagnostic)
}
PROTOBUF_NDEBUG_INLINE CVDiagnostic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CVDiagnostic& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        string_value_(arena, from.string_value_) {}

CVDiagnostic::CVDiagnostic(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CVDiagnostic& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CVDiagnostic_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CVDiagnostic* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, value_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::value_));

  // @@protoc_insertion_point(copy_constructor:CVDiagnostic)
}
PROTOBUF_NDEBUG_INLINE CVDiagnostic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        string_value_(arena) {}

inline void CVDiagnostic::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::value_));
}
CVDiagnostic::~CVDiagnostic() {
  // @@protoc_insertion_point(destructor:CVDiagnostic)
  SharedDtor(*this);
}
inline void CVDiagnostic::SharedDtor(MessageLite& self) {
  CVDiagnostic& this_ = static_cast<CVDiagnostic&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.string_value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CVDiagnostic::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CVDiagnostic(arena);
}
constexpr auto CVDiagnostic::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CVDiagnostic),
                                            alignof(CVDiagnostic));
}
constexpr auto CVDiagnostic::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CVDiagnostic_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CVDiagnostic::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CVDiagnostic>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CVDiagnostic::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CVDiagnostic>(), &CVDiagnostic::ByteSizeLong,
              &CVDiagnostic::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_._cached_size_),
          false,
      },
      &CVDiagnostic::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CVDiagnostic_class_data_ =
            CVDiagnostic::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CVDiagnostic::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CVDiagnostic_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CVDiagnostic_class_data_.tc_table);
  return CVDiagnostic_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 33, 2>
CVDiagnostic::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CVDiagnostic_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CVDiagnostic>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string string_value = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.string_value_)}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CVDiagnostic, _impl_.id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.id_)}},
    // optional uint32 extended = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CVDiagnostic, _impl_.extended_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.extended_)}},
    // optional uint64 value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CVDiagnostic, _impl_.value_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 extended = 2;
    {PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.extended_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 value = 3;
    {PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.value_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string string_value = 4;
    {PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.string_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\0\0\0\14\0\0\0"
    "CVDiagnostic"
    "string_value"
  }},
};
PROTOBUF_NOINLINE void CVDiagnostic::Clear() {
// @@protoc_insertion_point(message_clear_start:CVDiagnostic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.string_value_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CVDiagnostic::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CVDiagnostic& this_ = static_cast<const CVDiagnostic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CVDiagnostic::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CVDiagnostic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CVDiagnostic)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 id = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_id(), target);
  }

  // optional uint32 extended = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_extended(), target);
  }

  // optional uint64 value = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_value(), target);
  }

  // optional string string_value = 4;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_string_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CVDiagnostic.string_value");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CVDiagnostic)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CVDiagnostic::ByteSizeLong(const MessageLite& base) {
  const CVDiagnostic& this_ = static_cast<const CVDiagnostic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CVDiagnostic::ByteSizeLong() const {
  const CVDiagnostic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CVDiagnostic)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional string string_value = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_string_value());
    }
    // optional uint32 id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_id());
    }
    // optional uint32 extended = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_extended());
    }
    // optional uint64 value = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_value());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CVDiagnostic::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CVDiagnostic*>(&to_msg);
  auto& from = static_cast<const CVDiagnostic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CVDiagnostic)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_string_value(from._internal_string_value());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.extended_ = from._impl_.extended_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.value_ = from._impl_.value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CVDiagnostic::CopyFrom(const CVDiagnostic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CVDiagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CVDiagnostic::InternalSwap(CVDiagnostic* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_value_, &other->_impl_.string_value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.value_)
      + sizeof(CVDiagnostic::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(CVDiagnostic, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata CVDiagnostic::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_ClientReportValidation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_ClientReportValidation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_ClientReportValidation::CMsgGCCStrike15_v2_ClientReportValidation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportValidation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_ClientReportValidation)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientReportValidation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_ClientReportValidation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        diagnostics_{visibility, arena, from.diagnostics_},
        file_report_(arena, from.file_report_),
        command_line_(arena, from.command_line_),
        last_launch_data_(arena, from.last_launch_data_) {}

CMsgGCCStrike15_v2_ClientReportValidation::CMsgGCCStrike15_v2_ClientReportValidation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_ClientReportValidation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_ClientReportValidation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_ClientReportValidation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_files_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_files_),
           offsetof(Impl_, report_count_) -
               offsetof(Impl_, total_files_) +
               sizeof(Impl_::report_count_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_ClientReportValidation)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_ClientReportValidation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        diagnostics_{visibility, arena},
        file_report_(arena),
        command_line_(arena),
        last_launch_data_(arena) {}

inline void CMsgGCCStrike15_v2_ClientReportValidation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_files_),
           0,
           offsetof(Impl_, report_count_) -
               offsetof(Impl_, total_files_) +
               sizeof(Impl_::report_count_));
}
CMsgGCCStrike15_v2_ClientReportValidation::~CMsgGCCStrike15_v2_ClientReportValidation() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_ClientReportValidation)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_ClientReportValidation::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_ClientReportValidation& this_ = static_cast<CMsgGCCStrike15_v2_ClientReportValidation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.file_report_.Destroy();
  this_._impl_.command_line_.Destroy();
  this_._impl_.last_launch_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportValidation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_ClientReportValidation(arena);
}
constexpr auto CMsgGCCStrike15_v2_ClientReportValidation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostics_) +
          decltype(CMsgGCCStrike15_v2_ClientReportValidation::_impl_.diagnostics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgGCCStrike15_v2_ClientReportValidation), alignof(CMsgGCCStrike15_v2_ClientReportValidation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgGCCStrike15_v2_ClientReportValidation::PlacementNew_,
                                 sizeof(CMsgGCCStrike15_v2_ClientReportValidation),
                                 alignof(CMsgGCCStrike15_v2_ClientReportValidation));
  }
}
constexpr auto CMsgGCCStrike15_v2_ClientReportValidation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_ClientReportValidation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_ClientReportValidation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_ClientReportValidation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_ClientReportValidation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_ClientReportValidation>(), &CMsgGCCStrike15_v2_ClientReportValidation::ByteSizeLong,
              &CMsgGCCStrike15_v2_ClientReportValidation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_ClientReportValidation::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_ClientReportValidation_class_data_ =
            CMsgGCCStrike15_v2_ClientReportValidation::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportValidation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_ClientReportValidation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_ClientReportValidation_class_data_.tc_table);
  return CMsgGCCStrike15_v2_ClientReportValidation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 1, 105, 2>
CMsgGCCStrike15_v2_ClientReportValidation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_ClientReportValidation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_ClientReportValidation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string file_report = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.file_report_)}},
    // optional string command_line = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.command_line_)}},
    // optional uint32 total_files = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.total_files_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.total_files_)}},
    // optional uint32 internal_error = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.internal_error_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.internal_error_)}},
    // optional uint32 trust_time = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.trust_time_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.trust_time_)}},
    // optional uint32 count_pending = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_pending_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_pending_)}},
    // optional uint32 count_completed = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_completed_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_completed_)}},
    // optional uint32 process_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.process_id_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.process_id_)}},
    // optional int32 osversion = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.osversion_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.osversion_)}},
    // optional uint32 clientreportversion = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.clientreportversion_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.clientreportversion_)}},
    // optional uint32 status_id = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.status_id_), 11>(),
     {88, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.status_id_)}},
    // optional uint32 diagnostic1 = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic1_), 12>(),
     {96, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic1_)}},
    // optional uint64 diagnostic2 = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic2_), 13>(),
     {104, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic2_)}},
    // optional uint64 diagnostic3 = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic3_), 14>(),
     {112, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic3_)}},
    // optional string last_launch_data = 15;
    {::_pbi::TcParser::FastSS1,
     {122, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.last_launch_data_)}},
    // optional uint32 report_count = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 18, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.report_count_)}},
    // optional uint64 client_time = 17;
    {::_pbi::TcParser::FastV64S2,
     {392, 15, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.client_time_)}},
    // optional uint64 diagnostic4 = 18;
    {::_pbi::TcParser::FastV64S2,
     {400, 16, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic4_)}},
    // optional uint64 diagnostic5 = 19;
    {::_pbi::TcParser::FastV64S2,
     {408, 17, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic5_)}},
    // repeated .CVDiagnostic diagnostics = 20;
    {::_pbi::TcParser::FastMtR2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostics_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string file_report = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.file_report_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string command_line = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.command_line_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 total_files = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.total_files_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 internal_error = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.internal_error_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 trust_time = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.trust_time_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count_pending = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_pending_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count_completed = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.count_completed_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 process_id = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.process_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 osversion = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.osversion_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 clientreportversion = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.clientreportversion_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 status_id = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.status_id_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 diagnostic1 = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic1_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 diagnostic2 = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic2_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 diagnostic3 = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic3_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string last_launch_data = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.last_launch_data_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 report_count = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.report_count_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 client_time = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.client_time_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 diagnostic4 = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic4_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 diagnostic5 = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostic5_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .CVDiagnostic diagnostics = 20;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.diagnostics_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CVDiagnostic>()},
  }},
  {{
    "\51\13\14\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_ClientReportValidation"
    "file_report"
    "command_line"
    "last_launch_data"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_ClientReportValidation::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_ClientReportValidation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.diagnostics_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.file_report_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.command_line_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.last_launch_data_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f8u) != 0) {
    ::memset(&_impl_.total_files_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_completed_) -
        reinterpret_cast<char*>(&_impl_.total_files_)) + sizeof(_impl_.count_completed_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.process_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.client_time_) -
        reinterpret_cast<char*>(&_impl_.process_id_)) + sizeof(_impl_.client_time_));
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    ::memset(&_impl_.diagnostic4_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.report_count_) -
        reinterpret_cast<char*>(&_impl_.diagnostic4_)) + sizeof(_impl_.report_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportValidation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_ClientReportValidation& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportValidation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_ClientReportValidation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_ClientReportValidation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_ClientReportValidation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string file_report = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_file_report();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientReportValidation.file_report");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string command_line = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_command_line();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientReportValidation.command_line");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional uint32 total_files = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_total_files(), target);
  }

  // optional uint32 internal_error = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_internal_error(), target);
  }

  // optional uint32 trust_time = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_trust_time(), target);
  }

  // optional uint32 count_pending = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this_._internal_count_pending(), target);
  }

  // optional uint32 count_completed = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_count_completed(), target);
  }

  // optional uint32 process_id = 8;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this_._internal_process_id(), target);
  }

  // optional int32 osversion = 9;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
            stream, this_._internal_osversion(), target);
  }

  // optional uint32 clientreportversion = 10;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_clientreportversion(), target);
  }

  // optional uint32 status_id = 11;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this_._internal_status_id(), target);
  }

  // optional uint32 diagnostic1 = 12;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_diagnostic1(), target);
  }

  // optional uint64 diagnostic2 = 13;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        13, this_._internal_diagnostic2(), target);
  }

  // optional uint64 diagnostic3 = 14;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        14, this_._internal_diagnostic3(), target);
  }

  // optional string last_launch_data = 15;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_last_launch_data();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_ClientReportValidation.last_launch_data");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // optional uint32 report_count = 16;
  if ((cached_has_bits & 0x00040000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this_._internal_report_count(), target);
  }

  // optional uint64 client_time = 17;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        17, this_._internal_client_time(), target);
  }

  // optional uint64 diagnostic4 = 18;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        18, this_._internal_diagnostic4(), target);
  }

  // optional uint64 diagnostic5 = 19;
  if ((cached_has_bits & 0x00020000u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        19, this_._internal_diagnostic5(), target);
  }

  // repeated .CVDiagnostic diagnostics = 20;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_diagnostics_size());
       i < n; i++) {
    const auto& repfield = this_._internal_diagnostics().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            20, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_ClientReportValidation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_ClientReportValidation::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_ClientReportValidation& this_ = static_cast<const CMsgGCCStrike15_v2_ClientReportValidation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_ClientReportValidation::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_ClientReportValidation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_ClientReportValidation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CVDiagnostic diagnostics = 20;
    {
      total_size += 2UL * this_._internal_diagnostics_size();
      for (const auto& msg : this_._internal_diagnostics()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string file_report = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_file_report());
    }
    // optional string command_line = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_command_line());
    }
    // optional string last_launch_data = 15;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_last_launch_data());
    }
    // optional uint32 total_files = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_total_files());
    }
    // optional uint32 internal_error = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_internal_error());
    }
    // optional uint32 trust_time = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_trust_time());
    }
    // optional uint32 count_pending = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_count_pending());
    }
    // optional uint32 count_completed = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_count_completed());
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // optional uint32 process_id = 8;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_process_id());
    }
    // optional int32 osversion = 9;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_osversion());
    }
    // optional uint32 clientreportversion = 10;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_clientreportversion());
    }
    // optional uint32 status_id = 11;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_status_id());
    }
    // optional uint32 diagnostic1 = 12;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_diagnostic1());
    }
    // optional uint64 diagnostic2 = 13;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_diagnostic2());
    }
    // optional uint64 diagnostic3 = 14;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_diagnostic3());
    }
    // optional uint64 client_time = 17;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this_._internal_client_time());
    }
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    // optional uint64 diagnostic4 = 18;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this_._internal_diagnostic4());
    }
    // optional uint64 diagnostic5 = 19;
    if ((cached_has_bits & 0x00020000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this_._internal_diagnostic5());
    }
    // optional uint32 report_count = 16;
    if ((cached_has_bits & 0x00040000u) != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_report_count());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_ClientReportValidation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_ClientReportValidation*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_ClientReportValidation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_ClientReportValidation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_diagnostics()->MergeFrom(
      from._internal_diagnostics());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_file_report(from._internal_file_report());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_command_line(from._internal_command_line());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_last_launch_data(from._internal_last_launch_data());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.total_files_ = from._impl_.total_files_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.internal_error_ = from._impl_.internal_error_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.trust_time_ = from._impl_.trust_time_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.count_pending_ = from._impl_.count_pending_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.count_completed_ = from._impl_.count_completed_;
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.process_id_ = from._impl_.process_id_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.osversion_ = from._impl_.osversion_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.clientreportversion_ = from._impl_.clientreportversion_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.status_id_ = from._impl_.status_id_;
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _this->_impl_.diagnostic1_ = from._impl_.diagnostic1_;
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _this->_impl_.diagnostic2_ = from._impl_.diagnostic2_;
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _this->_impl_.diagnostic3_ = from._impl_.diagnostic3_;
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _this->_impl_.client_time_ = from._impl_.client_time_;
    }
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _this->_impl_.diagnostic4_ = from._impl_.diagnostic4_;
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _this->_impl_.diagnostic5_ = from._impl_.diagnostic5_;
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      _this->_impl_.report_count_ = from._impl_.report_count_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_ClientReportValidation::CopyFrom(const CMsgGCCStrike15_v2_ClientReportValidation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_ClientReportValidation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_ClientReportValidation::InternalSwap(CMsgGCCStrike15_v2_ClientReportValidation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.diagnostics_.InternalSwap(&other->_impl_.diagnostics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_report_, &other->_impl_.file_report_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_line_, &other->_impl_.command_line_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_launch_data_, &other->_impl_.last_launch_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.report_count_)
      + sizeof(CMsgGCCStrike15_v2_ClientReportValidation::_impl_.report_count_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_ClientReportValidation, _impl_.total_files_)>(
          reinterpret_cast<char*>(&_impl_.total_files_),
          reinterpret_cast<char*>(&other->_impl_.total_files_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_ClientReportValidation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        file_report_(arena, from.file_report_),
        files_prevented_trusted_(arena, from.files_prevented_trusted_) {}

CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offer_insecure_mode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offer_insecure_mode_),
           offsetof(Impl_, show_warning_not_trusted_2_) -
               offsetof(Impl_, offer_insecure_mode_) +
               sizeof(Impl_::show_warning_not_trusted_2_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        file_report_(arena),
        files_prevented_trusted_(arena) {}

inline void CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offer_insecure_mode_),
           0,
           offsetof(Impl_, show_warning_not_trusted_2_) -
               offsetof(Impl_, offer_insecure_mode_) +
               sizeof(Impl_::show_warning_not_trusted_2_));
}
CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::~CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& this_ = static_cast<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.file_report_.Destroy();
  this_._impl_.files_prevented_trusted_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode),
                                            alignof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode));
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode>(), &CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_ =
            CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 95, 2>
CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string file_report = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.file_report_)}},
    // optional bool offer_insecure_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_insecure_mode_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_insecure_mode_)}},
    // optional bool offer_secure_mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_secure_mode_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_secure_mode_)}},
    // optional bool show_unsigned_ui = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_unsigned_ui_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_unsigned_ui_)}},
    // optional bool kick_user = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.kick_user_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.kick_user_)}},
    // optional bool show_trusted_ui = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_trusted_ui_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_trusted_ui_)}},
    // optional bool show_warning_not_trusted = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_)}},
    // optional bool show_warning_not_trusted_2 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_2_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_2_)}},
    // optional string files_prevented_trusted = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.files_prevented_trusted_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string file_report = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.file_report_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool offer_insecure_mode = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_insecure_mode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool offer_secure_mode = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_secure_mode_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool show_unsigned_ui = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_unsigned_ui_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool kick_user = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.kick_user_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool show_trusted_ui = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_trusted_ui_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool show_warning_not_trusted = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool show_warning_not_trusted_2 = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_2_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string files_prevented_trusted = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.files_prevented_trusted_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\13\0\0\0\0\0\0\0\27\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode"
    "file_report"
    "files_prevented_trusted"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.file_report_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.files_prevented_trusted_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000fcu) != 0) {
    ::memset(&_impl_.offer_insecure_mode_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.show_warning_not_trusted_) -
        reinterpret_cast<char*>(&_impl_.offer_insecure_mode_)) + sizeof(_impl_.show_warning_not_trusted_));
  }
  _impl_.show_warning_not_trusted_2_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string file_report = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_file_report();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode.file_report");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool offer_insecure_mode = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_offer_insecure_mode(), target);
  }

  // optional bool offer_secure_mode = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_offer_secure_mode(), target);
  }

  // optional bool show_unsigned_ui = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this_._internal_show_unsigned_ui(), target);
  }

  // optional bool kick_user = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this_._internal_kick_user(), target);
  }

  // optional bool show_trusted_ui = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this_._internal_show_trusted_ui(), target);
  }

  // optional bool show_warning_not_trusted = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this_._internal_show_warning_not_trusted(), target);
  }

  // optional bool show_warning_not_trusted_2 = 8;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this_._internal_show_warning_not_trusted_2(), target);
  }

  // optional string files_prevented_trusted = 9;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_files_prevented_trusted();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode.files_prevented_trusted");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x000001fcu & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string file_report = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_file_report());
    }
    // optional string files_prevented_trusted = 9;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_files_prevented_trusted());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_file_report(from._internal_file_report());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_files_prevented_trusted(from._internal_files_prevented_trusted());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.offer_insecure_mode_ = from._impl_.offer_insecure_mode_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.offer_secure_mode_ = from._impl_.offer_secure_mode_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.show_unsigned_ui_ = from._impl_.show_unsigned_ui_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.kick_user_ = from._impl_.kick_user_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.show_trusted_ui_ = from._impl_.show_trusted_ui_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.show_warning_not_trusted_ = from._impl_.show_warning_not_trusted_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.show_warning_not_trusted_2_ = from._impl_.show_warning_not_trusted_2_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::CopyFrom(const CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::InternalSwap(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_report_, &other->_impl_.file_report_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.files_prevented_trusted_, &other->_impl_.files_prevented_trusted_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.show_warning_not_trusted_2_)
      + sizeof(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::_impl_.show_warning_not_trusted_2_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode, _impl_.offer_insecure_mode_)>(
          reinterpret_cast<char*>(&_impl_.offer_insecure_mode_),
          reinterpret_cast<char*>(&other->_impl_.offer_insecure_mode_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ClientRequestValidation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ClientRequestValidation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ClientRequestValidation::CMsgGCCStrike15_v2_GC2ClientRequestValidation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientRequestValidation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GC2ClientRequestValidation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        module_(arena, from.module_) {}

CMsgGCCStrike15_v2_GC2ClientRequestValidation::CMsgGCCStrike15_v2_GC2ClientRequestValidation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GC2ClientRequestValidation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GC2ClientRequestValidation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.full_report_ = from._impl_.full_report_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientRequestValidation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        module_(arena) {}

inline void CMsgGCCStrike15_v2_GC2ClientRequestValidation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.full_report_ = {};
}
CMsgGCCStrike15_v2_GC2ClientRequestValidation::~CMsgGCCStrike15_v2_GC2ClientRequestValidation() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ClientRequestValidation::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ClientRequestValidation& this_ = static_cast<CMsgGCCStrike15_v2_GC2ClientRequestValidation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.module_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRequestValidation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ClientRequestValidation(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientRequestValidation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_GC2ClientRequestValidation),
                                            alignof(CMsgGCCStrike15_v2_GC2ClientRequestValidation));
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientRequestValidation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ClientRequestValidation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ClientRequestValidation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ClientRequestValidation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ClientRequestValidation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ClientRequestValidation>(), &CMsgGCCStrike15_v2_GC2ClientRequestValidation::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ClientRequestValidation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ClientRequestValidation::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_ =
            CMsgGCCStrike15_v2_GC2ClientRequestValidation::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRequestValidation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2>
CMsgGCCStrike15_v2_GC2ClientRequestValidation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GC2ClientRequestValidation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ClientRequestValidation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string module = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_.module_)}},
    // optional bool full_report = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_.full_report_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_.full_report_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool full_report = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_.full_report_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string module = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientRequestValidation, _impl_.module_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\6\0\0\0\0\0"
    "CMsgGCCStrike15_v2_GC2ClientRequestValidation"
    "module"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ClientRequestValidation::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.module_.ClearNonDefaultToEmpty();
  }
  _impl_.full_report_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRequestValidation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ClientRequestValidation& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientRequestValidation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientRequestValidation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ClientRequestValidation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool full_report = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_full_report(), target);
  }

  // optional string module = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_module();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GC2ClientRequestValidation.module");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ClientRequestValidation::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ClientRequestValidation& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientRequestValidation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ClientRequestValidation::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ClientRequestValidation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000002u & cached_has_bits) * 2;
   {
    // optional string module = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_module());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ClientRequestValidation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ClientRequestValidation*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ClientRequestValidation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_module(from._internal_module());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.full_report_ = from._impl_.full_report_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ClientRequestValidation::CopyFrom(const CMsgGCCStrike15_v2_GC2ClientRequestValidation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ClientRequestValidation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ClientRequestValidation::InternalSwap(CMsgGCCStrike15_v2_GC2ClientRequestValidation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_, &other->_impl_.module_, arena);
  swap(_impl_.full_report_, other->_impl_.full_report_);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ClientRequestValidation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ClientInitSystem::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ClientInitSystem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ClientInitSystem::CMsgGCCStrike15_v2_GC2ClientInitSystem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ClientInitSystem)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientInitSystem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GC2ClientInitSystem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        outputname_(arena, from.outputname_),
        key_data_(arena, from.key_data_),
        sha_hash_(arena, from.sha_hash_),
        manifest_(arena, from.manifest_),
        system_package_(arena, from.system_package_) {}

CMsgGCCStrike15_v2_GC2ClientInitSystem::CMsgGCCStrike15_v2_GC2ClientInitSystem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GC2ClientInitSystem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GC2ClientInitSystem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, load_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, load_),
           offsetof(Impl_, cookie_) -
               offsetof(Impl_, load_) +
               sizeof(Impl_::cookie_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GC2ClientInitSystem)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientInitSystem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        outputname_(arena),
        key_data_(arena),
        sha_hash_(arena),
        manifest_(arena),
        system_package_(arena) {}

inline void CMsgGCCStrike15_v2_GC2ClientInitSystem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, load_),
           0,
           offsetof(Impl_, cookie_) -
               offsetof(Impl_, load_) +
               sizeof(Impl_::cookie_));
}
CMsgGCCStrike15_v2_GC2ClientInitSystem::~CMsgGCCStrike15_v2_GC2ClientInitSystem() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ClientInitSystem)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ClientInitSystem::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ClientInitSystem& this_ = static_cast<CMsgGCCStrike15_v2_GC2ClientInitSystem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.outputname_.Destroy();
  this_._impl_.key_data_.Destroy();
  this_._impl_.sha_hash_.Destroy();
  this_._impl_.manifest_.Destroy();
  this_._impl_.system_package_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ClientInitSystem(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientInitSystem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_GC2ClientInitSystem),
                                            alignof(CMsgGCCStrike15_v2_GC2ClientInitSystem));
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientInitSystem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ClientInitSystem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ClientInitSystem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ClientInitSystem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ClientInitSystem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ClientInitSystem>(), &CMsgGCCStrike15_v2_GC2ClientInitSystem::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ClientInitSystem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ClientInitSystem::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_ =
            CMsgGCCStrike15_v2_GC2ClientInitSystem::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 77, 2>
CMsgGCCStrike15_v2_GC2ClientInitSystem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_GC2ClientInitSystem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ClientInitSystem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool load = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.name_)}},
    // optional string outputname = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.outputname_)}},
    // optional bytes key_data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.key_data_)}},
    // optional bytes sha_hash = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.sha_hash_)}},
    // optional int32 cookie = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.cookie_), 8>(),
     {48, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.cookie_)}},
    // optional string manifest = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.manifest_)}},
    // optional bytes system_package = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.system_package_)}},
    // optional bool load_system = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_system_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_system_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool load = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string outputname = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.outputname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes key_data = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.key_data_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes sha_hash = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.sha_hash_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 cookie = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.cookie_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string manifest = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.manifest_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes system_package = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.system_package_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bool load_system = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_system_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\46\0\4\12\0\0\0\10\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_GC2ClientInitSystem"
    "name"
    "outputname"
    "manifest"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ClientInitSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ClientInitSystem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.outputname_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.key_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.sha_hash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.manifest_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.system_package_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000c0u) != 0) {
    ::memset(&_impl_.load_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.load_system_) -
        reinterpret_cast<char*>(&_impl_.load_)) + sizeof(_impl_.load_system_));
  }
  _impl_.cookie_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientInitSystem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ClientInitSystem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool load = 1;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_load(), target);
  }

  // optional string name = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GC2ClientInitSystem.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string outputname = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_outputname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GC2ClientInitSystem.outputname");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional bytes key_data = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_key_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // optional bytes sha_hash = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const std::string& _s = this_._internal_sha_hash();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  // optional int32 cookie = 6;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_cookie(), target);
  }

  // optional string manifest = 7;
  if ((cached_has_bits & 0x00000010u) != 0) {
    const std::string& _s = this_._internal_manifest();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GC2ClientInitSystem.manifest");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional bytes system_package = 8;
  if ((cached_has_bits & 0x00000020u) != 0) {
    const std::string& _s = this_._internal_system_package();
    target = stream->WriteBytesMaybeAliased(8, _s, target);
  }

  // optional bool load_system = 9;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this_._internal_load_system(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ClientInitSystem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ClientInitSystem::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientInitSystem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ClientInitSystem::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ClientInitSystem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x000000c0u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string outputname = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_outputname());
    }
    // optional bytes key_data = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_key_data());
    }
    // optional bytes sha_hash = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_sha_hash());
    }
    // optional string manifest = 7;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_manifest());
    }
    // optional bytes system_package = 8;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_system_package());
    }
  }
   {
    // optional int32 cookie = 6;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_cookie());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ClientInitSystem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ClientInitSystem*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ClientInitSystem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ClientInitSystem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_outputname(from._internal_outputname());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_key_data(from._internal_key_data());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_sha_hash(from._internal_sha_hash());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_internal_set_manifest(from._internal_manifest());
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_internal_set_system_package(from._internal_system_package());
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.load_ = from._impl_.load_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.load_system_ = from._impl_.load_system_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.cookie_ = from._impl_.cookie_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ClientInitSystem::CopyFrom(const CMsgGCCStrike15_v2_GC2ClientInitSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ClientInitSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ClientInitSystem::InternalSwap(CMsgGCCStrike15_v2_GC2ClientInitSystem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outputname_, &other->_impl_.outputname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_data_, &other->_impl_.key_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sha_hash_, &other->_impl_.sha_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.manifest_, &other->_impl_.manifest_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.system_package_, &other->_impl_.system_package_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.cookie_)
      + sizeof(CMsgGCCStrike15_v2_GC2ClientInitSystem::_impl_.cookie_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem, _impl_.load_)>(
          reinterpret_cast<char*>(&_impl_.load_),
          reinterpret_cast<char*>(&other->_impl_.load_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ClientInitSystem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        diagnostic_(arena, from.diagnostic_),
        sha_hash_(arena, from.sha_hash_) {}

CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_GC2ClientInitSystem_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, aux_system2_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::aux_system2_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        diagnostic_(arena),
        sha_hash_(arena) {}

inline void CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, aux_system2_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::aux_system2_));
}
CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::~CMsgGCCStrike15_v2_GC2ClientInitSystem_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& this_ = static_cast<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.diagnostic_.Destroy();
  this_._impl_.sha_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_GC2ClientInitSystem_Response(arena);
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response),
                                            alignof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response));
}
constexpr auto CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response>(), &CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::ByteSizeLong,
              &CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_ =
            CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_.tc_table);
  return CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 74, 2>
CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgGCCStrike15_v2_GC2ClientInitSystem_Response_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.success_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.success_)}},
    // optional string diagnostic = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.diagnostic_)}},
    // optional bytes sha_hash = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.sha_hash_)}},
    // optional int32 response = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.response_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.response_)}},
    // optional int32 error_code1 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code1_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code1_)}},
    // optional int32 error_code2 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code2_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code2_)}},
    // optional int64 handle = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.handle_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.handle_)}},
    // optional .EInitSystemResult einit_result = 8 [default = k_EInitSystemResult_Invalid];
    {::_pbi::TcParser::FastEr0S1,
     {64, 7, 8, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.einit_result_)}},
    // optional int32 aux_system1 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system1_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system1_)}},
    // optional int32 aux_system2 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system2_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.success_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string diagnostic = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.diagnostic_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes sha_hash = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.sha_hash_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 response = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.response_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 error_code1 = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code1_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 error_code2 = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.error_code2_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 handle = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.handle_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .EInitSystemResult einit_result = 8 [default = k_EInitSystemResult_Invalid];
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.einit_result_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 aux_system1 = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system1_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 aux_system2 = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system2_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {0, 9},
  }},
  {{
    "\57\0\12\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_GC2ClientInitSystem_Response"
    "diagnostic"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.diagnostic_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.sha_hash_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000fcu) != 0) {
    ::memset(&_impl_.success_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.einit_result_) -
        reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.einit_result_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.aux_system1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.aux_system2_) -
        reinterpret_cast<char*>(&_impl_.aux_system1_)) + sizeof(_impl_.aux_system2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool success = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_success(), target);
  }

  // optional string diagnostic = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_diagnostic();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_GC2ClientInitSystem_Response.diagnostic");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bytes sha_hash = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_sha_hash();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // optional int32 response = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_response(), target);
  }

  // optional int32 error_code1 = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
            stream, this_._internal_error_code1(), target);
  }

  // optional int32 error_code2 = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_error_code2(), target);
  }

  // optional int64 handle = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
            stream, this_._internal_handle(), target);
  }

  // optional .EInitSystemResult einit_result = 8 [default = k_EInitSystemResult_Invalid];
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this_._internal_einit_result(), target);
  }

  // optional int32 aux_system1 = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
            stream, this_._internal_aux_system1(), target);
  }

  // optional int32 aux_system2 = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
            stream, this_._internal_aux_system2(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& this_ = static_cast<const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000004u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000fbu) != 0) {
    // optional string diagnostic = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_diagnostic());
    }
    // optional bytes sha_hash = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_sha_hash());
    }
    // optional int32 response = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_response());
    }
    // optional int32 error_code1 = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_error_code1());
    }
    // optional int32 error_code2 = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_error_code2());
    }
    // optional int64 handle = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_handle());
    }
    // optional .EInitSystemResult einit_result = 8 [default = k_EInitSystemResult_Invalid];
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_einit_result());
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // optional int32 aux_system1 = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_aux_system1());
    }
    // optional int32 aux_system2 = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_aux_system2());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_diagnostic(from._internal_diagnostic());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_sha_hash(from._internal_sha_hash());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.success_ = from._impl_.success_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.response_ = from._impl_.response_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.error_code1_ = from._impl_.error_code1_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.error_code2_ = from._impl_.error_code2_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.handle_ = from._impl_.handle_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.einit_result_ = from._impl_.einit_result_;
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.aux_system1_ = from._impl_.aux_system1_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.aux_system2_ = from._impl_.aux_system2_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::CopyFrom(const CMsgGCCStrike15_v2_GC2ClientInitSystem_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_GC2ClientInitSystem_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::InternalSwap(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.diagnostic_, &other->_impl_.diagnostic_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sha_hash_, &other->_impl_.sha_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.aux_system2_)
      + sizeof(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::_impl_.aux_system2_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_GC2ClientInitSystem_Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _impl_._has_bits_);
};

CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        leaderboard_safe_name_(arena, from.leaderboard_safe_name_) {}

CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
}
PROTOBUF_NDEBUG_INLINE CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        leaderboard_safe_name_(arena) {}

inline void CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::~CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName() {
  // @@protoc_insertion_point(destructor:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
  SharedDtor(*this);
}
inline void CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::SharedDtor(MessageLite& self) {
  CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& this_ = static_cast<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.leaderboard_safe_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName(arena);
}
constexpr auto CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName),
                                            alignof(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName));
}
constexpr auto CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName>(), &CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::ByteSizeLong,
              &CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _impl_._cached_size_),
          false,
      },
      &CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::kDescriptorMethods,
      &descriptor_table_cstrike15_5fgcmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_ =
            CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_.tc_table);
  return CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 77, 2>
CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string leaderboard_safe_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _impl_.leaderboard_safe_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string leaderboard_safe_name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName, _impl_.leaderboard_safe_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\25\0\0\0\0\0\0"
    "CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName"
    "leaderboard_safe_name"
  }},
};
PROTOBUF_NOINLINE void CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.leaderboard_safe_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& this_ = static_cast<const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string leaderboard_safe_name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_leaderboard_safe_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName.leaderboard_safe_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::ByteSizeLong(const MessageLite& base) {
  const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& this_ = static_cast<const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::ByteSizeLong() const {
  const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional string leaderboard_safe_name = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_leaderboard_safe_name());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName*>(&to_msg);
  auto& from = static_cast<const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_leaderboard_safe_name(from._internal_leaderboard_safe_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::CopyFrom(const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::InternalSwap(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leaderboard_safe_name_, &other->_impl_.leaderboard_safe_name_, arena);
}

::google::protobuf::Metadata CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_cstrike15_5fgcmessages_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

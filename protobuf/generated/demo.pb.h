// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: demo.proto
// Protobuf C++ Version: 6.30.0-rc1

#ifndef demo_2eproto_2epb_2eh
#define demo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_demo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_demo_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_demo_2eproto;
}  // extern "C"
enum EDemoCommands : int;
extern const uint32_t EDemoCommands_internal_data_[];
class CDemoAnimationData;
struct CDemoAnimationDataDefaultTypeInternal;
extern CDemoAnimationDataDefaultTypeInternal _CDemoAnimationData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoAnimationData_class_data_;
class CDemoAnimationHeader;
struct CDemoAnimationHeaderDefaultTypeInternal;
extern CDemoAnimationHeaderDefaultTypeInternal _CDemoAnimationHeader_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoAnimationHeader_class_data_;
class CDemoClassInfo;
struct CDemoClassInfoDefaultTypeInternal;
extern CDemoClassInfoDefaultTypeInternal _CDemoClassInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoClassInfo_class_data_;
class CDemoClassInfo_class_t;
struct CDemoClassInfo_class_tDefaultTypeInternal;
extern CDemoClassInfo_class_tDefaultTypeInternal _CDemoClassInfo_class_t_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoClassInfo_class_t_class_data_;
class CDemoConsoleCmd;
struct CDemoConsoleCmdDefaultTypeInternal;
extern CDemoConsoleCmdDefaultTypeInternal _CDemoConsoleCmd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoConsoleCmd_class_data_;
class CDemoCustomData;
struct CDemoCustomDataDefaultTypeInternal;
extern CDemoCustomDataDefaultTypeInternal _CDemoCustomData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoCustomData_class_data_;
class CDemoCustomDataCallbacks;
struct CDemoCustomDataCallbacksDefaultTypeInternal;
extern CDemoCustomDataCallbacksDefaultTypeInternal _CDemoCustomDataCallbacks_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoCustomDataCallbacks_class_data_;
class CDemoFileHeader;
struct CDemoFileHeaderDefaultTypeInternal;
extern CDemoFileHeaderDefaultTypeInternal _CDemoFileHeader_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoFileHeader_class_data_;
class CDemoFileInfo;
struct CDemoFileInfoDefaultTypeInternal;
extern CDemoFileInfoDefaultTypeInternal _CDemoFileInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoFileInfo_class_data_;
class CDemoFullPacket;
struct CDemoFullPacketDefaultTypeInternal;
extern CDemoFullPacketDefaultTypeInternal _CDemoFullPacket_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoFullPacket_class_data_;
class CDemoPacket;
struct CDemoPacketDefaultTypeInternal;
extern CDemoPacketDefaultTypeInternal _CDemoPacket_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoPacket_class_data_;
class CDemoSaveGame;
struct CDemoSaveGameDefaultTypeInternal;
extern CDemoSaveGameDefaultTypeInternal _CDemoSaveGame_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoSaveGame_class_data_;
class CDemoSendTables;
struct CDemoSendTablesDefaultTypeInternal;
extern CDemoSendTablesDefaultTypeInternal _CDemoSendTables_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoSendTables_class_data_;
class CDemoSpawnGroups;
struct CDemoSpawnGroupsDefaultTypeInternal;
extern CDemoSpawnGroupsDefaultTypeInternal _CDemoSpawnGroups_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoSpawnGroups_class_data_;
class CDemoStop;
struct CDemoStopDefaultTypeInternal;
extern CDemoStopDefaultTypeInternal _CDemoStop_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoStop_class_data_;
class CDemoStringTables;
struct CDemoStringTablesDefaultTypeInternal;
extern CDemoStringTablesDefaultTypeInternal _CDemoStringTables_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoStringTables_class_data_;
class CDemoStringTables_items_t;
struct CDemoStringTables_items_tDefaultTypeInternal;
extern CDemoStringTables_items_tDefaultTypeInternal _CDemoStringTables_items_t_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoStringTables_items_t_class_data_;
class CDemoStringTables_table_t;
struct CDemoStringTables_table_tDefaultTypeInternal;
extern CDemoStringTables_table_tDefaultTypeInternal _CDemoStringTables_table_t_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoStringTables_table_t_class_data_;
class CDemoSyncTick;
struct CDemoSyncTickDefaultTypeInternal;
extern CDemoSyncTickDefaultTypeInternal _CDemoSyncTick_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoSyncTick_class_data_;
class CDemoUserCmd;
struct CDemoUserCmdDefaultTypeInternal;
extern CDemoUserCmdDefaultTypeInternal _CDemoUserCmd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CDemoUserCmd_class_data_;
class CGameInfo;
struct CGameInfoDefaultTypeInternal;
extern CGameInfoDefaultTypeInternal _CGameInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CGameInfo_class_data_;
class CGameInfo_CCSGameInfo;
struct CGameInfo_CCSGameInfoDefaultTypeInternal;
extern CGameInfo_CCSGameInfoDefaultTypeInternal _CGameInfo_CCSGameInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CCSGameInfo_class_data_;
class CGameInfo_CDotaGameInfo;
struct CGameInfo_CDotaGameInfoDefaultTypeInternal;
extern CGameInfo_CDotaGameInfoDefaultTypeInternal _CGameInfo_CDotaGameInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CDotaGameInfo_class_data_;
class CGameInfo_CDotaGameInfo_CHeroSelectEvent;
struct CGameInfo_CDotaGameInfo_CHeroSelectEventDefaultTypeInternal;
extern CGameInfo_CDotaGameInfo_CHeroSelectEventDefaultTypeInternal _CGameInfo_CDotaGameInfo_CHeroSelectEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CDotaGameInfo_CHeroSelectEvent_class_data_;
class CGameInfo_CDotaGameInfo_CPlayerInfo;
struct CGameInfo_CDotaGameInfo_CPlayerInfoDefaultTypeInternal;
extern CGameInfo_CDotaGameInfo_CPlayerInfoDefaultTypeInternal _CGameInfo_CDotaGameInfo_CPlayerInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CDotaGameInfo_CPlayerInfo_class_data_;
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::EDemoCommands_internal_data_>
    internal::EnumTraitsImpl::value<::EDemoCommands>;
}  // namespace protobuf
}  // namespace google

enum EDemoCommands : int {
  DEM_Error = -1,
  DEM_Stop = 0,
  DEM_FileHeader = 1,
  DEM_FileInfo = 2,
  DEM_SyncTick = 3,
  DEM_SendTables = 4,
  DEM_ClassInfo = 5,
  DEM_StringTables = 6,
  DEM_Packet = 7,
  DEM_SignonPacket = 8,
  DEM_ConsoleCmd = 9,
  DEM_CustomData = 10,
  DEM_CustomDataCallbacks = 11,
  DEM_UserCmd = 12,
  DEM_FullPacket = 13,
  DEM_SaveGame = 14,
  DEM_SpawnGroups = 15,
  DEM_AnimationData = 16,
  DEM_AnimationHeader = 17,
  DEM_Max = 18,
  DEM_IsCompressed = 64,
};

extern const uint32_t EDemoCommands_internal_data_[];
inline constexpr EDemoCommands EDemoCommands_MIN =
    static_cast<EDemoCommands>(-1);
inline constexpr EDemoCommands EDemoCommands_MAX =
    static_cast<EDemoCommands>(64);
inline bool EDemoCommands_IsValid(int value) {
  return ::google::protobuf::internal::ValidateEnum(value, EDemoCommands_internal_data_);
}
inline constexpr int EDemoCommands_ARRAYSIZE = 64 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EDemoCommands_descriptor();
template <typename T>
const std::string& EDemoCommands_Name(T value) {
  static_assert(std::is_same<T, EDemoCommands>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EDemoCommands_Name().");
  return ::google::protobuf::internal::NameOfEnum(EDemoCommands_descriptor(), value);
}
inline bool EDemoCommands_Parse(
    absl::string_view name, EDemoCommands* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDemoCommands>(EDemoCommands_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class CGameInfo_CDotaGameInfo_CPlayerInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGameInfo.CDotaGameInfo.CPlayerInfo) */ {
 public:
  inline CGameInfo_CDotaGameInfo_CPlayerInfo() : CGameInfo_CDotaGameInfo_CPlayerInfo(nullptr) {}
  ~CGameInfo_CDotaGameInfo_CPlayerInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CGameInfo_CDotaGameInfo_CPlayerInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo_CPlayerInfo(::google::protobuf::internal::ConstantInitialized);

  inline CGameInfo_CDotaGameInfo_CPlayerInfo(const CGameInfo_CDotaGameInfo_CPlayerInfo& from) : CGameInfo_CDotaGameInfo_CPlayerInfo(nullptr, from) {}
  inline CGameInfo_CDotaGameInfo_CPlayerInfo(CGameInfo_CDotaGameInfo_CPlayerInfo&& from) noexcept
      : CGameInfo_CDotaGameInfo_CPlayerInfo(nullptr, std::move(from)) {}
  inline CGameInfo_CDotaGameInfo_CPlayerInfo& operator=(const CGameInfo_CDotaGameInfo_CPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGameInfo_CDotaGameInfo_CPlayerInfo& operator=(CGameInfo_CDotaGameInfo_CPlayerInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGameInfo_CDotaGameInfo_CPlayerInfo& default_instance() {
    return *reinterpret_cast<const CGameInfo_CDotaGameInfo_CPlayerInfo*>(
        &_CGameInfo_CDotaGameInfo_CPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CGameInfo_CDotaGameInfo_CPlayerInfo& a, CGameInfo_CDotaGameInfo_CPlayerInfo& b) { a.Swap(&b); }
  inline void Swap(CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CGameInfo_CDotaGameInfo_CPlayerInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGameInfo_CDotaGameInfo_CPlayerInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGameInfo_CDotaGameInfo_CPlayerInfo& from) { CGameInfo_CDotaGameInfo_CPlayerInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CGameInfo.CDotaGameInfo.CPlayerInfo"; }

 protected:
  explicit CGameInfo_CDotaGameInfo_CPlayerInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CGameInfo_CDotaGameInfo_CPlayerInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CGameInfo_CDotaGameInfo_CPlayerInfo& from);
  CGameInfo_CDotaGameInfo_CPlayerInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CGameInfo_CDotaGameInfo_CPlayerInfo&& from) noexcept
      : CGameInfo_CDotaGameInfo_CPlayerInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeroNameFieldNumber = 1,
    kPlayerNameFieldNumber = 2,
    kSteamidFieldNumber = 4,
    kIsFakeClientFieldNumber = 3,
    kGameTeamFieldNumber = 5,
  };
  // optional string hero_name = 1;
  bool has_hero_name() const;
  void clear_hero_name() ;
  const std::string& hero_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hero_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_hero_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_hero_name();
  void set_allocated_hero_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_hero_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_hero_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_hero_name();

  public:
  // optional string player_name = 2;
  bool has_player_name() const;
  void clear_player_name() ;
  const std::string& player_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_player_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_player_name();
  void set_allocated_player_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_player_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_player_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_player_name();

  public:
  // optional uint64 steamid = 4;
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // optional bool is_fake_client = 3;
  bool has_is_fake_client() const;
  void clear_is_fake_client() ;
  bool is_fake_client() const;
  void set_is_fake_client(bool value);

  private:
  bool _internal_is_fake_client() const;
  void _internal_set_is_fake_client(bool value);

  public:
  // optional int32 game_team = 5;
  bool has_game_team() const;
  void clear_game_team() ;
  ::int32_t game_team() const;
  void set_game_team(::int32_t value);

  private:
  ::int32_t _internal_game_team() const;
  void _internal_set_game_team(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CGameInfo.CDotaGameInfo.CPlayerInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CGameInfo_CDotaGameInfo_CPlayerInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr hero_name_;
    ::google::protobuf::internal::ArenaStringPtr player_name_;
    ::uint64_t steamid_;
    bool is_fake_client_;
    ::int32_t game_team_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CDotaGameInfo_CPlayerInfo_class_data_;
// -------------------------------------------------------------------

class CGameInfo_CDotaGameInfo_CHeroSelectEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGameInfo.CDotaGameInfo.CHeroSelectEvent) */ {
 public:
  inline CGameInfo_CDotaGameInfo_CHeroSelectEvent() : CGameInfo_CDotaGameInfo_CHeroSelectEvent(nullptr) {}
  ~CGameInfo_CDotaGameInfo_CHeroSelectEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CGameInfo_CDotaGameInfo_CHeroSelectEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo_CHeroSelectEvent(::google::protobuf::internal::ConstantInitialized);

  inline CGameInfo_CDotaGameInfo_CHeroSelectEvent(const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from) : CGameInfo_CDotaGameInfo_CHeroSelectEvent(nullptr, from) {}
  inline CGameInfo_CDotaGameInfo_CHeroSelectEvent(CGameInfo_CDotaGameInfo_CHeroSelectEvent&& from) noexcept
      : CGameInfo_CDotaGameInfo_CHeroSelectEvent(nullptr, std::move(from)) {}
  inline CGameInfo_CDotaGameInfo_CHeroSelectEvent& operator=(const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGameInfo_CDotaGameInfo_CHeroSelectEvent& operator=(CGameInfo_CDotaGameInfo_CHeroSelectEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGameInfo_CDotaGameInfo_CHeroSelectEvent& default_instance() {
    return *reinterpret_cast<const CGameInfo_CDotaGameInfo_CHeroSelectEvent*>(
        &_CGameInfo_CDotaGameInfo_CHeroSelectEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CGameInfo_CDotaGameInfo_CHeroSelectEvent& a, CGameInfo_CDotaGameInfo_CHeroSelectEvent& b) { a.Swap(&b); }
  inline void Swap(CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CGameInfo_CDotaGameInfo_CHeroSelectEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from) { CGameInfo_CDotaGameInfo_CHeroSelectEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CGameInfo.CDotaGameInfo.CHeroSelectEvent"; }

 protected:
  explicit CGameInfo_CDotaGameInfo_CHeroSelectEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CGameInfo_CDotaGameInfo_CHeroSelectEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from);
  CGameInfo_CDotaGameInfo_CHeroSelectEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CGameInfo_CDotaGameInfo_CHeroSelectEvent&& from) noexcept
      : CGameInfo_CDotaGameInfo_CHeroSelectEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsPickFieldNumber = 1,
    kTeamFieldNumber = 2,
    kHeroIdFieldNumber = 3,
  };
  // optional bool is_pick = 1;
  bool has_is_pick() const;
  void clear_is_pick() ;
  bool is_pick() const;
  void set_is_pick(bool value);

  private:
  bool _internal_is_pick() const;
  void _internal_set_is_pick(bool value);

  public:
  // optional uint32 team = 2;
  bool has_team() const;
  void clear_team() ;
  ::uint32_t team() const;
  void set_team(::uint32_t value);

  private:
  ::uint32_t _internal_team() const;
  void _internal_set_team(::uint32_t value);

  public:
  // optional int32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id() ;
  ::int32_t hero_id() const;
  void set_hero_id(::int32_t value);

  private:
  ::int32_t _internal_hero_id() const;
  void _internal_set_hero_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool is_pick_;
    ::uint32_t team_;
    ::int32_t hero_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CDotaGameInfo_CHeroSelectEvent_class_data_;
// -------------------------------------------------------------------

class CGameInfo_CCSGameInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGameInfo.CCSGameInfo) */ {
 public:
  inline CGameInfo_CCSGameInfo() : CGameInfo_CCSGameInfo(nullptr) {}
  ~CGameInfo_CCSGameInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CGameInfo_CCSGameInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CGameInfo_CCSGameInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGameInfo_CCSGameInfo(::google::protobuf::internal::ConstantInitialized);

  inline CGameInfo_CCSGameInfo(const CGameInfo_CCSGameInfo& from) : CGameInfo_CCSGameInfo(nullptr, from) {}
  inline CGameInfo_CCSGameInfo(CGameInfo_CCSGameInfo&& from) noexcept
      : CGameInfo_CCSGameInfo(nullptr, std::move(from)) {}
  inline CGameInfo_CCSGameInfo& operator=(const CGameInfo_CCSGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGameInfo_CCSGameInfo& operator=(CGameInfo_CCSGameInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGameInfo_CCSGameInfo& default_instance() {
    return *reinterpret_cast<const CGameInfo_CCSGameInfo*>(
        &_CGameInfo_CCSGameInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CGameInfo_CCSGameInfo& a, CGameInfo_CCSGameInfo& b) { a.Swap(&b); }
  inline void Swap(CGameInfo_CCSGameInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGameInfo_CCSGameInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGameInfo_CCSGameInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CGameInfo_CCSGameInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGameInfo_CCSGameInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGameInfo_CCSGameInfo& from) { CGameInfo_CCSGameInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CGameInfo_CCSGameInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CGameInfo.CCSGameInfo"; }

 protected:
  explicit CGameInfo_CCSGameInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CGameInfo_CCSGameInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CGameInfo_CCSGameInfo& from);
  CGameInfo_CCSGameInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CGameInfo_CCSGameInfo&& from) noexcept
      : CGameInfo_CCSGameInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoundStartTicksFieldNumber = 1,
  };
  // repeated int32 round_start_ticks = 1;
  int round_start_ticks_size() const;
  private:
  int _internal_round_start_ticks_size() const;

  public:
  void clear_round_start_ticks() ;
  ::int32_t round_start_ticks(int index) const;
  void set_round_start_ticks(int index, ::int32_t value);
  void add_round_start_ticks(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& round_start_ticks() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_round_start_ticks();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_round_start_ticks() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_round_start_ticks();

  public:
  // @@protoc_insertion_point(class_scope:CGameInfo.CCSGameInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CGameInfo_CCSGameInfo& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> round_start_ticks_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CCSGameInfo_class_data_;
// -------------------------------------------------------------------

class CDemoUserCmd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoUserCmd) */ {
 public:
  inline CDemoUserCmd() : CDemoUserCmd(nullptr) {}
  ~CDemoUserCmd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoUserCmd* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoUserCmd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoUserCmd(::google::protobuf::internal::ConstantInitialized);

  inline CDemoUserCmd(const CDemoUserCmd& from) : CDemoUserCmd(nullptr, from) {}
  inline CDemoUserCmd(CDemoUserCmd&& from) noexcept
      : CDemoUserCmd(nullptr, std::move(from)) {}
  inline CDemoUserCmd& operator=(const CDemoUserCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoUserCmd& operator=(CDemoUserCmd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoUserCmd& default_instance() {
    return *reinterpret_cast<const CDemoUserCmd*>(
        &_CDemoUserCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(CDemoUserCmd& a, CDemoUserCmd& b) { a.Swap(&b); }
  inline void Swap(CDemoUserCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoUserCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoUserCmd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoUserCmd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoUserCmd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoUserCmd& from) { CDemoUserCmd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoUserCmd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoUserCmd"; }

 protected:
  explicit CDemoUserCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoUserCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoUserCmd& from);
  CDemoUserCmd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoUserCmd&& from) noexcept
      : CDemoUserCmd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kCmdNumberFieldNumber = 1,
  };
  // optional bytes data = 2;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // optional int32 cmd_number = 1;
  bool has_cmd_number() const;
  void clear_cmd_number() ;
  ::int32_t cmd_number() const;
  void set_cmd_number(::int32_t value);

  private:
  ::int32_t _internal_cmd_number() const;
  void _internal_set_cmd_number(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoUserCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoUserCmd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t cmd_number_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoUserCmd_class_data_;
// -------------------------------------------------------------------

class CDemoSyncTick final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CDemoSyncTick) */ {
 public:
  inline CDemoSyncTick() : CDemoSyncTick(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoSyncTick* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoSyncTick));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoSyncTick(::google::protobuf::internal::ConstantInitialized);

  inline CDemoSyncTick(const CDemoSyncTick& from) : CDemoSyncTick(nullptr, from) {}
  inline CDemoSyncTick(CDemoSyncTick&& from) noexcept
      : CDemoSyncTick(nullptr, std::move(from)) {}
  inline CDemoSyncTick& operator=(const CDemoSyncTick& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoSyncTick& operator=(CDemoSyncTick&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoSyncTick& default_instance() {
    return *reinterpret_cast<const CDemoSyncTick*>(
        &_CDemoSyncTick_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CDemoSyncTick& a, CDemoSyncTick& b) { a.Swap(&b); }
  inline void Swap(CDemoSyncTick* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoSyncTick* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoSyncTick* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CDemoSyncTick>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CDemoSyncTick& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CDemoSyncTick& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoSyncTick"; }

 protected:
  explicit CDemoSyncTick(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoSyncTick(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoSyncTick& from);
  CDemoSyncTick(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoSyncTick&& from) noexcept
      : CDemoSyncTick(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CDemoSyncTick)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoSyncTick& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoSyncTick_class_data_;
// -------------------------------------------------------------------

class CDemoStringTables_items_t final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoStringTables.items_t) */ {
 public:
  inline CDemoStringTables_items_t() : CDemoStringTables_items_t(nullptr) {}
  ~CDemoStringTables_items_t() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoStringTables_items_t* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoStringTables_items_t));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoStringTables_items_t(::google::protobuf::internal::ConstantInitialized);

  inline CDemoStringTables_items_t(const CDemoStringTables_items_t& from) : CDemoStringTables_items_t(nullptr, from) {}
  inline CDemoStringTables_items_t(CDemoStringTables_items_t&& from) noexcept
      : CDemoStringTables_items_t(nullptr, std::move(from)) {}
  inline CDemoStringTables_items_t& operator=(const CDemoStringTables_items_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoStringTables_items_t& operator=(CDemoStringTables_items_t&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoStringTables_items_t& default_instance() {
    return *reinterpret_cast<const CDemoStringTables_items_t*>(
        &_CDemoStringTables_items_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(CDemoStringTables_items_t& a, CDemoStringTables_items_t& b) { a.Swap(&b); }
  inline void Swap(CDemoStringTables_items_t* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoStringTables_items_t* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoStringTables_items_t* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoStringTables_items_t>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoStringTables_items_t& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoStringTables_items_t& from) { CDemoStringTables_items_t::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoStringTables_items_t* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoStringTables.items_t"; }

 protected:
  explicit CDemoStringTables_items_t(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoStringTables_items_t(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoStringTables_items_t& from);
  CDemoStringTables_items_t(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoStringTables_items_t&& from) noexcept
      : CDemoStringTables_items_t(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStrFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // optional string str = 1;
  bool has_str() const;
  void clear_str() ;
  const std::string& str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_str();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_str();
  void set_allocated_str(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_str() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_str(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_str();

  public:
  // optional bytes data = 2;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:CDemoStringTables.items_t)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 37,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoStringTables_items_t& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr str_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoStringTables_items_t_class_data_;
// -------------------------------------------------------------------

class CDemoStop final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CDemoStop) */ {
 public:
  inline CDemoStop() : CDemoStop(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoStop* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoStop));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoStop(::google::protobuf::internal::ConstantInitialized);

  inline CDemoStop(const CDemoStop& from) : CDemoStop(nullptr, from) {}
  inline CDemoStop(CDemoStop&& from) noexcept
      : CDemoStop(nullptr, std::move(from)) {}
  inline CDemoStop& operator=(const CDemoStop& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoStop& operator=(CDemoStop&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoStop& default_instance() {
    return *reinterpret_cast<const CDemoStop*>(
        &_CDemoStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CDemoStop& a, CDemoStop& b) { a.Swap(&b); }
  inline void Swap(CDemoStop* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoStop* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoStop* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CDemoStop>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CDemoStop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CDemoStop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoStop"; }

 protected:
  explicit CDemoStop(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoStop(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoStop& from);
  CDemoStop(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoStop&& from) noexcept
      : CDemoStop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CDemoStop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoStop& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoStop_class_data_;
// -------------------------------------------------------------------

class CDemoSpawnGroups final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoSpawnGroups) */ {
 public:
  inline CDemoSpawnGroups() : CDemoSpawnGroups(nullptr) {}
  ~CDemoSpawnGroups() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoSpawnGroups* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoSpawnGroups));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoSpawnGroups(::google::protobuf::internal::ConstantInitialized);

  inline CDemoSpawnGroups(const CDemoSpawnGroups& from) : CDemoSpawnGroups(nullptr, from) {}
  inline CDemoSpawnGroups(CDemoSpawnGroups&& from) noexcept
      : CDemoSpawnGroups(nullptr, std::move(from)) {}
  inline CDemoSpawnGroups& operator=(const CDemoSpawnGroups& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoSpawnGroups& operator=(CDemoSpawnGroups&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoSpawnGroups& default_instance() {
    return *reinterpret_cast<const CDemoSpawnGroups*>(
        &_CDemoSpawnGroups_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CDemoSpawnGroups& a, CDemoSpawnGroups& b) { a.Swap(&b); }
  inline void Swap(CDemoSpawnGroups* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoSpawnGroups* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoSpawnGroups* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoSpawnGroups>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoSpawnGroups& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoSpawnGroups& from) { CDemoSpawnGroups::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoSpawnGroups* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoSpawnGroups"; }

 protected:
  explicit CDemoSpawnGroups(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoSpawnGroups(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoSpawnGroups& from);
  CDemoSpawnGroups(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoSpawnGroups&& from) noexcept
      : CDemoSpawnGroups(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgsFieldNumber = 3,
  };
  // repeated bytes msgs = 3;
  int msgs_size() const;
  private:
  int _internal_msgs_size() const;

  public:
  void clear_msgs() ;
  const std::string& msgs(int index) const;
  std::string* PROTOBUF_NONNULL mutable_msgs(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msgs(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_msgs();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_msgs(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& msgs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_msgs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_msgs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_msgs();

  public:
  // @@protoc_insertion_point(class_scope:CDemoSpawnGroups)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoSpawnGroups& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> msgs_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoSpawnGroups_class_data_;
// -------------------------------------------------------------------

class CDemoSendTables final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoSendTables) */ {
 public:
  inline CDemoSendTables() : CDemoSendTables(nullptr) {}
  ~CDemoSendTables() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoSendTables* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoSendTables));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoSendTables(::google::protobuf::internal::ConstantInitialized);

  inline CDemoSendTables(const CDemoSendTables& from) : CDemoSendTables(nullptr, from) {}
  inline CDemoSendTables(CDemoSendTables&& from) noexcept
      : CDemoSendTables(nullptr, std::move(from)) {}
  inline CDemoSendTables& operator=(const CDemoSendTables& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoSendTables& operator=(CDemoSendTables&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoSendTables& default_instance() {
    return *reinterpret_cast<const CDemoSendTables*>(
        &_CDemoSendTables_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CDemoSendTables& a, CDemoSendTables& b) { a.Swap(&b); }
  inline void Swap(CDemoSendTables* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoSendTables* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoSendTables* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoSendTables>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoSendTables& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoSendTables& from) { CDemoSendTables::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoSendTables* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoSendTables"; }

 protected:
  explicit CDemoSendTables(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoSendTables(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoSendTables& from);
  CDemoSendTables(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoSendTables&& from) noexcept
      : CDemoSendTables(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // optional bytes data = 1;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:CDemoSendTables)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoSendTables& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoSendTables_class_data_;
// -------------------------------------------------------------------

class CDemoSaveGame final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoSaveGame) */ {
 public:
  inline CDemoSaveGame() : CDemoSaveGame(nullptr) {}
  ~CDemoSaveGame() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoSaveGame* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoSaveGame));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoSaveGame(::google::protobuf::internal::ConstantInitialized);

  inline CDemoSaveGame(const CDemoSaveGame& from) : CDemoSaveGame(nullptr, from) {}
  inline CDemoSaveGame(CDemoSaveGame&& from) noexcept
      : CDemoSaveGame(nullptr, std::move(from)) {}
  inline CDemoSaveGame& operator=(const CDemoSaveGame& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoSaveGame& operator=(CDemoSaveGame&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoSaveGame& default_instance() {
    return *reinterpret_cast<const CDemoSaveGame*>(
        &_CDemoSaveGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CDemoSaveGame& a, CDemoSaveGame& b) { a.Swap(&b); }
  inline void Swap(CDemoSaveGame* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoSaveGame* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoSaveGame* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoSaveGame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoSaveGame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoSaveGame& from) { CDemoSaveGame::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoSaveGame* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoSaveGame"; }

 protected:
  explicit CDemoSaveGame(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoSaveGame(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoSaveGame& from);
  CDemoSaveGame(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoSaveGame&& from) noexcept
      : CDemoSaveGame(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kSteamIdFieldNumber = 2,
    kSignatureFieldNumber = 3,
    kVersionFieldNumber = 4,
  };
  // optional bytes data = 1;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // optional fixed64 steam_id = 2;
  bool has_steam_id() const;
  void clear_steam_id() ;
  ::uint64_t steam_id() const;
  void set_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_steam_id() const;
  void _internal_set_steam_id(::uint64_t value);

  public:
  // optional fixed64 signature = 3;
  bool has_signature() const;
  void clear_signature() ;
  ::uint64_t signature() const;
  void set_signature(::uint64_t value);

  private:
  ::uint64_t _internal_signature() const;
  void _internal_set_signature(::uint64_t value);

  public:
  // optional int32 version = 4;
  bool has_version() const;
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoSaveGame)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoSaveGame& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t steam_id_;
    ::uint64_t signature_;
    ::int32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoSaveGame_class_data_;
// -------------------------------------------------------------------

class CDemoPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoPacket) */ {
 public:
  inline CDemoPacket() : CDemoPacket(nullptr) {}
  ~CDemoPacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoPacket* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoPacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoPacket(::google::protobuf::internal::ConstantInitialized);

  inline CDemoPacket(const CDemoPacket& from) : CDemoPacket(nullptr, from) {}
  inline CDemoPacket(CDemoPacket&& from) noexcept
      : CDemoPacket(nullptr, std::move(from)) {}
  inline CDemoPacket& operator=(const CDemoPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoPacket& operator=(CDemoPacket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoPacket& default_instance() {
    return *reinterpret_cast<const CDemoPacket*>(
        &_CDemoPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CDemoPacket& a, CDemoPacket& b) { a.Swap(&b); }
  inline void Swap(CDemoPacket* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoPacket* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoPacket* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoPacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoPacket& from) { CDemoPacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoPacket* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoPacket"; }

 protected:
  explicit CDemoPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoPacket& from);
  CDemoPacket(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoPacket&& from) noexcept
      : CDemoPacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 3,
  };
  // optional bytes data = 3;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:CDemoPacket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoPacket& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoPacket_class_data_;
// -------------------------------------------------------------------

class CDemoFileHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoFileHeader) */ {
 public:
  inline CDemoFileHeader() : CDemoFileHeader(nullptr) {}
  ~CDemoFileHeader() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoFileHeader* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoFileHeader));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoFileHeader(::google::protobuf::internal::ConstantInitialized);

  inline CDemoFileHeader(const CDemoFileHeader& from) : CDemoFileHeader(nullptr, from) {}
  inline CDemoFileHeader(CDemoFileHeader&& from) noexcept
      : CDemoFileHeader(nullptr, std::move(from)) {}
  inline CDemoFileHeader& operator=(const CDemoFileHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoFileHeader& operator=(CDemoFileHeader&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoFileHeader& default_instance() {
    return *reinterpret_cast<const CDemoFileHeader*>(
        &_CDemoFileHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CDemoFileHeader& a, CDemoFileHeader& b) { a.Swap(&b); }
  inline void Swap(CDemoFileHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoFileHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoFileHeader* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoFileHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoFileHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoFileHeader& from) { CDemoFileHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoFileHeader* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoFileHeader"; }

 protected:
  explicit CDemoFileHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoFileHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoFileHeader& from);
  CDemoFileHeader(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoFileHeader&& from) noexcept
      : CDemoFileHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDemoFileStampFieldNumber = 1,
    kServerNameFieldNumber = 3,
    kClientNameFieldNumber = 4,
    kMapNameFieldNumber = 5,
    kGameDirectoryFieldNumber = 6,
    kAddonsFieldNumber = 10,
    kDemoVersionNameFieldNumber = 11,
    kDemoVersionGuidFieldNumber = 12,
    kGameFieldNumber = 14,
    kNetworkProtocolFieldNumber = 2,
    kFullpacketsVersionFieldNumber = 7,
    kAllowClientsideEntitiesFieldNumber = 8,
    kAllowClientsideParticlesFieldNumber = 9,
    kBuildNumFieldNumber = 13,
    kServerStartTickFieldNumber = 15,
  };
  // required string demo_file_stamp = 1;
  bool has_demo_file_stamp() const;
  void clear_demo_file_stamp() ;
  const std::string& demo_file_stamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_demo_file_stamp(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_demo_file_stamp();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_demo_file_stamp();
  void set_allocated_demo_file_stamp(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_demo_file_stamp() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_demo_file_stamp(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_demo_file_stamp();

  public:
  // optional string server_name = 3;
  bool has_server_name() const;
  void clear_server_name() ;
  const std::string& server_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_server_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_server_name();
  void set_allocated_server_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_server_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_server_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_server_name();

  public:
  // optional string client_name = 4;
  bool has_client_name() const;
  void clear_client_name() ;
  const std::string& client_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_client_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_client_name();
  void set_allocated_client_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_client_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_client_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_client_name();

  public:
  // optional string map_name = 5;
  bool has_map_name() const;
  void clear_map_name() ;
  const std::string& map_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_map_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_map_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_map_name();
  void set_allocated_map_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_map_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_map_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_map_name();

  public:
  // optional string game_directory = 6;
  bool has_game_directory() const;
  void clear_game_directory() ;
  const std::string& game_directory() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_game_directory(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_game_directory();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_game_directory();
  void set_allocated_game_directory(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_game_directory() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_game_directory(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_game_directory();

  public:
  // optional string addons = 10;
  bool has_addons() const;
  void clear_addons() ;
  const std::string& addons() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addons(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_addons();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_addons();
  void set_allocated_addons(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_addons() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_addons(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_addons();

  public:
  // optional string demo_version_name = 11;
  bool has_demo_version_name() const;
  void clear_demo_version_name() ;
  const std::string& demo_version_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_demo_version_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_demo_version_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_demo_version_name();
  void set_allocated_demo_version_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_demo_version_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_demo_version_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_demo_version_name();

  public:
  // optional string demo_version_guid = 12;
  bool has_demo_version_guid() const;
  void clear_demo_version_guid() ;
  const std::string& demo_version_guid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_demo_version_guid(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_demo_version_guid();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_demo_version_guid();
  void set_allocated_demo_version_guid(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_demo_version_guid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_demo_version_guid(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_demo_version_guid();

  public:
  // optional string game = 14;
  bool has_game() const;
  void clear_game() ;
  const std::string& game() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_game(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_game();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_game();
  void set_allocated_game(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_game() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_game(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_game();

  public:
  // optional int32 network_protocol = 2;
  bool has_network_protocol() const;
  void clear_network_protocol() ;
  ::int32_t network_protocol() const;
  void set_network_protocol(::int32_t value);

  private:
  ::int32_t _internal_network_protocol() const;
  void _internal_set_network_protocol(::int32_t value);

  public:
  // optional int32 fullpackets_version = 7;
  bool has_fullpackets_version() const;
  void clear_fullpackets_version() ;
  ::int32_t fullpackets_version() const;
  void set_fullpackets_version(::int32_t value);

  private:
  ::int32_t _internal_fullpackets_version() const;
  void _internal_set_fullpackets_version(::int32_t value);

  public:
  // optional bool allow_clientside_entities = 8;
  bool has_allow_clientside_entities() const;
  void clear_allow_clientside_entities() ;
  bool allow_clientside_entities() const;
  void set_allow_clientside_entities(bool value);

  private:
  bool _internal_allow_clientside_entities() const;
  void _internal_set_allow_clientside_entities(bool value);

  public:
  // optional bool allow_clientside_particles = 9;
  bool has_allow_clientside_particles() const;
  void clear_allow_clientside_particles() ;
  bool allow_clientside_particles() const;
  void set_allow_clientside_particles(bool value);

  private:
  bool _internal_allow_clientside_particles() const;
  void _internal_set_allow_clientside_particles(bool value);

  public:
  // optional int32 build_num = 13;
  bool has_build_num() const;
  void clear_build_num() ;
  ::int32_t build_num() const;
  void set_build_num(::int32_t value);

  private:
  ::int32_t _internal_build_num() const;
  void _internal_set_build_num(::int32_t value);

  public:
  // optional int32 server_start_tick = 15;
  bool has_server_start_tick() const;
  void clear_server_start_tick() ;
  ::int32_t server_start_tick() const;
  void set_server_start_tick(::int32_t value);

  private:
  ::int32_t _internal_server_start_tick() const;
  void _internal_set_server_start_tick(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoFileHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 15,
                                   0, 135,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoFileHeader& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr demo_file_stamp_;
    ::google::protobuf::internal::ArenaStringPtr server_name_;
    ::google::protobuf::internal::ArenaStringPtr client_name_;
    ::google::protobuf::internal::ArenaStringPtr map_name_;
    ::google::protobuf::internal::ArenaStringPtr game_directory_;
    ::google::protobuf::internal::ArenaStringPtr addons_;
    ::google::protobuf::internal::ArenaStringPtr demo_version_name_;
    ::google::protobuf::internal::ArenaStringPtr demo_version_guid_;
    ::google::protobuf::internal::ArenaStringPtr game_;
    ::int32_t network_protocol_;
    ::int32_t fullpackets_version_;
    bool allow_clientside_entities_;
    bool allow_clientside_particles_;
    ::int32_t build_num_;
    ::int32_t server_start_tick_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoFileHeader_class_data_;
// -------------------------------------------------------------------

class CDemoCustomDataCallbacks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoCustomDataCallbacks) */ {
 public:
  inline CDemoCustomDataCallbacks() : CDemoCustomDataCallbacks(nullptr) {}
  ~CDemoCustomDataCallbacks() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoCustomDataCallbacks* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoCustomDataCallbacks));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoCustomDataCallbacks(::google::protobuf::internal::ConstantInitialized);

  inline CDemoCustomDataCallbacks(const CDemoCustomDataCallbacks& from) : CDemoCustomDataCallbacks(nullptr, from) {}
  inline CDemoCustomDataCallbacks(CDemoCustomDataCallbacks&& from) noexcept
      : CDemoCustomDataCallbacks(nullptr, std::move(from)) {}
  inline CDemoCustomDataCallbacks& operator=(const CDemoCustomDataCallbacks& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoCustomDataCallbacks& operator=(CDemoCustomDataCallbacks&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoCustomDataCallbacks& default_instance() {
    return *reinterpret_cast<const CDemoCustomDataCallbacks*>(
        &_CDemoCustomDataCallbacks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CDemoCustomDataCallbacks& a, CDemoCustomDataCallbacks& b) { a.Swap(&b); }
  inline void Swap(CDemoCustomDataCallbacks* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoCustomDataCallbacks* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoCustomDataCallbacks* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoCustomDataCallbacks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoCustomDataCallbacks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoCustomDataCallbacks& from) { CDemoCustomDataCallbacks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoCustomDataCallbacks* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoCustomDataCallbacks"; }

 protected:
  explicit CDemoCustomDataCallbacks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoCustomDataCallbacks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoCustomDataCallbacks& from);
  CDemoCustomDataCallbacks(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoCustomDataCallbacks&& from) noexcept
      : CDemoCustomDataCallbacks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSaveIdFieldNumber = 1,
  };
  // repeated string save_id = 1;
  int save_id_size() const;
  private:
  int _internal_save_id_size() const;

  public:
  void clear_save_id() ;
  const std::string& save_id(int index) const;
  std::string* PROTOBUF_NONNULL mutable_save_id(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_save_id(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_save_id();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_save_id(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& save_id() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_save_id();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_save_id() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_save_id();

  public:
  // @@protoc_insertion_point(class_scope:CDemoCustomDataCallbacks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 40,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoCustomDataCallbacks& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> save_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoCustomDataCallbacks_class_data_;
// -------------------------------------------------------------------

class CDemoCustomData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoCustomData) */ {
 public:
  inline CDemoCustomData() : CDemoCustomData(nullptr) {}
  ~CDemoCustomData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoCustomData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoCustomData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoCustomData(::google::protobuf::internal::ConstantInitialized);

  inline CDemoCustomData(const CDemoCustomData& from) : CDemoCustomData(nullptr, from) {}
  inline CDemoCustomData(CDemoCustomData&& from) noexcept
      : CDemoCustomData(nullptr, std::move(from)) {}
  inline CDemoCustomData& operator=(const CDemoCustomData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoCustomData& operator=(CDemoCustomData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoCustomData& default_instance() {
    return *reinterpret_cast<const CDemoCustomData*>(
        &_CDemoCustomData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CDemoCustomData& a, CDemoCustomData& b) { a.Swap(&b); }
  inline void Swap(CDemoCustomData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoCustomData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoCustomData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoCustomData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoCustomData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoCustomData& from) { CDemoCustomData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoCustomData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoCustomData"; }

 protected:
  explicit CDemoCustomData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoCustomData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoCustomData& from);
  CDemoCustomData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoCustomData&& from) noexcept
      : CDemoCustomData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kCallbackIndexFieldNumber = 1,
  };
  // optional bytes data = 2;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // optional int32 callback_index = 1;
  bool has_callback_index() const;
  void clear_callback_index() ;
  ::int32_t callback_index() const;
  void set_callback_index(::int32_t value);

  private:
  ::int32_t _internal_callback_index() const;
  void _internal_set_callback_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoCustomData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoCustomData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t callback_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoCustomData_class_data_;
// -------------------------------------------------------------------

class CDemoConsoleCmd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoConsoleCmd) */ {
 public:
  inline CDemoConsoleCmd() : CDemoConsoleCmd(nullptr) {}
  ~CDemoConsoleCmd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoConsoleCmd* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoConsoleCmd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoConsoleCmd(::google::protobuf::internal::ConstantInitialized);

  inline CDemoConsoleCmd(const CDemoConsoleCmd& from) : CDemoConsoleCmd(nullptr, from) {}
  inline CDemoConsoleCmd(CDemoConsoleCmd&& from) noexcept
      : CDemoConsoleCmd(nullptr, std::move(from)) {}
  inline CDemoConsoleCmd& operator=(const CDemoConsoleCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoConsoleCmd& operator=(CDemoConsoleCmd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoConsoleCmd& default_instance() {
    return *reinterpret_cast<const CDemoConsoleCmd*>(
        &_CDemoConsoleCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CDemoConsoleCmd& a, CDemoConsoleCmd& b) { a.Swap(&b); }
  inline void Swap(CDemoConsoleCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoConsoleCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoConsoleCmd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoConsoleCmd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoConsoleCmd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoConsoleCmd& from) { CDemoConsoleCmd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoConsoleCmd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoConsoleCmd"; }

 protected:
  explicit CDemoConsoleCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoConsoleCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoConsoleCmd& from);
  CDemoConsoleCmd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoConsoleCmd&& from) noexcept
      : CDemoConsoleCmd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCmdstringFieldNumber = 1,
  };
  // optional string cmdstring = 1;
  bool has_cmdstring() const;
  void clear_cmdstring() ;
  const std::string& cmdstring() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cmdstring(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_cmdstring();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_cmdstring();
  void set_allocated_cmdstring(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_cmdstring() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_cmdstring(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_cmdstring();

  public:
  // @@protoc_insertion_point(class_scope:CDemoConsoleCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 33,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoConsoleCmd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr cmdstring_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoConsoleCmd_class_data_;
// -------------------------------------------------------------------

class CDemoClassInfo_class_t final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoClassInfo.class_t) */ {
 public:
  inline CDemoClassInfo_class_t() : CDemoClassInfo_class_t(nullptr) {}
  ~CDemoClassInfo_class_t() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoClassInfo_class_t* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoClassInfo_class_t));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoClassInfo_class_t(::google::protobuf::internal::ConstantInitialized);

  inline CDemoClassInfo_class_t(const CDemoClassInfo_class_t& from) : CDemoClassInfo_class_t(nullptr, from) {}
  inline CDemoClassInfo_class_t(CDemoClassInfo_class_t&& from) noexcept
      : CDemoClassInfo_class_t(nullptr, std::move(from)) {}
  inline CDemoClassInfo_class_t& operator=(const CDemoClassInfo_class_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoClassInfo_class_t& operator=(CDemoClassInfo_class_t&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoClassInfo_class_t& default_instance() {
    return *reinterpret_cast<const CDemoClassInfo_class_t*>(
        &_CDemoClassInfo_class_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(CDemoClassInfo_class_t& a, CDemoClassInfo_class_t& b) { a.Swap(&b); }
  inline void Swap(CDemoClassInfo_class_t* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoClassInfo_class_t* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoClassInfo_class_t* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoClassInfo_class_t>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoClassInfo_class_t& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoClassInfo_class_t& from) { CDemoClassInfo_class_t::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoClassInfo_class_t* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoClassInfo.class_t"; }

 protected:
  explicit CDemoClassInfo_class_t(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoClassInfo_class_t(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoClassInfo_class_t& from);
  CDemoClassInfo_class_t(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoClassInfo_class_t&& from) noexcept
      : CDemoClassInfo_class_t(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetworkNameFieldNumber = 2,
    kTableNameFieldNumber = 3,
    kClassIdFieldNumber = 1,
  };
  // optional string network_name = 2;
  bool has_network_name() const;
  void clear_network_name() ;
  const std::string& network_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_network_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_network_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_network_name();
  void set_allocated_network_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_network_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_network_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_network_name();

  public:
  // optional string table_name = 3;
  bool has_table_name() const;
  void clear_table_name() ;
  const std::string& table_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_table_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_table_name();
  void set_allocated_table_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_table_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_table_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_table_name();

  public:
  // optional int32 class_id = 1;
  bool has_class_id() const;
  void clear_class_id() ;
  ::int32_t class_id() const;
  void set_class_id(::int32_t value);

  private:
  ::int32_t _internal_class_id() const;
  void _internal_set_class_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoClassInfo.class_t)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoClassInfo_class_t& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr network_name_;
    ::google::protobuf::internal::ArenaStringPtr table_name_;
    ::int32_t class_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoClassInfo_class_t_class_data_;
// -------------------------------------------------------------------

class CDemoAnimationHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoAnimationHeader) */ {
 public:
  inline CDemoAnimationHeader() : CDemoAnimationHeader(nullptr) {}
  ~CDemoAnimationHeader() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoAnimationHeader* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoAnimationHeader));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoAnimationHeader(::google::protobuf::internal::ConstantInitialized);

  inline CDemoAnimationHeader(const CDemoAnimationHeader& from) : CDemoAnimationHeader(nullptr, from) {}
  inline CDemoAnimationHeader(CDemoAnimationHeader&& from) noexcept
      : CDemoAnimationHeader(nullptr, std::move(from)) {}
  inline CDemoAnimationHeader& operator=(const CDemoAnimationHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoAnimationHeader& operator=(CDemoAnimationHeader&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoAnimationHeader& default_instance() {
    return *reinterpret_cast<const CDemoAnimationHeader*>(
        &_CDemoAnimationHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CDemoAnimationHeader& a, CDemoAnimationHeader& b) { a.Swap(&b); }
  inline void Swap(CDemoAnimationHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoAnimationHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoAnimationHeader* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoAnimationHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoAnimationHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoAnimationHeader& from) { CDemoAnimationHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoAnimationHeader* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoAnimationHeader"; }

 protected:
  explicit CDemoAnimationHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoAnimationHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoAnimationHeader& from);
  CDemoAnimationHeader(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoAnimationHeader&& from) noexcept
      : CDemoAnimationHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 3,
    kEntityIdFieldNumber = 1,
    kTickFieldNumber = 2,
  };
  // optional bytes data = 3;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // optional sint32 entity_id = 1;
  bool has_entity_id() const;
  void clear_entity_id() ;
  ::int32_t entity_id() const;
  void set_entity_id(::int32_t value);

  private:
  ::int32_t _internal_entity_id() const;
  void _internal_set_entity_id(::int32_t value);

  public:
  // optional int32 tick = 2;
  bool has_tick() const;
  void clear_tick() ;
  ::int32_t tick() const;
  void set_tick(::int32_t value);

  private:
  ::int32_t _internal_tick() const;
  void _internal_set_tick(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoAnimationHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoAnimationHeader& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t entity_id_;
    ::int32_t tick_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoAnimationHeader_class_data_;
// -------------------------------------------------------------------

class CDemoAnimationData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoAnimationData) */ {
 public:
  inline CDemoAnimationData() : CDemoAnimationData(nullptr) {}
  ~CDemoAnimationData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoAnimationData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoAnimationData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoAnimationData(::google::protobuf::internal::ConstantInitialized);

  inline CDemoAnimationData(const CDemoAnimationData& from) : CDemoAnimationData(nullptr, from) {}
  inline CDemoAnimationData(CDemoAnimationData&& from) noexcept
      : CDemoAnimationData(nullptr, std::move(from)) {}
  inline CDemoAnimationData& operator=(const CDemoAnimationData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoAnimationData& operator=(CDemoAnimationData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoAnimationData& default_instance() {
    return *reinterpret_cast<const CDemoAnimationData*>(
        &_CDemoAnimationData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(CDemoAnimationData& a, CDemoAnimationData& b) { a.Swap(&b); }
  inline void Swap(CDemoAnimationData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoAnimationData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoAnimationData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoAnimationData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoAnimationData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoAnimationData& from) { CDemoAnimationData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoAnimationData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoAnimationData"; }

 protected:
  explicit CDemoAnimationData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoAnimationData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoAnimationData& from);
  CDemoAnimationData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoAnimationData&& from) noexcept
      : CDemoAnimationData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 4,
    kEntityIdFieldNumber = 1,
    kStartTickFieldNumber = 2,
    kDataChecksumFieldNumber = 5,
    kEndTickFieldNumber = 3,
  };
  // optional bytes data = 4;
  bool has_data() const;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // optional sint32 entity_id = 1;
  bool has_entity_id() const;
  void clear_entity_id() ;
  ::int32_t entity_id() const;
  void set_entity_id(::int32_t value);

  private:
  ::int32_t _internal_entity_id() const;
  void _internal_set_entity_id(::int32_t value);

  public:
  // optional int32 start_tick = 2;
  bool has_start_tick() const;
  void clear_start_tick() ;
  ::int32_t start_tick() const;
  void set_start_tick(::int32_t value);

  private:
  ::int32_t _internal_start_tick() const;
  void _internal_set_start_tick(::int32_t value);

  public:
  // optional int64 data_checksum = 5;
  bool has_data_checksum() const;
  void clear_data_checksum() ;
  ::int64_t data_checksum() const;
  void set_data_checksum(::int64_t value);

  private:
  ::int64_t _internal_data_checksum() const;
  void _internal_set_data_checksum(::int64_t value);

  public:
  // optional int32 end_tick = 3;
  bool has_end_tick() const;
  void clear_end_tick() ;
  ::int32_t end_tick() const;
  void set_end_tick(::int32_t value);

  private:
  ::int32_t _internal_end_tick() const;
  void _internal_set_end_tick(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoAnimationData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoAnimationData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t entity_id_;
    ::int32_t start_tick_;
    ::int64_t data_checksum_;
    ::int32_t end_tick_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoAnimationData_class_data_;
// -------------------------------------------------------------------

class CGameInfo_CDotaGameInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGameInfo.CDotaGameInfo) */ {
 public:
  inline CGameInfo_CDotaGameInfo() : CGameInfo_CDotaGameInfo(nullptr) {}
  ~CGameInfo_CDotaGameInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CGameInfo_CDotaGameInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo(::google::protobuf::internal::ConstantInitialized);

  inline CGameInfo_CDotaGameInfo(const CGameInfo_CDotaGameInfo& from) : CGameInfo_CDotaGameInfo(nullptr, from) {}
  inline CGameInfo_CDotaGameInfo(CGameInfo_CDotaGameInfo&& from) noexcept
      : CGameInfo_CDotaGameInfo(nullptr, std::move(from)) {}
  inline CGameInfo_CDotaGameInfo& operator=(const CGameInfo_CDotaGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGameInfo_CDotaGameInfo& operator=(CGameInfo_CDotaGameInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGameInfo_CDotaGameInfo& default_instance() {
    return *reinterpret_cast<const CGameInfo_CDotaGameInfo*>(
        &_CGameInfo_CDotaGameInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CGameInfo_CDotaGameInfo& a, CGameInfo_CDotaGameInfo& b) { a.Swap(&b); }
  inline void Swap(CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CGameInfo_CDotaGameInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGameInfo_CDotaGameInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGameInfo_CDotaGameInfo& from) { CGameInfo_CDotaGameInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CGameInfo.CDotaGameInfo"; }

 protected:
  explicit CGameInfo_CDotaGameInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CGameInfo_CDotaGameInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CGameInfo_CDotaGameInfo& from);
  CGameInfo_CDotaGameInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CGameInfo_CDotaGameInfo&& from) noexcept
      : CGameInfo_CDotaGameInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CPlayerInfo = CGameInfo_CDotaGameInfo_CPlayerInfo;
  using CHeroSelectEvent = CGameInfo_CDotaGameInfo_CHeroSelectEvent;

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerInfoFieldNumber = 4,
    kPicksBansFieldNumber = 6,
    kRadiantTeamTagFieldNumber = 9,
    kDireTeamTagFieldNumber = 10,
    kMatchIdFieldNumber = 1,
    kGameModeFieldNumber = 2,
    kGameWinnerFieldNumber = 3,
    kLeagueidFieldNumber = 5,
    kRadiantTeamIdFieldNumber = 7,
    kDireTeamIdFieldNumber = 8,
    kEndTimeFieldNumber = 11,
  };
  // repeated .CGameInfo.CDotaGameInfo.CPlayerInfo player_info = 4;
  int player_info_size() const;
  private:
  int _internal_player_info_size() const;

  public:
  void clear_player_info() ;
  ::CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL mutable_player_info(int index);
  ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>* PROTOBUF_NONNULL mutable_player_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>& _internal_player_info() const;
  ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>* PROTOBUF_NONNULL _internal_mutable_player_info();
  public:
  const ::CGameInfo_CDotaGameInfo_CPlayerInfo& player_info(int index) const;
  ::CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL add_player_info();
  const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>& player_info() const;
  // repeated .CGameInfo.CDotaGameInfo.CHeroSelectEvent picks_bans = 6;
  int picks_bans_size() const;
  private:
  int _internal_picks_bans_size() const;

  public:
  void clear_picks_bans() ;
  ::CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL mutable_picks_bans(int index);
  ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>* PROTOBUF_NONNULL mutable_picks_bans();

  private:
  const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>& _internal_picks_bans() const;
  ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>* PROTOBUF_NONNULL _internal_mutable_picks_bans();
  public:
  const ::CGameInfo_CDotaGameInfo_CHeroSelectEvent& picks_bans(int index) const;
  ::CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL add_picks_bans();
  const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>& picks_bans() const;
  // optional string radiant_team_tag = 9;
  bool has_radiant_team_tag() const;
  void clear_radiant_team_tag() ;
  const std::string& radiant_team_tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_radiant_team_tag(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_radiant_team_tag();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_radiant_team_tag();
  void set_allocated_radiant_team_tag(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_radiant_team_tag() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_radiant_team_tag(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_radiant_team_tag();

  public:
  // optional string dire_team_tag = 10;
  bool has_dire_team_tag() const;
  void clear_dire_team_tag() ;
  const std::string& dire_team_tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dire_team_tag(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_dire_team_tag();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_dire_team_tag();
  void set_allocated_dire_team_tag(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_dire_team_tag() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dire_team_tag(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_dire_team_tag();

  public:
  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id() ;
  ::uint64_t match_id() const;
  void set_match_id(::uint64_t value);

  private:
  ::uint64_t _internal_match_id() const;
  void _internal_set_match_id(::uint64_t value);

  public:
  // optional int32 game_mode = 2;
  bool has_game_mode() const;
  void clear_game_mode() ;
  ::int32_t game_mode() const;
  void set_game_mode(::int32_t value);

  private:
  ::int32_t _internal_game_mode() const;
  void _internal_set_game_mode(::int32_t value);

  public:
  // optional int32 game_winner = 3;
  bool has_game_winner() const;
  void clear_game_winner() ;
  ::int32_t game_winner() const;
  void set_game_winner(::int32_t value);

  private:
  ::int32_t _internal_game_winner() const;
  void _internal_set_game_winner(::int32_t value);

  public:
  // optional uint32 leagueid = 5;
  bool has_leagueid() const;
  void clear_leagueid() ;
  ::uint32_t leagueid() const;
  void set_leagueid(::uint32_t value);

  private:
  ::uint32_t _internal_leagueid() const;
  void _internal_set_leagueid(::uint32_t value);

  public:
  // optional uint32 radiant_team_id = 7;
  bool has_radiant_team_id() const;
  void clear_radiant_team_id() ;
  ::uint32_t radiant_team_id() const;
  void set_radiant_team_id(::uint32_t value);

  private:
  ::uint32_t _internal_radiant_team_id() const;
  void _internal_set_radiant_team_id(::uint32_t value);

  public:
  // optional uint32 dire_team_id = 8;
  bool has_dire_team_id() const;
  void clear_dire_team_id() ;
  ::uint32_t dire_team_id() const;
  void set_dire_team_id(::uint32_t value);

  private:
  ::uint32_t _internal_dire_team_id() const;
  void _internal_set_dire_team_id(::uint32_t value);

  public:
  // optional uint32 end_time = 11;
  bool has_end_time() const;
  void clear_end_time() ;
  ::uint32_t end_time() const;
  void set_end_time(::uint32_t value);

  private:
  ::uint32_t _internal_end_time() const;
  void _internal_set_end_time(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CGameInfo.CDotaGameInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   2, 69,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CGameInfo_CDotaGameInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CGameInfo_CDotaGameInfo_CPlayerInfo > player_info_;
    ::google::protobuf::RepeatedPtrField< ::CGameInfo_CDotaGameInfo_CHeroSelectEvent > picks_bans_;
    ::google::protobuf::internal::ArenaStringPtr radiant_team_tag_;
    ::google::protobuf::internal::ArenaStringPtr dire_team_tag_;
    ::uint64_t match_id_;
    ::int32_t game_mode_;
    ::int32_t game_winner_;
    ::uint32_t leagueid_;
    ::uint32_t radiant_team_id_;
    ::uint32_t dire_team_id_;
    ::uint32_t end_time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CGameInfo_CDotaGameInfo_class_data_;
// -------------------------------------------------------------------

class CDemoStringTables_table_t final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoStringTables.table_t) */ {
 public:
  inline CDemoStringTables_table_t() : CDemoStringTables_table_t(nullptr) {}
  ~CDemoStringTables_table_t() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoStringTables_table_t* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoStringTables_table_t));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoStringTables_table_t(::google::protobuf::internal::ConstantInitialized);

  inline CDemoStringTables_table_t(const CDemoStringTables_table_t& from) : CDemoStringTables_table_t(nullptr, from) {}
  inline CDemoStringTables_table_t(CDemoStringTables_table_t&& from) noexcept
      : CDemoStringTables_table_t(nullptr, std::move(from)) {}
  inline CDemoStringTables_table_t& operator=(const CDemoStringTables_table_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoStringTables_table_t& operator=(CDemoStringTables_table_t&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoStringTables_table_t& default_instance() {
    return *reinterpret_cast<const CDemoStringTables_table_t*>(
        &_CDemoStringTables_table_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CDemoStringTables_table_t& a, CDemoStringTables_table_t& b) { a.Swap(&b); }
  inline void Swap(CDemoStringTables_table_t* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoStringTables_table_t* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoStringTables_table_t* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoStringTables_table_t>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoStringTables_table_t& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoStringTables_table_t& from) { CDemoStringTables_table_t::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoStringTables_table_t* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoStringTables.table_t"; }

 protected:
  explicit CDemoStringTables_table_t(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoStringTables_table_t(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoStringTables_table_t& from);
  CDemoStringTables_table_t(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoStringTables_table_t&& from) noexcept
      : CDemoStringTables_table_t(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 2,
    kItemsClientsideFieldNumber = 3,
    kTableNameFieldNumber = 1,
    kTableFlagsFieldNumber = 4,
  };
  // repeated .CDemoStringTables.items_t items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::CDemoStringTables_items_t* PROTOBUF_NONNULL mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL _internal_mutable_items();
  public:
  const ::CDemoStringTables_items_t& items(int index) const;
  ::CDemoStringTables_items_t* PROTOBUF_NONNULL add_items();
  const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>& items() const;
  // repeated .CDemoStringTables.items_t items_clientside = 3;
  int items_clientside_size() const;
  private:
  int _internal_items_clientside_size() const;

  public:
  void clear_items_clientside() ;
  ::CDemoStringTables_items_t* PROTOBUF_NONNULL mutable_items_clientside(int index);
  ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL mutable_items_clientside();

  private:
  const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>& _internal_items_clientside() const;
  ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL _internal_mutable_items_clientside();
  public:
  const ::CDemoStringTables_items_t& items_clientside(int index) const;
  ::CDemoStringTables_items_t* PROTOBUF_NONNULL add_items_clientside();
  const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>& items_clientside() const;
  // optional string table_name = 1;
  bool has_table_name() const;
  void clear_table_name() ;
  const std::string& table_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_table_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_table_name();
  void set_allocated_table_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_table_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_table_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_table_name();

  public:
  // optional int32 table_flags = 4;
  bool has_table_flags() const;
  void clear_table_flags() ;
  ::int32_t table_flags() const;
  void set_table_flags(::int32_t value);

  private:
  ::int32_t _internal_table_flags() const;
  void _internal_set_table_flags(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoStringTables.table_t)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoStringTables_table_t& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CDemoStringTables_items_t > items_;
    ::google::protobuf::RepeatedPtrField< ::CDemoStringTables_items_t > items_clientside_;
    ::google::protobuf::internal::ArenaStringPtr table_name_;
    ::int32_t table_flags_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoStringTables_table_t_class_data_;
// -------------------------------------------------------------------

class CDemoClassInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoClassInfo) */ {
 public:
  inline CDemoClassInfo() : CDemoClassInfo(nullptr) {}
  ~CDemoClassInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoClassInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoClassInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoClassInfo(::google::protobuf::internal::ConstantInitialized);

  inline CDemoClassInfo(const CDemoClassInfo& from) : CDemoClassInfo(nullptr, from) {}
  inline CDemoClassInfo(CDemoClassInfo&& from) noexcept
      : CDemoClassInfo(nullptr, std::move(from)) {}
  inline CDemoClassInfo& operator=(const CDemoClassInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoClassInfo& operator=(CDemoClassInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoClassInfo& default_instance() {
    return *reinterpret_cast<const CDemoClassInfo*>(
        &_CDemoClassInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(CDemoClassInfo& a, CDemoClassInfo& b) { a.Swap(&b); }
  inline void Swap(CDemoClassInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoClassInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoClassInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoClassInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoClassInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoClassInfo& from) { CDemoClassInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoClassInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoClassInfo"; }

 protected:
  explicit CDemoClassInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoClassInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoClassInfo& from);
  CDemoClassInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoClassInfo&& from) noexcept
      : CDemoClassInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using class_t = CDemoClassInfo_class_t;

  // accessors -------------------------------------------------------
  enum : int {
    kClassesFieldNumber = 1,
  };
  // repeated .CDemoClassInfo.class_t classes = 1;
  int classes_size() const;
  private:
  int _internal_classes_size() const;

  public:
  void clear_classes() ;
  ::CDemoClassInfo_class_t* PROTOBUF_NONNULL mutable_classes(int index);
  ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>* PROTOBUF_NONNULL mutable_classes();

  private:
  const ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>& _internal_classes() const;
  ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>* PROTOBUF_NONNULL _internal_mutable_classes();
  public:
  const ::CDemoClassInfo_class_t& classes(int index) const;
  ::CDemoClassInfo_class_t* PROTOBUF_NONNULL add_classes();
  const ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>& classes() const;
  // @@protoc_insertion_point(class_scope:CDemoClassInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoClassInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CDemoClassInfo_class_t > classes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoClassInfo_class_data_;
// -------------------------------------------------------------------

class CGameInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGameInfo) */ {
 public:
  inline CGameInfo() : CGameInfo(nullptr) {}
  ~CGameInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CGameInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CGameInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGameInfo(::google::protobuf::internal::ConstantInitialized);

  inline CGameInfo(const CGameInfo& from) : CGameInfo(nullptr, from) {}
  inline CGameInfo(CGameInfo&& from) noexcept
      : CGameInfo(nullptr, std::move(from)) {}
  inline CGameInfo& operator=(const CGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGameInfo& operator=(CGameInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGameInfo& default_instance() {
    return *reinterpret_cast<const CGameInfo*>(
        &_CGameInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CGameInfo& a, CGameInfo& b) { a.Swap(&b); }
  inline void Swap(CGameInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGameInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGameInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CGameInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGameInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGameInfo& from) { CGameInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CGameInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CGameInfo"; }

 protected:
  explicit CGameInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CGameInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CGameInfo& from);
  CGameInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CGameInfo&& from) noexcept
      : CGameInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CDotaGameInfo = CGameInfo_CDotaGameInfo;
  using CCSGameInfo = CGameInfo_CCSGameInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kDotaFieldNumber = 4,
    kCsFieldNumber = 5,
  };
  // optional .CGameInfo.CDotaGameInfo dota = 4;
  bool has_dota() const;
  void clear_dota() ;
  const ::CGameInfo_CDotaGameInfo& dota() const;
  [[nodiscard]] ::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE release_dota();
  ::CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL mutable_dota();
  void set_allocated_dota(::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dota(::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE value);
  ::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE unsafe_arena_release_dota();

  private:
  const ::CGameInfo_CDotaGameInfo& _internal_dota() const;
  ::CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL _internal_mutable_dota();

  public:
  // optional .CGameInfo.CCSGameInfo cs = 5;
  bool has_cs() const;
  void clear_cs() ;
  const ::CGameInfo_CCSGameInfo& cs() const;
  [[nodiscard]] ::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE release_cs();
  ::CGameInfo_CCSGameInfo* PROTOBUF_NONNULL mutable_cs();
  void set_allocated_cs(::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cs(::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE value);
  ::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE unsafe_arena_release_cs();

  private:
  const ::CGameInfo_CCSGameInfo& _internal_cs() const;
  ::CGameInfo_CCSGameInfo* PROTOBUF_NONNULL _internal_mutable_cs();

  public:
  // @@protoc_insertion_point(class_scope:CGameInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CGameInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE dota_;
    ::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE cs_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CGameInfo_class_data_;
// -------------------------------------------------------------------

class CDemoStringTables final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoStringTables) */ {
 public:
  inline CDemoStringTables() : CDemoStringTables(nullptr) {}
  ~CDemoStringTables() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoStringTables* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoStringTables));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoStringTables(::google::protobuf::internal::ConstantInitialized);

  inline CDemoStringTables(const CDemoStringTables& from) : CDemoStringTables(nullptr, from) {}
  inline CDemoStringTables(CDemoStringTables&& from) noexcept
      : CDemoStringTables(nullptr, std::move(from)) {}
  inline CDemoStringTables& operator=(const CDemoStringTables& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoStringTables& operator=(CDemoStringTables&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoStringTables& default_instance() {
    return *reinterpret_cast<const CDemoStringTables*>(
        &_CDemoStringTables_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CDemoStringTables& a, CDemoStringTables& b) { a.Swap(&b); }
  inline void Swap(CDemoStringTables* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoStringTables* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoStringTables* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoStringTables>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoStringTables& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoStringTables& from) { CDemoStringTables::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoStringTables* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoStringTables"; }

 protected:
  explicit CDemoStringTables(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoStringTables(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoStringTables& from);
  CDemoStringTables(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoStringTables&& from) noexcept
      : CDemoStringTables(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using items_t = CDemoStringTables_items_t;
  using table_t = CDemoStringTables_table_t;

  // accessors -------------------------------------------------------
  enum : int {
    kTablesFieldNumber = 1,
  };
  // repeated .CDemoStringTables.table_t tables = 1;
  int tables_size() const;
  private:
  int _internal_tables_size() const;

  public:
  void clear_tables() ;
  ::CDemoStringTables_table_t* PROTOBUF_NONNULL mutable_tables(int index);
  ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>* PROTOBUF_NONNULL mutable_tables();

  private:
  const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>& _internal_tables() const;
  ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>* PROTOBUF_NONNULL _internal_mutable_tables();
  public:
  const ::CDemoStringTables_table_t& tables(int index) const;
  ::CDemoStringTables_table_t* PROTOBUF_NONNULL add_tables();
  const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>& tables() const;
  // @@protoc_insertion_point(class_scope:CDemoStringTables)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoStringTables& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CDemoStringTables_table_t > tables_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoStringTables_class_data_;
// -------------------------------------------------------------------

class CDemoFullPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoFullPacket) */ {
 public:
  inline CDemoFullPacket() : CDemoFullPacket(nullptr) {}
  ~CDemoFullPacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoFullPacket* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoFullPacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoFullPacket(::google::protobuf::internal::ConstantInitialized);

  inline CDemoFullPacket(const CDemoFullPacket& from) : CDemoFullPacket(nullptr, from) {}
  inline CDemoFullPacket(CDemoFullPacket&& from) noexcept
      : CDemoFullPacket(nullptr, std::move(from)) {}
  inline CDemoFullPacket& operator=(const CDemoFullPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoFullPacket& operator=(CDemoFullPacket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoFullPacket& default_instance() {
    return *reinterpret_cast<const CDemoFullPacket*>(
        &_CDemoFullPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CDemoFullPacket& a, CDemoFullPacket& b) { a.Swap(&b); }
  inline void Swap(CDemoFullPacket* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoFullPacket* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoFullPacket* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoFullPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoFullPacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoFullPacket& from) { CDemoFullPacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoFullPacket* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoFullPacket"; }

 protected:
  explicit CDemoFullPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoFullPacket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoFullPacket& from);
  CDemoFullPacket(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoFullPacket&& from) noexcept
      : CDemoFullPacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStringTableFieldNumber = 1,
    kPacketFieldNumber = 2,
  };
  // optional .CDemoStringTables string_table = 1;
  bool has_string_table() const;
  void clear_string_table() ;
  const ::CDemoStringTables& string_table() const;
  [[nodiscard]] ::CDemoStringTables* PROTOBUF_NULLABLE release_string_table();
  ::CDemoStringTables* PROTOBUF_NONNULL mutable_string_table();
  void set_allocated_string_table(::CDemoStringTables* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_string_table(::CDemoStringTables* PROTOBUF_NULLABLE value);
  ::CDemoStringTables* PROTOBUF_NULLABLE unsafe_arena_release_string_table();

  private:
  const ::CDemoStringTables& _internal_string_table() const;
  ::CDemoStringTables* PROTOBUF_NONNULL _internal_mutable_string_table();

  public:
  // optional .CDemoPacket packet = 2;
  bool has_packet() const;
  void clear_packet() ;
  const ::CDemoPacket& packet() const;
  [[nodiscard]] ::CDemoPacket* PROTOBUF_NULLABLE release_packet();
  ::CDemoPacket* PROTOBUF_NONNULL mutable_packet();
  void set_allocated_packet(::CDemoPacket* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_packet(::CDemoPacket* PROTOBUF_NULLABLE value);
  ::CDemoPacket* PROTOBUF_NULLABLE unsafe_arena_release_packet();

  private:
  const ::CDemoPacket& _internal_packet() const;
  ::CDemoPacket* PROTOBUF_NONNULL _internal_mutable_packet();

  public:
  // @@protoc_insertion_point(class_scope:CDemoFullPacket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoFullPacket& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CDemoStringTables* PROTOBUF_NULLABLE string_table_;
    ::CDemoPacket* PROTOBUF_NULLABLE packet_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoFullPacket_class_data_;
// -------------------------------------------------------------------

class CDemoFileInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CDemoFileInfo) */ {
 public:
  inline CDemoFileInfo() : CDemoFileInfo(nullptr) {}
  ~CDemoFileInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CDemoFileInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CDemoFileInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CDemoFileInfo(::google::protobuf::internal::ConstantInitialized);

  inline CDemoFileInfo(const CDemoFileInfo& from) : CDemoFileInfo(nullptr, from) {}
  inline CDemoFileInfo(CDemoFileInfo&& from) noexcept
      : CDemoFileInfo(nullptr, std::move(from)) {}
  inline CDemoFileInfo& operator=(const CDemoFileInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDemoFileInfo& operator=(CDemoFileInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CDemoFileInfo& default_instance() {
    return *reinterpret_cast<const CDemoFileInfo*>(
        &_CDemoFileInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CDemoFileInfo& a, CDemoFileInfo& b) { a.Swap(&b); }
  inline void Swap(CDemoFileInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDemoFileInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CDemoFileInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CDemoFileInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CDemoFileInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CDemoFileInfo& from) { CDemoFileInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CDemoFileInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CDemoFileInfo"; }

 protected:
  explicit CDemoFileInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CDemoFileInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CDemoFileInfo& from);
  CDemoFileInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CDemoFileInfo&& from) noexcept
      : CDemoFileInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameInfoFieldNumber = 4,
    kPlaybackTimeFieldNumber = 1,
    kPlaybackTicksFieldNumber = 2,
    kPlaybackFramesFieldNumber = 3,
  };
  // optional .CGameInfo game_info = 4;
  bool has_game_info() const;
  void clear_game_info() ;
  const ::CGameInfo& game_info() const;
  [[nodiscard]] ::CGameInfo* PROTOBUF_NULLABLE release_game_info();
  ::CGameInfo* PROTOBUF_NONNULL mutable_game_info();
  void set_allocated_game_info(::CGameInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_game_info(::CGameInfo* PROTOBUF_NULLABLE value);
  ::CGameInfo* PROTOBUF_NULLABLE unsafe_arena_release_game_info();

  private:
  const ::CGameInfo& _internal_game_info() const;
  ::CGameInfo* PROTOBUF_NONNULL _internal_mutable_game_info();

  public:
  // optional float playback_time = 1;
  bool has_playback_time() const;
  void clear_playback_time() ;
  float playback_time() const;
  void set_playback_time(float value);

  private:
  float _internal_playback_time() const;
  void _internal_set_playback_time(float value);

  public:
  // optional int32 playback_ticks = 2;
  bool has_playback_ticks() const;
  void clear_playback_ticks() ;
  ::int32_t playback_ticks() const;
  void set_playback_ticks(::int32_t value);

  private:
  ::int32_t _internal_playback_ticks() const;
  void _internal_set_playback_ticks(::int32_t value);

  public:
  // optional int32 playback_frames = 3;
  bool has_playback_frames() const;
  void clear_playback_frames() ;
  ::int32_t playback_frames() const;
  void set_playback_frames(::int32_t value);

  private:
  ::int32_t _internal_playback_frames() const;
  void _internal_set_playback_frames(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CDemoFileInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CDemoFileInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CGameInfo* PROTOBUF_NULLABLE game_info_;
    float playback_time_;
    ::int32_t playback_ticks_;
    ::int32_t playback_frames_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_demo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CDemoFileInfo_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CDemoFileHeader

// required string demo_file_stamp = 1;
inline bool CDemoFileHeader::has_demo_file_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_demo_file_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.demo_file_stamp_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoFileHeader::demo_file_stamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.demo_file_stamp)
  return _internal_demo_file_stamp();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_demo_file_stamp(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.demo_file_stamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.demo_file_stamp)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_demo_file_stamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_demo_file_stamp();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.demo_file_stamp)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_demo_file_stamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.demo_file_stamp_.Get();
}
inline void CDemoFileHeader::_internal_set_demo_file_stamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.demo_file_stamp_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_demo_file_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.demo_file_stamp_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_demo_file_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.demo_file_stamp)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.demo_file_stamp_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.demo_file_stamp_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_demo_file_stamp(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.demo_file_stamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.demo_file_stamp_.IsDefault()) {
    _impl_.demo_file_stamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.demo_file_stamp)
}

// optional int32 network_protocol = 2;
inline bool CDemoFileHeader::has_network_protocol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_network_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_protocol_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t CDemoFileHeader::network_protocol() const {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.network_protocol)
  return _internal_network_protocol();
}
inline void CDemoFileHeader::set_network_protocol(::int32_t value) {
  _internal_set_network_protocol(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CDemoFileHeader.network_protocol)
}
inline ::int32_t CDemoFileHeader::_internal_network_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_protocol_;
}
inline void CDemoFileHeader::_internal_set_network_protocol(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_protocol_ = value;
}

// optional string server_name = 3;
inline bool CDemoFileHeader::has_server_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_server_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDemoFileHeader::server_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.server_name)
  return _internal_server_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_server_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.server_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.server_name)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_server_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_server_name();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.server_name)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_server_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_name_.Get();
}
inline void CDemoFileHeader::_internal_set_server_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.server_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_server_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.server_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_server_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.server_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.server_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.server_name_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_server_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.server_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.server_name_.IsDefault()) {
    _impl_.server_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.server_name)
}

// optional string client_name = 4;
inline bool CDemoFileHeader::has_client_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_client_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CDemoFileHeader::client_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.client_name)
  return _internal_client_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_client_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.client_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.client_name)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_client_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_name();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.client_name)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_client_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_name_.Get();
}
inline void CDemoFileHeader::_internal_set_client_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.client_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_client_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.client_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_client_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.client_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.client_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.client_name_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_client_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.client_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_name_.IsDefault()) {
    _impl_.client_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.client_name)
}

// optional string map_name = 5;
inline bool CDemoFileHeader::has_map_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_map_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CDemoFileHeader::map_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.map_name)
  return _internal_map_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_map_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.map_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.map_name)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_map_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_map_name();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.map_name)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_map_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_name_.Get();
}
inline void CDemoFileHeader::_internal_set_map_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.map_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_map_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.map_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_map_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.map_name)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.map_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.map_name_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_map_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.map_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.map_name_.IsDefault()) {
    _impl_.map_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.map_name)
}

// optional string game_directory = 6;
inline bool CDemoFileHeader::has_game_directory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_game_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_directory_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CDemoFileHeader::game_directory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.game_directory)
  return _internal_game_directory();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_game_directory(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.game_directory_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.game_directory)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_game_directory()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_game_directory();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.game_directory)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_game_directory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_directory_.Get();
}
inline void CDemoFileHeader::_internal_set_game_directory(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.game_directory_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_game_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.game_directory_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_game_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.game_directory)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.game_directory_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.game_directory_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_game_directory(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.game_directory_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.game_directory_.IsDefault()) {
    _impl_.game_directory_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.game_directory)
}

// optional int32 fullpackets_version = 7;
inline bool CDemoFileHeader::has_fullpackets_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_fullpackets_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullpackets_version_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t CDemoFileHeader::fullpackets_version() const {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.fullpackets_version)
  return _internal_fullpackets_version();
}
inline void CDemoFileHeader::set_fullpackets_version(::int32_t value) {
  _internal_set_fullpackets_version(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CDemoFileHeader.fullpackets_version)
}
inline ::int32_t CDemoFileHeader::_internal_fullpackets_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullpackets_version_;
}
inline void CDemoFileHeader::_internal_set_fullpackets_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullpackets_version_ = value;
}

// optional bool allow_clientside_entities = 8;
inline bool CDemoFileHeader::has_allow_clientside_entities() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_allow_clientside_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_clientside_entities_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool CDemoFileHeader::allow_clientside_entities() const {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.allow_clientside_entities)
  return _internal_allow_clientside_entities();
}
inline void CDemoFileHeader::set_allow_clientside_entities(bool value) {
  _internal_set_allow_clientside_entities(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CDemoFileHeader.allow_clientside_entities)
}
inline bool CDemoFileHeader::_internal_allow_clientside_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_clientside_entities_;
}
inline void CDemoFileHeader::_internal_set_allow_clientside_entities(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_clientside_entities_ = value;
}

// optional bool allow_clientside_particles = 9;
inline bool CDemoFileHeader::has_allow_clientside_particles() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_allow_clientside_particles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_clientside_particles_ = false;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline bool CDemoFileHeader::allow_clientside_particles() const {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.allow_clientside_particles)
  return _internal_allow_clientside_particles();
}
inline void CDemoFileHeader::set_allow_clientside_particles(bool value) {
  _internal_set_allow_clientside_particles(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CDemoFileHeader.allow_clientside_particles)
}
inline bool CDemoFileHeader::_internal_allow_clientside_particles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_clientside_particles_;
}
inline void CDemoFileHeader::_internal_set_allow_clientside_particles(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_clientside_particles_ = value;
}

// optional string addons = 10;
inline bool CDemoFileHeader::has_addons() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_addons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addons_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CDemoFileHeader::addons() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.addons)
  return _internal_addons();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_addons(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.addons_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.addons)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_addons()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addons();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.addons)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_addons() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addons_.Get();
}
inline void CDemoFileHeader::_internal_set_addons(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.addons_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_addons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.addons_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_addons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.addons)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.addons_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.addons_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_addons(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.addons_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.addons_.IsDefault()) {
    _impl_.addons_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.addons)
}

// optional string demo_version_name = 11;
inline bool CDemoFileHeader::has_demo_version_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_demo_version_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.demo_version_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& CDemoFileHeader::demo_version_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.demo_version_name)
  return _internal_demo_version_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_demo_version_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.demo_version_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.demo_version_name)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_demo_version_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_demo_version_name();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.demo_version_name)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_demo_version_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.demo_version_name_.Get();
}
inline void CDemoFileHeader::_internal_set_demo_version_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.demo_version_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_demo_version_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.demo_version_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_demo_version_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.demo_version_name)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.demo_version_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.demo_version_name_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_demo_version_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.demo_version_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.demo_version_name_.IsDefault()) {
    _impl_.demo_version_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.demo_version_name)
}

// optional string demo_version_guid = 12;
inline bool CDemoFileHeader::has_demo_version_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_demo_version_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.demo_version_guid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& CDemoFileHeader::demo_version_guid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.demo_version_guid)
  return _internal_demo_version_guid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_demo_version_guid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.demo_version_guid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.demo_version_guid)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_demo_version_guid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_demo_version_guid();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.demo_version_guid)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_demo_version_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.demo_version_guid_.Get();
}
inline void CDemoFileHeader::_internal_set_demo_version_guid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.demo_version_guid_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_demo_version_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.demo_version_guid_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_demo_version_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.demo_version_guid)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.demo_version_guid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.demo_version_guid_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_demo_version_guid(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.demo_version_guid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.demo_version_guid_.IsDefault()) {
    _impl_.demo_version_guid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.demo_version_guid)
}

// optional int32 build_num = 13;
inline bool CDemoFileHeader::has_build_num() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_build_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_num_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int32_t CDemoFileHeader::build_num() const {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.build_num)
  return _internal_build_num();
}
inline void CDemoFileHeader::set_build_num(::int32_t value) {
  _internal_set_build_num(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CDemoFileHeader.build_num)
}
inline ::int32_t CDemoFileHeader::_internal_build_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.build_num_;
}
inline void CDemoFileHeader::_internal_set_build_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_num_ = value;
}

// optional string game = 14;
inline bool CDemoFileHeader::has_game() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_game() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& CDemoFileHeader::game() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.game)
  return _internal_game();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoFileHeader::set_game(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.game_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoFileHeader.game)
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::mutable_game()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_game();
  // @@protoc_insertion_point(field_mutable:CDemoFileHeader.game)
  return _s;
}
inline const std::string& CDemoFileHeader::_internal_game() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_.Get();
}
inline void CDemoFileHeader::_internal_set_game(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.game_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoFileHeader::_internal_mutable_game() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.game_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoFileHeader::release_game() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileHeader.game)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.game_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.game_.Set("", GetArena());
  }
  return released;
}
inline void CDemoFileHeader::set_allocated_game(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.game_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.game_.IsDefault()) {
    _impl_.game_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoFileHeader.game)
}

// optional int32 server_start_tick = 15;
inline bool CDemoFileHeader::has_server_start_tick() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CDemoFileHeader::clear_server_start_tick() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_start_tick_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t CDemoFileHeader::server_start_tick() const {
  // @@protoc_insertion_point(field_get:CDemoFileHeader.server_start_tick)
  return _internal_server_start_tick();
}
inline void CDemoFileHeader::set_server_start_tick(::int32_t value) {
  _internal_set_server_start_tick(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CDemoFileHeader.server_start_tick)
}
inline ::int32_t CDemoFileHeader::_internal_server_start_tick() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_start_tick_;
}
inline void CDemoFileHeader::_internal_set_server_start_tick(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_start_tick_ = value;
}

// -------------------------------------------------------------------

// CGameInfo_CDotaGameInfo_CPlayerInfo

// optional string hero_name = 1;
inline bool CGameInfo_CDotaGameInfo_CPlayerInfo::has_hero_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::clear_hero_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hero_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGameInfo_CDotaGameInfo_CPlayerInfo::hero_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CPlayerInfo.hero_name)
  return _internal_hero_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CGameInfo_CDotaGameInfo_CPlayerInfo::set_hero_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CPlayerInfo.hero_name)
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo_CPlayerInfo::mutable_hero_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hero_name();
  // @@protoc_insertion_point(field_mutable:CGameInfo.CDotaGameInfo.CPlayerInfo.hero_name)
  return _s;
}
inline const std::string& CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_hero_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hero_name_.Get();
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_set_hero_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_mutable_hero_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.hero_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CGameInfo_CDotaGameInfo_CPlayerInfo::release_hero_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGameInfo.CDotaGameInfo.CPlayerInfo.hero_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.hero_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.hero_name_.Set("", GetArena());
  }
  return released;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::set_allocated_hero_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.hero_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hero_name_.IsDefault()) {
    _impl_.hero_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CGameInfo.CDotaGameInfo.CPlayerInfo.hero_name)
}

// optional string player_name = 2;
inline bool CGameInfo_CDotaGameInfo_CPlayerInfo::has_player_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::clear_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CGameInfo_CDotaGameInfo_CPlayerInfo::player_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CPlayerInfo.player_name)
  return _internal_player_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CGameInfo_CDotaGameInfo_CPlayerInfo::set_player_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.player_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CPlayerInfo.player_name)
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo_CPlayerInfo::mutable_player_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player_name();
  // @@protoc_insertion_point(field_mutable:CGameInfo.CDotaGameInfo.CPlayerInfo.player_name)
  return _s;
}
inline const std::string& CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_player_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_name_.Get();
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_set_player_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.player_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_mutable_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.player_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CGameInfo_CDotaGameInfo_CPlayerInfo::release_player_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGameInfo.CDotaGameInfo.CPlayerInfo.player_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.player_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.player_name_.Set("", GetArena());
  }
  return released;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::set_allocated_player_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.player_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.player_name_.IsDefault()) {
    _impl_.player_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CGameInfo.CDotaGameInfo.CPlayerInfo.player_name)
}

// optional bool is_fake_client = 3;
inline bool CGameInfo_CDotaGameInfo_CPlayerInfo::has_is_fake_client() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::clear_is_fake_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_fake_client_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CGameInfo_CDotaGameInfo_CPlayerInfo::is_fake_client() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CPlayerInfo.is_fake_client)
  return _internal_is_fake_client();
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::set_is_fake_client(bool value) {
  _internal_set_is_fake_client(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CPlayerInfo.is_fake_client)
}
inline bool CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_is_fake_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_fake_client_;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_set_is_fake_client(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_fake_client_ = value;
}

// optional uint64 steamid = 4;
inline bool CGameInfo_CDotaGameInfo_CPlayerInfo::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CGameInfo_CDotaGameInfo_CPlayerInfo::steamid() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CPlayerInfo.steamid)
  return _internal_steamid();
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CPlayerInfo.steamid)
}
inline ::uint64_t CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// optional int32 game_team = 5;
inline bool CGameInfo_CDotaGameInfo_CPlayerInfo::has_game_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::clear_game_team() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t CGameInfo_CDotaGameInfo_CPlayerInfo::game_team() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CPlayerInfo.game_team)
  return _internal_game_team();
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::set_game_team(::int32_t value) {
  _internal_set_game_team(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CPlayerInfo.game_team)
}
inline ::int32_t CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_game_team() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_team_;
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::_internal_set_game_team(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_team_ = value;
}

// -------------------------------------------------------------------

// CGameInfo_CDotaGameInfo_CHeroSelectEvent

// optional bool is_pick = 1;
inline bool CGameInfo_CDotaGameInfo_CHeroSelectEvent::has_is_pick() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::clear_is_pick() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_pick_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CGameInfo_CDotaGameInfo_CHeroSelectEvent::is_pick() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CHeroSelectEvent.is_pick)
  return _internal_is_pick();
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::set_is_pick(bool value) {
  _internal_set_is_pick(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CHeroSelectEvent.is_pick)
}
inline bool CGameInfo_CDotaGameInfo_CHeroSelectEvent::_internal_is_pick() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_pick_;
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::_internal_set_is_pick(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_pick_ = value;
}

// optional uint32 team = 2;
inline bool CGameInfo_CDotaGameInfo_CHeroSelectEvent::has_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::clear_team() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CGameInfo_CDotaGameInfo_CHeroSelectEvent::team() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CHeroSelectEvent.team)
  return _internal_team();
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::set_team(::uint32_t value) {
  _internal_set_team(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CHeroSelectEvent.team)
}
inline ::uint32_t CGameInfo_CDotaGameInfo_CHeroSelectEvent::_internal_team() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.team_;
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::_internal_set_team(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_ = value;
}

// optional int32 hero_id = 3;
inline bool CGameInfo_CDotaGameInfo_CHeroSelectEvent::has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::clear_hero_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hero_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CGameInfo_CDotaGameInfo_CHeroSelectEvent::hero_id() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.CHeroSelectEvent.hero_id)
  return _internal_hero_id();
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::set_hero_id(::int32_t value) {
  _internal_set_hero_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.CHeroSelectEvent.hero_id)
}
inline ::int32_t CGameInfo_CDotaGameInfo_CHeroSelectEvent::_internal_hero_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hero_id_;
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::_internal_set_hero_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hero_id_ = value;
}

// -------------------------------------------------------------------

// CGameInfo_CDotaGameInfo

// optional uint64 match_id = 1;
inline bool CGameInfo_CDotaGameInfo::has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_match_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CGameInfo_CDotaGameInfo::match_id() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.match_id)
  return _internal_match_id();
}
inline void CGameInfo_CDotaGameInfo::set_match_id(::uint64_t value) {
  _internal_set_match_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.match_id)
}
inline ::uint64_t CGameInfo_CDotaGameInfo::_internal_match_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.match_id_;
}
inline void CGameInfo_CDotaGameInfo::_internal_set_match_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_id_ = value;
}

// optional int32 game_mode = 2;
inline bool CGameInfo_CDotaGameInfo::has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_game_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CGameInfo_CDotaGameInfo::game_mode() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.game_mode)
  return _internal_game_mode();
}
inline void CGameInfo_CDotaGameInfo::set_game_mode(::int32_t value) {
  _internal_set_game_mode(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.game_mode)
}
inline ::int32_t CGameInfo_CDotaGameInfo::_internal_game_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_mode_;
}
inline void CGameInfo_CDotaGameInfo::_internal_set_game_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_mode_ = value;
}

// optional int32 game_winner = 3;
inline bool CGameInfo_CDotaGameInfo::has_game_winner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_game_winner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_winner_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t CGameInfo_CDotaGameInfo::game_winner() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.game_winner)
  return _internal_game_winner();
}
inline void CGameInfo_CDotaGameInfo::set_game_winner(::int32_t value) {
  _internal_set_game_winner(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.game_winner)
}
inline ::int32_t CGameInfo_CDotaGameInfo::_internal_game_winner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_winner_;
}
inline void CGameInfo_CDotaGameInfo::_internal_set_game_winner(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_winner_ = value;
}

// repeated .CGameInfo.CDotaGameInfo.CPlayerInfo player_info = 4;
inline int CGameInfo_CDotaGameInfo::_internal_player_info_size() const {
  return _internal_player_info().size();
}
inline int CGameInfo_CDotaGameInfo::player_info_size() const {
  return _internal_player_info_size();
}
inline void CGameInfo_CDotaGameInfo::clear_player_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_info_.Clear();
}
inline ::CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::mutable_player_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CGameInfo.CDotaGameInfo.player_info)
  return _internal_mutable_player_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::mutable_player_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CGameInfo.CDotaGameInfo.player_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_player_info();
}
inline const ::CGameInfo_CDotaGameInfo_CPlayerInfo& CGameInfo_CDotaGameInfo::player_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.player_info)
  return _internal_player_info().Get(index);
}
inline ::CGameInfo_CDotaGameInfo_CPlayerInfo* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::add_player_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CGameInfo_CDotaGameInfo_CPlayerInfo* _add = _internal_mutable_player_info()->Add();
  // @@protoc_insertion_point(field_add:CGameInfo.CDotaGameInfo.player_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>& CGameInfo_CDotaGameInfo::player_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CGameInfo.CDotaGameInfo.player_info)
  return _internal_player_info();
}
inline const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>&
CGameInfo_CDotaGameInfo::_internal_player_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_info_;
}
inline ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CPlayerInfo>* PROTOBUF_NONNULL
CGameInfo_CDotaGameInfo::_internal_mutable_player_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.player_info_;
}

// optional uint32 leagueid = 5;
inline bool CGameInfo_CDotaGameInfo::has_leagueid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_leagueid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leagueid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CGameInfo_CDotaGameInfo::leagueid() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.leagueid)
  return _internal_leagueid();
}
inline void CGameInfo_CDotaGameInfo::set_leagueid(::uint32_t value) {
  _internal_set_leagueid(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.leagueid)
}
inline ::uint32_t CGameInfo_CDotaGameInfo::_internal_leagueid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leagueid_;
}
inline void CGameInfo_CDotaGameInfo::_internal_set_leagueid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leagueid_ = value;
}

// repeated .CGameInfo.CDotaGameInfo.CHeroSelectEvent picks_bans = 6;
inline int CGameInfo_CDotaGameInfo::_internal_picks_bans_size() const {
  return _internal_picks_bans().size();
}
inline int CGameInfo_CDotaGameInfo::picks_bans_size() const {
  return _internal_picks_bans_size();
}
inline void CGameInfo_CDotaGameInfo::clear_picks_bans() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.picks_bans_.Clear();
}
inline ::CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::mutable_picks_bans(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CGameInfo.CDotaGameInfo.picks_bans)
  return _internal_mutable_picks_bans()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::mutable_picks_bans()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CGameInfo.CDotaGameInfo.picks_bans)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_picks_bans();
}
inline const ::CGameInfo_CDotaGameInfo_CHeroSelectEvent& CGameInfo_CDotaGameInfo::picks_bans(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.picks_bans)
  return _internal_picks_bans().Get(index);
}
inline ::CGameInfo_CDotaGameInfo_CHeroSelectEvent* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::add_picks_bans()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CGameInfo_CDotaGameInfo_CHeroSelectEvent* _add = _internal_mutable_picks_bans()->Add();
  // @@protoc_insertion_point(field_add:CGameInfo.CDotaGameInfo.picks_bans)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>& CGameInfo_CDotaGameInfo::picks_bans() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CGameInfo.CDotaGameInfo.picks_bans)
  return _internal_picks_bans();
}
inline const ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>&
CGameInfo_CDotaGameInfo::_internal_picks_bans() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.picks_bans_;
}
inline ::google::protobuf::RepeatedPtrField<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>* PROTOBUF_NONNULL
CGameInfo_CDotaGameInfo::_internal_mutable_picks_bans() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.picks_bans_;
}

// optional uint32 radiant_team_id = 7;
inline bool CGameInfo_CDotaGameInfo::has_radiant_team_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_radiant_team_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radiant_team_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CGameInfo_CDotaGameInfo::radiant_team_id() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.radiant_team_id)
  return _internal_radiant_team_id();
}
inline void CGameInfo_CDotaGameInfo::set_radiant_team_id(::uint32_t value) {
  _internal_set_radiant_team_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.radiant_team_id)
}
inline ::uint32_t CGameInfo_CDotaGameInfo::_internal_radiant_team_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radiant_team_id_;
}
inline void CGameInfo_CDotaGameInfo::_internal_set_radiant_team_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radiant_team_id_ = value;
}

// optional uint32 dire_team_id = 8;
inline bool CGameInfo_CDotaGameInfo::has_dire_team_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_dire_team_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dire_team_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CGameInfo_CDotaGameInfo::dire_team_id() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.dire_team_id)
  return _internal_dire_team_id();
}
inline void CGameInfo_CDotaGameInfo::set_dire_team_id(::uint32_t value) {
  _internal_set_dire_team_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.dire_team_id)
}
inline ::uint32_t CGameInfo_CDotaGameInfo::_internal_dire_team_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dire_team_id_;
}
inline void CGameInfo_CDotaGameInfo::_internal_set_dire_team_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dire_team_id_ = value;
}

// optional string radiant_team_tag = 9;
inline bool CGameInfo_CDotaGameInfo::has_radiant_team_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_radiant_team_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radiant_team_tag_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGameInfo_CDotaGameInfo::radiant_team_tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.radiant_team_tag)
  return _internal_radiant_team_tag();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CGameInfo_CDotaGameInfo::set_radiant_team_tag(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.radiant_team_tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.radiant_team_tag)
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::mutable_radiant_team_tag()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_radiant_team_tag();
  // @@protoc_insertion_point(field_mutable:CGameInfo.CDotaGameInfo.radiant_team_tag)
  return _s;
}
inline const std::string& CGameInfo_CDotaGameInfo::_internal_radiant_team_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radiant_team_tag_.Get();
}
inline void CGameInfo_CDotaGameInfo::_internal_set_radiant_team_tag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.radiant_team_tag_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::_internal_mutable_radiant_team_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.radiant_team_tag_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CGameInfo_CDotaGameInfo::release_radiant_team_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGameInfo.CDotaGameInfo.radiant_team_tag)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.radiant_team_tag_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.radiant_team_tag_.Set("", GetArena());
  }
  return released;
}
inline void CGameInfo_CDotaGameInfo::set_allocated_radiant_team_tag(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.radiant_team_tag_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.radiant_team_tag_.IsDefault()) {
    _impl_.radiant_team_tag_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CGameInfo.CDotaGameInfo.radiant_team_tag)
}

// optional string dire_team_tag = 10;
inline bool CGameInfo_CDotaGameInfo::has_dire_team_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_dire_team_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dire_team_tag_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CGameInfo_CDotaGameInfo::dire_team_tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.dire_team_tag)
  return _internal_dire_team_tag();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CGameInfo_CDotaGameInfo::set_dire_team_tag(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dire_team_tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.dire_team_tag)
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::mutable_dire_team_tag()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dire_team_tag();
  // @@protoc_insertion_point(field_mutable:CGameInfo.CDotaGameInfo.dire_team_tag)
  return _s;
}
inline const std::string& CGameInfo_CDotaGameInfo::_internal_dire_team_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dire_team_tag_.Get();
}
inline void CGameInfo_CDotaGameInfo::_internal_set_dire_team_tag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dire_team_tag_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CGameInfo_CDotaGameInfo::_internal_mutable_dire_team_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.dire_team_tag_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CGameInfo_CDotaGameInfo::release_dire_team_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGameInfo.CDotaGameInfo.dire_team_tag)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.dire_team_tag_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dire_team_tag_.Set("", GetArena());
  }
  return released;
}
inline void CGameInfo_CDotaGameInfo::set_allocated_dire_team_tag(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.dire_team_tag_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dire_team_tag_.IsDefault()) {
    _impl_.dire_team_tag_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CGameInfo.CDotaGameInfo.dire_team_tag)
}

// optional uint32 end_time = 11;
inline bool CGameInfo_CDotaGameInfo::has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CGameInfo_CDotaGameInfo::clear_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CGameInfo_CDotaGameInfo::end_time() const {
  // @@protoc_insertion_point(field_get:CGameInfo.CDotaGameInfo.end_time)
  return _internal_end_time();
}
inline void CGameInfo_CDotaGameInfo::set_end_time(::uint32_t value) {
  _internal_set_end_time(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CGameInfo.CDotaGameInfo.end_time)
}
inline ::uint32_t CGameInfo_CDotaGameInfo::_internal_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_time_;
}
inline void CGameInfo_CDotaGameInfo::_internal_set_end_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_ = value;
}

// -------------------------------------------------------------------

// CGameInfo_CCSGameInfo

// repeated int32 round_start_ticks = 1;
inline int CGameInfo_CCSGameInfo::_internal_round_start_ticks_size() const {
  return _internal_round_start_ticks().size();
}
inline int CGameInfo_CCSGameInfo::round_start_ticks_size() const {
  return _internal_round_start_ticks_size();
}
inline void CGameInfo_CCSGameInfo::clear_round_start_ticks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.round_start_ticks_.Clear();
}
inline ::int32_t CGameInfo_CCSGameInfo::round_start_ticks(int index) const {
  // @@protoc_insertion_point(field_get:CGameInfo.CCSGameInfo.round_start_ticks)
  return _internal_round_start_ticks().Get(index);
}
inline void CGameInfo_CCSGameInfo::set_round_start_ticks(int index, ::int32_t value) {
  _internal_mutable_round_start_ticks()->Set(index, value);
  // @@protoc_insertion_point(field_set:CGameInfo.CCSGameInfo.round_start_ticks)
}
inline void CGameInfo_CCSGameInfo::add_round_start_ticks(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_round_start_ticks()->Add(value);
  // @@protoc_insertion_point(field_add:CGameInfo.CCSGameInfo.round_start_ticks)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& CGameInfo_CCSGameInfo::round_start_ticks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CGameInfo.CCSGameInfo.round_start_ticks)
  return _internal_round_start_ticks();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL CGameInfo_CCSGameInfo::mutable_round_start_ticks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CGameInfo.CCSGameInfo.round_start_ticks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_round_start_ticks();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
CGameInfo_CCSGameInfo::_internal_round_start_ticks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.round_start_ticks_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
CGameInfo_CCSGameInfo::_internal_mutable_round_start_ticks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.round_start_ticks_;
}

// -------------------------------------------------------------------

// CGameInfo

// optional .CGameInfo.CDotaGameInfo dota = 4;
inline bool CGameInfo::has_dota() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dota_ != nullptr);
  return value;
}
inline void CGameInfo::clear_dota() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dota_ != nullptr) _impl_.dota_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CGameInfo_CDotaGameInfo& CGameInfo::_internal_dota() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CGameInfo_CDotaGameInfo* p = _impl_.dota_;
  return p != nullptr ? *p : reinterpret_cast<const ::CGameInfo_CDotaGameInfo&>(::_CGameInfo_CDotaGameInfo_default_instance_);
}
inline const ::CGameInfo_CDotaGameInfo& CGameInfo::dota() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.dota)
  return _internal_dota();
}
inline void CGameInfo::unsafe_arena_set_allocated_dota(
    ::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dota_);
  }
  _impl_.dota_ = reinterpret_cast<::CGameInfo_CDotaGameInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CGameInfo.dota)
}
inline ::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE CGameInfo::release_dota() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CGameInfo_CDotaGameInfo* released = _impl_.dota_;
  _impl_.dota_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE CGameInfo::unsafe_arena_release_dota() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGameInfo.dota)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CGameInfo_CDotaGameInfo* temp = _impl_.dota_;
  _impl_.dota_ = nullptr;
  return temp;
}
inline ::CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL CGameInfo::_internal_mutable_dota() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dota_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CGameInfo_CDotaGameInfo>(GetArena());
    _impl_.dota_ = reinterpret_cast<::CGameInfo_CDotaGameInfo*>(p);
  }
  return _impl_.dota_;
}
inline ::CGameInfo_CDotaGameInfo* PROTOBUF_NONNULL CGameInfo::mutable_dota()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CGameInfo_CDotaGameInfo* _msg = _internal_mutable_dota();
  // @@protoc_insertion_point(field_mutable:CGameInfo.dota)
  return _msg;
}
inline void CGameInfo::set_allocated_dota(::CGameInfo_CDotaGameInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dota_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dota_ = reinterpret_cast<::CGameInfo_CDotaGameInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CGameInfo.dota)
}

// optional .CGameInfo.CCSGameInfo cs = 5;
inline bool CGameInfo::has_cs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cs_ != nullptr);
  return value;
}
inline void CGameInfo::clear_cs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cs_ != nullptr) _impl_.cs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CGameInfo_CCSGameInfo& CGameInfo::_internal_cs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CGameInfo_CCSGameInfo* p = _impl_.cs_;
  return p != nullptr ? *p : reinterpret_cast<const ::CGameInfo_CCSGameInfo&>(::_CGameInfo_CCSGameInfo_default_instance_);
}
inline const ::CGameInfo_CCSGameInfo& CGameInfo::cs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGameInfo.cs)
  return _internal_cs();
}
inline void CGameInfo::unsafe_arena_set_allocated_cs(
    ::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cs_);
  }
  _impl_.cs_ = reinterpret_cast<::CGameInfo_CCSGameInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CGameInfo.cs)
}
inline ::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE CGameInfo::release_cs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CGameInfo_CCSGameInfo* released = _impl_.cs_;
  _impl_.cs_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE CGameInfo::unsafe_arena_release_cs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGameInfo.cs)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CGameInfo_CCSGameInfo* temp = _impl_.cs_;
  _impl_.cs_ = nullptr;
  return temp;
}
inline ::CGameInfo_CCSGameInfo* PROTOBUF_NONNULL CGameInfo::_internal_mutable_cs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cs_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CGameInfo_CCSGameInfo>(GetArena());
    _impl_.cs_ = reinterpret_cast<::CGameInfo_CCSGameInfo*>(p);
  }
  return _impl_.cs_;
}
inline ::CGameInfo_CCSGameInfo* PROTOBUF_NONNULL CGameInfo::mutable_cs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CGameInfo_CCSGameInfo* _msg = _internal_mutable_cs();
  // @@protoc_insertion_point(field_mutable:CGameInfo.cs)
  return _msg;
}
inline void CGameInfo::set_allocated_cs(::CGameInfo_CCSGameInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cs_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cs_ = reinterpret_cast<::CGameInfo_CCSGameInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CGameInfo.cs)
}

// -------------------------------------------------------------------

// CDemoFileInfo

// optional float playback_time = 1;
inline bool CDemoFileInfo::has_playback_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoFileInfo::clear_playback_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playback_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CDemoFileInfo::playback_time() const {
  // @@protoc_insertion_point(field_get:CDemoFileInfo.playback_time)
  return _internal_playback_time();
}
inline void CDemoFileInfo::set_playback_time(float value) {
  _internal_set_playback_time(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CDemoFileInfo.playback_time)
}
inline float CDemoFileInfo::_internal_playback_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playback_time_;
}
inline void CDemoFileInfo::_internal_set_playback_time(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playback_time_ = value;
}

// optional int32 playback_ticks = 2;
inline bool CDemoFileInfo::has_playback_ticks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CDemoFileInfo::clear_playback_ticks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playback_ticks_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CDemoFileInfo::playback_ticks() const {
  // @@protoc_insertion_point(field_get:CDemoFileInfo.playback_ticks)
  return _internal_playback_ticks();
}
inline void CDemoFileInfo::set_playback_ticks(::int32_t value) {
  _internal_set_playback_ticks(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CDemoFileInfo.playback_ticks)
}
inline ::int32_t CDemoFileInfo::_internal_playback_ticks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playback_ticks_;
}
inline void CDemoFileInfo::_internal_set_playback_ticks(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playback_ticks_ = value;
}

// optional int32 playback_frames = 3;
inline bool CDemoFileInfo::has_playback_frames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CDemoFileInfo::clear_playback_frames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playback_frames_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CDemoFileInfo::playback_frames() const {
  // @@protoc_insertion_point(field_get:CDemoFileInfo.playback_frames)
  return _internal_playback_frames();
}
inline void CDemoFileInfo::set_playback_frames(::int32_t value) {
  _internal_set_playback_frames(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CDemoFileInfo.playback_frames)
}
inline ::int32_t CDemoFileInfo::_internal_playback_frames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playback_frames_;
}
inline void CDemoFileInfo::_internal_set_playback_frames(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playback_frames_ = value;
}

// optional .CGameInfo game_info = 4;
inline bool CDemoFileInfo::has_game_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.game_info_ != nullptr);
  return value;
}
inline void CDemoFileInfo::clear_game_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.game_info_ != nullptr) _impl_.game_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CGameInfo& CDemoFileInfo::_internal_game_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CGameInfo* p = _impl_.game_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CGameInfo&>(::_CGameInfo_default_instance_);
}
inline const ::CGameInfo& CDemoFileInfo::game_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFileInfo.game_info)
  return _internal_game_info();
}
inline void CDemoFileInfo::unsafe_arena_set_allocated_game_info(
    ::CGameInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.game_info_);
  }
  _impl_.game_info_ = reinterpret_cast<::CGameInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDemoFileInfo.game_info)
}
inline ::CGameInfo* PROTOBUF_NULLABLE CDemoFileInfo::release_game_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CGameInfo* released = _impl_.game_info_;
  _impl_.game_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CGameInfo* PROTOBUF_NULLABLE CDemoFileInfo::unsafe_arena_release_game_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFileInfo.game_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CGameInfo* temp = _impl_.game_info_;
  _impl_.game_info_ = nullptr;
  return temp;
}
inline ::CGameInfo* PROTOBUF_NONNULL CDemoFileInfo::_internal_mutable_game_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.game_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CGameInfo>(GetArena());
    _impl_.game_info_ = reinterpret_cast<::CGameInfo*>(p);
  }
  return _impl_.game_info_;
}
inline ::CGameInfo* PROTOBUF_NONNULL CDemoFileInfo::mutable_game_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CGameInfo* _msg = _internal_mutable_game_info();
  // @@protoc_insertion_point(field_mutable:CDemoFileInfo.game_info)
  return _msg;
}
inline void CDemoFileInfo::set_allocated_game_info(::CGameInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.game_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.game_info_ = reinterpret_cast<::CGameInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CDemoFileInfo.game_info)
}

// -------------------------------------------------------------------

// CDemoPacket

// optional bytes data = 3;
inline bool CDemoPacket::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoPacket::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoPacket::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoPacket.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoPacket::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoPacket.data)
}
inline std::string* PROTOBUF_NONNULL CDemoPacket::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoPacket.data)
  return _s;
}
inline const std::string& CDemoPacket::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoPacket::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoPacket::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoPacket::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoPacket.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoPacket::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoPacket.data)
}

// -------------------------------------------------------------------

// CDemoFullPacket

// optional .CDemoStringTables string_table = 1;
inline bool CDemoFullPacket::has_string_table() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.string_table_ != nullptr);
  return value;
}
inline void CDemoFullPacket::clear_string_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.string_table_ != nullptr) _impl_.string_table_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CDemoStringTables& CDemoFullPacket::_internal_string_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CDemoStringTables* p = _impl_.string_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDemoStringTables&>(::_CDemoStringTables_default_instance_);
}
inline const ::CDemoStringTables& CDemoFullPacket::string_table() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFullPacket.string_table)
  return _internal_string_table();
}
inline void CDemoFullPacket::unsafe_arena_set_allocated_string_table(
    ::CDemoStringTables* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.string_table_);
  }
  _impl_.string_table_ = reinterpret_cast<::CDemoStringTables*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDemoFullPacket.string_table)
}
inline ::CDemoStringTables* PROTOBUF_NULLABLE CDemoFullPacket::release_string_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CDemoStringTables* released = _impl_.string_table_;
  _impl_.string_table_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CDemoStringTables* PROTOBUF_NULLABLE CDemoFullPacket::unsafe_arena_release_string_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFullPacket.string_table)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CDemoStringTables* temp = _impl_.string_table_;
  _impl_.string_table_ = nullptr;
  return temp;
}
inline ::CDemoStringTables* PROTOBUF_NONNULL CDemoFullPacket::_internal_mutable_string_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.string_table_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CDemoStringTables>(GetArena());
    _impl_.string_table_ = reinterpret_cast<::CDemoStringTables*>(p);
  }
  return _impl_.string_table_;
}
inline ::CDemoStringTables* PROTOBUF_NONNULL CDemoFullPacket::mutable_string_table()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CDemoStringTables* _msg = _internal_mutable_string_table();
  // @@protoc_insertion_point(field_mutable:CDemoFullPacket.string_table)
  return _msg;
}
inline void CDemoFullPacket::set_allocated_string_table(::CDemoStringTables* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.string_table_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.string_table_ = reinterpret_cast<::CDemoStringTables*>(value);
  // @@protoc_insertion_point(field_set_allocated:CDemoFullPacket.string_table)
}

// optional .CDemoPacket packet = 2;
inline bool CDemoFullPacket::has_packet() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.packet_ != nullptr);
  return value;
}
inline void CDemoFullPacket::clear_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packet_ != nullptr) _impl_.packet_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CDemoPacket& CDemoFullPacket::_internal_packet() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CDemoPacket* p = _impl_.packet_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDemoPacket&>(::_CDemoPacket_default_instance_);
}
inline const ::CDemoPacket& CDemoFullPacket::packet() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoFullPacket.packet)
  return _internal_packet();
}
inline void CDemoFullPacket::unsafe_arena_set_allocated_packet(
    ::CDemoPacket* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packet_);
  }
  _impl_.packet_ = reinterpret_cast<::CDemoPacket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDemoFullPacket.packet)
}
inline ::CDemoPacket* PROTOBUF_NULLABLE CDemoFullPacket::release_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CDemoPacket* released = _impl_.packet_;
  _impl_.packet_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CDemoPacket* PROTOBUF_NULLABLE CDemoFullPacket::unsafe_arena_release_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoFullPacket.packet)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CDemoPacket* temp = _impl_.packet_;
  _impl_.packet_ = nullptr;
  return temp;
}
inline ::CDemoPacket* PROTOBUF_NONNULL CDemoFullPacket::_internal_mutable_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packet_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CDemoPacket>(GetArena());
    _impl_.packet_ = reinterpret_cast<::CDemoPacket*>(p);
  }
  return _impl_.packet_;
}
inline ::CDemoPacket* PROTOBUF_NONNULL CDemoFullPacket::mutable_packet()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CDemoPacket* _msg = _internal_mutable_packet();
  // @@protoc_insertion_point(field_mutable:CDemoFullPacket.packet)
  return _msg;
}
inline void CDemoFullPacket::set_allocated_packet(::CDemoPacket* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packet_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.packet_ = reinterpret_cast<::CDemoPacket*>(value);
  // @@protoc_insertion_point(field_set_allocated:CDemoFullPacket.packet)
}

// -------------------------------------------------------------------

// CDemoSaveGame

// optional bytes data = 1;
inline bool CDemoSaveGame::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoSaveGame::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoSaveGame::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoSaveGame.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoSaveGame::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoSaveGame.data)
}
inline std::string* PROTOBUF_NONNULL CDemoSaveGame::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoSaveGame.data)
  return _s;
}
inline const std::string& CDemoSaveGame::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoSaveGame::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoSaveGame::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoSaveGame::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoSaveGame.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoSaveGame::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoSaveGame.data)
}

// optional fixed64 steam_id = 2;
inline bool CDemoSaveGame::has_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoSaveGame::clear_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t CDemoSaveGame::steam_id() const {
  // @@protoc_insertion_point(field_get:CDemoSaveGame.steam_id)
  return _internal_steam_id();
}
inline void CDemoSaveGame::set_steam_id(::uint64_t value) {
  _internal_set_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CDemoSaveGame.steam_id)
}
inline ::uint64_t CDemoSaveGame::_internal_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steam_id_;
}
inline void CDemoSaveGame::_internal_set_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steam_id_ = value;
}

// optional fixed64 signature = 3;
inline bool CDemoSaveGame::has_signature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CDemoSaveGame::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CDemoSaveGame::signature() const {
  // @@protoc_insertion_point(field_get:CDemoSaveGame.signature)
  return _internal_signature();
}
inline void CDemoSaveGame::set_signature(::uint64_t value) {
  _internal_set_signature(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CDemoSaveGame.signature)
}
inline ::uint64_t CDemoSaveGame::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_;
}
inline void CDemoSaveGame::_internal_set_signature(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_ = value;
}

// optional int32 version = 4;
inline bool CDemoSaveGame::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CDemoSaveGame::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CDemoSaveGame::version() const {
  // @@protoc_insertion_point(field_get:CDemoSaveGame.version)
  return _internal_version();
}
inline void CDemoSaveGame::set_version(::int32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CDemoSaveGame.version)
}
inline ::int32_t CDemoSaveGame::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void CDemoSaveGame::_internal_set_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// -------------------------------------------------------------------

// CDemoSyncTick

// -------------------------------------------------------------------

// CDemoConsoleCmd

// optional string cmdstring = 1;
inline bool CDemoConsoleCmd::has_cmdstring() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoConsoleCmd::clear_cmdstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmdstring_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoConsoleCmd::cmdstring() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoConsoleCmd.cmdstring)
  return _internal_cmdstring();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoConsoleCmd::set_cmdstring(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cmdstring_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoConsoleCmd.cmdstring)
}
inline std::string* PROTOBUF_NONNULL CDemoConsoleCmd::mutable_cmdstring()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cmdstring();
  // @@protoc_insertion_point(field_mutable:CDemoConsoleCmd.cmdstring)
  return _s;
}
inline const std::string& CDemoConsoleCmd::_internal_cmdstring() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cmdstring_.Get();
}
inline void CDemoConsoleCmd::_internal_set_cmdstring(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cmdstring_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoConsoleCmd::_internal_mutable_cmdstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.cmdstring_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoConsoleCmd::release_cmdstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoConsoleCmd.cmdstring)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.cmdstring_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.cmdstring_.Set("", GetArena());
  }
  return released;
}
inline void CDemoConsoleCmd::set_allocated_cmdstring(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.cmdstring_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cmdstring_.IsDefault()) {
    _impl_.cmdstring_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoConsoleCmd.cmdstring)
}

// -------------------------------------------------------------------

// CDemoSendTables

// optional bytes data = 1;
inline bool CDemoSendTables::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoSendTables::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoSendTables::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoSendTables.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoSendTables::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoSendTables.data)
}
inline std::string* PROTOBUF_NONNULL CDemoSendTables::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoSendTables.data)
  return _s;
}
inline const std::string& CDemoSendTables::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoSendTables::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoSendTables::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoSendTables::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoSendTables.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoSendTables::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoSendTables.data)
}

// -------------------------------------------------------------------

// CDemoClassInfo_class_t

// optional int32 class_id = 1;
inline bool CDemoClassInfo_class_t::has_class_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CDemoClassInfo_class_t::clear_class_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.class_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CDemoClassInfo_class_t::class_id() const {
  // @@protoc_insertion_point(field_get:CDemoClassInfo.class_t.class_id)
  return _internal_class_id();
}
inline void CDemoClassInfo_class_t::set_class_id(::int32_t value) {
  _internal_set_class_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CDemoClassInfo.class_t.class_id)
}
inline ::int32_t CDemoClassInfo_class_t::_internal_class_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.class_id_;
}
inline void CDemoClassInfo_class_t::_internal_set_class_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.class_id_ = value;
}

// optional string network_name = 2;
inline bool CDemoClassInfo_class_t::has_network_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoClassInfo_class_t::clear_network_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoClassInfo_class_t::network_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoClassInfo.class_t.network_name)
  return _internal_network_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoClassInfo_class_t::set_network_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.network_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoClassInfo.class_t.network_name)
}
inline std::string* PROTOBUF_NONNULL CDemoClassInfo_class_t::mutable_network_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_network_name();
  // @@protoc_insertion_point(field_mutable:CDemoClassInfo.class_t.network_name)
  return _s;
}
inline const std::string& CDemoClassInfo_class_t::_internal_network_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_name_.Get();
}
inline void CDemoClassInfo_class_t::_internal_set_network_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.network_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoClassInfo_class_t::_internal_mutable_network_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.network_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoClassInfo_class_t::release_network_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoClassInfo.class_t.network_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.network_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.network_name_.Set("", GetArena());
  }
  return released;
}
inline void CDemoClassInfo_class_t::set_allocated_network_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.network_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.network_name_.IsDefault()) {
    _impl_.network_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoClassInfo.class_t.network_name)
}

// optional string table_name = 3;
inline bool CDemoClassInfo_class_t::has_table_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoClassInfo_class_t::clear_table_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDemoClassInfo_class_t::table_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoClassInfo.class_t.table_name)
  return _internal_table_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoClassInfo_class_t::set_table_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.table_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoClassInfo.class_t.table_name)
}
inline std::string* PROTOBUF_NONNULL CDemoClassInfo_class_t::mutable_table_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table_name();
  // @@protoc_insertion_point(field_mutable:CDemoClassInfo.class_t.table_name)
  return _s;
}
inline const std::string& CDemoClassInfo_class_t::_internal_table_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_name_.Get();
}
inline void CDemoClassInfo_class_t::_internal_set_table_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.table_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoClassInfo_class_t::_internal_mutable_table_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.table_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoClassInfo_class_t::release_table_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoClassInfo.class_t.table_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.table_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.table_name_.Set("", GetArena());
  }
  return released;
}
inline void CDemoClassInfo_class_t::set_allocated_table_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.table_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.table_name_.IsDefault()) {
    _impl_.table_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoClassInfo.class_t.table_name)
}

// -------------------------------------------------------------------

// CDemoClassInfo

// repeated .CDemoClassInfo.class_t classes = 1;
inline int CDemoClassInfo::_internal_classes_size() const {
  return _internal_classes().size();
}
inline int CDemoClassInfo::classes_size() const {
  return _internal_classes_size();
}
inline void CDemoClassInfo::clear_classes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.classes_.Clear();
}
inline ::CDemoClassInfo_class_t* PROTOBUF_NONNULL CDemoClassInfo::mutable_classes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CDemoClassInfo.classes)
  return _internal_mutable_classes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>* PROTOBUF_NONNULL CDemoClassInfo::mutable_classes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CDemoClassInfo.classes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_classes();
}
inline const ::CDemoClassInfo_class_t& CDemoClassInfo::classes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoClassInfo.classes)
  return _internal_classes().Get(index);
}
inline ::CDemoClassInfo_class_t* PROTOBUF_NONNULL CDemoClassInfo::add_classes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CDemoClassInfo_class_t* _add = _internal_mutable_classes()->Add();
  // @@protoc_insertion_point(field_add:CDemoClassInfo.classes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>& CDemoClassInfo::classes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CDemoClassInfo.classes)
  return _internal_classes();
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>&
CDemoClassInfo::_internal_classes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.classes_;
}
inline ::google::protobuf::RepeatedPtrField<::CDemoClassInfo_class_t>* PROTOBUF_NONNULL
CDemoClassInfo::_internal_mutable_classes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.classes_;
}

// -------------------------------------------------------------------

// CDemoCustomData

// optional int32 callback_index = 1;
inline bool CDemoCustomData::has_callback_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoCustomData::clear_callback_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callback_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CDemoCustomData::callback_index() const {
  // @@protoc_insertion_point(field_get:CDemoCustomData.callback_index)
  return _internal_callback_index();
}
inline void CDemoCustomData::set_callback_index(::int32_t value) {
  _internal_set_callback_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CDemoCustomData.callback_index)
}
inline ::int32_t CDemoCustomData::_internal_callback_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.callback_index_;
}
inline void CDemoCustomData::_internal_set_callback_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.callback_index_ = value;
}

// optional bytes data = 2;
inline bool CDemoCustomData::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoCustomData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoCustomData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoCustomData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoCustomData::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoCustomData.data)
}
inline std::string* PROTOBUF_NONNULL CDemoCustomData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoCustomData.data)
  return _s;
}
inline const std::string& CDemoCustomData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoCustomData::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoCustomData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoCustomData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoCustomData.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoCustomData::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoCustomData.data)
}

// -------------------------------------------------------------------

// CDemoCustomDataCallbacks

// repeated string save_id = 1;
inline int CDemoCustomDataCallbacks::_internal_save_id_size() const {
  return _internal_save_id().size();
}
inline int CDemoCustomDataCallbacks::save_id_size() const {
  return _internal_save_id_size();
}
inline void CDemoCustomDataCallbacks::clear_save_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.save_id_.Clear();
}
inline std::string* PROTOBUF_NONNULL CDemoCustomDataCallbacks::add_save_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_save_id()->Add();
  // @@protoc_insertion_point(field_add_mutable:CDemoCustomDataCallbacks.save_id)
  return _s;
}
inline const std::string& CDemoCustomDataCallbacks::save_id(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoCustomDataCallbacks.save_id)
  return _internal_save_id().Get(index);
}
inline std::string* PROTOBUF_NONNULL CDemoCustomDataCallbacks::mutable_save_id(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CDemoCustomDataCallbacks.save_id)
  return _internal_mutable_save_id()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CDemoCustomDataCallbacks::set_save_id(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_save_id()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:CDemoCustomDataCallbacks.save_id)
}
template <typename Arg_, typename... Args_>
inline void CDemoCustomDataCallbacks::add_save_id(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_save_id(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:CDemoCustomDataCallbacks.save_id)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& CDemoCustomDataCallbacks::save_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CDemoCustomDataCallbacks.save_id)
  return _internal_save_id();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
CDemoCustomDataCallbacks::mutable_save_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CDemoCustomDataCallbacks.save_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_save_id();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CDemoCustomDataCallbacks::_internal_save_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.save_id_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
CDemoCustomDataCallbacks::_internal_mutable_save_id() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.save_id_;
}

// -------------------------------------------------------------------

// CDemoAnimationHeader

// optional sint32 entity_id = 1;
inline bool CDemoAnimationHeader::has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoAnimationHeader::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CDemoAnimationHeader::entity_id() const {
  // @@protoc_insertion_point(field_get:CDemoAnimationHeader.entity_id)
  return _internal_entity_id();
}
inline void CDemoAnimationHeader::set_entity_id(::int32_t value) {
  _internal_set_entity_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CDemoAnimationHeader.entity_id)
}
inline ::int32_t CDemoAnimationHeader::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_;
}
inline void CDemoAnimationHeader::_internal_set_entity_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = value;
}

// optional int32 tick = 2;
inline bool CDemoAnimationHeader::has_tick() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CDemoAnimationHeader::clear_tick() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tick_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CDemoAnimationHeader::tick() const {
  // @@protoc_insertion_point(field_get:CDemoAnimationHeader.tick)
  return _internal_tick();
}
inline void CDemoAnimationHeader::set_tick(::int32_t value) {
  _internal_set_tick(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CDemoAnimationHeader.tick)
}
inline ::int32_t CDemoAnimationHeader::_internal_tick() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tick_;
}
inline void CDemoAnimationHeader::_internal_set_tick(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tick_ = value;
}

// optional bytes data = 3;
inline bool CDemoAnimationHeader::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoAnimationHeader::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoAnimationHeader::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoAnimationHeader.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoAnimationHeader::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoAnimationHeader.data)
}
inline std::string* PROTOBUF_NONNULL CDemoAnimationHeader::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoAnimationHeader.data)
  return _s;
}
inline const std::string& CDemoAnimationHeader::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoAnimationHeader::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoAnimationHeader::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoAnimationHeader::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoAnimationHeader.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoAnimationHeader::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoAnimationHeader.data)
}

// -------------------------------------------------------------------

// CDemoAnimationData

// optional sint32 entity_id = 1;
inline bool CDemoAnimationData::has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoAnimationData::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CDemoAnimationData::entity_id() const {
  // @@protoc_insertion_point(field_get:CDemoAnimationData.entity_id)
  return _internal_entity_id();
}
inline void CDemoAnimationData::set_entity_id(::int32_t value) {
  _internal_set_entity_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CDemoAnimationData.entity_id)
}
inline ::int32_t CDemoAnimationData::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_;
}
inline void CDemoAnimationData::_internal_set_entity_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = value;
}

// optional int32 start_tick = 2;
inline bool CDemoAnimationData::has_start_tick() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CDemoAnimationData::clear_start_tick() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_tick_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CDemoAnimationData::start_tick() const {
  // @@protoc_insertion_point(field_get:CDemoAnimationData.start_tick)
  return _internal_start_tick();
}
inline void CDemoAnimationData::set_start_tick(::int32_t value) {
  _internal_set_start_tick(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CDemoAnimationData.start_tick)
}
inline ::int32_t CDemoAnimationData::_internal_start_tick() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_tick_;
}
inline void CDemoAnimationData::_internal_set_start_tick(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_tick_ = value;
}

// optional int32 end_tick = 3;
inline bool CDemoAnimationData::has_end_tick() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CDemoAnimationData::clear_end_tick() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_tick_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t CDemoAnimationData::end_tick() const {
  // @@protoc_insertion_point(field_get:CDemoAnimationData.end_tick)
  return _internal_end_tick();
}
inline void CDemoAnimationData::set_end_tick(::int32_t value) {
  _internal_set_end_tick(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CDemoAnimationData.end_tick)
}
inline ::int32_t CDemoAnimationData::_internal_end_tick() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_tick_;
}
inline void CDemoAnimationData::_internal_set_end_tick(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_tick_ = value;
}

// optional bytes data = 4;
inline bool CDemoAnimationData::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoAnimationData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoAnimationData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoAnimationData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoAnimationData::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoAnimationData.data)
}
inline std::string* PROTOBUF_NONNULL CDemoAnimationData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoAnimationData.data)
  return _s;
}
inline const std::string& CDemoAnimationData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoAnimationData::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoAnimationData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoAnimationData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoAnimationData.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoAnimationData::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoAnimationData.data)
}

// optional int64 data_checksum = 5;
inline bool CDemoAnimationData::has_data_checksum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CDemoAnimationData::clear_data_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_checksum_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t CDemoAnimationData::data_checksum() const {
  // @@protoc_insertion_point(field_get:CDemoAnimationData.data_checksum)
  return _internal_data_checksum();
}
inline void CDemoAnimationData::set_data_checksum(::int64_t value) {
  _internal_set_data_checksum(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CDemoAnimationData.data_checksum)
}
inline ::int64_t CDemoAnimationData::_internal_data_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_checksum_;
}
inline void CDemoAnimationData::_internal_set_data_checksum(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_checksum_ = value;
}

// -------------------------------------------------------------------

// CDemoStringTables_items_t

// optional string str = 1;
inline bool CDemoStringTables_items_t::has_str() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoStringTables_items_t::clear_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoStringTables_items_t::str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoStringTables.items_t.str)
  return _internal_str();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoStringTables_items_t::set_str(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoStringTables.items_t.str)
}
inline std::string* PROTOBUF_NONNULL CDemoStringTables_items_t::mutable_str()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_str();
  // @@protoc_insertion_point(field_mutable:CDemoStringTables.items_t.str)
  return _s;
}
inline const std::string& CDemoStringTables_items_t::_internal_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str_.Get();
}
inline void CDemoStringTables_items_t::_internal_set_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoStringTables_items_t::_internal_mutable_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.str_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoStringTables_items_t::release_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoStringTables.items_t.str)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.str_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.str_.Set("", GetArena());
  }
  return released;
}
inline void CDemoStringTables_items_t::set_allocated_str(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.str_.IsDefault()) {
    _impl_.str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoStringTables.items_t.str)
}

// optional bytes data = 2;
inline bool CDemoStringTables_items_t::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoStringTables_items_t::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDemoStringTables_items_t::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoStringTables.items_t.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoStringTables_items_t::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoStringTables.items_t.data)
}
inline std::string* PROTOBUF_NONNULL CDemoStringTables_items_t::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoStringTables.items_t.data)
  return _s;
}
inline const std::string& CDemoStringTables_items_t::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoStringTables_items_t::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoStringTables_items_t::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoStringTables_items_t::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoStringTables.items_t.data)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoStringTables_items_t::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoStringTables.items_t.data)
}

// -------------------------------------------------------------------

// CDemoStringTables_table_t

// optional string table_name = 1;
inline bool CDemoStringTables_table_t::has_table_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoStringTables_table_t::clear_table_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoStringTables_table_t::table_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoStringTables.table_t.table_name)
  return _internal_table_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoStringTables_table_t::set_table_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.table_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoStringTables.table_t.table_name)
}
inline std::string* PROTOBUF_NONNULL CDemoStringTables_table_t::mutable_table_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table_name();
  // @@protoc_insertion_point(field_mutable:CDemoStringTables.table_t.table_name)
  return _s;
}
inline const std::string& CDemoStringTables_table_t::_internal_table_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_name_.Get();
}
inline void CDemoStringTables_table_t::_internal_set_table_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.table_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoStringTables_table_t::_internal_mutable_table_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.table_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoStringTables_table_t::release_table_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoStringTables.table_t.table_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.table_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.table_name_.Set("", GetArena());
  }
  return released;
}
inline void CDemoStringTables_table_t::set_allocated_table_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.table_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.table_name_.IsDefault()) {
    _impl_.table_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoStringTables.table_t.table_name)
}

// repeated .CDemoStringTables.items_t items = 2;
inline int CDemoStringTables_table_t::_internal_items_size() const {
  return _internal_items().size();
}
inline int CDemoStringTables_table_t::items_size() const {
  return _internal_items_size();
}
inline void CDemoStringTables_table_t::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::CDemoStringTables_items_t* PROTOBUF_NONNULL CDemoStringTables_table_t::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CDemoStringTables.table_t.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL CDemoStringTables_table_t::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CDemoStringTables.table_t.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::CDemoStringTables_items_t& CDemoStringTables_table_t::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoStringTables.table_t.items)
  return _internal_items().Get(index);
}
inline ::CDemoStringTables_items_t* PROTOBUF_NONNULL CDemoStringTables_table_t::add_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CDemoStringTables_items_t* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:CDemoStringTables.table_t.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>& CDemoStringTables_table_t::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CDemoStringTables.table_t.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>&
CDemoStringTables_table_t::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL
CDemoStringTables_table_t::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// repeated .CDemoStringTables.items_t items_clientside = 3;
inline int CDemoStringTables_table_t::_internal_items_clientside_size() const {
  return _internal_items_clientside().size();
}
inline int CDemoStringTables_table_t::items_clientside_size() const {
  return _internal_items_clientside_size();
}
inline void CDemoStringTables_table_t::clear_items_clientside() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_clientside_.Clear();
}
inline ::CDemoStringTables_items_t* PROTOBUF_NONNULL CDemoStringTables_table_t::mutable_items_clientside(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CDemoStringTables.table_t.items_clientside)
  return _internal_mutable_items_clientside()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL CDemoStringTables_table_t::mutable_items_clientside()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CDemoStringTables.table_t.items_clientside)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items_clientside();
}
inline const ::CDemoStringTables_items_t& CDemoStringTables_table_t::items_clientside(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoStringTables.table_t.items_clientside)
  return _internal_items_clientside().Get(index);
}
inline ::CDemoStringTables_items_t* PROTOBUF_NONNULL CDemoStringTables_table_t::add_items_clientside()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CDemoStringTables_items_t* _add = _internal_mutable_items_clientside()->Add();
  // @@protoc_insertion_point(field_add:CDemoStringTables.table_t.items_clientside)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>& CDemoStringTables_table_t::items_clientside() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CDemoStringTables.table_t.items_clientside)
  return _internal_items_clientside();
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>&
CDemoStringTables_table_t::_internal_items_clientside() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_clientside_;
}
inline ::google::protobuf::RepeatedPtrField<::CDemoStringTables_items_t>* PROTOBUF_NONNULL
CDemoStringTables_table_t::_internal_mutable_items_clientside() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_clientside_;
}

// optional int32 table_flags = 4;
inline bool CDemoStringTables_table_t::has_table_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoStringTables_table_t::clear_table_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_flags_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CDemoStringTables_table_t::table_flags() const {
  // @@protoc_insertion_point(field_get:CDemoStringTables.table_t.table_flags)
  return _internal_table_flags();
}
inline void CDemoStringTables_table_t::set_table_flags(::int32_t value) {
  _internal_set_table_flags(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CDemoStringTables.table_t.table_flags)
}
inline ::int32_t CDemoStringTables_table_t::_internal_table_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_flags_;
}
inline void CDemoStringTables_table_t::_internal_set_table_flags(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_flags_ = value;
}

// -------------------------------------------------------------------

// CDemoStringTables

// repeated .CDemoStringTables.table_t tables = 1;
inline int CDemoStringTables::_internal_tables_size() const {
  return _internal_tables().size();
}
inline int CDemoStringTables::tables_size() const {
  return _internal_tables_size();
}
inline void CDemoStringTables::clear_tables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tables_.Clear();
}
inline ::CDemoStringTables_table_t* PROTOBUF_NONNULL CDemoStringTables::mutable_tables(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CDemoStringTables.tables)
  return _internal_mutable_tables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>* PROTOBUF_NONNULL CDemoStringTables::mutable_tables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CDemoStringTables.tables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tables();
}
inline const ::CDemoStringTables_table_t& CDemoStringTables::tables(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoStringTables.tables)
  return _internal_tables().Get(index);
}
inline ::CDemoStringTables_table_t* PROTOBUF_NONNULL CDemoStringTables::add_tables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CDemoStringTables_table_t* _add = _internal_mutable_tables()->Add();
  // @@protoc_insertion_point(field_add:CDemoStringTables.tables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>& CDemoStringTables::tables() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CDemoStringTables.tables)
  return _internal_tables();
}
inline const ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>&
CDemoStringTables::_internal_tables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tables_;
}
inline ::google::protobuf::RepeatedPtrField<::CDemoStringTables_table_t>* PROTOBUF_NONNULL
CDemoStringTables::_internal_mutable_tables() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tables_;
}

// -------------------------------------------------------------------

// CDemoStop

// -------------------------------------------------------------------

// CDemoUserCmd

// optional int32 cmd_number = 1;
inline bool CDemoUserCmd::has_cmd_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CDemoUserCmd::clear_cmd_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_number_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CDemoUserCmd::cmd_number() const {
  // @@protoc_insertion_point(field_get:CDemoUserCmd.cmd_number)
  return _internal_cmd_number();
}
inline void CDemoUserCmd::set_cmd_number(::int32_t value) {
  _internal_set_cmd_number(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CDemoUserCmd.cmd_number)
}
inline ::int32_t CDemoUserCmd::_internal_cmd_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cmd_number_;
}
inline void CDemoUserCmd::_internal_set_cmd_number(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_number_ = value;
}

// optional bytes data = 2;
inline bool CDemoUserCmd::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CDemoUserCmd::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDemoUserCmd::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoUserCmd.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CDemoUserCmd::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CDemoUserCmd.data)
}
inline std::string* PROTOBUF_NONNULL CDemoUserCmd::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CDemoUserCmd.data)
  return _s;
}
inline const std::string& CDemoUserCmd::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CDemoUserCmd::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CDemoUserCmd::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CDemoUserCmd::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CDemoUserCmd.data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void CDemoUserCmd::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CDemoUserCmd.data)
}

// -------------------------------------------------------------------

// CDemoSpawnGroups

// repeated bytes msgs = 3;
inline int CDemoSpawnGroups::_internal_msgs_size() const {
  return _internal_msgs().size();
}
inline int CDemoSpawnGroups::msgs_size() const {
  return _internal_msgs_size();
}
inline void CDemoSpawnGroups::clear_msgs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgs_.Clear();
}
inline std::string* PROTOBUF_NONNULL CDemoSpawnGroups::add_msgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_msgs()->Add();
  // @@protoc_insertion_point(field_add_mutable:CDemoSpawnGroups.msgs)
  return _s;
}
inline const std::string& CDemoSpawnGroups::msgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CDemoSpawnGroups.msgs)
  return _internal_msgs().Get(index);
}
inline std::string* PROTOBUF_NONNULL CDemoSpawnGroups::mutable_msgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CDemoSpawnGroups.msgs)
  return _internal_mutable_msgs()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CDemoSpawnGroups::set_msgs(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_msgs()->Mutable(index), std::forward<Arg_>(value),
                        args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:CDemoSpawnGroups.msgs)
}
template <typename Arg_, typename... Args_>
inline void CDemoSpawnGroups::add_msgs(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_msgs(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:CDemoSpawnGroups.msgs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& CDemoSpawnGroups::msgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CDemoSpawnGroups.msgs)
  return _internal_msgs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
CDemoSpawnGroups::mutable_msgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CDemoSpawnGroups.msgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_msgs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CDemoSpawnGroups::_internal_msgs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msgs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
CDemoSpawnGroups::_internal_mutable_msgs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.msgs_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::EDemoCommands> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::EDemoCommands>() {
  return ::EDemoCommands_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // demo_2eproto_2epb_2eh

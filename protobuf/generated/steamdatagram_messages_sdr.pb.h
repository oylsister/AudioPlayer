// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steamdatagram_messages_sdr.proto
// Protobuf C++ Version: 6.30.0-rc1

#ifndef steamdatagram_5fmessages_5fsdr_2eproto_2epb_2eh
#define steamdatagram_5fmessages_5fsdr_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "steamnetworkingsockets_messages_certs.pb.h"
#include "steamnetworkingsockets_messages.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_steamdatagram_5fmessages_5fsdr_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_steamdatagram_5fmessages_5fsdr_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_steamdatagram_5fmessages_5fsdr_2eproto;
}  // extern "C"
enum CMsgSteamDatagramConnectionClosed_ERelayMode : int;
extern const uint32_t CMsgSteamDatagramConnectionClosed_ERelayMode_internal_data_[];
enum CMsgSteamDatagramConnectionStatsClientToRouter_Flags : int;
extern const uint32_t CMsgSteamDatagramConnectionStatsClientToRouter_Flags_internal_data_[];
enum CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags : int;
extern const uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_internal_data_[];
enum CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags : int;
extern const uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_internal_data_[];
enum CMsgSteamDatagramConnectionStatsRouterToClient_Flags : int;
extern const uint32_t CMsgSteamDatagramConnectionStatsRouterToClient_Flags_internal_data_[];
enum CMsgSteamDatagramConnectionStatsRouterToServer_Flags : int;
extern const uint32_t CMsgSteamDatagramConnectionStatsRouterToServer_Flags_internal_data_[];
enum CMsgSteamDatagramConnectionStatsServerToRouter_Flags : int;
extern const uint32_t CMsgSteamDatagramConnectionStatsServerToRouter_Flags_internal_data_[];
enum CMsgSteamDatagramRouterPingReply_AltAddress_Protocol : int;
extern const uint32_t CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_internal_data_[];
enum CMsgSteamDatagramRouterPingReply_Flags : int;
extern const uint32_t CMsgSteamDatagramRouterPingReply_Flags_internal_data_[];
enum ESteamDatagramMsgID : int;
extern const uint32_t ESteamDatagramMsgID_internal_data_[];
class CMsgSteamDatagramClientPingSampleReply;
struct CMsgSteamDatagramClientPingSampleReplyDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleReplyDefaultTypeInternal _CMsgSteamDatagramClientPingSampleReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_class_data_;
class CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter;
struct CMsgSteamDatagramClientPingSampleReply_LegacyDataCenterDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleReply_LegacyDataCenterDefaultTypeInternal _CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter_class_data_;
class CMsgSteamDatagramClientPingSampleReply_POP;
struct CMsgSteamDatagramClientPingSampleReply_POPDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleReply_POPDefaultTypeInternal _CMsgSteamDatagramClientPingSampleReply_POP_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_POP_class_data_;
class CMsgSteamDatagramClientPingSampleReply_POP_AltAddress;
struct CMsgSteamDatagramClientPingSampleReply_POP_AltAddressDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleReply_POP_AltAddressDefaultTypeInternal _CMsgSteamDatagramClientPingSampleReply_POP_AltAddress_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_POP_AltAddress_class_data_;
class CMsgSteamDatagramClientPingSampleRequest;
struct CMsgSteamDatagramClientPingSampleRequestDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleRequestDefaultTypeInternal _CMsgSteamDatagramClientPingSampleRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleRequest_class_data_;
class CMsgSteamDatagramClientSwitchedPrimary;
struct CMsgSteamDatagramClientSwitchedPrimaryDefaultTypeInternal;
extern CMsgSteamDatagramClientSwitchedPrimaryDefaultTypeInternal _CMsgSteamDatagramClientSwitchedPrimary_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientSwitchedPrimary_class_data_;
class CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
struct CMsgSteamDatagramClientSwitchedPrimary_RouterQualityDefaultTypeInternal;
extern CMsgSteamDatagramClientSwitchedPrimary_RouterQualityDefaultTypeInternal _CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_class_data_;
class CMsgSteamDatagramConnectOK;
struct CMsgSteamDatagramConnectOKDefaultTypeInternal;
extern CMsgSteamDatagramConnectOKDefaultTypeInternal _CMsgSteamDatagramConnectOK_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectOK_class_data_;
class CMsgSteamDatagramConnectRequest;
struct CMsgSteamDatagramConnectRequestDefaultTypeInternal;
extern CMsgSteamDatagramConnectRequestDefaultTypeInternal _CMsgSteamDatagramConnectRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectRequest_class_data_;
class CMsgSteamDatagramConnectionClosed;
struct CMsgSteamDatagramConnectionClosedDefaultTypeInternal;
extern CMsgSteamDatagramConnectionClosedDefaultTypeInternal _CMsgSteamDatagramConnectionClosed_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionClosed_class_data_;
class CMsgSteamDatagramConnectionStatsClientToRouter;
struct CMsgSteamDatagramConnectionStatsClientToRouterDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsClientToRouterDefaultTypeInternal _CMsgSteamDatagramConnectionStatsClientToRouter_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsClientToRouter_class_data_;
class CMsgSteamDatagramConnectionStatsP2PClientToRouter;
struct CMsgSteamDatagramConnectionStatsP2PClientToRouterDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsP2PClientToRouterDefaultTypeInternal _CMsgSteamDatagramConnectionStatsP2PClientToRouter_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsP2PClientToRouter_class_data_;
class CMsgSteamDatagramConnectionStatsP2PRouterToClient;
struct CMsgSteamDatagramConnectionStatsP2PRouterToClientDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsP2PRouterToClientDefaultTypeInternal _CMsgSteamDatagramConnectionStatsP2PRouterToClient_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsP2PRouterToClient_class_data_;
class CMsgSteamDatagramConnectionStatsRouterToClient;
struct CMsgSteamDatagramConnectionStatsRouterToClientDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsRouterToClientDefaultTypeInternal _CMsgSteamDatagramConnectionStatsRouterToClient_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsRouterToClient_class_data_;
class CMsgSteamDatagramConnectionStatsRouterToServer;
struct CMsgSteamDatagramConnectionStatsRouterToServerDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsRouterToServerDefaultTypeInternal _CMsgSteamDatagramConnectionStatsRouterToServer_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsRouterToServer_class_data_;
class CMsgSteamDatagramConnectionStatsServerToRouter;
struct CMsgSteamDatagramConnectionStatsServerToRouterDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsServerToRouterDefaultTypeInternal _CMsgSteamDatagramConnectionStatsServerToRouter_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsServerToRouter_class_data_;
class CMsgSteamDatagramGameserverPingReplyData;
struct CMsgSteamDatagramGameserverPingReplyDataDefaultTypeInternal;
extern CMsgSteamDatagramGameserverPingReplyDataDefaultTypeInternal _CMsgSteamDatagramGameserverPingReplyData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverPingReplyData_class_data_;
class CMsgSteamDatagramGameserverPingRequestBody;
struct CMsgSteamDatagramGameserverPingRequestBodyDefaultTypeInternal;
extern CMsgSteamDatagramGameserverPingRequestBodyDefaultTypeInternal _CMsgSteamDatagramGameserverPingRequestBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverPingRequestBody_class_data_;
class CMsgSteamDatagramGameserverPingRequestEnvelope;
struct CMsgSteamDatagramGameserverPingRequestEnvelopeDefaultTypeInternal;
extern CMsgSteamDatagramGameserverPingRequestEnvelopeDefaultTypeInternal _CMsgSteamDatagramGameserverPingRequestEnvelope_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverPingRequestEnvelope_class_data_;
class CMsgSteamDatagramGameserverSessionEstablished;
struct CMsgSteamDatagramGameserverSessionEstablishedDefaultTypeInternal;
extern CMsgSteamDatagramGameserverSessionEstablishedDefaultTypeInternal _CMsgSteamDatagramGameserverSessionEstablished_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverSessionEstablished_class_data_;
class CMsgSteamDatagramGameserverSessionRequest;
struct CMsgSteamDatagramGameserverSessionRequestDefaultTypeInternal;
extern CMsgSteamDatagramGameserverSessionRequestDefaultTypeInternal _CMsgSteamDatagramGameserverSessionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverSessionRequest_class_data_;
class CMsgSteamDatagramNoConnection;
struct CMsgSteamDatagramNoConnectionDefaultTypeInternal;
extern CMsgSteamDatagramNoConnectionDefaultTypeInternal _CMsgSteamDatagramNoConnection_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramNoConnection_class_data_;
class CMsgSteamDatagramNoSessionRelayToClient;
struct CMsgSteamDatagramNoSessionRelayToClientDefaultTypeInternal;
extern CMsgSteamDatagramNoSessionRelayToClientDefaultTypeInternal _CMsgSteamDatagramNoSessionRelayToClient_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramNoSessionRelayToClient_class_data_;
class CMsgSteamDatagramNoSessionRelayToPeer;
struct CMsgSteamDatagramNoSessionRelayToPeerDefaultTypeInternal;
extern CMsgSteamDatagramNoSessionRelayToPeerDefaultTypeInternal _CMsgSteamDatagramNoSessionRelayToPeer_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramNoSessionRelayToPeer_class_data_;
class CMsgSteamDatagramP2PBadRouteRouterToClient;
struct CMsgSteamDatagramP2PBadRouteRouterToClientDefaultTypeInternal;
extern CMsgSteamDatagramP2PBadRouteRouterToClientDefaultTypeInternal _CMsgSteamDatagramP2PBadRouteRouterToClient_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PBadRouteRouterToClient_class_data_;
class CMsgSteamDatagramP2PRoutes;
struct CMsgSteamDatagramP2PRoutesDefaultTypeInternal;
extern CMsgSteamDatagramP2PRoutesDefaultTypeInternal _CMsgSteamDatagramP2PRoutes_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutes_class_data_;
class CMsgSteamDatagramP2PRoutes_RelayCluster;
struct CMsgSteamDatagramP2PRoutes_RelayClusterDefaultTypeInternal;
extern CMsgSteamDatagramP2PRoutes_RelayClusterDefaultTypeInternal _CMsgSteamDatagramP2PRoutes_RelayCluster_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutes_RelayCluster_class_data_;
class CMsgSteamDatagramP2PRoutes_Route;
struct CMsgSteamDatagramP2PRoutes_RouteDefaultTypeInternal;
extern CMsgSteamDatagramP2PRoutes_RouteDefaultTypeInternal _CMsgSteamDatagramP2PRoutes_Route_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutes_Route_class_data_;
class CMsgSteamDatagramP2PRoutingSummary;
struct CMsgSteamDatagramP2PRoutingSummaryDefaultTypeInternal;
extern CMsgSteamDatagramP2PRoutingSummaryDefaultTypeInternal _CMsgSteamDatagramP2PRoutingSummary_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutingSummary_class_data_;
class CMsgSteamDatagramP2PSessionEstablished;
struct CMsgSteamDatagramP2PSessionEstablishedDefaultTypeInternal;
extern CMsgSteamDatagramP2PSessionEstablishedDefaultTypeInternal _CMsgSteamDatagramP2PSessionEstablished_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionEstablished_class_data_;
class CMsgSteamDatagramP2PSessionRequest;
struct CMsgSteamDatagramP2PSessionRequestDefaultTypeInternal;
extern CMsgSteamDatagramP2PSessionRequestDefaultTypeInternal _CMsgSteamDatagramP2PSessionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionRequest_class_data_;
class CMsgSteamDatagramP2PSessionRequestBody;
struct CMsgSteamDatagramP2PSessionRequestBodyDefaultTypeInternal;
extern CMsgSteamDatagramP2PSessionRequestBodyDefaultTypeInternal _CMsgSteamDatagramP2PSessionRequestBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionRequestBody_class_data_;
class CMsgSteamDatagramP2PSessionRequestBody_EncryptedData;
struct CMsgSteamDatagramP2PSessionRequestBody_EncryptedDataDefaultTypeInternal;
extern CMsgSteamDatagramP2PSessionRequestBody_EncryptedDataDefaultTypeInternal _CMsgSteamDatagramP2PSessionRequestBody_EncryptedData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionRequestBody_EncryptedData_class_data_;
class CMsgSteamDatagramRouterPingReply;
struct CMsgSteamDatagramRouterPingReplyDefaultTypeInternal;
extern CMsgSteamDatagramRouterPingReplyDefaultTypeInternal _CMsgSteamDatagramRouterPingReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramRouterPingReply_class_data_;
class CMsgSteamDatagramRouterPingReply_AltAddress;
struct CMsgSteamDatagramRouterPingReply_AltAddressDefaultTypeInternal;
extern CMsgSteamDatagramRouterPingReply_AltAddressDefaultTypeInternal _CMsgSteamDatagramRouterPingReply_AltAddress_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramRouterPingReply_AltAddress_class_data_;
class CMsgSteamDatagramRouterPingReply_RouteException;
struct CMsgSteamDatagramRouterPingReply_RouteExceptionDefaultTypeInternal;
extern CMsgSteamDatagramRouterPingReply_RouteExceptionDefaultTypeInternal _CMsgSteamDatagramRouterPingReply_RouteException_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramRouterPingReply_RouteException_class_data_;
class CMsgSteamDatagramSetSecondaryAddressRequest;
struct CMsgSteamDatagramSetSecondaryAddressRequestDefaultTypeInternal;
extern CMsgSteamDatagramSetSecondaryAddressRequestDefaultTypeInternal _CMsgSteamDatagramSetSecondaryAddressRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramSetSecondaryAddressRequest_class_data_;
class CMsgSteamDatagramSetSecondaryAddressResult;
struct CMsgSteamDatagramSetSecondaryAddressResultDefaultTypeInternal;
extern CMsgSteamDatagramSetSecondaryAddressResultDefaultTypeInternal _CMsgSteamDatagramSetSecondaryAddressResult_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramSetSecondaryAddressResult_class_data_;
class CMsgSteamDatagramSignedMessageGeneric;
struct CMsgSteamDatagramSignedMessageGenericDefaultTypeInternal;
extern CMsgSteamDatagramSignedMessageGenericDefaultTypeInternal _CMsgSteamDatagramSignedMessageGeneric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramSignedMessageGeneric_class_data_;
class CMsgSteamNetworkingIPAddress;
struct CMsgSteamNetworkingIPAddressDefaultTypeInternal;
extern CMsgSteamNetworkingIPAddressDefaultTypeInternal _CMsgSteamNetworkingIPAddress_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamNetworkingIPAddress_class_data_;
class CMsgSteamNetworkingP2PSDRRoutingSummary;
struct CMsgSteamNetworkingP2PSDRRoutingSummaryDefaultTypeInternal;
extern CMsgSteamNetworkingP2PSDRRoutingSummaryDefaultTypeInternal _CMsgSteamNetworkingP2PSDRRoutingSummary_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgSteamNetworkingP2PSDRRoutingSummary_class_data_;
class CMsgTOSTreatment;
struct CMsgTOSTreatmentDefaultTypeInternal;
extern CMsgTOSTreatmentDefaultTypeInternal _CMsgTOSTreatment_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgTOSTreatment_class_data_;
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::CMsgSteamDatagramConnectionClosed_ERelayMode_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramConnectionClosed_ERelayMode>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramConnectionStatsClientToRouter_Flags_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramConnectionStatsClientToRouter_Flags>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramConnectionStatsRouterToClient_Flags_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramConnectionStatsRouterToClient_Flags>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramConnectionStatsRouterToServer_Flags_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramConnectionStatsRouterToServer_Flags>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramConnectionStatsServerToRouter_Flags_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramConnectionStatsServerToRouter_Flags>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>;
template <>
internal::EnumTraitsT<::CMsgSteamDatagramRouterPingReply_Flags_internal_data_>
    internal::EnumTraitsImpl::value<::CMsgSteamDatagramRouterPingReply_Flags>;
template <>
internal::EnumTraitsT<::ESteamDatagramMsgID_internal_data_>
    internal::EnumTraitsImpl::value<::ESteamDatagramMsgID>;
}  // namespace protobuf
}  // namespace google

enum CMsgSteamDatagramRouterPingReply_AltAddress_Protocol : int {
  CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_DefaultProtocol = 0,
};

extern const uint32_t CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_internal_data_[];
inline constexpr CMsgSteamDatagramRouterPingReply_AltAddress_Protocol CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Protocol_MIN =
    static_cast<CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>(0);
inline constexpr CMsgSteamDatagramRouterPingReply_AltAddress_Protocol CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Protocol_MAX =
    static_cast<CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>(0);
inline bool CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_IsValid(int value) {
  return 0 <= value && value <= 0;
}
inline constexpr int CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Protocol_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Protocol_Name().");
  return CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Name(static_cast<CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>(value));
}
template <>
inline const std::string& CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Name(CMsgSteamDatagramRouterPingReply_AltAddress_Protocol value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_descriptor, 0, 0>(
      static_cast<int>(value));
}
inline bool CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Parse(
    absl::string_view name, CMsgSteamDatagramRouterPingReply_AltAddress_Protocol* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>(CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramRouterPingReply_Flags : int {
  CMsgSteamDatagramRouterPingReply_Flags_FLAG_MAYBE_MORE_DATA_CENTERS = 1,
  CMsgSteamDatagramRouterPingReply_Flags_FLAG_MAYBE_MORE_ALT_ADDRESSES = 2,
};

extern const uint32_t CMsgSteamDatagramRouterPingReply_Flags_internal_data_[];
inline constexpr CMsgSteamDatagramRouterPingReply_Flags CMsgSteamDatagramRouterPingReply_Flags_Flags_MIN =
    static_cast<CMsgSteamDatagramRouterPingReply_Flags>(1);
inline constexpr CMsgSteamDatagramRouterPingReply_Flags CMsgSteamDatagramRouterPingReply_Flags_Flags_MAX =
    static_cast<CMsgSteamDatagramRouterPingReply_Flags>(2);
inline bool CMsgSteamDatagramRouterPingReply_Flags_IsValid(int value) {
  return 1 <= value && value <= 2;
}
inline constexpr int CMsgSteamDatagramRouterPingReply_Flags_Flags_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply_Flags_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramRouterPingReply_Flags_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramRouterPingReply_Flags>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flags_Name().");
  return CMsgSteamDatagramRouterPingReply_Flags_Name(static_cast<CMsgSteamDatagramRouterPingReply_Flags>(value));
}
template <>
inline const std::string& CMsgSteamDatagramRouterPingReply_Flags_Name(CMsgSteamDatagramRouterPingReply_Flags value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CMsgSteamDatagramRouterPingReply_Flags_descriptor, 1, 2>(
      static_cast<int>(value));
}
inline bool CMsgSteamDatagramRouterPingReply_Flags_Parse(
    absl::string_view name, CMsgSteamDatagramRouterPingReply_Flags* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramRouterPingReply_Flags>(CMsgSteamDatagramRouterPingReply_Flags_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramConnectionClosed_ERelayMode : int {
  CMsgSteamDatagramConnectionClosed_ERelayMode_None = 0,
  CMsgSteamDatagramConnectionClosed_ERelayMode_EndToEnd = 1,
  CMsgSteamDatagramConnectionClosed_ERelayMode_ClosedByPeer = 2,
};

extern const uint32_t CMsgSteamDatagramConnectionClosed_ERelayMode_internal_data_[];
inline constexpr CMsgSteamDatagramConnectionClosed_ERelayMode CMsgSteamDatagramConnectionClosed_ERelayMode_ERelayMode_MIN =
    static_cast<CMsgSteamDatagramConnectionClosed_ERelayMode>(0);
inline constexpr CMsgSteamDatagramConnectionClosed_ERelayMode CMsgSteamDatagramConnectionClosed_ERelayMode_ERelayMode_MAX =
    static_cast<CMsgSteamDatagramConnectionClosed_ERelayMode>(2);
inline bool CMsgSteamDatagramConnectionClosed_ERelayMode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int CMsgSteamDatagramConnectionClosed_ERelayMode_ERelayMode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed_ERelayMode_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramConnectionClosed_ERelayMode_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramConnectionClosed_ERelayMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ERelayMode_Name().");
  return CMsgSteamDatagramConnectionClosed_ERelayMode_Name(static_cast<CMsgSteamDatagramConnectionClosed_ERelayMode>(value));
}
template <>
inline const std::string& CMsgSteamDatagramConnectionClosed_ERelayMode_Name(CMsgSteamDatagramConnectionClosed_ERelayMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CMsgSteamDatagramConnectionClosed_ERelayMode_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool CMsgSteamDatagramConnectionClosed_ERelayMode_Parse(
    absl::string_view name, CMsgSteamDatagramConnectionClosed_ERelayMode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramConnectionClosed_ERelayMode>(CMsgSteamDatagramConnectionClosed_ERelayMode_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramConnectionStatsClientToRouter_Flags : int {
  CMsgSteamDatagramConnectionStatsClientToRouter_Flags_ACK_REQUEST_RELAY = 1,
  CMsgSteamDatagramConnectionStatsClientToRouter_Flags_ACK_REQUEST_E2E = 2,
  CMsgSteamDatagramConnectionStatsClientToRouter_Flags_ACK_REQUEST_IMMEDIATE = 4,
  CMsgSteamDatagramConnectionStatsClientToRouter_Flags_NOT_PRIMARY_SESSION = 8,
  CMsgSteamDatagramConnectionStatsClientToRouter_Flags_CLIENT_RELAY_OVERRIDE = 32,
};

extern const uint32_t CMsgSteamDatagramConnectionStatsClientToRouter_Flags_internal_data_[];
inline constexpr CMsgSteamDatagramConnectionStatsClientToRouter_Flags CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Flags_MIN =
    static_cast<CMsgSteamDatagramConnectionStatsClientToRouter_Flags>(1);
inline constexpr CMsgSteamDatagramConnectionStatsClientToRouter_Flags CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Flags_MAX =
    static_cast<CMsgSteamDatagramConnectionStatsClientToRouter_Flags>(32);
inline bool CMsgSteamDatagramConnectionStatsClientToRouter_Flags_IsValid(int value) {
  return 0 <= value && value <= 32 && ((4294967574u >> value) & 1) != 0;
}
inline constexpr int CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Flags_ARRAYSIZE = 32 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsClientToRouter_Flags_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramConnectionStatsClientToRouter_Flags>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flags_Name().");
  return ::google::protobuf::internal::NameOfEnum(CMsgSteamDatagramConnectionStatsClientToRouter_Flags_descriptor(), value);
}
inline bool CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Parse(
    absl::string_view name, CMsgSteamDatagramConnectionStatsClientToRouter_Flags* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramConnectionStatsClientToRouter_Flags>(CMsgSteamDatagramConnectionStatsClientToRouter_Flags_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramConnectionStatsRouterToClient_Flags : int {
  CMsgSteamDatagramConnectionStatsRouterToClient_Flags_ACK_REQUEST_RELAY = 1,
  CMsgSteamDatagramConnectionStatsRouterToClient_Flags_ACK_REQUEST_E2E = 2,
  CMsgSteamDatagramConnectionStatsRouterToClient_Flags_ACK_REQUEST_IMMEDIATE = 4,
};

extern const uint32_t CMsgSteamDatagramConnectionStatsRouterToClient_Flags_internal_data_[];
inline constexpr CMsgSteamDatagramConnectionStatsRouterToClient_Flags CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Flags_MIN =
    static_cast<CMsgSteamDatagramConnectionStatsRouterToClient_Flags>(1);
inline constexpr CMsgSteamDatagramConnectionStatsRouterToClient_Flags CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Flags_MAX =
    static_cast<CMsgSteamDatagramConnectionStatsRouterToClient_Flags>(4);
inline bool CMsgSteamDatagramConnectionStatsRouterToClient_Flags_IsValid(int value) {
  return 0 <= value && value <= 4 && ((22u >> value) & 1) != 0;
}
inline constexpr int CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Flags_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToClient_Flags_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramConnectionStatsRouterToClient_Flags>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flags_Name().");
  return CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Name(static_cast<CMsgSteamDatagramConnectionStatsRouterToClient_Flags>(value));
}
template <>
inline const std::string& CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Name(CMsgSteamDatagramConnectionStatsRouterToClient_Flags value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CMsgSteamDatagramConnectionStatsRouterToClient_Flags_descriptor, 1, 4>(
      static_cast<int>(value));
}
inline bool CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Parse(
    absl::string_view name, CMsgSteamDatagramConnectionStatsRouterToClient_Flags* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramConnectionStatsRouterToClient_Flags>(CMsgSteamDatagramConnectionStatsRouterToClient_Flags_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramConnectionStatsRouterToServer_Flags : int {
  CMsgSteamDatagramConnectionStatsRouterToServer_Flags_ACK_REQUEST_RELAY = 1,
  CMsgSteamDatagramConnectionStatsRouterToServer_Flags_ACK_REQUEST_E2E = 2,
  CMsgSteamDatagramConnectionStatsRouterToServer_Flags_ACK_REQUEST_IMMEDIATE = 4,
};

extern const uint32_t CMsgSteamDatagramConnectionStatsRouterToServer_Flags_internal_data_[];
inline constexpr CMsgSteamDatagramConnectionStatsRouterToServer_Flags CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Flags_MIN =
    static_cast<CMsgSteamDatagramConnectionStatsRouterToServer_Flags>(1);
inline constexpr CMsgSteamDatagramConnectionStatsRouterToServer_Flags CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Flags_MAX =
    static_cast<CMsgSteamDatagramConnectionStatsRouterToServer_Flags>(4);
inline bool CMsgSteamDatagramConnectionStatsRouterToServer_Flags_IsValid(int value) {
  return 0 <= value && value <= 4 && ((22u >> value) & 1) != 0;
}
inline constexpr int CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Flags_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer_Flags_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramConnectionStatsRouterToServer_Flags>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flags_Name().");
  return CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Name(static_cast<CMsgSteamDatagramConnectionStatsRouterToServer_Flags>(value));
}
template <>
inline const std::string& CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Name(CMsgSteamDatagramConnectionStatsRouterToServer_Flags value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CMsgSteamDatagramConnectionStatsRouterToServer_Flags_descriptor, 1, 4>(
      static_cast<int>(value));
}
inline bool CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Parse(
    absl::string_view name, CMsgSteamDatagramConnectionStatsRouterToServer_Flags* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramConnectionStatsRouterToServer_Flags>(CMsgSteamDatagramConnectionStatsRouterToServer_Flags_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramConnectionStatsServerToRouter_Flags : int {
  CMsgSteamDatagramConnectionStatsServerToRouter_Flags_ACK_REQUEST_RELAY = 1,
  CMsgSteamDatagramConnectionStatsServerToRouter_Flags_ACK_REQUEST_E2E = 2,
  CMsgSteamDatagramConnectionStatsServerToRouter_Flags_ACK_REQUEST_IMMEDIATE = 4,
};

extern const uint32_t CMsgSteamDatagramConnectionStatsServerToRouter_Flags_internal_data_[];
inline constexpr CMsgSteamDatagramConnectionStatsServerToRouter_Flags CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Flags_MIN =
    static_cast<CMsgSteamDatagramConnectionStatsServerToRouter_Flags>(1);
inline constexpr CMsgSteamDatagramConnectionStatsServerToRouter_Flags CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Flags_MAX =
    static_cast<CMsgSteamDatagramConnectionStatsServerToRouter_Flags>(4);
inline bool CMsgSteamDatagramConnectionStatsServerToRouter_Flags_IsValid(int value) {
  return 0 <= value && value <= 4 && ((22u >> value) & 1) != 0;
}
inline constexpr int CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Flags_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsServerToRouter_Flags_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramConnectionStatsServerToRouter_Flags>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flags_Name().");
  return CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Name(static_cast<CMsgSteamDatagramConnectionStatsServerToRouter_Flags>(value));
}
template <>
inline const std::string& CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Name(CMsgSteamDatagramConnectionStatsServerToRouter_Flags value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CMsgSteamDatagramConnectionStatsServerToRouter_Flags_descriptor, 1, 4>(
      static_cast<int>(value));
}
inline bool CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Parse(
    absl::string_view name, CMsgSteamDatagramConnectionStatsServerToRouter_Flags* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramConnectionStatsServerToRouter_Flags>(CMsgSteamDatagramConnectionStatsServerToRouter_Flags_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags : int {
  CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_ACK_REQUEST_RELAY = 1,
  CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_ACK_REQUEST_E2E = 2,
  CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_ACK_REQUEST_IMMEDIATE = 4,
  CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_NOT_PRIMARY_SESSION = 8,
  CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_NOT_PRIMARY_TRANSPORT_E2E = 16,
  CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_CLIENT_RELAY_OVERRIDE = 32,
};

extern const uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_internal_data_[];
inline constexpr CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Flags_MIN =
    static_cast<CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags>(1);
inline constexpr CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Flags_MAX =
    static_cast<CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags>(32);
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_IsValid(int value) {
  return 0 <= value && value <= 32 && ((4295033110u >> value) & 1) != 0;
}
inline constexpr int CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Flags_ARRAYSIZE = 32 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flags_Name().");
  return ::google::protobuf::internal::NameOfEnum(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_descriptor(), value);
}
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Parse(
    absl::string_view name, CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags>(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_descriptor(), name,
                                           value);
}
enum CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags : int {
  CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_ACK_REQUEST_RELAY = 1,
  CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_ACK_REQUEST_E2E = 2,
  CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_ACK_REQUEST_IMMEDIATE = 4,
  CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_NOT_PRIMARY_TRANSPORT_E2E = 16,
};

extern const uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_internal_data_[];
inline constexpr CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Flags_MIN =
    static_cast<CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags>(1);
inline constexpr CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Flags_MAX =
    static_cast<CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags>(16);
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_IsValid(int value) {
  return 0 <= value && value <= 16 && ((65558u >> value) & 1) != 0;
}
inline constexpr int CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Flags_ARRAYSIZE = 16 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_descriptor();
template <typename T>
const std::string& CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Name(T value) {
  static_assert(std::is_same<T, CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Flags_Name().");
  return CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Name(static_cast<CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags>(value));
}
template <>
inline const std::string& CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Name(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_descriptor, 1, 16>(
      static_cast<int>(value));
}
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Parse(
    absl::string_view name, CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags>(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_descriptor(), name,
                                           value);
}
enum ESteamDatagramMsgID : int {
  k_ESteamDatagramMsg_Invalid = 0,
  k_ESteamDatagramMsg_RouterPingRequest = 1,
  k_ESteamDatagramMsg_RouterPingReply = 2,
  k_ESteamDatagramMsg_GameserverPingRequest = 3,
  k_ESteamDatagramMsg_GameserverSessionRequest = 5,
  k_ESteamDatagramMsg_GameserverSessionEstablished = 6,
  k_ESteamDatagramMsg_NoSession = 7,
  k_ESteamDatagramMsg_Diagnostic = 8,
  k_ESteamDatagramMsg_DataClientToRouter = 9,
  k_ESteamDatagramMsg_DataRouterToServer = 10,
  k_ESteamDatagramMsg_DataServerToRouter = 11,
  k_ESteamDatagramMsg_DataRouterToClient = 12,
  k_ESteamDatagramMsg_Stats = 13,
  k_ESteamDatagramMsg_ClientPingSampleRequest = 14,
  k_ESteamDatagramMsg_ClientPingSampleReply = 15,
  k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary = 16,
  k_ESteamDatagramMsg_RelayHealth = 17,
  k_ESteamDatagramMsg_ConnectRequest = 18,
  k_ESteamDatagramMsg_ConnectOK = 19,
  k_ESteamDatagramMsg_ConnectionClosed = 20,
  k_ESteamDatagramMsg_NoConnection = 21,
  k_ESteamDatagramMsg_TicketDecryptRequest = 22,
  k_ESteamDatagramMsg_TicketDecryptReply = 23,
  k_ESteamDatagramMsg_P2PSessionRequest = 24,
  k_ESteamDatagramMsg_P2PSessionEstablished = 25,
  k_ESteamDatagramMsg_P2PStatsClient = 26,
  k_ESteamDatagramMsg_P2PStatsRelay = 27,
  k_ESteamDatagramMsg_P2PBadRoute = 28,
  k_ESteamDatagramMsg_GameserverPingReply = 29,
  k_ESteamDatagramMsg_LegacyGameserverRegistration = 30,
  k_ESteamDatagramMsg_SetSecondaryAddressRequest = 31,
  k_ESteamDatagramMsg_SetSecondaryAddressResult = 32,
  k_ESteamDatagramMsg_RelayToRelayPingRequest = 33,
  k_ESteamDatagramMsg_RelayToRelayPingReply = 34,
};

extern const uint32_t ESteamDatagramMsgID_internal_data_[];
inline constexpr ESteamDatagramMsgID ESteamDatagramMsgID_MIN =
    static_cast<ESteamDatagramMsgID>(0);
inline constexpr ESteamDatagramMsgID ESteamDatagramMsgID_MAX =
    static_cast<ESteamDatagramMsgID>(34);
inline bool ESteamDatagramMsgID_IsValid(int value) {
  return 0 <= value && value <= 34 && ((34359738351u >> value) & 1) != 0;
}
inline constexpr int ESteamDatagramMsgID_ARRAYSIZE = 34 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ESteamDatagramMsgID_descriptor();
template <typename T>
const std::string& ESteamDatagramMsgID_Name(T value) {
  static_assert(std::is_same<T, ESteamDatagramMsgID>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteamDatagramMsgID_Name().");
  return ESteamDatagramMsgID_Name(static_cast<ESteamDatagramMsgID>(value));
}
template <>
inline const std::string& ESteamDatagramMsgID_Name(ESteamDatagramMsgID value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteamDatagramMsgID_descriptor, 0, 34>(
      static_cast<int>(value));
}
inline bool ESteamDatagramMsgID_Parse(
    absl::string_view name, ESteamDatagramMsgID* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamDatagramMsgID>(ESteamDatagramMsgID_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class CMsgTOSTreatment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgTOSTreatment) */ {
 public:
  inline CMsgTOSTreatment() : CMsgTOSTreatment(nullptr) {}
  ~CMsgTOSTreatment() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgTOSTreatment* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgTOSTreatment));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgTOSTreatment(::google::protobuf::internal::ConstantInitialized);

  inline CMsgTOSTreatment(const CMsgTOSTreatment& from) : CMsgTOSTreatment(nullptr, from) {}
  inline CMsgTOSTreatment(CMsgTOSTreatment&& from) noexcept
      : CMsgTOSTreatment(nullptr, std::move(from)) {}
  inline CMsgTOSTreatment& operator=(const CMsgTOSTreatment& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgTOSTreatment& operator=(CMsgTOSTreatment&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgTOSTreatment& default_instance() {
    return *reinterpret_cast<const CMsgTOSTreatment*>(
        &_CMsgTOSTreatment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CMsgTOSTreatment& a, CMsgTOSTreatment& b) { a.Swap(&b); }
  inline void Swap(CMsgTOSTreatment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgTOSTreatment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgTOSTreatment* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgTOSTreatment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgTOSTreatment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgTOSTreatment& from) { CMsgTOSTreatment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgTOSTreatment* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgTOSTreatment"; }

 protected:
  explicit CMsgTOSTreatment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgTOSTreatment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgTOSTreatment& from);
  CMsgTOSTreatment(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgTOSTreatment&& from) noexcept
      : CMsgTOSTreatment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kL4SDetectFieldNumber = 1,
    kUpEcn1FieldNumber = 2,
    kDownDscp45FieldNumber = 3,
  };
  // optional string l4s_detect = 1;
  bool has_l4s_detect() const;
  void clear_l4s_detect() ;
  const std::string& l4s_detect() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_l4s_detect(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_l4s_detect();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_l4s_detect();
  void set_allocated_l4s_detect(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_l4s_detect() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_l4s_detect(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_l4s_detect();

  public:
  // optional string up_ecn1 = 2;
  bool has_up_ecn1() const;
  void clear_up_ecn1() ;
  const std::string& up_ecn1() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_up_ecn1(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_up_ecn1();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_up_ecn1();
  void set_allocated_up_ecn1(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_up_ecn1() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_up_ecn1(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_up_ecn1();

  public:
  // optional string down_dscp45 = 3;
  bool has_down_dscp45() const;
  void clear_down_dscp45() ;
  const std::string& down_dscp45() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_down_dscp45(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_down_dscp45();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_down_dscp45();
  void set_allocated_down_dscp45(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_down_dscp45() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_down_dscp45(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_down_dscp45();

  public:
  // @@protoc_insertion_point(class_scope:CMsgTOSTreatment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgTOSTreatment& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr l4s_detect_;
    ::google::protobuf::internal::ArenaStringPtr up_ecn1_;
    ::google::protobuf::internal::ArenaStringPtr down_dscp45_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgTOSTreatment_class_data_;
// -------------------------------------------------------------------

class CMsgSteamNetworkingP2PSDRRoutingSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamNetworkingP2PSDRRoutingSummary) */ {
 public:
  inline CMsgSteamNetworkingP2PSDRRoutingSummary() : CMsgSteamNetworkingP2PSDRRoutingSummary(nullptr) {}
  ~CMsgSteamNetworkingP2PSDRRoutingSummary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamNetworkingP2PSDRRoutingSummary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamNetworkingP2PSDRRoutingSummary(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamNetworkingP2PSDRRoutingSummary(const CMsgSteamNetworkingP2PSDRRoutingSummary& from) : CMsgSteamNetworkingP2PSDRRoutingSummary(nullptr, from) {}
  inline CMsgSteamNetworkingP2PSDRRoutingSummary(CMsgSteamNetworkingP2PSDRRoutingSummary&& from) noexcept
      : CMsgSteamNetworkingP2PSDRRoutingSummary(nullptr, std::move(from)) {}
  inline CMsgSteamNetworkingP2PSDRRoutingSummary& operator=(const CMsgSteamNetworkingP2PSDRRoutingSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamNetworkingP2PSDRRoutingSummary& operator=(CMsgSteamNetworkingP2PSDRRoutingSummary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamNetworkingP2PSDRRoutingSummary& default_instance() {
    return *reinterpret_cast<const CMsgSteamNetworkingP2PSDRRoutingSummary*>(
        &_CMsgSteamNetworkingP2PSDRRoutingSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CMsgSteamNetworkingP2PSDRRoutingSummary& a, CMsgSteamNetworkingP2PSDRRoutingSummary& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamNetworkingP2PSDRRoutingSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamNetworkingP2PSDRRoutingSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamNetworkingP2PSDRRoutingSummary& from) { CMsgSteamNetworkingP2PSDRRoutingSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamNetworkingP2PSDRRoutingSummary"; }

 protected:
  explicit CMsgSteamNetworkingP2PSDRRoutingSummary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamNetworkingP2PSDRRoutingSummary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamNetworkingP2PSDRRoutingSummary& from);
  CMsgSteamNetworkingP2PSDRRoutingSummary(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamNetworkingP2PSDRRoutingSummary&& from) noexcept
      : CMsgSteamNetworkingP2PSDRRoutingSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInitialPingFieldNumber = 1,
    kInitialPingFrontLocalFieldNumber = 2,
    kInitialPingFrontRemoteFieldNumber = 3,
    kInitialScoreFieldNumber = 4,
    kInitialPopLocalFieldNumber = 5,
    kInitialPopRemoteFieldNumber = 6,
    kNegotiationMsFieldNumber = 7,
    kSelectedSecondsFieldNumber = 8,
    kBestPingFieldNumber = 11,
    kBestPingFrontLocalFieldNumber = 12,
    kBestPingFrontRemoteFieldNumber = 13,
    kBestScoreFieldNumber = 14,
    kBestPopLocalFieldNumber = 15,
    kBestPopRemoteFieldNumber = 16,
    kBestTimeFieldNumber = 17,
  };
  // optional uint32 initial_ping = 1;
  bool has_initial_ping() const;
  void clear_initial_ping() ;
  ::uint32_t initial_ping() const;
  void set_initial_ping(::uint32_t value);

  private:
  ::uint32_t _internal_initial_ping() const;
  void _internal_set_initial_ping(::uint32_t value);

  public:
  // optional uint32 initial_ping_front_local = 2;
  bool has_initial_ping_front_local() const;
  void clear_initial_ping_front_local() ;
  ::uint32_t initial_ping_front_local() const;
  void set_initial_ping_front_local(::uint32_t value);

  private:
  ::uint32_t _internal_initial_ping_front_local() const;
  void _internal_set_initial_ping_front_local(::uint32_t value);

  public:
  // optional uint32 initial_ping_front_remote = 3;
  bool has_initial_ping_front_remote() const;
  void clear_initial_ping_front_remote() ;
  ::uint32_t initial_ping_front_remote() const;
  void set_initial_ping_front_remote(::uint32_t value);

  private:
  ::uint32_t _internal_initial_ping_front_remote() const;
  void _internal_set_initial_ping_front_remote(::uint32_t value);

  public:
  // optional uint32 initial_score = 4;
  bool has_initial_score() const;
  void clear_initial_score() ;
  ::uint32_t initial_score() const;
  void set_initial_score(::uint32_t value);

  private:
  ::uint32_t _internal_initial_score() const;
  void _internal_set_initial_score(::uint32_t value);

  public:
  // optional fixed32 initial_pop_local = 5;
  bool has_initial_pop_local() const;
  void clear_initial_pop_local() ;
  ::uint32_t initial_pop_local() const;
  void set_initial_pop_local(::uint32_t value);

  private:
  ::uint32_t _internal_initial_pop_local() const;
  void _internal_set_initial_pop_local(::uint32_t value);

  public:
  // optional fixed32 initial_pop_remote = 6;
  bool has_initial_pop_remote() const;
  void clear_initial_pop_remote() ;
  ::uint32_t initial_pop_remote() const;
  void set_initial_pop_remote(::uint32_t value);

  private:
  ::uint32_t _internal_initial_pop_remote() const;
  void _internal_set_initial_pop_remote(::uint32_t value);

  public:
  // optional uint32 negotiation_ms = 7;
  bool has_negotiation_ms() const;
  void clear_negotiation_ms() ;
  ::uint32_t negotiation_ms() const;
  void set_negotiation_ms(::uint32_t value);

  private:
  ::uint32_t _internal_negotiation_ms() const;
  void _internal_set_negotiation_ms(::uint32_t value);

  public:
  // optional uint32 selected_seconds = 8;
  bool has_selected_seconds() const;
  void clear_selected_seconds() ;
  ::uint32_t selected_seconds() const;
  void set_selected_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_selected_seconds() const;
  void _internal_set_selected_seconds(::uint32_t value);

  public:
  // optional uint32 best_ping = 11;
  bool has_best_ping() const;
  void clear_best_ping() ;
  ::uint32_t best_ping() const;
  void set_best_ping(::uint32_t value);

  private:
  ::uint32_t _internal_best_ping() const;
  void _internal_set_best_ping(::uint32_t value);

  public:
  // optional uint32 best_ping_front_local = 12;
  bool has_best_ping_front_local() const;
  void clear_best_ping_front_local() ;
  ::uint32_t best_ping_front_local() const;
  void set_best_ping_front_local(::uint32_t value);

  private:
  ::uint32_t _internal_best_ping_front_local() const;
  void _internal_set_best_ping_front_local(::uint32_t value);

  public:
  // optional uint32 best_ping_front_remote = 13;
  bool has_best_ping_front_remote() const;
  void clear_best_ping_front_remote() ;
  ::uint32_t best_ping_front_remote() const;
  void set_best_ping_front_remote(::uint32_t value);

  private:
  ::uint32_t _internal_best_ping_front_remote() const;
  void _internal_set_best_ping_front_remote(::uint32_t value);

  public:
  // optional uint32 best_score = 14;
  bool has_best_score() const;
  void clear_best_score() ;
  ::uint32_t best_score() const;
  void set_best_score(::uint32_t value);

  private:
  ::uint32_t _internal_best_score() const;
  void _internal_set_best_score(::uint32_t value);

  public:
  // optional fixed32 best_pop_local = 15;
  bool has_best_pop_local() const;
  void clear_best_pop_local() ;
  ::uint32_t best_pop_local() const;
  void set_best_pop_local(::uint32_t value);

  private:
  ::uint32_t _internal_best_pop_local() const;
  void _internal_set_best_pop_local(::uint32_t value);

  public:
  // optional fixed32 best_pop_remote = 16;
  bool has_best_pop_remote() const;
  void clear_best_pop_remote() ;
  ::uint32_t best_pop_remote() const;
  void set_best_pop_remote(::uint32_t value);

  private:
  ::uint32_t _internal_best_pop_remote() const;
  void _internal_set_best_pop_remote(::uint32_t value);

  public:
  // optional uint32 best_time = 17;
  bool has_best_time() const;
  void clear_best_time() ;
  ::uint32_t best_time() const;
  void set_best_time(::uint32_t value);

  private:
  ::uint32_t _internal_best_time() const;
  void _internal_set_best_time(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamNetworkingP2PSDRRoutingSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 15,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamNetworkingP2PSDRRoutingSummary& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t initial_ping_;
    ::uint32_t initial_ping_front_local_;
    ::uint32_t initial_ping_front_remote_;
    ::uint32_t initial_score_;
    ::uint32_t initial_pop_local_;
    ::uint32_t initial_pop_remote_;
    ::uint32_t negotiation_ms_;
    ::uint32_t selected_seconds_;
    ::uint32_t best_ping_;
    ::uint32_t best_ping_front_local_;
    ::uint32_t best_ping_front_remote_;
    ::uint32_t best_score_;
    ::uint32_t best_pop_local_;
    ::uint32_t best_pop_remote_;
    ::uint32_t best_time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamNetworkingP2PSDRRoutingSummary_class_data_;
// -------------------------------------------------------------------

class CMsgSteamNetworkingIPAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamNetworkingIPAddress) */ {
 public:
  inline CMsgSteamNetworkingIPAddress() : CMsgSteamNetworkingIPAddress(nullptr) {}
  ~CMsgSteamNetworkingIPAddress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamNetworkingIPAddress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamNetworkingIPAddress(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamNetworkingIPAddress(const CMsgSteamNetworkingIPAddress& from) : CMsgSteamNetworkingIPAddress(nullptr, from) {}
  inline CMsgSteamNetworkingIPAddress(CMsgSteamNetworkingIPAddress&& from) noexcept
      : CMsgSteamNetworkingIPAddress(nullptr, std::move(from)) {}
  inline CMsgSteamNetworkingIPAddress& operator=(const CMsgSteamNetworkingIPAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamNetworkingIPAddress& operator=(CMsgSteamNetworkingIPAddress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamNetworkingIPAddress& default_instance() {
    return *reinterpret_cast<const CMsgSteamNetworkingIPAddress*>(
        &_CMsgSteamNetworkingIPAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CMsgSteamNetworkingIPAddress& a, CMsgSteamNetworkingIPAddress& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamNetworkingIPAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamNetworkingIPAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamNetworkingIPAddress& from) { CMsgSteamNetworkingIPAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamNetworkingIPAddress"; }

 protected:
  explicit CMsgSteamNetworkingIPAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamNetworkingIPAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamNetworkingIPAddress& from);
  CMsgSteamNetworkingIPAddress(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamNetworkingIPAddress&& from) noexcept
      : CMsgSteamNetworkingIPAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kV6FieldNumber = 2,
    kV4FieldNumber = 1,
  };
  // optional bytes v6 = 2;
  bool has_v6() const;
  void clear_v6() ;
  const std::string& v6() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_v6(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_v6();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_v6();
  void set_allocated_v6(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_v6() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_v6(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_v6();

  public:
  // optional fixed32 v4 = 1;
  bool has_v4() const;
  void clear_v4() ;
  ::uint32_t v4() const;
  void set_v4(::uint32_t value);

  private:
  ::uint32_t _internal_v4() const;
  void _internal_set_v4(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamNetworkingIPAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamNetworkingIPAddress& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr v6_;
    ::uint32_t v4_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamNetworkingIPAddress_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramSetSecondaryAddressResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramSetSecondaryAddressResult) */ {
 public:
  inline CMsgSteamDatagramSetSecondaryAddressResult() : CMsgSteamDatagramSetSecondaryAddressResult(nullptr) {}
  ~CMsgSteamDatagramSetSecondaryAddressResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramSetSecondaryAddressResult* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramSetSecondaryAddressResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramSetSecondaryAddressResult(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramSetSecondaryAddressResult(const CMsgSteamDatagramSetSecondaryAddressResult& from) : CMsgSteamDatagramSetSecondaryAddressResult(nullptr, from) {}
  inline CMsgSteamDatagramSetSecondaryAddressResult(CMsgSteamDatagramSetSecondaryAddressResult&& from) noexcept
      : CMsgSteamDatagramSetSecondaryAddressResult(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramSetSecondaryAddressResult& operator=(const CMsgSteamDatagramSetSecondaryAddressResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramSetSecondaryAddressResult& operator=(CMsgSteamDatagramSetSecondaryAddressResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramSetSecondaryAddressResult& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramSetSecondaryAddressResult*>(
        &_CMsgSteamDatagramSetSecondaryAddressResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(CMsgSteamDatagramSetSecondaryAddressResult& a, CMsgSteamDatagramSetSecondaryAddressResult& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramSetSecondaryAddressResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramSetSecondaryAddressResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramSetSecondaryAddressResult* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramSetSecondaryAddressResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramSetSecondaryAddressResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramSetSecondaryAddressResult& from) { CMsgSteamDatagramSetSecondaryAddressResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramSetSecondaryAddressResult* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramSetSecondaryAddressResult"; }

 protected:
  explicit CMsgSteamDatagramSetSecondaryAddressResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramSetSecondaryAddressResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramSetSecondaryAddressResult& from);
  CMsgSteamDatagramSetSecondaryAddressResult(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramSetSecondaryAddressResult&& from) noexcept
      : CMsgSteamDatagramSetSecondaryAddressResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // optional string message = 2;
  bool has_message() const;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // optional bool success = 1;
  bool has_success() const;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramSetSecondaryAddressResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramSetSecondaryAddressResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramSetSecondaryAddressResult_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramSetSecondaryAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramSetSecondaryAddressRequest) */ {
 public:
  inline CMsgSteamDatagramSetSecondaryAddressRequest() : CMsgSteamDatagramSetSecondaryAddressRequest(nullptr) {}
  ~CMsgSteamDatagramSetSecondaryAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramSetSecondaryAddressRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramSetSecondaryAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramSetSecondaryAddressRequest(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramSetSecondaryAddressRequest(const CMsgSteamDatagramSetSecondaryAddressRequest& from) : CMsgSteamDatagramSetSecondaryAddressRequest(nullptr, from) {}
  inline CMsgSteamDatagramSetSecondaryAddressRequest(CMsgSteamDatagramSetSecondaryAddressRequest&& from) noexcept
      : CMsgSteamDatagramSetSecondaryAddressRequest(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramSetSecondaryAddressRequest& operator=(const CMsgSteamDatagramSetSecondaryAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramSetSecondaryAddressRequest& operator=(CMsgSteamDatagramSetSecondaryAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramSetSecondaryAddressRequest& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramSetSecondaryAddressRequest*>(
        &_CMsgSteamDatagramSetSecondaryAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(CMsgSteamDatagramSetSecondaryAddressRequest& a, CMsgSteamDatagramSetSecondaryAddressRequest& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramSetSecondaryAddressRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramSetSecondaryAddressRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramSetSecondaryAddressRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramSetSecondaryAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramSetSecondaryAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramSetSecondaryAddressRequest& from) { CMsgSteamDatagramSetSecondaryAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramSetSecondaryAddressRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramSetSecondaryAddressRequest"; }

 protected:
  explicit CMsgSteamDatagramSetSecondaryAddressRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramSetSecondaryAddressRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramSetSecondaryAddressRequest& from);
  CMsgSteamDatagramSetSecondaryAddressRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramSetSecondaryAddressRequest&& from) noexcept
      : CMsgSteamDatagramSetSecondaryAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClientIdentityFieldNumber = 4,
    kKludgePadFieldNumber = 99,
    kClientMainIpFieldNumber = 1,
    kClientMainPortFieldNumber = 2,
    kClientConnectionIdFieldNumber = 3,
    kRequestSendDuplicationFieldNumber = 5,
  };
  // optional string client_identity = 4;
  bool has_client_identity() const;
  void clear_client_identity() ;
  const std::string& client_identity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_identity(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_client_identity();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_client_identity();
  void set_allocated_client_identity(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_client_identity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_client_identity(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_client_identity();

  public:
  // optional bytes kludge_pad = 99;
  bool has_kludge_pad() const;
  void clear_kludge_pad() ;
  const std::string& kludge_pad() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kludge_pad(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_kludge_pad();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_kludge_pad();
  void set_allocated_kludge_pad(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_kludge_pad() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_kludge_pad(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_kludge_pad();

  public:
  // optional fixed32 client_main_ip = 1;
  bool has_client_main_ip() const;
  void clear_client_main_ip() ;
  ::uint32_t client_main_ip() const;
  void set_client_main_ip(::uint32_t value);

  private:
  ::uint32_t _internal_client_main_ip() const;
  void _internal_set_client_main_ip(::uint32_t value);

  public:
  // optional fixed32 client_main_port = 2;
  bool has_client_main_port() const;
  void clear_client_main_port() ;
  ::uint32_t client_main_port() const;
  void set_client_main_port(::uint32_t value);

  private:
  ::uint32_t _internal_client_main_port() const;
  void _internal_set_client_main_port(::uint32_t value);

  public:
  // optional fixed32 client_connection_id = 3;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional bool request_send_duplication = 5;
  bool has_request_send_duplication() const;
  void clear_request_send_duplication() ;
  bool request_send_duplication() const;
  void set_request_send_duplication(bool value);

  private:
  bool _internal_request_send_duplication() const;
  void _internal_set_request_send_duplication(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramSetSecondaryAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 67,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramSetSecondaryAddressRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr client_identity_;
    ::google::protobuf::internal::ArenaStringPtr kludge_pad_;
    ::uint32_t client_main_ip_;
    ::uint32_t client_main_port_;
    ::uint32_t client_connection_id_;
    bool request_send_duplication_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramSetSecondaryAddressRequest_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramRouterPingReply_RouteException final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRouterPingReply.RouteException) */ {
 public:
  inline CMsgSteamDatagramRouterPingReply_RouteException() : CMsgSteamDatagramRouterPingReply_RouteException(nullptr) {}
  ~CMsgSteamDatagramRouterPingReply_RouteException() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramRouterPingReply_RouteException));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramRouterPingReply_RouteException(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramRouterPingReply_RouteException(const CMsgSteamDatagramRouterPingReply_RouteException& from) : CMsgSteamDatagramRouterPingReply_RouteException(nullptr, from) {}
  inline CMsgSteamDatagramRouterPingReply_RouteException(CMsgSteamDatagramRouterPingReply_RouteException&& from) noexcept
      : CMsgSteamDatagramRouterPingReply_RouteException(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramRouterPingReply_RouteException& operator=(const CMsgSteamDatagramRouterPingReply_RouteException& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramRouterPingReply_RouteException& operator=(CMsgSteamDatagramRouterPingReply_RouteException&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramRouterPingReply_RouteException& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramRouterPingReply_RouteException*>(
        &_CMsgSteamDatagramRouterPingReply_RouteException_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CMsgSteamDatagramRouterPingReply_RouteException& a, CMsgSteamDatagramRouterPingReply_RouteException& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramRouterPingReply_RouteException>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramRouterPingReply_RouteException& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramRouterPingReply_RouteException& from) { CMsgSteamDatagramRouterPingReply_RouteException::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramRouterPingReply.RouteException"; }

 protected:
  explicit CMsgSteamDatagramRouterPingReply_RouteException(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramRouterPingReply_RouteException(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramRouterPingReply_RouteException& from);
  CMsgSteamDatagramRouterPingReply_RouteException(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramRouterPingReply_RouteException&& from) noexcept
      : CMsgSteamDatagramRouterPingReply_RouteException(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataCenterIdFieldNumber = 1,
    kFlagsFieldNumber = 2,
    kPenaltyFieldNumber = 3,
  };
  // optional fixed32 data_center_id = 1;
  bool has_data_center_id() const;
  void clear_data_center_id() ;
  ::uint32_t data_center_id() const;
  void set_data_center_id(::uint32_t value);

  private:
  ::uint32_t _internal_data_center_id() const;
  void _internal_set_data_center_id(::uint32_t value);

  public:
  // optional uint32 flags = 2;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional uint32 penalty = 3;
  bool has_penalty() const;
  void clear_penalty() ;
  ::uint32_t penalty() const;
  void set_penalty(::uint32_t value);

  private:
  ::uint32_t _internal_penalty() const;
  void _internal_set_penalty(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRouterPingReply.RouteException)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramRouterPingReply_RouteException& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t data_center_id_;
    ::uint32_t flags_;
    ::uint32_t penalty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramRouterPingReply_RouteException_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramRouterPingReply_AltAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRouterPingReply.AltAddress) */ {
 public:
  inline CMsgSteamDatagramRouterPingReply_AltAddress() : CMsgSteamDatagramRouterPingReply_AltAddress(nullptr) {}
  ~CMsgSteamDatagramRouterPingReply_AltAddress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramRouterPingReply_AltAddress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramRouterPingReply_AltAddress(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramRouterPingReply_AltAddress(const CMsgSteamDatagramRouterPingReply_AltAddress& from) : CMsgSteamDatagramRouterPingReply_AltAddress(nullptr, from) {}
  inline CMsgSteamDatagramRouterPingReply_AltAddress(CMsgSteamDatagramRouterPingReply_AltAddress&& from) noexcept
      : CMsgSteamDatagramRouterPingReply_AltAddress(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramRouterPingReply_AltAddress& operator=(const CMsgSteamDatagramRouterPingReply_AltAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramRouterPingReply_AltAddress& operator=(CMsgSteamDatagramRouterPingReply_AltAddress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramRouterPingReply_AltAddress& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramRouterPingReply_AltAddress*>(
        &_CMsgSteamDatagramRouterPingReply_AltAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CMsgSteamDatagramRouterPingReply_AltAddress& a, CMsgSteamDatagramRouterPingReply_AltAddress& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramRouterPingReply_AltAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramRouterPingReply_AltAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramRouterPingReply_AltAddress& from) { CMsgSteamDatagramRouterPingReply_AltAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramRouterPingReply.AltAddress"; }

 protected:
  explicit CMsgSteamDatagramRouterPingReply_AltAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramRouterPingReply_AltAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramRouterPingReply_AltAddress& from);
  CMsgSteamDatagramRouterPingReply_AltAddress(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramRouterPingReply_AltAddress&& from) noexcept
      : CMsgSteamDatagramRouterPingReply_AltAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Protocol = CMsgSteamDatagramRouterPingReply_AltAddress_Protocol;
  static constexpr Protocol DefaultProtocol = CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_DefaultProtocol;
  static inline bool Protocol_IsValid(int value) {
    return CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_IsValid(value);
  }
  static constexpr Protocol Protocol_MIN = CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Protocol_MIN;
  static constexpr Protocol Protocol_MAX = CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Protocol_MAX;
  static constexpr int Protocol_ARRAYSIZE = CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Protocol_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Protocol_descriptor() {
    return CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_descriptor();
  }
  template <typename T>
  static inline const std::string& Protocol_Name(T value) {
    return CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Name(value);
  }
  static inline bool Protocol_Parse(
      absl::string_view name, Protocol* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 5,
    kIpv4FieldNumber = 1,
    kPortFieldNumber = 2,
    kPenaltyFieldNumber = 3,
    kProtocolFieldNumber = 4,
  };
  // optional string id = 5;
  bool has_id() const;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // optional fixed32 ipv4 = 1;
  bool has_ipv4() const;
  void clear_ipv4() ;
  ::uint32_t ipv4() const;
  void set_ipv4(::uint32_t value);

  private:
  ::uint32_t _internal_ipv4() const;
  void _internal_set_ipv4(::uint32_t value);

  public:
  // optional uint32 port = 2;
  bool has_port() const;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // optional uint32 penalty = 3;
  bool has_penalty() const;
  void clear_penalty() ;
  ::uint32_t penalty() const;
  void set_penalty(::uint32_t value);

  private:
  ::uint32_t _internal_penalty() const;
  void _internal_set_penalty(::uint32_t value);

  public:
  // optional .CMsgSteamDatagramRouterPingReply.AltAddress.Protocol protocol = 4 [default = DefaultProtocol];
  bool has_protocol() const;
  void clear_protocol() ;
  ::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol protocol() const;
  void set_protocol(::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol value);

  private:
  ::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol _internal_protocol() const;
  void _internal_set_protocol(::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRouterPingReply.AltAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramRouterPingReply_AltAddress& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::uint32_t ipv4_;
    ::uint32_t port_;
    ::uint32_t penalty_;
    int protocol_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramRouterPingReply_AltAddress_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PSessionRequestBody_EncryptedData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PSessionRequestBody.EncryptedData) */ {
 public:
  inline CMsgSteamDatagramP2PSessionRequestBody_EncryptedData() : CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(nullptr) {}
  ~CMsgSteamDatagramP2PSessionRequestBody_EncryptedData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& from) : CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(nullptr, from) {}
  inline CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData&& from) noexcept
      : CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& operator=(const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& operator=(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData*>(
        &_CMsgSteamDatagramP2PSessionRequestBody_EncryptedData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& a, CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PSessionRequestBody_EncryptedData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PSessionRequestBody_EncryptedData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& from) { CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PSessionRequestBody_EncryptedData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PSessionRequestBody.EncryptedData"; }

 protected:
  explicit CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& from);
  CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PSessionRequestBody_EncryptedData&& from) noexcept
      : CMsgSteamDatagramP2PSessionRequestBody_EncryptedData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerIdentityStringFieldNumber = 1,
  };
  // optional string peer_identity_string = 1;
  bool has_peer_identity_string() const;
  void clear_peer_identity_string() ;
  const std::string& peer_identity_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer_identity_string(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_peer_identity_string();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_peer_identity_string();
  void set_allocated_peer_identity_string(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_peer_identity_string() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_peer_identity_string(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_peer_identity_string();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PSessionRequestBody.EncryptedData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 81,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PSessionRequestBody_EncryptedData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr peer_identity_string_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionRequestBody_EncryptedData_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PSessionRequestBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PSessionRequestBody) */ {
 public:
  inline CMsgSteamDatagramP2PSessionRequestBody() : CMsgSteamDatagramP2PSessionRequestBody(nullptr) {}
  ~CMsgSteamDatagramP2PSessionRequestBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PSessionRequestBody* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PSessionRequestBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PSessionRequestBody(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PSessionRequestBody(const CMsgSteamDatagramP2PSessionRequestBody& from) : CMsgSteamDatagramP2PSessionRequestBody(nullptr, from) {}
  inline CMsgSteamDatagramP2PSessionRequestBody(CMsgSteamDatagramP2PSessionRequestBody&& from) noexcept
      : CMsgSteamDatagramP2PSessionRequestBody(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PSessionRequestBody& operator=(const CMsgSteamDatagramP2PSessionRequestBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PSessionRequestBody& operator=(CMsgSteamDatagramP2PSessionRequestBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PSessionRequestBody& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PSessionRequestBody*>(
        &_CMsgSteamDatagramP2PSessionRequestBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(CMsgSteamDatagramP2PSessionRequestBody& a, CMsgSteamDatagramP2PSessionRequestBody& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PSessionRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PSessionRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PSessionRequestBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PSessionRequestBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PSessionRequestBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PSessionRequestBody& from) { CMsgSteamDatagramP2PSessionRequestBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PSessionRequestBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PSessionRequestBody"; }

 protected:
  explicit CMsgSteamDatagramP2PSessionRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PSessionRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PSessionRequestBody& from);
  CMsgSteamDatagramP2PSessionRequestBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PSessionRequestBody&& from) noexcept
      : CMsgSteamDatagramP2PSessionRequestBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using EncryptedData = CMsgSteamDatagramP2PSessionRequestBody_EncryptedData;

  // accessors -------------------------------------------------------
  enum : int {
    kPeerIdentityStringFieldNumber = 11,
    kPlatformFieldNumber = 12,
    kBuildFieldNumber = 13,
    kEncryptedDataFieldNumber = 14,
    kEncryptionMyEphemeralPublicKeyFieldNumber = 16,
    kChallengeFieldNumber = 2,
    kChallengeTimeFieldNumber = 1,
    kClientConnectionIdFieldNumber = 3,
    kLegacyPeerSteamIdFieldNumber = 4,
    kPeerConnectionIdFieldNumber = 5,
    kProtocolVersionFieldNumber = 8,
    kNetworkConfigVersionFieldNumber = 9,
    kEncryptionYourPublicKeyLeadByteFieldNumber = 15,
  };
  // optional string peer_identity_string = 11;
  bool has_peer_identity_string() const;
  void clear_peer_identity_string() ;
  const std::string& peer_identity_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer_identity_string(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_peer_identity_string();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_peer_identity_string();
  void set_allocated_peer_identity_string(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_peer_identity_string() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_peer_identity_string(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_peer_identity_string();

  public:
  // optional string platform = 12;
  bool has_platform() const;
  void clear_platform() ;
  const std::string& platform() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_platform(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_platform();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_platform();
  void set_allocated_platform(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_platform() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_platform(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_platform();

  public:
  // optional string build = 13;
  bool has_build() const;
  void clear_build() ;
  const std::string& build() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_build(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_build();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_build();
  void set_allocated_build(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_build() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_build(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_build();

  public:
  // optional bytes encrypted_data = 14;
  bool has_encrypted_data() const;
  void clear_encrypted_data() ;
  const std::string& encrypted_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encrypted_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_encrypted_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_encrypted_data();
  void set_allocated_encrypted_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_encrypted_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_encrypted_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_encrypted_data();

  public:
  // optional bytes encryption_my_ephemeral_public_key = 16;
  bool has_encryption_my_ephemeral_public_key() const;
  void clear_encryption_my_ephemeral_public_key() ;
  const std::string& encryption_my_ephemeral_public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encryption_my_ephemeral_public_key(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_encryption_my_ephemeral_public_key();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_encryption_my_ephemeral_public_key();
  void set_allocated_encryption_my_ephemeral_public_key(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_encryption_my_ephemeral_public_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_encryption_my_ephemeral_public_key(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_encryption_my_ephemeral_public_key();

  public:
  // optional fixed64 challenge = 2;
  bool has_challenge() const;
  void clear_challenge() ;
  ::uint64_t challenge() const;
  void set_challenge(::uint64_t value);

  private:
  ::uint64_t _internal_challenge() const;
  void _internal_set_challenge(::uint64_t value);

  public:
  // optional fixed32 challenge_time = 1;
  bool has_challenge_time() const;
  void clear_challenge_time() ;
  ::uint32_t challenge_time() const;
  void set_challenge_time(::uint32_t value);

  private:
  ::uint32_t _internal_challenge_time() const;
  void _internal_set_challenge_time(::uint32_t value);

  public:
  // optional fixed32 client_connection_id = 3;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional fixed64 legacy_peer_steam_id = 4;
  bool has_legacy_peer_steam_id() const;
  void clear_legacy_peer_steam_id() ;
  ::uint64_t legacy_peer_steam_id() const;
  void set_legacy_peer_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_peer_steam_id() const;
  void _internal_set_legacy_peer_steam_id(::uint64_t value);

  public:
  // optional fixed32 peer_connection_id = 5;
  bool has_peer_connection_id() const;
  void clear_peer_connection_id() ;
  ::uint32_t peer_connection_id() const;
  void set_peer_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_peer_connection_id() const;
  void _internal_set_peer_connection_id(::uint32_t value);

  public:
  // optional uint32 protocol_version = 8;
  bool has_protocol_version() const;
  void clear_protocol_version() ;
  ::uint32_t protocol_version() const;
  void set_protocol_version(::uint32_t value);

  private:
  ::uint32_t _internal_protocol_version() const;
  void _internal_set_protocol_version(::uint32_t value);

  public:
  // optional uint64 network_config_version = 9;
  bool has_network_config_version() const;
  void clear_network_config_version() ;
  ::uint64_t network_config_version() const;
  void set_network_config_version(::uint64_t value);

  private:
  ::uint64_t _internal_network_config_version() const;
  void _internal_set_network_config_version(::uint64_t value);

  public:
  // optional uint32 encryption_your_public_key_lead_byte = 15;
  bool has_encryption_your_public_key_lead_byte() const;
  void clear_encryption_your_public_key_lead_byte() ;
  ::uint32_t encryption_your_public_key_lead_byte() const;
  void set_encryption_your_public_key_lead_byte(::uint32_t value);

  private:
  ::uint32_t _internal_encryption_your_public_key_lead_byte() const;
  void _internal_set_encryption_your_public_key_lead_byte(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PSessionRequestBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   0, 88,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PSessionRequestBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr peer_identity_string_;
    ::google::protobuf::internal::ArenaStringPtr platform_;
    ::google::protobuf::internal::ArenaStringPtr build_;
    ::google::protobuf::internal::ArenaStringPtr encrypted_data_;
    ::google::protobuf::internal::ArenaStringPtr encryption_my_ephemeral_public_key_;
    ::uint64_t challenge_;
    ::uint32_t challenge_time_;
    ::uint32_t client_connection_id_;
    ::uint64_t legacy_peer_steam_id_;
    ::uint32_t peer_connection_id_;
    ::uint32_t protocol_version_;
    ::uint64_t network_config_version_;
    ::uint32_t encryption_your_public_key_lead_byte_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionRequestBody_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PSessionEstablished final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PSessionEstablished) */ {
 public:
  inline CMsgSteamDatagramP2PSessionEstablished() : CMsgSteamDatagramP2PSessionEstablished(nullptr) {}
  ~CMsgSteamDatagramP2PSessionEstablished() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PSessionEstablished* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PSessionEstablished));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PSessionEstablished(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PSessionEstablished(const CMsgSteamDatagramP2PSessionEstablished& from) : CMsgSteamDatagramP2PSessionEstablished(nullptr, from) {}
  inline CMsgSteamDatagramP2PSessionEstablished(CMsgSteamDatagramP2PSessionEstablished&& from) noexcept
      : CMsgSteamDatagramP2PSessionEstablished(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PSessionEstablished& operator=(const CMsgSteamDatagramP2PSessionEstablished& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PSessionEstablished& operator=(CMsgSteamDatagramP2PSessionEstablished&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PSessionEstablished& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PSessionEstablished*>(
        &_CMsgSteamDatagramP2PSessionEstablished_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(CMsgSteamDatagramP2PSessionEstablished& a, CMsgSteamDatagramP2PSessionEstablished& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PSessionEstablished* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PSessionEstablished* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PSessionEstablished* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PSessionEstablished>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PSessionEstablished& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PSessionEstablished& from) { CMsgSteamDatagramP2PSessionEstablished::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PSessionEstablished* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PSessionEstablished"; }

 protected:
  explicit CMsgSteamDatagramP2PSessionEstablished(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PSessionEstablished(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PSessionEstablished& from);
  CMsgSteamDatagramP2PSessionEstablished(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PSessionEstablished&& from) noexcept
      : CMsgSteamDatagramP2PSessionEstablished(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelayRoutingTokenFieldNumber = 4,
    kConnectionIdFieldNumber = 1,
    kSecondsUntilShutdownFieldNumber = 3,
    kSeqNumR2CFieldNumber = 5,
  };
  // optional bytes relay_routing_token = 4;
  bool has_relay_routing_token() const;
  void clear_relay_routing_token() ;
  const std::string& relay_routing_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_relay_routing_token(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_relay_routing_token();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_relay_routing_token();
  void set_allocated_relay_routing_token(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_relay_routing_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_relay_routing_token(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_relay_routing_token();

  public:
  // optional fixed32 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional uint32 seconds_until_shutdown = 3;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown() ;
  ::uint32_t seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::uint32_t value);

  private:
  ::uint32_t _internal_seconds_until_shutdown() const;
  void _internal_set_seconds_until_shutdown(::uint32_t value);

  public:
  // optional uint32 seq_num_r2c = 5;
  bool has_seq_num_r2c() const;
  void clear_seq_num_r2c() ;
  ::uint32_t seq_num_r2c() const;
  void set_seq_num_r2c(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_r2c() const;
  void _internal_set_seq_num_r2c(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PSessionEstablished)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PSessionEstablished& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr relay_routing_token_;
    ::uint32_t connection_id_;
    ::uint32_t seconds_until_shutdown_;
    ::uint32_t seq_num_r2c_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionEstablished_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PRoutes_Route final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PRoutes.Route) */ {
 public:
  inline CMsgSteamDatagramP2PRoutes_Route() : CMsgSteamDatagramP2PRoutes_Route(nullptr) {}
  ~CMsgSteamDatagramP2PRoutes_Route() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PRoutes_Route));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PRoutes_Route(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PRoutes_Route(const CMsgSteamDatagramP2PRoutes_Route& from) : CMsgSteamDatagramP2PRoutes_Route(nullptr, from) {}
  inline CMsgSteamDatagramP2PRoutes_Route(CMsgSteamDatagramP2PRoutes_Route&& from) noexcept
      : CMsgSteamDatagramP2PRoutes_Route(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PRoutes_Route& operator=(const CMsgSteamDatagramP2PRoutes_Route& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PRoutes_Route& operator=(CMsgSteamDatagramP2PRoutes_Route&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PRoutes_Route& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PRoutes_Route*>(
        &_CMsgSteamDatagramP2PRoutes_Route_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(CMsgSteamDatagramP2PRoutes_Route& a, CMsgSteamDatagramP2PRoutes_Route& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PRoutes_Route>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PRoutes_Route& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PRoutes_Route& from) { CMsgSteamDatagramP2PRoutes_Route::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PRoutes.Route"; }

 protected:
  explicit CMsgSteamDatagramP2PRoutes_Route(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PRoutes_Route(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PRoutes_Route& from);
  CMsgSteamDatagramP2PRoutes_Route(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PRoutes_Route&& from) noexcept
      : CMsgSteamDatagramP2PRoutes_Route(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMyPopIdFieldNumber = 1,
    kYourPopIdFieldNumber = 2,
    kLegacyScoreFieldNumber = 3,
    kInteriorScoreFieldNumber = 4,
  };
  // optional fixed32 my_pop_id = 1;
  bool has_my_pop_id() const;
  void clear_my_pop_id() ;
  ::uint32_t my_pop_id() const;
  void set_my_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_my_pop_id() const;
  void _internal_set_my_pop_id(::uint32_t value);

  public:
  // optional fixed32 your_pop_id = 2;
  bool has_your_pop_id() const;
  void clear_your_pop_id() ;
  ::uint32_t your_pop_id() const;
  void set_your_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_your_pop_id() const;
  void _internal_set_your_pop_id(::uint32_t value);

  public:
  // optional uint32 legacy_score = 3;
  bool has_legacy_score() const;
  void clear_legacy_score() ;
  ::uint32_t legacy_score() const;
  void set_legacy_score(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_score() const;
  void _internal_set_legacy_score(::uint32_t value);

  public:
  // optional uint32 interior_score = 4;
  bool has_interior_score() const;
  void clear_interior_score() ;
  ::uint32_t interior_score() const;
  void set_interior_score(::uint32_t value);

  private:
  ::uint32_t _internal_interior_score() const;
  void _internal_set_interior_score(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PRoutes.Route)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PRoutes_Route& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t my_pop_id_;
    ::uint32_t your_pop_id_;
    ::uint32_t legacy_score_;
    ::uint32_t interior_score_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutes_Route_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PRoutes_RelayCluster final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PRoutes.RelayCluster) */ {
 public:
  inline CMsgSteamDatagramP2PRoutes_RelayCluster() : CMsgSteamDatagramP2PRoutes_RelayCluster(nullptr) {}
  ~CMsgSteamDatagramP2PRoutes_RelayCluster() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PRoutes_RelayCluster));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PRoutes_RelayCluster(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PRoutes_RelayCluster(const CMsgSteamDatagramP2PRoutes_RelayCluster& from) : CMsgSteamDatagramP2PRoutes_RelayCluster(nullptr, from) {}
  inline CMsgSteamDatagramP2PRoutes_RelayCluster(CMsgSteamDatagramP2PRoutes_RelayCluster&& from) noexcept
      : CMsgSteamDatagramP2PRoutes_RelayCluster(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PRoutes_RelayCluster& operator=(const CMsgSteamDatagramP2PRoutes_RelayCluster& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PRoutes_RelayCluster& operator=(CMsgSteamDatagramP2PRoutes_RelayCluster&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PRoutes_RelayCluster& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PRoutes_RelayCluster*>(
        &_CMsgSteamDatagramP2PRoutes_RelayCluster_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(CMsgSteamDatagramP2PRoutes_RelayCluster& a, CMsgSteamDatagramP2PRoutes_RelayCluster& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PRoutes_RelayCluster>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PRoutes_RelayCluster& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PRoutes_RelayCluster& from) { CMsgSteamDatagramP2PRoutes_RelayCluster::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PRoutes.RelayCluster"; }

 protected:
  explicit CMsgSteamDatagramP2PRoutes_RelayCluster(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PRoutes_RelayCluster(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PRoutes_RelayCluster& from);
  CMsgSteamDatagramP2PRoutes_RelayCluster(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PRoutes_RelayCluster&& from) noexcept
      : CMsgSteamDatagramP2PRoutes_RelayCluster(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionRelayRoutingTokenFieldNumber = 4,
    kPopIdFieldNumber = 1,
    kPingMsFieldNumber = 2,
    kScorePenaltyFieldNumber = 3,
  };
  // optional bytes session_relay_routing_token = 4;
  bool has_session_relay_routing_token() const;
  void clear_session_relay_routing_token() ;
  const std::string& session_relay_routing_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_relay_routing_token(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_session_relay_routing_token();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_session_relay_routing_token();
  void set_allocated_session_relay_routing_token(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_session_relay_routing_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_session_relay_routing_token(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_session_relay_routing_token();

  public:
  // optional fixed32 pop_id = 1;
  bool has_pop_id() const;
  void clear_pop_id() ;
  ::uint32_t pop_id() const;
  void set_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_pop_id() const;
  void _internal_set_pop_id(::uint32_t value);

  public:
  // optional uint32 ping_ms = 2;
  bool has_ping_ms() const;
  void clear_ping_ms() ;
  ::uint32_t ping_ms() const;
  void set_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_ping_ms() const;
  void _internal_set_ping_ms(::uint32_t value);

  public:
  // optional uint32 score_penalty = 3;
  bool has_score_penalty() const;
  void clear_score_penalty() ;
  ::uint32_t score_penalty() const;
  void set_score_penalty(::uint32_t value);

  private:
  ::uint32_t _internal_score_penalty() const;
  void _internal_set_score_penalty(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PRoutes.RelayCluster)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PRoutes_RelayCluster& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr session_relay_routing_token_;
    ::uint32_t pop_id_;
    ::uint32_t ping_ms_;
    ::uint32_t score_penalty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutes_RelayCluster_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PBadRouteRouterToClient final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PBadRouteRouterToClient) */ {
 public:
  inline CMsgSteamDatagramP2PBadRouteRouterToClient() : CMsgSteamDatagramP2PBadRouteRouterToClient(nullptr) {}
  ~CMsgSteamDatagramP2PBadRouteRouterToClient() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PBadRouteRouterToClient* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PBadRouteRouterToClient));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PBadRouteRouterToClient(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PBadRouteRouterToClient(const CMsgSteamDatagramP2PBadRouteRouterToClient& from) : CMsgSteamDatagramP2PBadRouteRouterToClient(nullptr, from) {}
  inline CMsgSteamDatagramP2PBadRouteRouterToClient(CMsgSteamDatagramP2PBadRouteRouterToClient&& from) noexcept
      : CMsgSteamDatagramP2PBadRouteRouterToClient(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PBadRouteRouterToClient& operator=(const CMsgSteamDatagramP2PBadRouteRouterToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PBadRouteRouterToClient& operator=(CMsgSteamDatagramP2PBadRouteRouterToClient&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PBadRouteRouterToClient& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PBadRouteRouterToClient*>(
        &_CMsgSteamDatagramP2PBadRouteRouterToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(CMsgSteamDatagramP2PBadRouteRouterToClient& a, CMsgSteamDatagramP2PBadRouteRouterToClient& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PBadRouteRouterToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PBadRouteRouterToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PBadRouteRouterToClient* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PBadRouteRouterToClient>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PBadRouteRouterToClient& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PBadRouteRouterToClient& from) { CMsgSteamDatagramP2PBadRouteRouterToClient::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PBadRouteRouterToClient* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PBadRouteRouterToClient"; }

 protected:
  explicit CMsgSteamDatagramP2PBadRouteRouterToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PBadRouteRouterToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PBadRouteRouterToClient& from);
  CMsgSteamDatagramP2PBadRouteRouterToClient(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PBadRouteRouterToClient&& from) noexcept
      : CMsgSteamDatagramP2PBadRouteRouterToClient(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFailedRelayRoutingTokenFieldNumber = 2,
    kConnectionIdFieldNumber = 1,
    kAckForwardTargetRevisionFieldNumber = 3,
    kKludgePadFieldNumber = 99,
  };
  // optional bytes failed_relay_routing_token = 2;
  bool has_failed_relay_routing_token() const;
  void clear_failed_relay_routing_token() ;
  const std::string& failed_relay_routing_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_failed_relay_routing_token(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_failed_relay_routing_token();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_failed_relay_routing_token();
  void set_allocated_failed_relay_routing_token(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_failed_relay_routing_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_failed_relay_routing_token(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_failed_relay_routing_token();

  public:
  // optional fixed32 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional uint32 ack_forward_target_revision = 3;
  bool has_ack_forward_target_revision() const;
  void clear_ack_forward_target_revision() ;
  ::uint32_t ack_forward_target_revision() const;
  void set_ack_forward_target_revision(::uint32_t value);

  private:
  ::uint32_t _internal_ack_forward_target_revision() const;
  void _internal_set_ack_forward_target_revision(::uint32_t value);

  public:
  // optional fixed64 kludge_pad = 99;
  bool has_kludge_pad() const;
  void clear_kludge_pad() ;
  ::uint64_t kludge_pad() const;
  void set_kludge_pad(::uint64_t value);

  private:
  ::uint64_t _internal_kludge_pad() const;
  void _internal_set_kludge_pad(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PBadRouteRouterToClient)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PBadRouteRouterToClient& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr failed_relay_routing_token_;
    ::uint32_t connection_id_;
    ::uint32_t ack_forward_target_revision_;
    ::uint64_t kludge_pad_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PBadRouteRouterToClient_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramNoSessionRelayToPeer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramNoSessionRelayToPeer) */ {
 public:
  inline CMsgSteamDatagramNoSessionRelayToPeer() : CMsgSteamDatagramNoSessionRelayToPeer(nullptr) {}
  ~CMsgSteamDatagramNoSessionRelayToPeer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramNoSessionRelayToPeer* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramNoSessionRelayToPeer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramNoSessionRelayToPeer(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramNoSessionRelayToPeer(const CMsgSteamDatagramNoSessionRelayToPeer& from) : CMsgSteamDatagramNoSessionRelayToPeer(nullptr, from) {}
  inline CMsgSteamDatagramNoSessionRelayToPeer(CMsgSteamDatagramNoSessionRelayToPeer&& from) noexcept
      : CMsgSteamDatagramNoSessionRelayToPeer(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramNoSessionRelayToPeer& operator=(const CMsgSteamDatagramNoSessionRelayToPeer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramNoSessionRelayToPeer& operator=(CMsgSteamDatagramNoSessionRelayToPeer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramNoSessionRelayToPeer& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramNoSessionRelayToPeer*>(
        &_CMsgSteamDatagramNoSessionRelayToPeer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CMsgSteamDatagramNoSessionRelayToPeer& a, CMsgSteamDatagramNoSessionRelayToPeer& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramNoSessionRelayToPeer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramNoSessionRelayToPeer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramNoSessionRelayToPeer* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramNoSessionRelayToPeer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramNoSessionRelayToPeer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramNoSessionRelayToPeer& from) { CMsgSteamDatagramNoSessionRelayToPeer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramNoSessionRelayToPeer* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramNoSessionRelayToPeer"; }

 protected:
  explicit CMsgSteamDatagramNoSessionRelayToPeer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramNoSessionRelayToPeer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramNoSessionRelayToPeer& from);
  CMsgSteamDatagramNoSessionRelayToPeer(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramNoSessionRelayToPeer&& from) noexcept
      : CMsgSteamDatagramNoSessionRelayToPeer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLegacyRelaySessionIdFieldNumber = 1,
    kFromRelaySessionIdFieldNumber = 2,
    kKludgePadFieldNumber = 99,
    kFromConnectionIdFieldNumber = 7,
  };
  // optional uint32 legacy_relay_session_id = 1;
  bool has_legacy_relay_session_id() const;
  void clear_legacy_relay_session_id() ;
  ::uint32_t legacy_relay_session_id() const;
  void set_legacy_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_relay_session_id() const;
  void _internal_set_legacy_relay_session_id(::uint32_t value);

  public:
  // optional fixed32 from_relay_session_id = 2;
  bool has_from_relay_session_id() const;
  void clear_from_relay_session_id() ;
  ::uint32_t from_relay_session_id() const;
  void set_from_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_from_relay_session_id() const;
  void _internal_set_from_relay_session_id(::uint32_t value);

  public:
  // optional fixed64 kludge_pad = 99;
  bool has_kludge_pad() const;
  void clear_kludge_pad() ;
  ::uint64_t kludge_pad() const;
  void set_kludge_pad(::uint64_t value);

  private:
  ::uint64_t _internal_kludge_pad() const;
  void _internal_set_kludge_pad(::uint64_t value);

  public:
  // optional fixed32 from_connection_id = 7;
  bool has_from_connection_id() const;
  void clear_from_connection_id() ;
  ::uint32_t from_connection_id() const;
  void set_from_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_from_connection_id() const;
  void _internal_set_from_connection_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramNoSessionRelayToPeer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 4,
                                   0, 0,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramNoSessionRelayToPeer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t legacy_relay_session_id_;
    ::uint32_t from_relay_session_id_;
    ::uint64_t kludge_pad_;
    ::uint32_t from_connection_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramNoSessionRelayToPeer_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramNoSessionRelayToClient final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramNoSessionRelayToClient) */ {
 public:
  inline CMsgSteamDatagramNoSessionRelayToClient() : CMsgSteamDatagramNoSessionRelayToClient(nullptr) {}
  ~CMsgSteamDatagramNoSessionRelayToClient() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramNoSessionRelayToClient* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramNoSessionRelayToClient));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramNoSessionRelayToClient(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramNoSessionRelayToClient(const CMsgSteamDatagramNoSessionRelayToClient& from) : CMsgSteamDatagramNoSessionRelayToClient(nullptr, from) {}
  inline CMsgSteamDatagramNoSessionRelayToClient(CMsgSteamDatagramNoSessionRelayToClient&& from) noexcept
      : CMsgSteamDatagramNoSessionRelayToClient(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramNoSessionRelayToClient& operator=(const CMsgSteamDatagramNoSessionRelayToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramNoSessionRelayToClient& operator=(CMsgSteamDatagramNoSessionRelayToClient&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramNoSessionRelayToClient& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramNoSessionRelayToClient*>(
        &_CMsgSteamDatagramNoSessionRelayToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CMsgSteamDatagramNoSessionRelayToClient& a, CMsgSteamDatagramNoSessionRelayToClient& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramNoSessionRelayToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramNoSessionRelayToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramNoSessionRelayToClient* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramNoSessionRelayToClient>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramNoSessionRelayToClient& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramNoSessionRelayToClient& from) { CMsgSteamDatagramNoSessionRelayToClient::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramNoSessionRelayToClient* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramNoSessionRelayToClient"; }

 protected:
  explicit CMsgSteamDatagramNoSessionRelayToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramNoSessionRelayToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramNoSessionRelayToClient& from);
  CMsgSteamDatagramNoSessionRelayToClient(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramNoSessionRelayToClient&& from) noexcept
      : CMsgSteamDatagramNoSessionRelayToClient(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kYourPublicIpFieldNumber = 2,
    kServerTimeFieldNumber = 3,
    kChallengeFieldNumber = 4,
    kSecondsUntilShutdownFieldNumber = 5,
    kYourPublicPortFieldNumber = 6,
    kConnectionIdFieldNumber = 7,
  };
  // optional fixed32 your_public_ip = 2;
  bool has_your_public_ip() const;
  void clear_your_public_ip() ;
  ::uint32_t your_public_ip() const;
  void set_your_public_ip(::uint32_t value);

  private:
  ::uint32_t _internal_your_public_ip() const;
  void _internal_set_your_public_ip(::uint32_t value);

  public:
  // optional fixed32 server_time = 3;
  bool has_server_time() const;
  void clear_server_time() ;
  ::uint32_t server_time() const;
  void set_server_time(::uint32_t value);

  private:
  ::uint32_t _internal_server_time() const;
  void _internal_set_server_time(::uint32_t value);

  public:
  // optional fixed64 challenge = 4;
  bool has_challenge() const;
  void clear_challenge() ;
  ::uint64_t challenge() const;
  void set_challenge(::uint64_t value);

  private:
  ::uint64_t _internal_challenge() const;
  void _internal_set_challenge(::uint64_t value);

  public:
  // optional uint32 seconds_until_shutdown = 5;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown() ;
  ::uint32_t seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::uint32_t value);

  private:
  ::uint32_t _internal_seconds_until_shutdown() const;
  void _internal_set_seconds_until_shutdown(::uint32_t value);

  public:
  // optional fixed32 your_public_port = 6;
  bool has_your_public_port() const;
  void clear_your_public_port() ;
  ::uint32_t your_public_port() const;
  void set_your_public_port(::uint32_t value);

  private:
  ::uint32_t _internal_your_public_port() const;
  void _internal_set_your_public_port(::uint32_t value);

  public:
  // optional fixed32 connection_id = 7;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramNoSessionRelayToClient)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramNoSessionRelayToClient& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t your_public_ip_;
    ::uint32_t server_time_;
    ::uint64_t challenge_;
    ::uint32_t seconds_until_shutdown_;
    ::uint32_t your_public_port_;
    ::uint32_t connection_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramNoSessionRelayToClient_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverSessionEstablished final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverSessionEstablished) */ {
 public:
  inline CMsgSteamDatagramGameserverSessionEstablished() : CMsgSteamDatagramGameserverSessionEstablished(nullptr) {}
  ~CMsgSteamDatagramGameserverSessionEstablished() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramGameserverSessionEstablished* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramGameserverSessionEstablished));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramGameserverSessionEstablished(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramGameserverSessionEstablished(const CMsgSteamDatagramGameserverSessionEstablished& from) : CMsgSteamDatagramGameserverSessionEstablished(nullptr, from) {}
  inline CMsgSteamDatagramGameserverSessionEstablished(CMsgSteamDatagramGameserverSessionEstablished&& from) noexcept
      : CMsgSteamDatagramGameserverSessionEstablished(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramGameserverSessionEstablished& operator=(const CMsgSteamDatagramGameserverSessionEstablished& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramGameserverSessionEstablished& operator=(CMsgSteamDatagramGameserverSessionEstablished&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramGameserverSessionEstablished& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramGameserverSessionEstablished*>(
        &_CMsgSteamDatagramGameserverSessionEstablished_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(CMsgSteamDatagramGameserverSessionEstablished& a, CMsgSteamDatagramGameserverSessionEstablished& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramGameserverSessionEstablished* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramGameserverSessionEstablished* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverSessionEstablished* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramGameserverSessionEstablished>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramGameserverSessionEstablished& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramGameserverSessionEstablished& from) { CMsgSteamDatagramGameserverSessionEstablished::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramGameserverSessionEstablished* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramGameserverSessionEstablished"; }

 protected:
  explicit CMsgSteamDatagramGameserverSessionEstablished(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramGameserverSessionEstablished(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramGameserverSessionEstablished& from);
  CMsgSteamDatagramGameserverSessionEstablished(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramGameserverSessionEstablished&& from) noexcept
      : CMsgSteamDatagramGameserverSessionEstablished(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameserverIdentityStringFieldNumber = 2,
    kDummyLegacyIdentityBinaryFieldNumber = 7,
    kConnectionIdFieldNumber = 1,
    kSecondsUntilShutdownFieldNumber = 4,
    kLegacyGameserverSteamidFieldNumber = 3,
    kSeqNumR2CFieldNumber = 6,
  };
  // optional string gameserver_identity_string = 2;
  bool has_gameserver_identity_string() const;
  void clear_gameserver_identity_string() ;
  const std::string& gameserver_identity_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_gameserver_identity_string(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_gameserver_identity_string();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_gameserver_identity_string();
  void set_allocated_gameserver_identity_string(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_gameserver_identity_string() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_gameserver_identity_string(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_gameserver_identity_string();

  public:
  // optional bytes dummy_legacy_identity_binary = 7;
  bool has_dummy_legacy_identity_binary() const;
  void clear_dummy_legacy_identity_binary() ;
  const std::string& dummy_legacy_identity_binary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dummy_legacy_identity_binary(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_dummy_legacy_identity_binary();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_dummy_legacy_identity_binary();
  void set_allocated_dummy_legacy_identity_binary(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_dummy_legacy_identity_binary() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dummy_legacy_identity_binary(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_dummy_legacy_identity_binary();

  public:
  // optional fixed32 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional uint32 seconds_until_shutdown = 4;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown() ;
  ::uint32_t seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::uint32_t value);

  private:
  ::uint32_t _internal_seconds_until_shutdown() const;
  void _internal_set_seconds_until_shutdown(::uint32_t value);

  public:
  // optional fixed64 legacy_gameserver_steamid = 3;
  bool has_legacy_gameserver_steamid() const;
  void clear_legacy_gameserver_steamid() ;
  ::uint64_t legacy_gameserver_steamid() const;
  void set_legacy_gameserver_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_gameserver_steamid() const;
  void _internal_set_legacy_gameserver_steamid(::uint64_t value);

  public:
  // optional uint32 seq_num_r2c = 6;
  bool has_seq_num_r2c() const;
  void clear_seq_num_r2c() ;
  ::uint32_t seq_num_r2c() const;
  void set_seq_num_r2c(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_r2c() const;
  void _internal_set_seq_num_r2c(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverSessionEstablished)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 80,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramGameserverSessionEstablished& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr gameserver_identity_string_;
    ::google::protobuf::internal::ArenaStringPtr dummy_legacy_identity_binary_;
    ::uint32_t connection_id_;
    ::uint32_t seconds_until_shutdown_;
    ::uint64_t legacy_gameserver_steamid_;
    ::uint32_t seq_num_r2c_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverSessionEstablished_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverPingReplyData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverPingReplyData) */ {
 public:
  inline CMsgSteamDatagramGameserverPingReplyData() : CMsgSteamDatagramGameserverPingReplyData(nullptr) {}
  ~CMsgSteamDatagramGameserverPingReplyData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramGameserverPingReplyData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramGameserverPingReplyData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramGameserverPingReplyData(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramGameserverPingReplyData(const CMsgSteamDatagramGameserverPingReplyData& from) : CMsgSteamDatagramGameserverPingReplyData(nullptr, from) {}
  inline CMsgSteamDatagramGameserverPingReplyData(CMsgSteamDatagramGameserverPingReplyData&& from) noexcept
      : CMsgSteamDatagramGameserverPingReplyData(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramGameserverPingReplyData& operator=(const CMsgSteamDatagramGameserverPingReplyData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramGameserverPingReplyData& operator=(CMsgSteamDatagramGameserverPingReplyData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramGameserverPingReplyData& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramGameserverPingReplyData*>(
        &_CMsgSteamDatagramGameserverPingReplyData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CMsgSteamDatagramGameserverPingReplyData& a, CMsgSteamDatagramGameserverPingReplyData& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramGameserverPingReplyData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramGameserverPingReplyData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverPingReplyData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramGameserverPingReplyData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramGameserverPingReplyData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramGameserverPingReplyData& from) { CMsgSteamDatagramGameserverPingReplyData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramGameserverPingReplyData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramGameserverPingReplyData"; }

 protected:
  explicit CMsgSteamDatagramGameserverPingReplyData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramGameserverPingReplyData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramGameserverPingReplyData& from);
  CMsgSteamDatagramGameserverPingReplyData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramGameserverPingReplyData&& from) noexcept
      : CMsgSteamDatagramGameserverPingReplyData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEchoFieldNumber = 8,
    kBuildFieldNumber = 9,
    kRoutingBlobFieldNumber = 12,
    kLegacyChallengeFieldNumber = 3,
    kEchoRelayUnixTimeFieldNumber = 2,
    kLegacyRouterTimestampFieldNumber = 4,
    kDataCenterIdFieldNumber = 5,
    kAppidFieldNumber = 6,
    kProtocolVersionFieldNumber = 7,
    kMyUnixTimeFieldNumber = 11,
    kNetworkConfigVersionFieldNumber = 10,
  };
  // optional bytes echo = 8;
  bool has_echo() const;
  void clear_echo() ;
  const std::string& echo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_echo(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_echo();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_echo();
  void set_allocated_echo(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_echo() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_echo(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_echo();

  public:
  // optional string build = 9;
  bool has_build() const;
  void clear_build() ;
  const std::string& build() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_build(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_build();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_build();
  void set_allocated_build(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_build() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_build(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_build();

  public:
  // optional bytes routing_blob = 12;
  bool has_routing_blob() const;
  void clear_routing_blob() ;
  const std::string& routing_blob() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_routing_blob(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_routing_blob();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_routing_blob();
  void set_allocated_routing_blob(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_routing_blob() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_routing_blob(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_routing_blob();

  public:
  // optional fixed64 legacy_challenge = 3;
  bool has_legacy_challenge() const;
  void clear_legacy_challenge() ;
  ::uint64_t legacy_challenge() const;
  void set_legacy_challenge(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_challenge() const;
  void _internal_set_legacy_challenge(::uint64_t value);

  public:
  // optional fixed32 echo_relay_unix_time = 2;
  bool has_echo_relay_unix_time() const;
  void clear_echo_relay_unix_time() ;
  ::uint32_t echo_relay_unix_time() const;
  void set_echo_relay_unix_time(::uint32_t value);

  private:
  ::uint32_t _internal_echo_relay_unix_time() const;
  void _internal_set_echo_relay_unix_time(::uint32_t value);

  public:
  // optional fixed32 legacy_router_timestamp = 4;
  bool has_legacy_router_timestamp() const;
  void clear_legacy_router_timestamp() ;
  ::uint32_t legacy_router_timestamp() const;
  void set_legacy_router_timestamp(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_router_timestamp() const;
  void _internal_set_legacy_router_timestamp(::uint32_t value);

  public:
  // optional fixed32 data_center_id = 5;
  bool has_data_center_id() const;
  void clear_data_center_id() ;
  ::uint32_t data_center_id() const;
  void set_data_center_id(::uint32_t value);

  private:
  ::uint32_t _internal_data_center_id() const;
  void _internal_set_data_center_id(::uint32_t value);

  public:
  // optional uint32 appid = 6;
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // optional uint32 protocol_version = 7;
  bool has_protocol_version() const;
  void clear_protocol_version() ;
  ::uint32_t protocol_version() const;
  void set_protocol_version(::uint32_t value);

  private:
  ::uint32_t _internal_protocol_version() const;
  void _internal_set_protocol_version(::uint32_t value);

  public:
  // optional fixed32 my_unix_time = 11;
  bool has_my_unix_time() const;
  void clear_my_unix_time() ;
  ::uint32_t my_unix_time() const;
  void set_my_unix_time(::uint32_t value);

  private:
  ::uint32_t _internal_my_unix_time() const;
  void _internal_set_my_unix_time(::uint32_t value);

  public:
  // optional uint64 network_config_version = 10;
  bool has_network_config_version() const;
  void clear_network_config_version() ;
  ::uint64_t network_config_version() const;
  void set_network_config_version(::uint64_t value);

  private:
  ::uint64_t _internal_network_config_version() const;
  void _internal_set_network_config_version(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverPingReplyData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   0, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramGameserverPingReplyData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr echo_;
    ::google::protobuf::internal::ArenaStringPtr build_;
    ::google::protobuf::internal::ArenaStringPtr routing_blob_;
    ::uint64_t legacy_challenge_;
    ::uint32_t echo_relay_unix_time_;
    ::uint32_t legacy_router_timestamp_;
    ::uint32_t data_center_id_;
    ::uint32_t appid_;
    ::uint32_t protocol_version_;
    ::uint32_t my_unix_time_;
    ::uint64_t network_config_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverPingReplyData_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramClientSwitchedPrimary_RouterQuality final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality) */ {
 public:
  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality() : CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(nullptr) {}
  ~CMsgSteamDatagramClientSwitchedPrimary_RouterQuality() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from) : CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(nullptr, from) {}
  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&& from) noexcept
      : CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& operator=(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& operator=(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(
        &_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& a, CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramClientSwitchedPrimary_RouterQuality>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from) { CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramClientSwitchedPrimary.RouterQuality"; }

 protected:
  explicit CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);
  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&& from) noexcept
      : CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScoreFieldNumber = 1,
    kFrontPingFieldNumber = 2,
    kBackPingFieldNumber = 3,
    kSecondsUntilDownFieldNumber = 4,
  };
  // optional uint32 score = 1;
  bool has_score() const;
  void clear_score() ;
  ::uint32_t score() const;
  void set_score(::uint32_t value);

  private:
  ::uint32_t _internal_score() const;
  void _internal_set_score(::uint32_t value);

  public:
  // optional uint32 front_ping = 2;
  bool has_front_ping() const;
  void clear_front_ping() ;
  ::uint32_t front_ping() const;
  void set_front_ping(::uint32_t value);

  private:
  ::uint32_t _internal_front_ping() const;
  void _internal_set_front_ping(::uint32_t value);

  public:
  // optional uint32 back_ping = 3;
  bool has_back_ping() const;
  void clear_back_ping() ;
  ::uint32_t back_ping() const;
  void set_back_ping(::uint32_t value);

  private:
  ::uint32_t _internal_back_ping() const;
  void _internal_set_back_ping(::uint32_t value);

  public:
  // optional uint32 seconds_until_down = 4;
  bool has_seconds_until_down() const;
  void clear_seconds_until_down() ;
  ::uint32_t seconds_until_down() const;
  void set_seconds_until_down(::uint32_t value);

  private:
  ::uint32_t _internal_seconds_until_down() const;
  void _internal_set_seconds_until_down(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t score_;
    ::uint32_t front_ping_;
    ::uint32_t back_ping_;
    ::uint32_t seconds_until_down_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleRequest) */ {
 public:
  inline CMsgSteamDatagramClientPingSampleRequest() : CMsgSteamDatagramClientPingSampleRequest(nullptr) {}
  ~CMsgSteamDatagramClientPingSampleRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramClientPingSampleRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramClientPingSampleRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramClientPingSampleRequest(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramClientPingSampleRequest(const CMsgSteamDatagramClientPingSampleRequest& from) : CMsgSteamDatagramClientPingSampleRequest(nullptr, from) {}
  inline CMsgSteamDatagramClientPingSampleRequest(CMsgSteamDatagramClientPingSampleRequest&& from) noexcept
      : CMsgSteamDatagramClientPingSampleRequest(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramClientPingSampleRequest& operator=(const CMsgSteamDatagramClientPingSampleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramClientPingSampleRequest& operator=(CMsgSteamDatagramClientPingSampleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramClientPingSampleRequest& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramClientPingSampleRequest*>(
        &_CMsgSteamDatagramClientPingSampleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CMsgSteamDatagramClientPingSampleRequest& a, CMsgSteamDatagramClientPingSampleRequest& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramClientPingSampleRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramClientPingSampleRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramClientPingSampleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramClientPingSampleRequest& from) { CMsgSteamDatagramClientPingSampleRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramClientPingSampleRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramClientPingSampleRequest"; }

 protected:
  explicit CMsgSteamDatagramClientPingSampleRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramClientPingSampleRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramClientPingSampleRequest& from);
  CMsgSteamDatagramClientPingSampleRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramClientPingSampleRequest&& from) noexcept
      : CMsgSteamDatagramClientPingSampleRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectionIdFieldNumber = 1,
  };
  // optional fixed32 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramClientPingSampleRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t connection_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleRequest_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply_POP_AltAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress) */ {
 public:
  inline CMsgSteamDatagramClientPingSampleReply_POP_AltAddress() : CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(nullptr) {}
  ~CMsgSteamDatagramClientPingSampleReply_POP_AltAddress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& from) : CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(nullptr, from) {}
  inline CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& operator=(const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& operator=(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress*>(
        &_CMsgSteamDatagramClientPingSampleReply_POP_AltAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& a, CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& from) { CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramClientPingSampleReply.POP.AltAddress"; }

 protected:
  explicit CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& from);
  CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramClientPingSampleReply_POP_AltAddress&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply_POP_AltAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kFrontPingMsFieldNumber = 2,
    kPenaltyFieldNumber = 3,
  };
  // optional string id = 1;
  bool has_id() const;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // optional uint32 front_ping_ms = 2;
  bool has_front_ping_ms() const;
  void clear_front_ping_ms() ;
  ::uint32_t front_ping_ms() const;
  void set_front_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_front_ping_ms() const;
  void _internal_set_front_ping_ms(::uint32_t value);

  public:
  // optional uint32 penalty = 3;
  bool has_penalty() const;
  void clear_penalty() ;
  ::uint32_t penalty() const;
  void set_penalty(::uint32_t value);

  private:
  ::uint32_t _internal_penalty() const;
  void _internal_set_penalty(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::uint32_t front_ping_ms_;
    ::uint32_t penalty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_POP_AltAddress_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter) */ {
 public:
  inline CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter() : CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(nullptr) {}
  ~CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& from) : CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(nullptr, from) {}
  inline CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& operator=(const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& operator=(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter*>(
        &_CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& a, CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& from) { CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter"; }

 protected:
  explicit CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& from);
  CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataCenterIdFieldNumber = 1,
    kBestDcViaRelayPopIdFieldNumber = 2,
    kBestDcPingMsFieldNumber = 3,
  };
  // optional fixed32 data_center_id = 1;
  bool has_data_center_id() const;
  void clear_data_center_id() ;
  ::uint32_t data_center_id() const;
  void set_data_center_id(::uint32_t value);

  private:
  ::uint32_t _internal_data_center_id() const;
  void _internal_set_data_center_id(::uint32_t value);

  public:
  // optional fixed32 best_dc_via_relay_pop_id = 2;
  bool has_best_dc_via_relay_pop_id() const;
  void clear_best_dc_via_relay_pop_id() ;
  ::uint32_t best_dc_via_relay_pop_id() const;
  void set_best_dc_via_relay_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_best_dc_via_relay_pop_id() const;
  void _internal_set_best_dc_via_relay_pop_id(::uint32_t value);

  public:
  // optional uint32 best_dc_ping_ms = 3;
  bool has_best_dc_ping_ms() const;
  void clear_best_dc_ping_ms() ;
  ::uint32_t best_dc_ping_ms() const;
  void set_best_dc_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_best_dc_ping_ms() const;
  void _internal_set_best_dc_ping_ms(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t data_center_id_;
    ::uint32_t best_dc_via_relay_pop_id_;
    ::uint32_t best_dc_ping_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramSignedMessageGeneric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramSignedMessageGeneric) */ {
 public:
  inline CMsgSteamDatagramSignedMessageGeneric() : CMsgSteamDatagramSignedMessageGeneric(nullptr) {}
  ~CMsgSteamDatagramSignedMessageGeneric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramSignedMessageGeneric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramSignedMessageGeneric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramSignedMessageGeneric(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramSignedMessageGeneric(const CMsgSteamDatagramSignedMessageGeneric& from) : CMsgSteamDatagramSignedMessageGeneric(nullptr, from) {}
  inline CMsgSteamDatagramSignedMessageGeneric(CMsgSteamDatagramSignedMessageGeneric&& from) noexcept
      : CMsgSteamDatagramSignedMessageGeneric(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramSignedMessageGeneric& operator=(const CMsgSteamDatagramSignedMessageGeneric& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramSignedMessageGeneric& operator=(CMsgSteamDatagramSignedMessageGeneric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramSignedMessageGeneric& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramSignedMessageGeneric*>(
        &_CMsgSteamDatagramSignedMessageGeneric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CMsgSteamDatagramSignedMessageGeneric& a, CMsgSteamDatagramSignedMessageGeneric& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramSignedMessageGeneric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramSignedMessageGeneric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramSignedMessageGeneric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramSignedMessageGeneric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramSignedMessageGeneric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramSignedMessageGeneric& from) { CMsgSteamDatagramSignedMessageGeneric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramSignedMessageGeneric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramSignedMessageGeneric"; }

 protected:
  explicit CMsgSteamDatagramSignedMessageGeneric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramSignedMessageGeneric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramSignedMessageGeneric& from);
  CMsgSteamDatagramSignedMessageGeneric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramSignedMessageGeneric&& from) noexcept
      : CMsgSteamDatagramSignedMessageGeneric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignedDataFieldNumber = 2,
    kSignatureFieldNumber = 3,
    kDummyPadFieldNumber = 1023,
    kCertFieldNumber = 1,
  };
  // optional bytes signed_data = 2;
  bool has_signed_data() const;
  void clear_signed_data() ;
  const std::string& signed_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signed_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_signed_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_signed_data();
  void set_allocated_signed_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_signed_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_signed_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_signed_data();

  public:
  // optional bytes signature = 3;
  bool has_signature() const;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_signature();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_signature();
  void set_allocated_signature(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_signature() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_signature(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_signature();

  public:
  // optional bytes dummy_pad = 1023;
  bool has_dummy_pad() const;
  void clear_dummy_pad() ;
  const std::string& dummy_pad() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dummy_pad(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_dummy_pad();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_dummy_pad();
  void set_allocated_dummy_pad(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_dummy_pad() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dummy_pad(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_dummy_pad();

  public:
  // optional .CMsgSteamDatagramCertificateSigned cert = 1;
  bool has_cert() const;
  void clear_cert() ;
  const ::CMsgSteamDatagramCertificateSigned& cert() const;
  [[nodiscard]] ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE release_cert();
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL mutable_cert();
  void set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE unsafe_arena_release_cert();

  private:
  const ::CMsgSteamDatagramCertificateSigned& _internal_cert() const;
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL _internal_mutable_cert();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramSignedMessageGeneric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 4,
                                   1, 0,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramSignedMessageGeneric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signed_data_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::google::protobuf::internal::ArenaStringPtr dummy_pad_;
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE cert_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramSignedMessageGeneric_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramRouterPingReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRouterPingReply) */ {
 public:
  inline CMsgSteamDatagramRouterPingReply() : CMsgSteamDatagramRouterPingReply(nullptr) {}
  ~CMsgSteamDatagramRouterPingReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramRouterPingReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramRouterPingReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramRouterPingReply(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramRouterPingReply(const CMsgSteamDatagramRouterPingReply& from) : CMsgSteamDatagramRouterPingReply(nullptr, from) {}
  inline CMsgSteamDatagramRouterPingReply(CMsgSteamDatagramRouterPingReply&& from) noexcept
      : CMsgSteamDatagramRouterPingReply(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramRouterPingReply& operator=(const CMsgSteamDatagramRouterPingReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramRouterPingReply& operator=(CMsgSteamDatagramRouterPingReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramRouterPingReply& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramRouterPingReply*>(
        &_CMsgSteamDatagramRouterPingReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CMsgSteamDatagramRouterPingReply& a, CMsgSteamDatagramRouterPingReply& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramRouterPingReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramRouterPingReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramRouterPingReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramRouterPingReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramRouterPingReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramRouterPingReply& from) { CMsgSteamDatagramRouterPingReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramRouterPingReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramRouterPingReply"; }

 protected:
  explicit CMsgSteamDatagramRouterPingReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramRouterPingReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramRouterPingReply& from);
  CMsgSteamDatagramRouterPingReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramRouterPingReply&& from) noexcept
      : CMsgSteamDatagramRouterPingReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RouteException = CMsgSteamDatagramRouterPingReply_RouteException;
  using AltAddress = CMsgSteamDatagramRouterPingReply_AltAddress;
  using Flags = CMsgSteamDatagramRouterPingReply_Flags;
  static constexpr Flags FLAG_MAYBE_MORE_DATA_CENTERS = CMsgSteamDatagramRouterPingReply_Flags_FLAG_MAYBE_MORE_DATA_CENTERS;
  static constexpr Flags FLAG_MAYBE_MORE_ALT_ADDRESSES = CMsgSteamDatagramRouterPingReply_Flags_FLAG_MAYBE_MORE_ALT_ADDRESSES;
  static inline bool Flags_IsValid(int value) {
    return CMsgSteamDatagramRouterPingReply_Flags_IsValid(value);
  }
  static constexpr Flags Flags_MIN = CMsgSteamDatagramRouterPingReply_Flags_Flags_MIN;
  static constexpr Flags Flags_MAX = CMsgSteamDatagramRouterPingReply_Flags_Flags_MAX;
  static constexpr int Flags_ARRAYSIZE = CMsgSteamDatagramRouterPingReply_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Flags_descriptor() {
    return CMsgSteamDatagramRouterPingReply_Flags_descriptor();
  }
  template <typename T>
  static inline const std::string& Flags_Name(T value) {
    return CMsgSteamDatagramRouterPingReply_Flags_Name(value);
  }
  static inline bool Flags_Parse(
      absl::string_view name, Flags* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramRouterPingReply_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kLatencyDatacenterIdsFieldNumber = 2,
    kLatencyPingMsFieldNumber = 3,
    kRouteExceptionsFieldNumber = 10,
    kAltAddressesFieldNumber = 13,
    kLatencyDatacenterIdsP2PFieldNumber = 14,
    kLatencyPingMsP2PFieldNumber = 15,
    kDummyPadFieldNumber = 99,
    kClientTimestampFieldNumber = 1,
    kYourPublicIpFieldNumber = 4,
    kChallengeFieldNumber = 6,
    kServerTimeFieldNumber = 5,
    kSecondsUntilShutdownFieldNumber = 7,
    kClientCookieFieldNumber = 8,
    kScoringPenaltyRelayClusterFieldNumber = 9,
    kYourPublicPortFieldNumber = 11,
    kFlagsFieldNumber = 12,
    kRecvTosFieldNumber = 16,
    kEchoSentTosFieldNumber = 17,
    kSentTosFieldNumber = 18,
    kEchoRequestReplyTosFieldNumber = 19,
    kDummyVarintFieldNumber = 100,
  };
  // repeated fixed32 latency_datacenter_ids = 2 [packed = true];
  int latency_datacenter_ids_size() const;
  private:
  int _internal_latency_datacenter_ids_size() const;

  public:
  void clear_latency_datacenter_ids() ;
  ::uint32_t latency_datacenter_ids(int index) const;
  void set_latency_datacenter_ids(int index, ::uint32_t value);
  void add_latency_datacenter_ids(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& latency_datacenter_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_latency_datacenter_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_latency_datacenter_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_latency_datacenter_ids();

  public:
  // repeated uint32 latency_ping_ms = 3 [packed = true];
  int latency_ping_ms_size() const;
  private:
  int _internal_latency_ping_ms_size() const;

  public:
  void clear_latency_ping_ms() ;
  ::uint32_t latency_ping_ms(int index) const;
  void set_latency_ping_ms(int index, ::uint32_t value);
  void add_latency_ping_ms(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& latency_ping_ms() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_latency_ping_ms();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_latency_ping_ms() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_latency_ping_ms();

  public:
  // repeated .CMsgSteamDatagramRouterPingReply.RouteException route_exceptions = 10;
  int route_exceptions_size() const;
  private:
  int _internal_route_exceptions_size() const;

  public:
  void clear_route_exceptions() ;
  ::CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL mutable_route_exceptions(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>* PROTOBUF_NONNULL mutable_route_exceptions();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>& _internal_route_exceptions() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>* PROTOBUF_NONNULL _internal_mutable_route_exceptions();
  public:
  const ::CMsgSteamDatagramRouterPingReply_RouteException& route_exceptions(int index) const;
  ::CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL add_route_exceptions();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>& route_exceptions() const;
  // repeated .CMsgSteamDatagramRouterPingReply.AltAddress alt_addresses = 13;
  int alt_addresses_size() const;
  private:
  int _internal_alt_addresses_size() const;

  public:
  void clear_alt_addresses() ;
  ::CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL mutable_alt_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>* PROTOBUF_NONNULL mutable_alt_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>& _internal_alt_addresses() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>* PROTOBUF_NONNULL _internal_mutable_alt_addresses();
  public:
  const ::CMsgSteamDatagramRouterPingReply_AltAddress& alt_addresses(int index) const;
  ::CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL add_alt_addresses();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>& alt_addresses() const;
  // repeated fixed32 latency_datacenter_ids_p2p = 14 [packed = true];
  int latency_datacenter_ids_p2p_size() const;
  private:
  int _internal_latency_datacenter_ids_p2p_size() const;

  public:
  void clear_latency_datacenter_ids_p2p() ;
  ::uint32_t latency_datacenter_ids_p2p(int index) const;
  void set_latency_datacenter_ids_p2p(int index, ::uint32_t value);
  void add_latency_datacenter_ids_p2p(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& latency_datacenter_ids_p2p() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_latency_datacenter_ids_p2p();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_latency_datacenter_ids_p2p() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_latency_datacenter_ids_p2p();

  public:
  // repeated uint32 latency_ping_ms_p2p = 15 [packed = true];
  int latency_ping_ms_p2p_size() const;
  private:
  int _internal_latency_ping_ms_p2p_size() const;

  public:
  void clear_latency_ping_ms_p2p() ;
  ::uint32_t latency_ping_ms_p2p(int index) const;
  void set_latency_ping_ms_p2p(int index, ::uint32_t value);
  void add_latency_ping_ms_p2p(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& latency_ping_ms_p2p() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_latency_ping_ms_p2p();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_latency_ping_ms_p2p() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_latency_ping_ms_p2p();

  public:
  // optional bytes dummy_pad = 99;
  bool has_dummy_pad() const;
  void clear_dummy_pad() ;
  const std::string& dummy_pad() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dummy_pad(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_dummy_pad();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_dummy_pad();
  void set_allocated_dummy_pad(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_dummy_pad() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dummy_pad(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_dummy_pad();

  public:
  // optional fixed32 client_timestamp = 1;
  bool has_client_timestamp() const;
  void clear_client_timestamp() ;
  ::uint32_t client_timestamp() const;
  void set_client_timestamp(::uint32_t value);

  private:
  ::uint32_t _internal_client_timestamp() const;
  void _internal_set_client_timestamp(::uint32_t value);

  public:
  // optional fixed32 your_public_ip = 4;
  bool has_your_public_ip() const;
  void clear_your_public_ip() ;
  ::uint32_t your_public_ip() const;
  void set_your_public_ip(::uint32_t value);

  private:
  ::uint32_t _internal_your_public_ip() const;
  void _internal_set_your_public_ip(::uint32_t value);

  public:
  // optional fixed64 challenge = 6;
  bool has_challenge() const;
  void clear_challenge() ;
  ::uint64_t challenge() const;
  void set_challenge(::uint64_t value);

  private:
  ::uint64_t _internal_challenge() const;
  void _internal_set_challenge(::uint64_t value);

  public:
  // optional fixed32 server_time = 5;
  bool has_server_time() const;
  void clear_server_time() ;
  ::uint32_t server_time() const;
  void set_server_time(::uint32_t value);

  private:
  ::uint32_t _internal_server_time() const;
  void _internal_set_server_time(::uint32_t value);

  public:
  // optional uint32 seconds_until_shutdown = 7;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown() ;
  ::uint32_t seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::uint32_t value);

  private:
  ::uint32_t _internal_seconds_until_shutdown() const;
  void _internal_set_seconds_until_shutdown(::uint32_t value);

  public:
  // optional fixed32 client_cookie = 8;
  bool has_client_cookie() const;
  void clear_client_cookie() ;
  ::uint32_t client_cookie() const;
  void set_client_cookie(::uint32_t value);

  private:
  ::uint32_t _internal_client_cookie() const;
  void _internal_set_client_cookie(::uint32_t value);

  public:
  // optional uint32 scoring_penalty_relay_cluster = 9;
  bool has_scoring_penalty_relay_cluster() const;
  void clear_scoring_penalty_relay_cluster() ;
  ::uint32_t scoring_penalty_relay_cluster() const;
  void set_scoring_penalty_relay_cluster(::uint32_t value);

  private:
  ::uint32_t _internal_scoring_penalty_relay_cluster() const;
  void _internal_set_scoring_penalty_relay_cluster(::uint32_t value);

  public:
  // optional fixed32 your_public_port = 11;
  bool has_your_public_port() const;
  void clear_your_public_port() ;
  ::uint32_t your_public_port() const;
  void set_your_public_port(::uint32_t value);

  private:
  ::uint32_t _internal_your_public_port() const;
  void _internal_set_your_public_port(::uint32_t value);

  public:
  // optional uint32 flags = 12;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional uint32 recv_tos = 16;
  bool has_recv_tos() const;
  void clear_recv_tos() ;
  ::uint32_t recv_tos() const;
  void set_recv_tos(::uint32_t value);

  private:
  ::uint32_t _internal_recv_tos() const;
  void _internal_set_recv_tos(::uint32_t value);

  public:
  // optional uint32 echo_sent_tos = 17;
  bool has_echo_sent_tos() const;
  void clear_echo_sent_tos() ;
  ::uint32_t echo_sent_tos() const;
  void set_echo_sent_tos(::uint32_t value);

  private:
  ::uint32_t _internal_echo_sent_tos() const;
  void _internal_set_echo_sent_tos(::uint32_t value);

  public:
  // optional uint32 sent_tos = 18;
  bool has_sent_tos() const;
  void clear_sent_tos() ;
  ::uint32_t sent_tos() const;
  void set_sent_tos(::uint32_t value);

  private:
  ::uint32_t _internal_sent_tos() const;
  void _internal_set_sent_tos(::uint32_t value);

  public:
  // optional uint32 echo_request_reply_tos = 19;
  bool has_echo_request_reply_tos() const;
  void clear_echo_request_reply_tos() ;
  ::uint32_t echo_request_reply_tos() const;
  void set_echo_request_reply_tos(::uint32_t value);

  private:
  ::uint32_t _internal_echo_request_reply_tos() const;
  void _internal_set_echo_request_reply_tos(::uint32_t value);

  public:
  // optional uint64 dummy_varint = 100;
  bool has_dummy_varint() const;
  void clear_dummy_varint() ;
  ::uint64_t dummy_varint() const;
  void set_dummy_varint(::uint64_t value);

  private:
  ::uint64_t _internal_dummy_varint() const;
  void _internal_set_dummy_varint(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRouterPingReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 21,
                                   2, 0,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramRouterPingReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> latency_datacenter_ids_;
    ::google::protobuf::RepeatedField<::uint32_t> latency_ping_ms_;
    ::google::protobuf::internal::CachedSize _latency_ping_ms_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRouterPingReply_RouteException > route_exceptions_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRouterPingReply_AltAddress > alt_addresses_;
    ::google::protobuf::RepeatedField<::uint32_t> latency_datacenter_ids_p2p_;
    ::google::protobuf::RepeatedField<::uint32_t> latency_ping_ms_p2p_;
    ::google::protobuf::internal::CachedSize _latency_ping_ms_p2p_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr dummy_pad_;
    ::uint32_t client_timestamp_;
    ::uint32_t your_public_ip_;
    ::uint64_t challenge_;
    ::uint32_t server_time_;
    ::uint32_t seconds_until_shutdown_;
    ::uint32_t client_cookie_;
    ::uint32_t scoring_penalty_relay_cluster_;
    ::uint32_t your_public_port_;
    ::uint32_t flags_;
    ::uint32_t recv_tos_;
    ::uint32_t echo_sent_tos_;
    ::uint32_t sent_tos_;
    ::uint32_t echo_request_reply_tos_;
    ::uint64_t dummy_varint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramRouterPingReply_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PSessionRequest) */ {
 public:
  inline CMsgSteamDatagramP2PSessionRequest() : CMsgSteamDatagramP2PSessionRequest(nullptr) {}
  ~CMsgSteamDatagramP2PSessionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PSessionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PSessionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PSessionRequest(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PSessionRequest(const CMsgSteamDatagramP2PSessionRequest& from) : CMsgSteamDatagramP2PSessionRequest(nullptr, from) {}
  inline CMsgSteamDatagramP2PSessionRequest(CMsgSteamDatagramP2PSessionRequest&& from) noexcept
      : CMsgSteamDatagramP2PSessionRequest(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PSessionRequest& operator=(const CMsgSteamDatagramP2PSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PSessionRequest& operator=(CMsgSteamDatagramP2PSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PSessionRequest& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PSessionRequest*>(
        &_CMsgSteamDatagramP2PSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(CMsgSteamDatagramP2PSessionRequest& a, CMsgSteamDatagramP2PSessionRequest& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PSessionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PSessionRequest& from) { CMsgSteamDatagramP2PSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PSessionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PSessionRequest"; }

 protected:
  explicit CMsgSteamDatagramP2PSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PSessionRequest& from);
  CMsgSteamDatagramP2PSessionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PSessionRequest&& from) noexcept
      : CMsgSteamDatagramP2PSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBodyFieldNumber = 2,
    kSignatureFieldNumber = 3,
    kCertFieldNumber = 1,
  };
  // optional bytes body = 2;
  bool has_body() const;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_body();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_body();
  void set_allocated_body(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_body() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_body(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_body();

  public:
  // optional bytes signature = 3;
  bool has_signature() const;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_signature();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_signature();
  void set_allocated_signature(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_signature() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_signature(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_signature();

  public:
  // optional .CMsgSteamDatagramCertificateSigned cert = 1;
  bool has_cert() const;
  void clear_cert() ;
  const ::CMsgSteamDatagramCertificateSigned& cert() const;
  [[nodiscard]] ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE release_cert();
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL mutable_cert();
  void set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE unsafe_arena_release_cert();

  private:
  const ::CMsgSteamDatagramCertificateSigned& _internal_cert() const;
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL _internal_mutable_cert();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PSessionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE cert_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PSessionRequest_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PRoutingSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PRoutingSummary) */ {
 public:
  inline CMsgSteamDatagramP2PRoutingSummary() : CMsgSteamDatagramP2PRoutingSummary(nullptr) {}
  ~CMsgSteamDatagramP2PRoutingSummary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PRoutingSummary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PRoutingSummary(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PRoutingSummary(const CMsgSteamDatagramP2PRoutingSummary& from) : CMsgSteamDatagramP2PRoutingSummary(nullptr, from) {}
  inline CMsgSteamDatagramP2PRoutingSummary(CMsgSteamDatagramP2PRoutingSummary&& from) noexcept
      : CMsgSteamDatagramP2PRoutingSummary(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PRoutingSummary& operator=(const CMsgSteamDatagramP2PRoutingSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PRoutingSummary& operator=(CMsgSteamDatagramP2PRoutingSummary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PRoutingSummary& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PRoutingSummary*>(
        &_CMsgSteamDatagramP2PRoutingSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CMsgSteamDatagramP2PRoutingSummary& a, CMsgSteamDatagramP2PRoutingSummary& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PRoutingSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PRoutingSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PRoutingSummary& from) { CMsgSteamDatagramP2PRoutingSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PRoutingSummary"; }

 protected:
  explicit CMsgSteamDatagramP2PRoutingSummary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PRoutingSummary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PRoutingSummary& from);
  CMsgSteamDatagramP2PRoutingSummary(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PRoutingSummary&& from) noexcept
      : CMsgSteamDatagramP2PRoutingSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIceFieldNumber = 2,
    kSdrFieldNumber = 3,
  };
  // optional .CMsgSteamNetworkingICESessionSummary ice = 2;
  bool has_ice() const;
  void clear_ice() ;
  const ::CMsgSteamNetworkingICESessionSummary& ice() const;
  [[nodiscard]] ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE release_ice();
  ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NONNULL mutable_ice();
  void set_allocated_ice(::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ice(::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE value);
  ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE unsafe_arena_release_ice();

  private:
  const ::CMsgSteamNetworkingICESessionSummary& _internal_ice() const;
  ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NONNULL _internal_mutable_ice();

  public:
  // optional .CMsgSteamNetworkingP2PSDRRoutingSummary sdr = 3;
  bool has_sdr() const;
  void clear_sdr() ;
  const ::CMsgSteamNetworkingP2PSDRRoutingSummary& sdr() const;
  [[nodiscard]] ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE release_sdr();
  ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL mutable_sdr();
  void set_allocated_sdr(::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_sdr(::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE value);
  ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE unsafe_arena_release_sdr();

  private:
  const ::CMsgSteamNetworkingP2PSDRRoutingSummary& _internal_sdr() const;
  ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL _internal_mutable_sdr();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PRoutingSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PRoutingSummary& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE ice_;
    ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE sdr_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutingSummary_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramP2PRoutes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramP2PRoutes) */ {
 public:
  inline CMsgSteamDatagramP2PRoutes() : CMsgSteamDatagramP2PRoutes(nullptr) {}
  ~CMsgSteamDatagramP2PRoutes() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramP2PRoutes* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramP2PRoutes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramP2PRoutes(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramP2PRoutes(const CMsgSteamDatagramP2PRoutes& from) : CMsgSteamDatagramP2PRoutes(nullptr, from) {}
  inline CMsgSteamDatagramP2PRoutes(CMsgSteamDatagramP2PRoutes&& from) noexcept
      : CMsgSteamDatagramP2PRoutes(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramP2PRoutes& operator=(const CMsgSteamDatagramP2PRoutes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramP2PRoutes& operator=(CMsgSteamDatagramP2PRoutes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramP2PRoutes& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramP2PRoutes*>(
        &_CMsgSteamDatagramP2PRoutes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(CMsgSteamDatagramP2PRoutes& a, CMsgSteamDatagramP2PRoutes& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramP2PRoutes* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramP2PRoutes* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramP2PRoutes* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramP2PRoutes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramP2PRoutes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramP2PRoutes& from) { CMsgSteamDatagramP2PRoutes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramP2PRoutes* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramP2PRoutes"; }

 protected:
  explicit CMsgSteamDatagramP2PRoutes(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramP2PRoutes(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramP2PRoutes& from);
  CMsgSteamDatagramP2PRoutes(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramP2PRoutes&& from) noexcept
      : CMsgSteamDatagramP2PRoutes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RelayCluster = CMsgSteamDatagramP2PRoutes_RelayCluster;
  using Route = CMsgSteamDatagramP2PRoutes_Route;

  // accessors -------------------------------------------------------
  enum : int {
    kRelayClustersFieldNumber = 1,
    kRoutesFieldNumber = 2,
    kRevisionFieldNumber = 3,
  };
  // repeated .CMsgSteamDatagramP2PRoutes.RelayCluster relay_clusters = 1;
  int relay_clusters_size() const;
  private:
  int _internal_relay_clusters_size() const;

  public:
  void clear_relay_clusters() ;
  ::CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL mutable_relay_clusters(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>* PROTOBUF_NONNULL mutable_relay_clusters();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>& _internal_relay_clusters() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>* PROTOBUF_NONNULL _internal_mutable_relay_clusters();
  public:
  const ::CMsgSteamDatagramP2PRoutes_RelayCluster& relay_clusters(int index) const;
  ::CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL add_relay_clusters();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>& relay_clusters() const;
  // repeated .CMsgSteamDatagramP2PRoutes.Route routes = 2;
  int routes_size() const;
  private:
  int _internal_routes_size() const;

  public:
  void clear_routes() ;
  ::CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL mutable_routes(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>* PROTOBUF_NONNULL mutable_routes();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>& _internal_routes() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>* PROTOBUF_NONNULL _internal_mutable_routes();
  public:
  const ::CMsgSteamDatagramP2PRoutes_Route& routes(int index) const;
  ::CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL add_routes();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>& routes() const;
  // optional uint32 revision = 3;
  bool has_revision() const;
  void clear_revision() ;
  ::uint32_t revision() const;
  void set_revision(::uint32_t value);

  private:
  ::uint32_t _internal_revision() const;
  void _internal_set_revision(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramP2PRoutes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramP2PRoutes& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramP2PRoutes_RelayCluster > relay_clusters_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramP2PRoutes_Route > routes_;
    ::uint32_t revision_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramP2PRoutes_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverSessionRequest) */ {
 public:
  inline CMsgSteamDatagramGameserverSessionRequest() : CMsgSteamDatagramGameserverSessionRequest(nullptr) {}
  ~CMsgSteamDatagramGameserverSessionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramGameserverSessionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramGameserverSessionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramGameserverSessionRequest(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramGameserverSessionRequest(const CMsgSteamDatagramGameserverSessionRequest& from) : CMsgSteamDatagramGameserverSessionRequest(nullptr, from) {}
  inline CMsgSteamDatagramGameserverSessionRequest(CMsgSteamDatagramGameserverSessionRequest&& from) noexcept
      : CMsgSteamDatagramGameserverSessionRequest(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramGameserverSessionRequest& operator=(const CMsgSteamDatagramGameserverSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramGameserverSessionRequest& operator=(CMsgSteamDatagramGameserverSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramGameserverSessionRequest& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramGameserverSessionRequest*>(
        &_CMsgSteamDatagramGameserverSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CMsgSteamDatagramGameserverSessionRequest& a, CMsgSteamDatagramGameserverSessionRequest& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramGameserverSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramGameserverSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverSessionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramGameserverSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramGameserverSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramGameserverSessionRequest& from) { CMsgSteamDatagramGameserverSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramGameserverSessionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramGameserverSessionRequest"; }

 protected:
  explicit CMsgSteamDatagramGameserverSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramGameserverSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramGameserverSessionRequest& from);
  CMsgSteamDatagramGameserverSessionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramGameserverSessionRequest&& from) noexcept
      : CMsgSteamDatagramGameserverSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTicketFieldNumber = 1,
    kPlatformFieldNumber = 9,
    kBuildFieldNumber = 10,
    kDevGameserverIdentityFieldNumber = 100,
    kDevClientCertFieldNumber = 101,
    kChallengeFieldNumber = 4,
    kChallengeTimeFieldNumber = 3,
    kClientConnectionIdFieldNumber = 5,
    kNetworkConfigVersionFieldNumber = 6,
    kProtocolVersionFieldNumber = 7,
    kServerConnectionIdFieldNumber = 8,
  };
  // optional bytes ticket = 1;
  bool has_ticket() const;
  void clear_ticket() ;
  const std::string& ticket() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ticket(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_ticket();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_ticket();
  void set_allocated_ticket(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_ticket() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ticket(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_ticket();

  public:
  // optional string platform = 9;
  bool has_platform() const;
  void clear_platform() ;
  const std::string& platform() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_platform(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_platform();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_platform();
  void set_allocated_platform(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_platform() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_platform(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_platform();

  public:
  // optional string build = 10;
  bool has_build() const;
  void clear_build() ;
  const std::string& build() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_build(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_build();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_build();
  void set_allocated_build(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_build() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_build(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_build();

  public:
  // optional string dev_gameserver_identity = 100;
  bool has_dev_gameserver_identity() const;
  void clear_dev_gameserver_identity() ;
  const std::string& dev_gameserver_identity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dev_gameserver_identity(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_dev_gameserver_identity();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_dev_gameserver_identity();
  void set_allocated_dev_gameserver_identity(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_dev_gameserver_identity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dev_gameserver_identity(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_dev_gameserver_identity();

  public:
  // optional .CMsgSteamDatagramCertificateSigned dev_client_cert = 101;
  bool has_dev_client_cert() const;
  void clear_dev_client_cert() ;
  const ::CMsgSteamDatagramCertificateSigned& dev_client_cert() const;
  [[nodiscard]] ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE release_dev_client_cert();
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL mutable_dev_client_cert();
  void set_allocated_dev_client_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dev_client_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE unsafe_arena_release_dev_client_cert();

  private:
  const ::CMsgSteamDatagramCertificateSigned& _internal_dev_client_cert() const;
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL _internal_mutable_dev_client_cert();

  public:
  // optional fixed64 challenge = 4;
  bool has_challenge() const;
  void clear_challenge() ;
  ::uint64_t challenge() const;
  void set_challenge(::uint64_t value);

  private:
  ::uint64_t _internal_challenge() const;
  void _internal_set_challenge(::uint64_t value);

  public:
  // optional fixed32 challenge_time = 3;
  bool has_challenge_time() const;
  void clear_challenge_time() ;
  ::uint32_t challenge_time() const;
  void set_challenge_time(::uint32_t value);

  private:
  ::uint32_t _internal_challenge_time() const;
  void _internal_set_challenge_time(::uint32_t value);

  public:
  // optional fixed32 client_connection_id = 5;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional uint64 network_config_version = 6;
  bool has_network_config_version() const;
  void clear_network_config_version() ;
  ::uint64_t network_config_version() const;
  void set_network_config_version(::uint64_t value);

  private:
  ::uint64_t _internal_network_config_version() const;
  void _internal_set_network_config_version(::uint64_t value);

  public:
  // optional uint32 protocol_version = 7;
  bool has_protocol_version() const;
  void clear_protocol_version() ;
  ::uint32_t protocol_version() const;
  void set_protocol_version(::uint32_t value);

  private:
  ::uint32_t _internal_protocol_version() const;
  void _internal_set_protocol_version(::uint32_t value);

  public:
  // optional fixed32 server_connection_id = 8;
  bool has_server_connection_id() const;
  void clear_server_connection_id() ;
  ::uint32_t server_connection_id() const;
  void set_server_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_server_connection_id() const;
  void _internal_set_server_connection_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   1, 94,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramGameserverSessionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr ticket_;
    ::google::protobuf::internal::ArenaStringPtr platform_;
    ::google::protobuf::internal::ArenaStringPtr build_;
    ::google::protobuf::internal::ArenaStringPtr dev_gameserver_identity_;
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE dev_client_cert_;
    ::uint64_t challenge_;
    ::uint32_t challenge_time_;
    ::uint32_t client_connection_id_;
    ::uint64_t network_config_version_;
    ::uint32_t protocol_version_;
    ::uint32_t server_connection_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverSessionRequest_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverPingRequestEnvelope final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverPingRequestEnvelope) */ {
 public:
  inline CMsgSteamDatagramGameserverPingRequestEnvelope() : CMsgSteamDatagramGameserverPingRequestEnvelope(nullptr) {}
  ~CMsgSteamDatagramGameserverPingRequestEnvelope() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramGameserverPingRequestEnvelope* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramGameserverPingRequestEnvelope));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramGameserverPingRequestEnvelope(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramGameserverPingRequestEnvelope(const CMsgSteamDatagramGameserverPingRequestEnvelope& from) : CMsgSteamDatagramGameserverPingRequestEnvelope(nullptr, from) {}
  inline CMsgSteamDatagramGameserverPingRequestEnvelope(CMsgSteamDatagramGameserverPingRequestEnvelope&& from) noexcept
      : CMsgSteamDatagramGameserverPingRequestEnvelope(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramGameserverPingRequestEnvelope& operator=(const CMsgSteamDatagramGameserverPingRequestEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramGameserverPingRequestEnvelope& operator=(CMsgSteamDatagramGameserverPingRequestEnvelope&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramGameserverPingRequestEnvelope& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramGameserverPingRequestEnvelope*>(
        &_CMsgSteamDatagramGameserverPingRequestEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CMsgSteamDatagramGameserverPingRequestEnvelope& a, CMsgSteamDatagramGameserverPingRequestEnvelope& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramGameserverPingRequestEnvelope* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramGameserverPingRequestEnvelope* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverPingRequestEnvelope* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramGameserverPingRequestEnvelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramGameserverPingRequestEnvelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramGameserverPingRequestEnvelope& from) { CMsgSteamDatagramGameserverPingRequestEnvelope::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramGameserverPingRequestEnvelope* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramGameserverPingRequestEnvelope"; }

 protected:
  explicit CMsgSteamDatagramGameserverPingRequestEnvelope(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramGameserverPingRequestEnvelope(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramGameserverPingRequestEnvelope& from);
  CMsgSteamDatagramGameserverPingRequestEnvelope(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramGameserverPingRequestEnvelope&& from) noexcept
      : CMsgSteamDatagramGameserverPingRequestEnvelope(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignedDataFieldNumber = 7,
    kSignatureFieldNumber = 8,
    kDummyPadFieldNumber = 1023,
    kCertFieldNumber = 6,
    kLegacyYourPublicIpFieldNumber = 1,
    kLegacyRelayUnixTimeFieldNumber = 2,
    kLegacyChallengeFieldNumber = 3,
    kLegacyRouterTimestampFieldNumber = 4,
    kLegacyYourPublicPortFieldNumber = 5,
  };
  // optional bytes signed_data = 7;
  bool has_signed_data() const;
  void clear_signed_data() ;
  const std::string& signed_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signed_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_signed_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_signed_data();
  void set_allocated_signed_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_signed_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_signed_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_signed_data();

  public:
  // optional bytes signature = 8;
  bool has_signature() const;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_signature();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_signature();
  void set_allocated_signature(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_signature() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_signature(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_signature();

  public:
  // optional bytes dummy_pad = 1023;
  bool has_dummy_pad() const;
  void clear_dummy_pad() ;
  const std::string& dummy_pad() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dummy_pad(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_dummy_pad();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_dummy_pad();
  void set_allocated_dummy_pad(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_dummy_pad() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dummy_pad(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_dummy_pad();

  public:
  // optional .CMsgSteamDatagramCertificateSigned cert = 6;
  bool has_cert() const;
  void clear_cert() ;
  const ::CMsgSteamDatagramCertificateSigned& cert() const;
  [[nodiscard]] ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE release_cert();
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL mutable_cert();
  void set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE unsafe_arena_release_cert();

  private:
  const ::CMsgSteamDatagramCertificateSigned& _internal_cert() const;
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL _internal_mutable_cert();

  public:
  // optional fixed32 legacy_your_public_ip = 1;
  bool has_legacy_your_public_ip() const;
  void clear_legacy_your_public_ip() ;
  ::uint32_t legacy_your_public_ip() const;
  void set_legacy_your_public_ip(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_your_public_ip() const;
  void _internal_set_legacy_your_public_ip(::uint32_t value);

  public:
  // optional fixed32 legacy_relay_unix_time = 2;
  bool has_legacy_relay_unix_time() const;
  void clear_legacy_relay_unix_time() ;
  ::uint32_t legacy_relay_unix_time() const;
  void set_legacy_relay_unix_time(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_relay_unix_time() const;
  void _internal_set_legacy_relay_unix_time(::uint32_t value);

  public:
  // optional fixed64 legacy_challenge = 3;
  bool has_legacy_challenge() const;
  void clear_legacy_challenge() ;
  ::uint64_t legacy_challenge() const;
  void set_legacy_challenge(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_challenge() const;
  void _internal_set_legacy_challenge(::uint64_t value);

  public:
  // optional fixed32 legacy_router_timestamp = 4;
  bool has_legacy_router_timestamp() const;
  void clear_legacy_router_timestamp() ;
  ::uint32_t legacy_router_timestamp() const;
  void set_legacy_router_timestamp(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_router_timestamp() const;
  void _internal_set_legacy_router_timestamp(::uint32_t value);

  public:
  // optional fixed32 legacy_your_public_port = 5;
  bool has_legacy_your_public_port() const;
  void clear_legacy_your_public_port() ;
  ::uint32_t legacy_your_public_port() const;
  void set_legacy_your_public_port(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_your_public_port() const;
  void _internal_set_legacy_your_public_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverPingRequestEnvelope)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   1, 0,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramGameserverPingRequestEnvelope& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signed_data_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::google::protobuf::internal::ArenaStringPtr dummy_pad_;
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE cert_;
    ::uint32_t legacy_your_public_ip_;
    ::uint32_t legacy_relay_unix_time_;
    ::uint64_t legacy_challenge_;
    ::uint32_t legacy_router_timestamp_;
    ::uint32_t legacy_your_public_port_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverPingRequestEnvelope_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverPingRequestBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverPingRequestBody) */ {
 public:
  inline CMsgSteamDatagramGameserverPingRequestBody() : CMsgSteamDatagramGameserverPingRequestBody(nullptr) {}
  ~CMsgSteamDatagramGameserverPingRequestBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramGameserverPingRequestBody* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramGameserverPingRequestBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramGameserverPingRequestBody(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramGameserverPingRequestBody(const CMsgSteamDatagramGameserverPingRequestBody& from) : CMsgSteamDatagramGameserverPingRequestBody(nullptr, from) {}
  inline CMsgSteamDatagramGameserverPingRequestBody(CMsgSteamDatagramGameserverPingRequestBody&& from) noexcept
      : CMsgSteamDatagramGameserverPingRequestBody(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramGameserverPingRequestBody& operator=(const CMsgSteamDatagramGameserverPingRequestBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramGameserverPingRequestBody& operator=(CMsgSteamDatagramGameserverPingRequestBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramGameserverPingRequestBody& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramGameserverPingRequestBody*>(
        &_CMsgSteamDatagramGameserverPingRequestBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CMsgSteamDatagramGameserverPingRequestBody& a, CMsgSteamDatagramGameserverPingRequestBody& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramGameserverPingRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramGameserverPingRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramGameserverPingRequestBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramGameserverPingRequestBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramGameserverPingRequestBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramGameserverPingRequestBody& from) { CMsgSteamDatagramGameserverPingRequestBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramGameserverPingRequestBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramGameserverPingRequestBody"; }

 protected:
  explicit CMsgSteamDatagramGameserverPingRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramGameserverPingRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramGameserverPingRequestBody& from);
  CMsgSteamDatagramGameserverPingRequestBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramGameserverPingRequestBody&& from) noexcept
      : CMsgSteamDatagramGameserverPingRequestBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMyIpsFieldNumber = 6,
    kEchoFieldNumber = 8,
    kYourPublicIpFieldNumber = 2,
    kRelayPopidFieldNumber = 1,
    kYourPublicPortFieldNumber = 3,
    kRelayUnixTimeFieldNumber = 4,
    kRoutingSecretFieldNumber = 5,
  };
  // repeated .CMsgSteamNetworkingIPAddress my_ips = 6;
  int my_ips_size() const;
  private:
  int _internal_my_ips_size() const;

  public:
  void clear_my_ips() ;
  ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL mutable_my_ips(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>* PROTOBUF_NONNULL mutable_my_ips();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>& _internal_my_ips() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>* PROTOBUF_NONNULL _internal_mutable_my_ips();
  public:
  const ::CMsgSteamNetworkingIPAddress& my_ips(int index) const;
  ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL add_my_ips();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>& my_ips() const;
  // optional bytes echo = 8;
  bool has_echo() const;
  void clear_echo() ;
  const std::string& echo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_echo(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_echo();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_echo();
  void set_allocated_echo(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_echo() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_echo(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_echo();

  public:
  // optional .CMsgSteamNetworkingIPAddress your_public_ip = 2;
  bool has_your_public_ip() const;
  void clear_your_public_ip() ;
  const ::CMsgSteamNetworkingIPAddress& your_public_ip() const;
  [[nodiscard]] ::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE release_your_public_ip();
  ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL mutable_your_public_ip();
  void set_allocated_your_public_ip(::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_your_public_ip(::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE value);
  ::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE unsafe_arena_release_your_public_ip();

  private:
  const ::CMsgSteamNetworkingIPAddress& _internal_your_public_ip() const;
  ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL _internal_mutable_your_public_ip();

  public:
  // optional fixed32 relay_popid = 1;
  bool has_relay_popid() const;
  void clear_relay_popid() ;
  ::uint32_t relay_popid() const;
  void set_relay_popid(::uint32_t value);

  private:
  ::uint32_t _internal_relay_popid() const;
  void _internal_set_relay_popid(::uint32_t value);

  public:
  // optional uint32 your_public_port = 3;
  bool has_your_public_port() const;
  void clear_your_public_port() ;
  ::uint32_t your_public_port() const;
  void set_your_public_port(::uint32_t value);

  private:
  ::uint32_t _internal_your_public_port() const;
  void _internal_set_your_public_port(::uint32_t value);

  public:
  // optional uint64 relay_unix_time = 4;
  bool has_relay_unix_time() const;
  void clear_relay_unix_time() ;
  ::uint64_t relay_unix_time() const;
  void set_relay_unix_time(::uint64_t value);

  private:
  ::uint64_t _internal_relay_unix_time() const;
  void _internal_set_relay_unix_time(::uint64_t value);

  public:
  // optional fixed64 routing_secret = 5;
  bool has_routing_secret() const;
  void clear_routing_secret() ;
  ::uint64_t routing_secret() const;
  void set_routing_secret(::uint64_t value);

  private:
  ::uint64_t _internal_routing_secret() const;
  void _internal_set_routing_secret(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverPingRequestBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramGameserverPingRequestBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamNetworkingIPAddress > my_ips_;
    ::google::protobuf::internal::ArenaStringPtr echo_;
    ::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE your_public_ip_;
    ::uint32_t relay_popid_;
    ::uint32_t your_public_port_;
    ::uint64_t relay_unix_time_;
    ::uint64_t routing_secret_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramGameserverPingRequestBody_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectRequest) */ {
 public:
  inline CMsgSteamDatagramConnectRequest() : CMsgSteamDatagramConnectRequest(nullptr) {}
  ~CMsgSteamDatagramConnectRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectRequest(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectRequest(const CMsgSteamDatagramConnectRequest& from) : CMsgSteamDatagramConnectRequest(nullptr, from) {}
  inline CMsgSteamDatagramConnectRequest(CMsgSteamDatagramConnectRequest&& from) noexcept
      : CMsgSteamDatagramConnectRequest(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectRequest& operator=(const CMsgSteamDatagramConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectRequest& operator=(CMsgSteamDatagramConnectRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectRequest& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectRequest*>(
        &_CMsgSteamDatagramConnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(CMsgSteamDatagramConnectRequest& a, CMsgSteamDatagramConnectRequest& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectRequest& from) { CMsgSteamDatagramConnectRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectRequest"; }

 protected:
  explicit CMsgSteamDatagramConnectRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectRequest& from);
  CMsgSteamDatagramConnectRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectRequest&& from) noexcept
      : CMsgSteamDatagramConnectRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCryptFieldNumber = 6,
    kCertFieldNumber = 7,
    kConnectionIdFieldNumber = 1,
    kGameserverRelaySessionIdFieldNumber = 2,
    kLegacyClientSteamIdFieldNumber = 3,
    kMyTimestampFieldNumber = 4,
    kPingEstMsFieldNumber = 5,
    kVirtualPortFieldNumber = 9,
    kRoutingSecretFieldNumber = 10,
  };
  // optional .CMsgSteamDatagramSessionCryptInfoSigned crypt = 6;
  bool has_crypt() const;
  void clear_crypt() ;
  const ::CMsgSteamDatagramSessionCryptInfoSigned& crypt() const;
  [[nodiscard]] ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE release_crypt();
  ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL mutable_crypt();
  void set_allocated_crypt(::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_crypt(::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE unsafe_arena_release_crypt();

  private:
  const ::CMsgSteamDatagramSessionCryptInfoSigned& _internal_crypt() const;
  ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL _internal_mutable_crypt();

  public:
  // optional .CMsgSteamDatagramCertificateSigned cert = 7;
  bool has_cert() const;
  void clear_cert() ;
  const ::CMsgSteamDatagramCertificateSigned& cert() const;
  [[nodiscard]] ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE release_cert();
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL mutable_cert();
  void set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE unsafe_arena_release_cert();

  private:
  const ::CMsgSteamDatagramCertificateSigned& _internal_cert() const;
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL _internal_mutable_cert();

  public:
  // optional fixed32 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional uint32 gameserver_relay_session_id = 2;
  bool has_gameserver_relay_session_id() const;
  void clear_gameserver_relay_session_id() ;
  ::uint32_t gameserver_relay_session_id() const;
  void set_gameserver_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_gameserver_relay_session_id() const;
  void _internal_set_gameserver_relay_session_id(::uint32_t value);

  public:
  // optional fixed64 legacy_client_steam_id = 3;
  bool has_legacy_client_steam_id() const;
  void clear_legacy_client_steam_id() ;
  ::uint64_t legacy_client_steam_id() const;
  void set_legacy_client_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_client_steam_id() const;
  void _internal_set_legacy_client_steam_id(::uint64_t value);

  public:
  // optional fixed64 my_timestamp = 4;
  bool has_my_timestamp() const;
  void clear_my_timestamp() ;
  ::uint64_t my_timestamp() const;
  void set_my_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_my_timestamp() const;
  void _internal_set_my_timestamp(::uint64_t value);

  public:
  // optional uint32 ping_est_ms = 5;
  bool has_ping_est_ms() const;
  void clear_ping_est_ms() ;
  ::uint32_t ping_est_ms() const;
  void set_ping_est_ms(::uint32_t value);

  private:
  ::uint32_t _internal_ping_est_ms() const;
  void _internal_set_ping_est_ms(::uint32_t value);

  public:
  // optional uint32 virtual_port = 9;
  bool has_virtual_port() const;
  void clear_virtual_port() ;
  ::uint32_t virtual_port() const;
  void set_virtual_port(::uint32_t value);

  private:
  ::uint32_t _internal_virtual_port() const;
  void _internal_set_virtual_port(::uint32_t value);

  public:
  // optional fixed64 routing_secret = 10;
  bool has_routing_secret() const;
  void clear_routing_secret() ;
  ::uint64_t routing_secret() const;
  void set_routing_secret(::uint64_t value);

  private:
  ::uint64_t _internal_routing_secret() const;
  void _internal_set_routing_secret(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE crypt_;
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE cert_;
    ::uint32_t connection_id_;
    ::uint32_t gameserver_relay_session_id_;
    ::uint64_t legacy_client_steam_id_;
    ::uint64_t my_timestamp_;
    ::uint32_t ping_est_ms_;
    ::uint32_t virtual_port_;
    ::uint64_t routing_secret_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectRequest_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectOK final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectOK) */ {
 public:
  inline CMsgSteamDatagramConnectOK() : CMsgSteamDatagramConnectOK(nullptr) {}
  ~CMsgSteamDatagramConnectOK() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectOK* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectOK));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectOK(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectOK(const CMsgSteamDatagramConnectOK& from) : CMsgSteamDatagramConnectOK(nullptr, from) {}
  inline CMsgSteamDatagramConnectOK(CMsgSteamDatagramConnectOK&& from) noexcept
      : CMsgSteamDatagramConnectOK(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectOK& operator=(const CMsgSteamDatagramConnectOK& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectOK& operator=(CMsgSteamDatagramConnectOK&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectOK& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectOK*>(
        &_CMsgSteamDatagramConnectOK_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(CMsgSteamDatagramConnectOK& a, CMsgSteamDatagramConnectOK& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectOK* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectOK* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectOK* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectOK>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectOK& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectOK& from) { CMsgSteamDatagramConnectOK::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectOK* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectOK"; }

 protected:
  explicit CMsgSteamDatagramConnectOK(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectOK(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectOK& from);
  CMsgSteamDatagramConnectOK(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectOK&& from) noexcept
      : CMsgSteamDatagramConnectOK(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCryptFieldNumber = 5,
    kCertFieldNumber = 6,
    kClientConnectionIdFieldNumber = 1,
    kGameserverRelaySessionIdFieldNumber = 2,
    kYourTimestampFieldNumber = 3,
    kDelayTimeUsecFieldNumber = 4,
    kServerConnectionIdFieldNumber = 7,
  };
  // optional .CMsgSteamDatagramSessionCryptInfoSigned crypt = 5;
  bool has_crypt() const;
  void clear_crypt() ;
  const ::CMsgSteamDatagramSessionCryptInfoSigned& crypt() const;
  [[nodiscard]] ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE release_crypt();
  ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL mutable_crypt();
  void set_allocated_crypt(::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_crypt(::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE unsafe_arena_release_crypt();

  private:
  const ::CMsgSteamDatagramSessionCryptInfoSigned& _internal_crypt() const;
  ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL _internal_mutable_crypt();

  public:
  // optional .CMsgSteamDatagramCertificateSigned cert = 6;
  bool has_cert() const;
  void clear_cert() ;
  const ::CMsgSteamDatagramCertificateSigned& cert() const;
  [[nodiscard]] ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE release_cert();
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL mutable_cert();
  void set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE unsafe_arena_release_cert();

  private:
  const ::CMsgSteamDatagramCertificateSigned& _internal_cert() const;
  ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL _internal_mutable_cert();

  public:
  // optional fixed32 client_connection_id = 1;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional uint32 gameserver_relay_session_id = 2;
  bool has_gameserver_relay_session_id() const;
  void clear_gameserver_relay_session_id() ;
  ::uint32_t gameserver_relay_session_id() const;
  void set_gameserver_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_gameserver_relay_session_id() const;
  void _internal_set_gameserver_relay_session_id(::uint32_t value);

  public:
  // optional fixed64 your_timestamp = 3;
  bool has_your_timestamp() const;
  void clear_your_timestamp() ;
  ::uint64_t your_timestamp() const;
  void set_your_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_your_timestamp() const;
  void _internal_set_your_timestamp(::uint64_t value);

  public:
  // optional uint32 delay_time_usec = 4;
  bool has_delay_time_usec() const;
  void clear_delay_time_usec() ;
  ::uint32_t delay_time_usec() const;
  void set_delay_time_usec(::uint32_t value);

  private:
  ::uint32_t _internal_delay_time_usec() const;
  void _internal_set_delay_time_usec(::uint32_t value);

  public:
  // optional fixed32 server_connection_id = 7;
  bool has_server_connection_id() const;
  void clear_server_connection_id() ;
  ::uint32_t server_connection_id() const;
  void set_server_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_server_connection_id() const;
  void _internal_set_server_connection_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectOK)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectOK& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE crypt_;
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE cert_;
    ::uint32_t client_connection_id_;
    ::uint32_t gameserver_relay_session_id_;
    ::uint64_t your_timestamp_;
    ::uint32_t delay_time_usec_;
    ::uint32_t server_connection_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectOK_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramClientSwitchedPrimary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientSwitchedPrimary) */ {
 public:
  inline CMsgSteamDatagramClientSwitchedPrimary() : CMsgSteamDatagramClientSwitchedPrimary(nullptr) {}
  ~CMsgSteamDatagramClientSwitchedPrimary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramClientSwitchedPrimary* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramClientSwitchedPrimary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramClientSwitchedPrimary(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramClientSwitchedPrimary(const CMsgSteamDatagramClientSwitchedPrimary& from) : CMsgSteamDatagramClientSwitchedPrimary(nullptr, from) {}
  inline CMsgSteamDatagramClientSwitchedPrimary(CMsgSteamDatagramClientSwitchedPrimary&& from) noexcept
      : CMsgSteamDatagramClientSwitchedPrimary(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramClientSwitchedPrimary& operator=(const CMsgSteamDatagramClientSwitchedPrimary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramClientSwitchedPrimary& operator=(CMsgSteamDatagramClientSwitchedPrimary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramClientSwitchedPrimary& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramClientSwitchedPrimary*>(
        &_CMsgSteamDatagramClientSwitchedPrimary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CMsgSteamDatagramClientSwitchedPrimary& a, CMsgSteamDatagramClientSwitchedPrimary& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramClientSwitchedPrimary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramClientSwitchedPrimary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientSwitchedPrimary* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramClientSwitchedPrimary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramClientSwitchedPrimary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramClientSwitchedPrimary& from) { CMsgSteamDatagramClientSwitchedPrimary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramClientSwitchedPrimary* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramClientSwitchedPrimary"; }

 protected:
  explicit CMsgSteamDatagramClientSwitchedPrimary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramClientSwitchedPrimary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramClientSwitchedPrimary& from);
  CMsgSteamDatagramClientSwitchedPrimary(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramClientSwitchedPrimary&& from) noexcept
      : CMsgSteamDatagramClientSwitchedPrimary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RouterQuality = CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;

  // accessors -------------------------------------------------------
  enum : int {
    kFromDroppedReasonFieldNumber = 7,
    kFromQualityNowFieldNumber = 9,
    kToQualityNowFieldNumber = 10,
    kFromQualityThenFieldNumber = 11,
    kToQualityThenFieldNumber = 12,
    kConnectionIdFieldNumber = 1,
    kFromIpFieldNumber = 2,
    kFromPortFieldNumber = 3,
    kFromRouterClusterFieldNumber = 4,
    kFromActiveTimeFieldNumber = 5,
    kFromActivePacketsRecvFieldNumber = 6,
    kGapMsFieldNumber = 8,
  };
  // optional string from_dropped_reason = 7;
  bool has_from_dropped_reason() const;
  void clear_from_dropped_reason() ;
  const std::string& from_dropped_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_dropped_reason(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_from_dropped_reason();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_from_dropped_reason();
  void set_allocated_from_dropped_reason(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_from_dropped_reason() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_from_dropped_reason(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_from_dropped_reason();

  public:
  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_now = 9;
  bool has_from_quality_now() const;
  void clear_from_quality_now() ;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from_quality_now() const;
  [[nodiscard]] ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE release_from_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL mutable_from_quality_now();
  void set_allocated_from_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_from_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE unsafe_arena_release_from_quality_now();

  private:
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& _internal_from_quality_now() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL _internal_mutable_from_quality_now();

  public:
  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_now = 10;
  bool has_to_quality_now() const;
  void clear_to_quality_now() ;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& to_quality_now() const;
  [[nodiscard]] ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE release_to_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL mutable_to_quality_now();
  void set_allocated_to_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_to_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE unsafe_arena_release_to_quality_now();

  private:
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& _internal_to_quality_now() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL _internal_mutable_to_quality_now();

  public:
  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_then = 11;
  bool has_from_quality_then() const;
  void clear_from_quality_then() ;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from_quality_then() const;
  [[nodiscard]] ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE release_from_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL mutable_from_quality_then();
  void set_allocated_from_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_from_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE unsafe_arena_release_from_quality_then();

  private:
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& _internal_from_quality_then() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL _internal_mutable_from_quality_then();

  public:
  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_then = 12;
  bool has_to_quality_then() const;
  void clear_to_quality_then() ;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& to_quality_then() const;
  [[nodiscard]] ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE release_to_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL mutable_to_quality_then();
  void set_allocated_to_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_to_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE unsafe_arena_release_to_quality_then();

  private:
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& _internal_to_quality_then() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL _internal_mutable_to_quality_then();

  public:
  // optional fixed32 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional fixed32 from_ip = 2;
  bool has_from_ip() const;
  void clear_from_ip() ;
  ::uint32_t from_ip() const;
  void set_from_ip(::uint32_t value);

  private:
  ::uint32_t _internal_from_ip() const;
  void _internal_set_from_ip(::uint32_t value);

  public:
  // optional uint32 from_port = 3;
  bool has_from_port() const;
  void clear_from_port() ;
  ::uint32_t from_port() const;
  void set_from_port(::uint32_t value);

  private:
  ::uint32_t _internal_from_port() const;
  void _internal_set_from_port(::uint32_t value);

  public:
  // optional fixed32 from_router_cluster = 4;
  bool has_from_router_cluster() const;
  void clear_from_router_cluster() ;
  ::uint32_t from_router_cluster() const;
  void set_from_router_cluster(::uint32_t value);

  private:
  ::uint32_t _internal_from_router_cluster() const;
  void _internal_set_from_router_cluster(::uint32_t value);

  public:
  // optional uint32 from_active_time = 5;
  bool has_from_active_time() const;
  void clear_from_active_time() ;
  ::uint32_t from_active_time() const;
  void set_from_active_time(::uint32_t value);

  private:
  ::uint32_t _internal_from_active_time() const;
  void _internal_set_from_active_time(::uint32_t value);

  public:
  // optional uint32 from_active_packets_recv = 6;
  bool has_from_active_packets_recv() const;
  void clear_from_active_packets_recv() ;
  ::uint32_t from_active_packets_recv() const;
  void set_from_active_packets_recv(::uint32_t value);

  private:
  ::uint32_t _internal_from_active_packets_recv() const;
  void _internal_set_from_active_packets_recv(::uint32_t value);

  public:
  // optional uint32 gap_ms = 8;
  bool has_gap_ms() const;
  void clear_gap_ms() ;
  ::uint32_t gap_ms() const;
  void set_gap_ms(::uint32_t value);

  private:
  ::uint32_t _internal_gap_ms() const;
  void _internal_set_gap_ms(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientSwitchedPrimary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 12,
                                   4, 74,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramClientSwitchedPrimary& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr from_dropped_reason_;
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE from_quality_now_;
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE to_quality_now_;
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE from_quality_then_;
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE to_quality_then_;
    ::uint32_t connection_id_;
    ::uint32_t from_ip_;
    ::uint32_t from_port_;
    ::uint32_t from_router_cluster_;
    ::uint32_t from_active_time_;
    ::uint32_t from_active_packets_recv_;
    ::uint32_t gap_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientSwitchedPrimary_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply_POP final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleReply.POP) */ {
 public:
  inline CMsgSteamDatagramClientPingSampleReply_POP() : CMsgSteamDatagramClientPingSampleReply_POP(nullptr) {}
  ~CMsgSteamDatagramClientPingSampleReply_POP() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramClientPingSampleReply_POP));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramClientPingSampleReply_POP(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramClientPingSampleReply_POP(const CMsgSteamDatagramClientPingSampleReply_POP& from) : CMsgSteamDatagramClientPingSampleReply_POP(nullptr, from) {}
  inline CMsgSteamDatagramClientPingSampleReply_POP(CMsgSteamDatagramClientPingSampleReply_POP&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply_POP(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramClientPingSampleReply_POP& operator=(const CMsgSteamDatagramClientPingSampleReply_POP& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramClientPingSampleReply_POP& operator=(CMsgSteamDatagramClientPingSampleReply_POP&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramClientPingSampleReply_POP& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramClientPingSampleReply_POP*>(
        &_CMsgSteamDatagramClientPingSampleReply_POP_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(CMsgSteamDatagramClientPingSampleReply_POP& a, CMsgSteamDatagramClientPingSampleReply_POP& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramClientPingSampleReply_POP>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply_POP& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply_POP& from) { CMsgSteamDatagramClientPingSampleReply_POP::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramClientPingSampleReply.POP"; }

 protected:
  explicit CMsgSteamDatagramClientPingSampleReply_POP(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramClientPingSampleReply_POP(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramClientPingSampleReply_POP& from);
  CMsgSteamDatagramClientPingSampleReply_POP(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramClientPingSampleReply_POP&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply_POP(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AltAddress = CMsgSteamDatagramClientPingSampleReply_POP_AltAddress;

  // accessors -------------------------------------------------------
  enum : int {
    kAltAddressesFieldNumber = 7,
    kPopIdFieldNumber = 1,
    kDefaultFrontPingMsFieldNumber = 2,
    kDefaultE2EPingMsFieldNumber = 3,
    kClusterPenaltyFieldNumber = 4,
    kDefaultE2EScoreFieldNumber = 5,
    kP2PViaPeerRelayPopIdFieldNumber = 6,
    kBestDcPingMsFieldNumber = 9,
    kBestDcScoreFieldNumber = 10,
    kBestDcViaRelayPopIdFieldNumber = 11,
    kDefaultDcPingMsFieldNumber = 12,
    kDefaultDcScoreFieldNumber = 13,
    kDefaultDcViaRelayPopIdFieldNumber = 14,
    kTestDcPingMsFieldNumber = 15,
    kTestDcScoreFieldNumber = 16,
    kTestDcViaRelayPopIdFieldNumber = 17,
  };
  // repeated .CMsgSteamDatagramClientPingSampleReply.POP.AltAddress alt_addresses = 7;
  int alt_addresses_size() const;
  private:
  int _internal_alt_addresses_size() const;

  public:
  void clear_alt_addresses() ;
  ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL mutable_alt_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>* PROTOBUF_NONNULL mutable_alt_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>& _internal_alt_addresses() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>* PROTOBUF_NONNULL _internal_mutable_alt_addresses();
  public:
  const ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& alt_addresses(int index) const;
  ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL add_alt_addresses();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>& alt_addresses() const;
  // optional fixed32 pop_id = 1;
  bool has_pop_id() const;
  void clear_pop_id() ;
  ::uint32_t pop_id() const;
  void set_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_pop_id() const;
  void _internal_set_pop_id(::uint32_t value);

  public:
  // optional uint32 default_front_ping_ms = 2;
  bool has_default_front_ping_ms() const;
  void clear_default_front_ping_ms() ;
  ::uint32_t default_front_ping_ms() const;
  void set_default_front_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_default_front_ping_ms() const;
  void _internal_set_default_front_ping_ms(::uint32_t value);

  public:
  // optional uint32 default_e2e_ping_ms = 3;
  bool has_default_e2e_ping_ms() const;
  void clear_default_e2e_ping_ms() ;
  ::uint32_t default_e2e_ping_ms() const;
  void set_default_e2e_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_default_e2e_ping_ms() const;
  void _internal_set_default_e2e_ping_ms(::uint32_t value);

  public:
  // optional uint32 cluster_penalty = 4;
  bool has_cluster_penalty() const;
  void clear_cluster_penalty() ;
  ::uint32_t cluster_penalty() const;
  void set_cluster_penalty(::uint32_t value);

  private:
  ::uint32_t _internal_cluster_penalty() const;
  void _internal_set_cluster_penalty(::uint32_t value);

  public:
  // optional uint32 default_e2e_score = 5;
  bool has_default_e2e_score() const;
  void clear_default_e2e_score() ;
  ::uint32_t default_e2e_score() const;
  void set_default_e2e_score(::uint32_t value);

  private:
  ::uint32_t _internal_default_e2e_score() const;
  void _internal_set_default_e2e_score(::uint32_t value);

  public:
  // optional fixed32 p2p_via_peer_relay_pop_id = 6;
  bool has_p2p_via_peer_relay_pop_id() const;
  void clear_p2p_via_peer_relay_pop_id() ;
  ::uint32_t p2p_via_peer_relay_pop_id() const;
  void set_p2p_via_peer_relay_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_p2p_via_peer_relay_pop_id() const;
  void _internal_set_p2p_via_peer_relay_pop_id(::uint32_t value);

  public:
  // optional uint32 best_dc_ping_ms = 9;
  bool has_best_dc_ping_ms() const;
  void clear_best_dc_ping_ms() ;
  ::uint32_t best_dc_ping_ms() const;
  void set_best_dc_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_best_dc_ping_ms() const;
  void _internal_set_best_dc_ping_ms(::uint32_t value);

  public:
  // optional uint32 best_dc_score = 10;
  bool has_best_dc_score() const;
  void clear_best_dc_score() ;
  ::uint32_t best_dc_score() const;
  void set_best_dc_score(::uint32_t value);

  private:
  ::uint32_t _internal_best_dc_score() const;
  void _internal_set_best_dc_score(::uint32_t value);

  public:
  // optional fixed32 best_dc_via_relay_pop_id = 11;
  bool has_best_dc_via_relay_pop_id() const;
  void clear_best_dc_via_relay_pop_id() ;
  ::uint32_t best_dc_via_relay_pop_id() const;
  void set_best_dc_via_relay_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_best_dc_via_relay_pop_id() const;
  void _internal_set_best_dc_via_relay_pop_id(::uint32_t value);

  public:
  // optional uint32 default_dc_ping_ms = 12;
  bool has_default_dc_ping_ms() const;
  void clear_default_dc_ping_ms() ;
  ::uint32_t default_dc_ping_ms() const;
  void set_default_dc_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_default_dc_ping_ms() const;
  void _internal_set_default_dc_ping_ms(::uint32_t value);

  public:
  // optional uint32 default_dc_score = 13;
  bool has_default_dc_score() const;
  void clear_default_dc_score() ;
  ::uint32_t default_dc_score() const;
  void set_default_dc_score(::uint32_t value);

  private:
  ::uint32_t _internal_default_dc_score() const;
  void _internal_set_default_dc_score(::uint32_t value);

  public:
  // optional fixed32 default_dc_via_relay_pop_id = 14;
  bool has_default_dc_via_relay_pop_id() const;
  void clear_default_dc_via_relay_pop_id() ;
  ::uint32_t default_dc_via_relay_pop_id() const;
  void set_default_dc_via_relay_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_default_dc_via_relay_pop_id() const;
  void _internal_set_default_dc_via_relay_pop_id(::uint32_t value);

  public:
  // optional uint32 test_dc_ping_ms = 15;
  bool has_test_dc_ping_ms() const;
  void clear_test_dc_ping_ms() ;
  ::uint32_t test_dc_ping_ms() const;
  void set_test_dc_ping_ms(::uint32_t value);

  private:
  ::uint32_t _internal_test_dc_ping_ms() const;
  void _internal_set_test_dc_ping_ms(::uint32_t value);

  public:
  // optional uint32 test_dc_score = 16;
  bool has_test_dc_score() const;
  void clear_test_dc_score() ;
  ::uint32_t test_dc_score() const;
  void set_test_dc_score(::uint32_t value);

  private:
  ::uint32_t _internal_test_dc_score() const;
  void _internal_set_test_dc_score(::uint32_t value);

  public:
  // optional fixed32 test_dc_via_relay_pop_id = 17;
  bool has_test_dc_via_relay_pop_id() const;
  void clear_test_dc_via_relay_pop_id() ;
  ::uint32_t test_dc_via_relay_pop_id() const;
  void set_test_dc_via_relay_pop_id(::uint32_t value);

  private:
  ::uint32_t _internal_test_dc_via_relay_pop_id() const;
  void _internal_set_test_dc_via_relay_pop_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply.POP)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 16,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramClientPingSampleReply_POP& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress > alt_addresses_;
    ::uint32_t pop_id_;
    ::uint32_t default_front_ping_ms_;
    ::uint32_t default_e2e_ping_ms_;
    ::uint32_t cluster_penalty_;
    ::uint32_t default_e2e_score_;
    ::uint32_t p2p_via_peer_relay_pop_id_;
    ::uint32_t best_dc_ping_ms_;
    ::uint32_t best_dc_score_;
    ::uint32_t best_dc_via_relay_pop_id_;
    ::uint32_t default_dc_ping_ms_;
    ::uint32_t default_dc_score_;
    ::uint32_t default_dc_via_relay_pop_id_;
    ::uint32_t test_dc_ping_ms_;
    ::uint32_t test_dc_score_;
    ::uint32_t test_dc_via_relay_pop_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_POP_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramNoConnection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramNoConnection) */ {
 public:
  inline CMsgSteamDatagramNoConnection() : CMsgSteamDatagramNoConnection(nullptr) {}
  ~CMsgSteamDatagramNoConnection() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramNoConnection* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramNoConnection));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramNoConnection(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramNoConnection(const CMsgSteamDatagramNoConnection& from) : CMsgSteamDatagramNoConnection(nullptr, from) {}
  inline CMsgSteamDatagramNoConnection(CMsgSteamDatagramNoConnection&& from) noexcept
      : CMsgSteamDatagramNoConnection(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramNoConnection& operator=(const CMsgSteamDatagramNoConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramNoConnection& operator=(CMsgSteamDatagramNoConnection&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramNoConnection& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramNoConnection*>(
        &_CMsgSteamDatagramNoConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(CMsgSteamDatagramNoConnection& a, CMsgSteamDatagramNoConnection& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramNoConnection* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramNoConnection* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramNoConnection* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramNoConnection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramNoConnection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramNoConnection& from) { CMsgSteamDatagramNoConnection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramNoConnection* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramNoConnection"; }

 protected:
  explicit CMsgSteamDatagramNoConnection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramNoConnection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramNoConnection& from);
  CMsgSteamDatagramNoConnection(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramNoConnection&& from) noexcept
      : CMsgSteamDatagramNoConnection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromIdentityStringFieldNumber = 7,
    kQualityRelayFieldNumber = 13,
    kQualityE2EFieldNumber = 14,
    kP2PRoutingSummaryFieldNumber = 16,
    kLegacyFromSteamIdFieldNumber = 3,
    kLegacyGameserverRelaySessionIdFieldNumber = 2,
    kToConnectionIdFieldNumber = 5,
    kFromConnectionIdFieldNumber = 6,
    kToRelaySessionIdFieldNumber = 9,
    kRoutingSecretFieldNumber = 11,
    kFromRelaySessionIdFieldNumber = 10,
    kEndToEndFieldNumber = 4,
    kNotPrimarySessionFieldNumber = 12,
    kNotPrimaryTransportFieldNumber = 15,
    kRelayOverrideActiveFieldNumber = 17,
    kDummyPadFieldNumber = 1023,
  };
  // optional string from_identity_string = 7;
  bool has_from_identity_string() const;
  void clear_from_identity_string() ;
  const std::string& from_identity_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_identity_string(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_from_identity_string();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_from_identity_string();
  void set_allocated_from_identity_string(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_from_identity_string() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_from_identity_string(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_from_identity_string();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 13;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 14;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional .CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 16;
  bool has_p2p_routing_summary() const;
  void clear_p2p_routing_summary() ;
  const ::CMsgSteamDatagramP2PRoutingSummary& p2p_routing_summary() const;
  [[nodiscard]] ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE release_p2p_routing_summary();
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL mutable_p2p_routing_summary();
  void set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE unsafe_arena_release_p2p_routing_summary();

  private:
  const ::CMsgSteamDatagramP2PRoutingSummary& _internal_p2p_routing_summary() const;
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL _internal_mutable_p2p_routing_summary();

  public:
  // optional fixed64 legacy_from_steam_id = 3;
  bool has_legacy_from_steam_id() const;
  void clear_legacy_from_steam_id() ;
  ::uint64_t legacy_from_steam_id() const;
  void set_legacy_from_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_from_steam_id() const;
  void _internal_set_legacy_from_steam_id(::uint64_t value);

  public:
  // optional uint32 legacy_gameserver_relay_session_id = 2;
  bool has_legacy_gameserver_relay_session_id() const;
  void clear_legacy_gameserver_relay_session_id() ;
  ::uint32_t legacy_gameserver_relay_session_id() const;
  void set_legacy_gameserver_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_gameserver_relay_session_id() const;
  void _internal_set_legacy_gameserver_relay_session_id(::uint32_t value);

  public:
  // optional fixed32 to_connection_id = 5;
  bool has_to_connection_id() const;
  void clear_to_connection_id() ;
  ::uint32_t to_connection_id() const;
  void set_to_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_to_connection_id() const;
  void _internal_set_to_connection_id(::uint32_t value);

  public:
  // optional fixed32 from_connection_id = 6;
  bool has_from_connection_id() const;
  void clear_from_connection_id() ;
  ::uint32_t from_connection_id() const;
  void set_from_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_from_connection_id() const;
  void _internal_set_from_connection_id(::uint32_t value);

  public:
  // optional fixed32 to_relay_session_id = 9;
  bool has_to_relay_session_id() const;
  void clear_to_relay_session_id() ;
  ::uint32_t to_relay_session_id() const;
  void set_to_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_to_relay_session_id() const;
  void _internal_set_to_relay_session_id(::uint32_t value);

  public:
  // optional fixed64 routing_secret = 11;
  bool has_routing_secret() const;
  void clear_routing_secret() ;
  ::uint64_t routing_secret() const;
  void set_routing_secret(::uint64_t value);

  private:
  ::uint64_t _internal_routing_secret() const;
  void _internal_set_routing_secret(::uint64_t value);

  public:
  // optional fixed32 from_relay_session_id = 10;
  bool has_from_relay_session_id() const;
  void clear_from_relay_session_id() ;
  ::uint32_t from_relay_session_id() const;
  void set_from_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_from_relay_session_id() const;
  void _internal_set_from_relay_session_id(::uint32_t value);

  public:
  // optional bool end_to_end = 4;
  bool has_end_to_end() const;
  void clear_end_to_end() ;
  bool end_to_end() const;
  void set_end_to_end(bool value);

  private:
  bool _internal_end_to_end() const;
  void _internal_set_end_to_end(bool value);

  public:
  // optional bool not_primary_session = 12;
  bool has_not_primary_session() const;
  void clear_not_primary_session() ;
  bool not_primary_session() const;
  void set_not_primary_session(bool value);

  private:
  bool _internal_not_primary_session() const;
  void _internal_set_not_primary_session(bool value);

  public:
  // optional bool not_primary_transport = 15;
  bool has_not_primary_transport() const;
  void clear_not_primary_transport() ;
  bool not_primary_transport() const;
  void set_not_primary_transport(bool value);

  private:
  bool _internal_not_primary_transport() const;
  void _internal_set_not_primary_transport(bool value);

  public:
  // optional bool relay_override_active = 17;
  bool has_relay_override_active() const;
  void clear_relay_override_active() ;
  bool relay_override_active() const;
  void set_relay_override_active(bool value);

  private:
  bool _internal_relay_override_active() const;
  void _internal_set_relay_override_active(bool value);

  public:
  // optional fixed32 dummy_pad = 1023;
  bool has_dummy_pad() const;
  void clear_dummy_pad() ;
  ::uint32_t dummy_pad() const;
  void set_dummy_pad(::uint32_t value);

  private:
  ::uint32_t _internal_dummy_pad() const;
  void _internal_set_dummy_pad(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramNoConnection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 16,
                                   3, 74,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramNoConnection& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr from_identity_string_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE p2p_routing_summary_;
    ::uint64_t legacy_from_steam_id_;
    ::uint32_t legacy_gameserver_relay_session_id_;
    ::uint32_t to_connection_id_;
    ::uint32_t from_connection_id_;
    ::uint32_t to_relay_session_id_;
    ::uint64_t routing_secret_;
    ::uint32_t from_relay_session_id_;
    bool end_to_end_;
    bool not_primary_session_;
    bool not_primary_transport_;
    bool relay_override_active_;
    ::uint32_t dummy_pad_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramNoConnection_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsServerToRouter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsServerToRouter) */ {
 public:
  inline CMsgSteamDatagramConnectionStatsServerToRouter() : CMsgSteamDatagramConnectionStatsServerToRouter(nullptr) {}
  ~CMsgSteamDatagramConnectionStatsServerToRouter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectionStatsServerToRouter* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectionStatsServerToRouter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectionStatsServerToRouter(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectionStatsServerToRouter(const CMsgSteamDatagramConnectionStatsServerToRouter& from) : CMsgSteamDatagramConnectionStatsServerToRouter(nullptr, from) {}
  inline CMsgSteamDatagramConnectionStatsServerToRouter(CMsgSteamDatagramConnectionStatsServerToRouter&& from) noexcept
      : CMsgSteamDatagramConnectionStatsServerToRouter(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectionStatsServerToRouter& operator=(const CMsgSteamDatagramConnectionStatsServerToRouter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectionStatsServerToRouter& operator=(CMsgSteamDatagramConnectionStatsServerToRouter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectionStatsServerToRouter& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectionStatsServerToRouter*>(
        &_CMsgSteamDatagramConnectionStatsServerToRouter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(CMsgSteamDatagramConnectionStatsServerToRouter& a, CMsgSteamDatagramConnectionStatsServerToRouter& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectionStatsServerToRouter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectionStatsServerToRouter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsServerToRouter* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectionStatsServerToRouter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsServerToRouter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectionStatsServerToRouter& from) { CMsgSteamDatagramConnectionStatsServerToRouter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectionStatsServerToRouter* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectionStatsServerToRouter"; }

 protected:
  explicit CMsgSteamDatagramConnectionStatsServerToRouter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectionStatsServerToRouter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectionStatsServerToRouter& from);
  CMsgSteamDatagramConnectionStatsServerToRouter(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectionStatsServerToRouter&& from) noexcept
      : CMsgSteamDatagramConnectionStatsServerToRouter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Flags = CMsgSteamDatagramConnectionStatsServerToRouter_Flags;
  static constexpr Flags ACK_REQUEST_RELAY = CMsgSteamDatagramConnectionStatsServerToRouter_Flags_ACK_REQUEST_RELAY;
  static constexpr Flags ACK_REQUEST_E2E = CMsgSteamDatagramConnectionStatsServerToRouter_Flags_ACK_REQUEST_E2E;
  static constexpr Flags ACK_REQUEST_IMMEDIATE = CMsgSteamDatagramConnectionStatsServerToRouter_Flags_ACK_REQUEST_IMMEDIATE;
  static inline bool Flags_IsValid(int value) {
    return CMsgSteamDatagramConnectionStatsServerToRouter_Flags_IsValid(value);
  }
  static constexpr Flags Flags_MIN = CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Flags_MIN;
  static constexpr Flags Flags_MAX = CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Flags_MAX;
  static constexpr int Flags_ARRAYSIZE = CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Flags_descriptor() {
    return CMsgSteamDatagramConnectionStatsServerToRouter_Flags_descriptor();
  }
  template <typename T>
  static inline const std::string& Flags_Name(T value) {
    return CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Name(value);
  }
  static inline bool Flags_Parse(
      absl::string_view name, Flags* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramConnectionStatsServerToRouter_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAckRelayFieldNumber = 8,
    kLegacyAckE2EFieldNumber = 9,
    kQualityRelayFieldNumber = 1,
    kQualityE2EFieldNumber = 2,
    kSeqNumS2RFieldNumber = 3,
    kSeqNumE2EFieldNumber = 4,
    kRelaySessionIdFieldNumber = 6,
    kClientConnectionIdFieldNumber = 7,
    kFlagsFieldNumber = 10,
    kServerConnectionIdFieldNumber = 11,
  };
  // repeated fixed32 ack_relay = 8;
  int ack_relay_size() const;
  private:
  int _internal_ack_relay_size() const;

  public:
  void clear_ack_relay() ;
  ::uint32_t ack_relay(int index) const;
  void set_ack_relay(int index, ::uint32_t value);
  void add_ack_relay(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_ack_relay();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_ack_relay();

  public:
  // repeated fixed32 legacy_ack_e2e = 9;
  int legacy_ack_e2e_size() const;
  private:
  int _internal_legacy_ack_e2e_size() const;

  public:
  void clear_legacy_ack_e2e() ;
  ::uint32_t legacy_ack_e2e(int index) const;
  void set_legacy_ack_e2e(int index, ::uint32_t value);
  void add_legacy_ack_e2e(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_legacy_ack_e2e();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_legacy_ack_e2e();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional uint32 seq_num_s2r = 3;
  bool has_seq_num_s2r() const;
  void clear_seq_num_s2r() ;
  ::uint32_t seq_num_s2r() const;
  void set_seq_num_s2r(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_s2r() const;
  void _internal_set_seq_num_s2r(::uint32_t value);

  public:
  // optional uint32 seq_num_e2e = 4;
  bool has_seq_num_e2e() const;
  void clear_seq_num_e2e() ;
  ::uint32_t seq_num_e2e() const;
  void set_seq_num_e2e(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_e2e() const;
  void _internal_set_seq_num_e2e(::uint32_t value);

  public:
  // optional uint32 relay_session_id = 6;
  bool has_relay_session_id() const;
  void clear_relay_session_id() ;
  ::uint32_t relay_session_id() const;
  void set_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_relay_session_id() const;
  void _internal_set_relay_session_id(::uint32_t value);

  public:
  // optional fixed32 client_connection_id = 7;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional uint32 flags = 10;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional fixed32 server_connection_id = 11;
  bool has_server_connection_id() const;
  void clear_server_connection_id() ;
  ::uint32_t server_connection_id() const;
  void set_server_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_server_connection_id() const;
  void _internal_set_server_connection_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsServerToRouter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectionStatsServerToRouter& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> ack_relay_;
    ::google::protobuf::RepeatedField<::uint32_t> legacy_ack_e2e_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::uint32_t seq_num_s2r_;
    ::uint32_t seq_num_e2e_;
    ::uint32_t relay_session_id_;
    ::uint32_t client_connection_id_;
    ::uint32_t flags_;
    ::uint32_t server_connection_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsServerToRouter_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsRouterToServer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsRouterToServer) */ {
 public:
  inline CMsgSteamDatagramConnectionStatsRouterToServer() : CMsgSteamDatagramConnectionStatsRouterToServer(nullptr) {}
  ~CMsgSteamDatagramConnectionStatsRouterToServer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectionStatsRouterToServer* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectionStatsRouterToServer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectionStatsRouterToServer(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectionStatsRouterToServer(const CMsgSteamDatagramConnectionStatsRouterToServer& from) : CMsgSteamDatagramConnectionStatsRouterToServer(nullptr, from) {}
  inline CMsgSteamDatagramConnectionStatsRouterToServer(CMsgSteamDatagramConnectionStatsRouterToServer&& from) noexcept
      : CMsgSteamDatagramConnectionStatsRouterToServer(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectionStatsRouterToServer& operator=(const CMsgSteamDatagramConnectionStatsRouterToServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectionStatsRouterToServer& operator=(CMsgSteamDatagramConnectionStatsRouterToServer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectionStatsRouterToServer& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectionStatsRouterToServer*>(
        &_CMsgSteamDatagramConnectionStatsRouterToServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(CMsgSteamDatagramConnectionStatsRouterToServer& a, CMsgSteamDatagramConnectionStatsRouterToServer& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectionStatsRouterToServer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectionStatsRouterToServer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsRouterToServer* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectionStatsRouterToServer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsRouterToServer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectionStatsRouterToServer& from) { CMsgSteamDatagramConnectionStatsRouterToServer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectionStatsRouterToServer* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectionStatsRouterToServer"; }

 protected:
  explicit CMsgSteamDatagramConnectionStatsRouterToServer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectionStatsRouterToServer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectionStatsRouterToServer& from);
  CMsgSteamDatagramConnectionStatsRouterToServer(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectionStatsRouterToServer&& from) noexcept
      : CMsgSteamDatagramConnectionStatsRouterToServer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Flags = CMsgSteamDatagramConnectionStatsRouterToServer_Flags;
  static constexpr Flags ACK_REQUEST_RELAY = CMsgSteamDatagramConnectionStatsRouterToServer_Flags_ACK_REQUEST_RELAY;
  static constexpr Flags ACK_REQUEST_E2E = CMsgSteamDatagramConnectionStatsRouterToServer_Flags_ACK_REQUEST_E2E;
  static constexpr Flags ACK_REQUEST_IMMEDIATE = CMsgSteamDatagramConnectionStatsRouterToServer_Flags_ACK_REQUEST_IMMEDIATE;
  static inline bool Flags_IsValid(int value) {
    return CMsgSteamDatagramConnectionStatsRouterToServer_Flags_IsValid(value);
  }
  static constexpr Flags Flags_MIN = CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Flags_MIN;
  static constexpr Flags Flags_MAX = CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Flags_MAX;
  static constexpr int Flags_ARRAYSIZE = CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Flags_descriptor() {
    return CMsgSteamDatagramConnectionStatsRouterToServer_Flags_descriptor();
  }
  template <typename T>
  static inline const std::string& Flags_Name(T value) {
    return CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Name(value);
  }
  static inline bool Flags_Parse(
      absl::string_view name, Flags* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramConnectionStatsRouterToServer_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAckRelayFieldNumber = 10,
    kLegacyAckE2EFieldNumber = 11,
    kClientIdentityStringFieldNumber = 15,
    kQualityRelayFieldNumber = 1,
    kQualityE2EFieldNumber = 2,
    kSeqNumR2SFieldNumber = 5,
    kSeqNumE2EFieldNumber = 6,
    kLegacyClientSteamIdFieldNumber = 7,
    kRelaySessionIdFieldNumber = 8,
    kClientConnectionIdFieldNumber = 9,
    kFlagsFieldNumber = 12,
    kServerConnectionIdFieldNumber = 13,
    kRoutingSecretFieldNumber = 14,
  };
  // repeated fixed32 ack_relay = 10;
  int ack_relay_size() const;
  private:
  int _internal_ack_relay_size() const;

  public:
  void clear_ack_relay() ;
  ::uint32_t ack_relay(int index) const;
  void set_ack_relay(int index, ::uint32_t value);
  void add_ack_relay(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_ack_relay();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_ack_relay();

  public:
  // repeated fixed32 legacy_ack_e2e = 11;
  int legacy_ack_e2e_size() const;
  private:
  int _internal_legacy_ack_e2e_size() const;

  public:
  void clear_legacy_ack_e2e() ;
  ::uint32_t legacy_ack_e2e(int index) const;
  void set_legacy_ack_e2e(int index, ::uint32_t value);
  void add_legacy_ack_e2e(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_legacy_ack_e2e();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_legacy_ack_e2e();

  public:
  // optional string client_identity_string = 15;
  bool has_client_identity_string() const;
  void clear_client_identity_string() ;
  const std::string& client_identity_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_identity_string(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_client_identity_string();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_client_identity_string();
  void set_allocated_client_identity_string(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_client_identity_string() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_client_identity_string(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_client_identity_string();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional uint32 seq_num_r2s = 5;
  bool has_seq_num_r2s() const;
  void clear_seq_num_r2s() ;
  ::uint32_t seq_num_r2s() const;
  void set_seq_num_r2s(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_r2s() const;
  void _internal_set_seq_num_r2s(::uint32_t value);

  public:
  // optional uint32 seq_num_e2e = 6;
  bool has_seq_num_e2e() const;
  void clear_seq_num_e2e() ;
  ::uint32_t seq_num_e2e() const;
  void set_seq_num_e2e(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_e2e() const;
  void _internal_set_seq_num_e2e(::uint32_t value);

  public:
  // optional fixed64 legacy_client_steam_id = 7;
  bool has_legacy_client_steam_id() const;
  void clear_legacy_client_steam_id() ;
  ::uint64_t legacy_client_steam_id() const;
  void set_legacy_client_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_client_steam_id() const;
  void _internal_set_legacy_client_steam_id(::uint64_t value);

  public:
  // optional uint32 relay_session_id = 8;
  bool has_relay_session_id() const;
  void clear_relay_session_id() ;
  ::uint32_t relay_session_id() const;
  void set_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_relay_session_id() const;
  void _internal_set_relay_session_id(::uint32_t value);

  public:
  // optional fixed32 client_connection_id = 9;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional uint32 flags = 12;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional fixed32 server_connection_id = 13;
  bool has_server_connection_id() const;
  void clear_server_connection_id() ;
  ::uint32_t server_connection_id() const;
  void set_server_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_server_connection_id() const;
  void _internal_set_server_connection_id(::uint32_t value);

  public:
  // optional fixed64 routing_secret = 14;
  bool has_routing_secret() const;
  void clear_routing_secret() ;
  ::uint64_t routing_secret() const;
  void set_routing_secret(::uint64_t value);

  private:
  ::uint64_t _internal_routing_secret() const;
  void _internal_set_routing_secret(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsRouterToServer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   2, 85,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectionStatsRouterToServer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> ack_relay_;
    ::google::protobuf::RepeatedField<::uint32_t> legacy_ack_e2e_;
    ::google::protobuf::internal::ArenaStringPtr client_identity_string_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::uint32_t seq_num_r2s_;
    ::uint32_t seq_num_e2e_;
    ::uint64_t legacy_client_steam_id_;
    ::uint32_t relay_session_id_;
    ::uint32_t client_connection_id_;
    ::uint32_t flags_;
    ::uint32_t server_connection_id_;
    ::uint64_t routing_secret_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsRouterToServer_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsRouterToClient final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsRouterToClient) */ {
 public:
  inline CMsgSteamDatagramConnectionStatsRouterToClient() : CMsgSteamDatagramConnectionStatsRouterToClient(nullptr) {}
  ~CMsgSteamDatagramConnectionStatsRouterToClient() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectionStatsRouterToClient* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectionStatsRouterToClient));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectionStatsRouterToClient(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectionStatsRouterToClient(const CMsgSteamDatagramConnectionStatsRouterToClient& from) : CMsgSteamDatagramConnectionStatsRouterToClient(nullptr, from) {}
  inline CMsgSteamDatagramConnectionStatsRouterToClient(CMsgSteamDatagramConnectionStatsRouterToClient&& from) noexcept
      : CMsgSteamDatagramConnectionStatsRouterToClient(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectionStatsRouterToClient& operator=(const CMsgSteamDatagramConnectionStatsRouterToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectionStatsRouterToClient& operator=(CMsgSteamDatagramConnectionStatsRouterToClient&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectionStatsRouterToClient& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectionStatsRouterToClient*>(
        &_CMsgSteamDatagramConnectionStatsRouterToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(CMsgSteamDatagramConnectionStatsRouterToClient& a, CMsgSteamDatagramConnectionStatsRouterToClient& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectionStatsRouterToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectionStatsRouterToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsRouterToClient* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectionStatsRouterToClient>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsRouterToClient& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectionStatsRouterToClient& from) { CMsgSteamDatagramConnectionStatsRouterToClient::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectionStatsRouterToClient* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectionStatsRouterToClient"; }

 protected:
  explicit CMsgSteamDatagramConnectionStatsRouterToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectionStatsRouterToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectionStatsRouterToClient& from);
  CMsgSteamDatagramConnectionStatsRouterToClient(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectionStatsRouterToClient&& from) noexcept
      : CMsgSteamDatagramConnectionStatsRouterToClient(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Flags = CMsgSteamDatagramConnectionStatsRouterToClient_Flags;
  static constexpr Flags ACK_REQUEST_RELAY = CMsgSteamDatagramConnectionStatsRouterToClient_Flags_ACK_REQUEST_RELAY;
  static constexpr Flags ACK_REQUEST_E2E = CMsgSteamDatagramConnectionStatsRouterToClient_Flags_ACK_REQUEST_E2E;
  static constexpr Flags ACK_REQUEST_IMMEDIATE = CMsgSteamDatagramConnectionStatsRouterToClient_Flags_ACK_REQUEST_IMMEDIATE;
  static inline bool Flags_IsValid(int value) {
    return CMsgSteamDatagramConnectionStatsRouterToClient_Flags_IsValid(value);
  }
  static constexpr Flags Flags_MIN = CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Flags_MIN;
  static constexpr Flags Flags_MAX = CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Flags_MAX;
  static constexpr int Flags_ARRAYSIZE = CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Flags_descriptor() {
    return CMsgSteamDatagramConnectionStatsRouterToClient_Flags_descriptor();
  }
  template <typename T>
  static inline const std::string& Flags_Name(T value) {
    return CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Name(value);
  }
  static inline bool Flags_Parse(
      absl::string_view name, Flags* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramConnectionStatsRouterToClient_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAckRelayFieldNumber = 13,
    kLegacyAckE2EFieldNumber = 14,
    kQualityRelayFieldNumber = 1,
    kQualityE2EFieldNumber = 2,
    kSecondsUntilShutdownFieldNumber = 6,
    kClientConnectionIdFieldNumber = 7,
    kSeqNumR2CFieldNumber = 8,
    kSeqNumE2EFieldNumber = 9,
    kMigrateRequestIpFieldNumber = 10,
    kMigrateRequestPortFieldNumber = 11,
    kScoringPenaltyRelayClusterFieldNumber = 12,
    kFlagsFieldNumber = 15,
  };
  // repeated fixed32 ack_relay = 13;
  int ack_relay_size() const;
  private:
  int _internal_ack_relay_size() const;

  public:
  void clear_ack_relay() ;
  ::uint32_t ack_relay(int index) const;
  void set_ack_relay(int index, ::uint32_t value);
  void add_ack_relay(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_ack_relay();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_ack_relay();

  public:
  // repeated fixed32 legacy_ack_e2e = 14;
  int legacy_ack_e2e_size() const;
  private:
  int _internal_legacy_ack_e2e_size() const;

  public:
  void clear_legacy_ack_e2e() ;
  ::uint32_t legacy_ack_e2e(int index) const;
  void set_legacy_ack_e2e(int index, ::uint32_t value);
  void add_legacy_ack_e2e(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_legacy_ack_e2e();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_legacy_ack_e2e();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional uint32 seconds_until_shutdown = 6;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown() ;
  ::uint32_t seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::uint32_t value);

  private:
  ::uint32_t _internal_seconds_until_shutdown() const;
  void _internal_set_seconds_until_shutdown(::uint32_t value);

  public:
  // optional fixed32 client_connection_id = 7;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional uint32 seq_num_r2c = 8;
  bool has_seq_num_r2c() const;
  void clear_seq_num_r2c() ;
  ::uint32_t seq_num_r2c() const;
  void set_seq_num_r2c(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_r2c() const;
  void _internal_set_seq_num_r2c(::uint32_t value);

  public:
  // optional uint32 seq_num_e2e = 9;
  bool has_seq_num_e2e() const;
  void clear_seq_num_e2e() ;
  ::uint32_t seq_num_e2e() const;
  void set_seq_num_e2e(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_e2e() const;
  void _internal_set_seq_num_e2e(::uint32_t value);

  public:
  // optional fixed32 migrate_request_ip = 10;
  bool has_migrate_request_ip() const;
  void clear_migrate_request_ip() ;
  ::uint32_t migrate_request_ip() const;
  void set_migrate_request_ip(::uint32_t value);

  private:
  ::uint32_t _internal_migrate_request_ip() const;
  void _internal_set_migrate_request_ip(::uint32_t value);

  public:
  // optional uint32 migrate_request_port = 11;
  bool has_migrate_request_port() const;
  void clear_migrate_request_port() ;
  ::uint32_t migrate_request_port() const;
  void set_migrate_request_port(::uint32_t value);

  private:
  ::uint32_t _internal_migrate_request_port() const;
  void _internal_set_migrate_request_port(::uint32_t value);

  public:
  // optional uint32 scoring_penalty_relay_cluster = 12;
  bool has_scoring_penalty_relay_cluster() const;
  void clear_scoring_penalty_relay_cluster() ;
  ::uint32_t scoring_penalty_relay_cluster() const;
  void set_scoring_penalty_relay_cluster(::uint32_t value);

  private:
  ::uint32_t _internal_scoring_penalty_relay_cluster() const;
  void _internal_set_scoring_penalty_relay_cluster(::uint32_t value);

  public:
  // optional uint32 flags = 15;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsRouterToClient)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 12,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectionStatsRouterToClient& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> ack_relay_;
    ::google::protobuf::RepeatedField<::uint32_t> legacy_ack_e2e_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::uint32_t seconds_until_shutdown_;
    ::uint32_t client_connection_id_;
    ::uint32_t seq_num_r2c_;
    ::uint32_t seq_num_e2e_;
    ::uint32_t migrate_request_ip_;
    ::uint32_t migrate_request_port_;
    ::uint32_t scoring_penalty_relay_cluster_;
    ::uint32_t flags_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsRouterToClient_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsP2PRouterToClient final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsP2PRouterToClient) */ {
 public:
  inline CMsgSteamDatagramConnectionStatsP2PRouterToClient() : CMsgSteamDatagramConnectionStatsP2PRouterToClient(nullptr) {}
  ~CMsgSteamDatagramConnectionStatsP2PRouterToClient() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectionStatsP2PRouterToClient* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectionStatsP2PRouterToClient));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectionStatsP2PRouterToClient(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectionStatsP2PRouterToClient(const CMsgSteamDatagramConnectionStatsP2PRouterToClient& from) : CMsgSteamDatagramConnectionStatsP2PRouterToClient(nullptr, from) {}
  inline CMsgSteamDatagramConnectionStatsP2PRouterToClient(CMsgSteamDatagramConnectionStatsP2PRouterToClient&& from) noexcept
      : CMsgSteamDatagramConnectionStatsP2PRouterToClient(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectionStatsP2PRouterToClient& operator=(const CMsgSteamDatagramConnectionStatsP2PRouterToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectionStatsP2PRouterToClient& operator=(CMsgSteamDatagramConnectionStatsP2PRouterToClient&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectionStatsP2PRouterToClient& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectionStatsP2PRouterToClient*>(
        &_CMsgSteamDatagramConnectionStatsP2PRouterToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(CMsgSteamDatagramConnectionStatsP2PRouterToClient& a, CMsgSteamDatagramConnectionStatsP2PRouterToClient& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectionStatsP2PRouterToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectionStatsP2PRouterToClient* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsP2PRouterToClient* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectionStatsP2PRouterToClient>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsP2PRouterToClient& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectionStatsP2PRouterToClient& from) { CMsgSteamDatagramConnectionStatsP2PRouterToClient::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectionStatsP2PRouterToClient* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectionStatsP2PRouterToClient"; }

 protected:
  explicit CMsgSteamDatagramConnectionStatsP2PRouterToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectionStatsP2PRouterToClient(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectionStatsP2PRouterToClient& from);
  CMsgSteamDatagramConnectionStatsP2PRouterToClient(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectionStatsP2PRouterToClient&& from) noexcept
      : CMsgSteamDatagramConnectionStatsP2PRouterToClient(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Flags = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags;
  static constexpr Flags ACK_REQUEST_RELAY = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_ACK_REQUEST_RELAY;
  static constexpr Flags ACK_REQUEST_E2E = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_ACK_REQUEST_E2E;
  static constexpr Flags ACK_REQUEST_IMMEDIATE = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_ACK_REQUEST_IMMEDIATE;
  static constexpr Flags NOT_PRIMARY_TRANSPORT_E2E = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_NOT_PRIMARY_TRANSPORT_E2E;
  static inline bool Flags_IsValid(int value) {
    return CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_IsValid(value);
  }
  static constexpr Flags Flags_MIN = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Flags_MIN;
  static constexpr Flags Flags_MAX = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Flags_MAX;
  static constexpr int Flags_ARRAYSIZE = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Flags_descriptor() {
    return CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_descriptor();
  }
  template <typename T>
  static inline const std::string& Flags_Name(T value) {
    return CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Name(value);
  }
  static inline bool Flags_Parse(
      absl::string_view name, Flags* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAckRelayFieldNumber = 7,
    kLegacyAckE2EFieldNumber = 8,
    kRoutesFieldNumber = 11,
    kQualityRelayFieldNumber = 1,
    kQualityE2EFieldNumber = 2,
    kSecondsUntilShutdownFieldNumber = 3,
    kMigrateRequestIpFieldNumber = 4,
    kMigrateRequestPortFieldNumber = 5,
    kScoringPenaltyRelayClusterFieldNumber = 6,
    kFlagsFieldNumber = 9,
    kAckForwardTargetRevisionFieldNumber = 10,
    kAckPeerRoutesRevisionFieldNumber = 12,
    kConnectionIdFieldNumber = 13,
    kSeqNumR2CFieldNumber = 14,
    kSeqNumE2EFieldNumber = 15,
  };
  // repeated fixed32 ack_relay = 7;
  int ack_relay_size() const;
  private:
  int _internal_ack_relay_size() const;

  public:
  void clear_ack_relay() ;
  ::uint32_t ack_relay(int index) const;
  void set_ack_relay(int index, ::uint32_t value);
  void add_ack_relay(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_ack_relay();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_ack_relay();

  public:
  // repeated fixed32 legacy_ack_e2e = 8;
  int legacy_ack_e2e_size() const;
  private:
  int _internal_legacy_ack_e2e_size() const;

  public:
  void clear_legacy_ack_e2e() ;
  ::uint32_t legacy_ack_e2e(int index) const;
  void set_legacy_ack_e2e(int index, ::uint32_t value);
  void add_legacy_ack_e2e(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_legacy_ack_e2e();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_legacy_ack_e2e();

  public:
  // optional bytes routes = 11;
  bool has_routes() const;
  void clear_routes() ;
  const std::string& routes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_routes(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_routes();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_routes();
  void set_allocated_routes(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_routes() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_routes(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_routes();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional uint32 seconds_until_shutdown = 3;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown() ;
  ::uint32_t seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::uint32_t value);

  private:
  ::uint32_t _internal_seconds_until_shutdown() const;
  void _internal_set_seconds_until_shutdown(::uint32_t value);

  public:
  // optional fixed32 migrate_request_ip = 4;
  bool has_migrate_request_ip() const;
  void clear_migrate_request_ip() ;
  ::uint32_t migrate_request_ip() const;
  void set_migrate_request_ip(::uint32_t value);

  private:
  ::uint32_t _internal_migrate_request_ip() const;
  void _internal_set_migrate_request_ip(::uint32_t value);

  public:
  // optional uint32 migrate_request_port = 5;
  bool has_migrate_request_port() const;
  void clear_migrate_request_port() ;
  ::uint32_t migrate_request_port() const;
  void set_migrate_request_port(::uint32_t value);

  private:
  ::uint32_t _internal_migrate_request_port() const;
  void _internal_set_migrate_request_port(::uint32_t value);

  public:
  // optional uint32 scoring_penalty_relay_cluster = 6;
  bool has_scoring_penalty_relay_cluster() const;
  void clear_scoring_penalty_relay_cluster() ;
  ::uint32_t scoring_penalty_relay_cluster() const;
  void set_scoring_penalty_relay_cluster(::uint32_t value);

  private:
  ::uint32_t _internal_scoring_penalty_relay_cluster() const;
  void _internal_set_scoring_penalty_relay_cluster(::uint32_t value);

  public:
  // optional uint32 flags = 9;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional uint32 ack_forward_target_revision = 10;
  bool has_ack_forward_target_revision() const;
  void clear_ack_forward_target_revision() ;
  ::uint32_t ack_forward_target_revision() const;
  void set_ack_forward_target_revision(::uint32_t value);

  private:
  ::uint32_t _internal_ack_forward_target_revision() const;
  void _internal_set_ack_forward_target_revision(::uint32_t value);

  public:
  // optional uint32 ack_peer_routes_revision = 12;
  bool has_ack_peer_routes_revision() const;
  void clear_ack_peer_routes_revision() ;
  ::uint32_t ack_peer_routes_revision() const;
  void set_ack_peer_routes_revision(::uint32_t value);

  private:
  ::uint32_t _internal_ack_peer_routes_revision() const;
  void _internal_set_ack_peer_routes_revision(::uint32_t value);

  public:
  // optional fixed32 connection_id = 13;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional uint32 seq_num_r2c = 14;
  bool has_seq_num_r2c() const;
  void clear_seq_num_r2c() ;
  ::uint32_t seq_num_r2c() const;
  void set_seq_num_r2c(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_r2c() const;
  void _internal_set_seq_num_r2c(::uint32_t value);

  public:
  // optional uint32 seq_num_e2e = 15;
  bool has_seq_num_e2e() const;
  void clear_seq_num_e2e() ;
  ::uint32_t seq_num_e2e() const;
  void set_seq_num_e2e(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_e2e() const;
  void _internal_set_seq_num_e2e(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsP2PRouterToClient)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 15,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectionStatsP2PRouterToClient& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> ack_relay_;
    ::google::protobuf::RepeatedField<::uint32_t> legacy_ack_e2e_;
    ::google::protobuf::internal::ArenaStringPtr routes_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::uint32_t seconds_until_shutdown_;
    ::uint32_t migrate_request_ip_;
    ::uint32_t migrate_request_port_;
    ::uint32_t scoring_penalty_relay_cluster_;
    ::uint32_t flags_;
    ::uint32_t ack_forward_target_revision_;
    ::uint32_t ack_peer_routes_revision_;
    ::uint32_t connection_id_;
    ::uint32_t seq_num_r2c_;
    ::uint32_t seq_num_e2e_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsP2PRouterToClient_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsP2PClientToRouter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsP2PClientToRouter) */ {
 public:
  inline CMsgSteamDatagramConnectionStatsP2PClientToRouter() : CMsgSteamDatagramConnectionStatsP2PClientToRouter(nullptr) {}
  ~CMsgSteamDatagramConnectionStatsP2PClientToRouter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectionStatsP2PClientToRouter* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectionStatsP2PClientToRouter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectionStatsP2PClientToRouter(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectionStatsP2PClientToRouter(const CMsgSteamDatagramConnectionStatsP2PClientToRouter& from) : CMsgSteamDatagramConnectionStatsP2PClientToRouter(nullptr, from) {}
  inline CMsgSteamDatagramConnectionStatsP2PClientToRouter(CMsgSteamDatagramConnectionStatsP2PClientToRouter&& from) noexcept
      : CMsgSteamDatagramConnectionStatsP2PClientToRouter(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectionStatsP2PClientToRouter& operator=(const CMsgSteamDatagramConnectionStatsP2PClientToRouter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectionStatsP2PClientToRouter& operator=(CMsgSteamDatagramConnectionStatsP2PClientToRouter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectionStatsP2PClientToRouter& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectionStatsP2PClientToRouter*>(
        &_CMsgSteamDatagramConnectionStatsP2PClientToRouter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(CMsgSteamDatagramConnectionStatsP2PClientToRouter& a, CMsgSteamDatagramConnectionStatsP2PClientToRouter& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectionStatsP2PClientToRouter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectionStatsP2PClientToRouter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsP2PClientToRouter* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectionStatsP2PClientToRouter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsP2PClientToRouter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectionStatsP2PClientToRouter& from) { CMsgSteamDatagramConnectionStatsP2PClientToRouter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectionStatsP2PClientToRouter* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectionStatsP2PClientToRouter"; }

 protected:
  explicit CMsgSteamDatagramConnectionStatsP2PClientToRouter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectionStatsP2PClientToRouter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectionStatsP2PClientToRouter& from);
  CMsgSteamDatagramConnectionStatsP2PClientToRouter(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectionStatsP2PClientToRouter&& from) noexcept
      : CMsgSteamDatagramConnectionStatsP2PClientToRouter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Flags = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags;
  static constexpr Flags ACK_REQUEST_RELAY = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_ACK_REQUEST_RELAY;
  static constexpr Flags ACK_REQUEST_E2E = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_ACK_REQUEST_E2E;
  static constexpr Flags ACK_REQUEST_IMMEDIATE = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_ACK_REQUEST_IMMEDIATE;
  static constexpr Flags NOT_PRIMARY_SESSION = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_NOT_PRIMARY_SESSION;
  static constexpr Flags NOT_PRIMARY_TRANSPORT_E2E = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_NOT_PRIMARY_TRANSPORT_E2E;
  static constexpr Flags CLIENT_RELAY_OVERRIDE = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_CLIENT_RELAY_OVERRIDE;
  static inline bool Flags_IsValid(int value) {
    return CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_IsValid(value);
  }
  static constexpr Flags Flags_MIN = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Flags_MIN;
  static constexpr Flags Flags_MAX = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Flags_MAX;
  static constexpr int Flags_ARRAYSIZE = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Flags_descriptor() {
    return CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_descriptor();
  }
  template <typename T>
  static inline const std::string& Flags_Name(T value) {
    return CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Name(value);
  }
  static inline bool Flags_Parse(
      absl::string_view name, Flags* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAckRelayFieldNumber = 3,
    kLegacyAckE2EFieldNumber = 4,
    kForwardTargetRelayRoutingTokenFieldNumber = 6,
    kRoutesFieldNumber = 8,
    kQualityRelayFieldNumber = 1,
    kQualityE2EFieldNumber = 2,
    kP2PRoutingSummaryFieldNumber = 14,
    kFlagsFieldNumber = 5,
    kForwardTargetRevisionFieldNumber = 7,
    kAckPeerRoutesRevisionFieldNumber = 9,
    kConnectionIdFieldNumber = 10,
    kSeqNumC2RFieldNumber = 11,
    kSeqNumE2EFieldNumber = 12,
  };
  // repeated fixed32 ack_relay = 3;
  int ack_relay_size() const;
  private:
  int _internal_ack_relay_size() const;

  public:
  void clear_ack_relay() ;
  ::uint32_t ack_relay(int index) const;
  void set_ack_relay(int index, ::uint32_t value);
  void add_ack_relay(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_ack_relay();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_ack_relay();

  public:
  // repeated fixed32 legacy_ack_e2e = 4;
  int legacy_ack_e2e_size() const;
  private:
  int _internal_legacy_ack_e2e_size() const;

  public:
  void clear_legacy_ack_e2e() ;
  ::uint32_t legacy_ack_e2e(int index) const;
  void set_legacy_ack_e2e(int index, ::uint32_t value);
  void add_legacy_ack_e2e(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_legacy_ack_e2e();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_legacy_ack_e2e();

  public:
  // optional bytes forward_target_relay_routing_token = 6;
  bool has_forward_target_relay_routing_token() const;
  void clear_forward_target_relay_routing_token() ;
  const std::string& forward_target_relay_routing_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_forward_target_relay_routing_token(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_forward_target_relay_routing_token();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_forward_target_relay_routing_token();
  void set_allocated_forward_target_relay_routing_token(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_forward_target_relay_routing_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_forward_target_relay_routing_token(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_forward_target_relay_routing_token();

  public:
  // optional bytes routes = 8;
  bool has_routes() const;
  void clear_routes() ;
  const std::string& routes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_routes(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_routes();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_routes();
  void set_allocated_routes(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_routes() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_routes(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_routes();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional .CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 14;
  bool has_p2p_routing_summary() const;
  void clear_p2p_routing_summary() ;
  const ::CMsgSteamDatagramP2PRoutingSummary& p2p_routing_summary() const;
  [[nodiscard]] ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE release_p2p_routing_summary();
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL mutable_p2p_routing_summary();
  void set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE unsafe_arena_release_p2p_routing_summary();

  private:
  const ::CMsgSteamDatagramP2PRoutingSummary& _internal_p2p_routing_summary() const;
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL _internal_mutable_p2p_routing_summary();

  public:
  // optional uint32 flags = 5;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional uint32 forward_target_revision = 7;
  bool has_forward_target_revision() const;
  void clear_forward_target_revision() ;
  ::uint32_t forward_target_revision() const;
  void set_forward_target_revision(::uint32_t value);

  private:
  ::uint32_t _internal_forward_target_revision() const;
  void _internal_set_forward_target_revision(::uint32_t value);

  public:
  // optional uint32 ack_peer_routes_revision = 9;
  bool has_ack_peer_routes_revision() const;
  void clear_ack_peer_routes_revision() ;
  ::uint32_t ack_peer_routes_revision() const;
  void set_ack_peer_routes_revision(::uint32_t value);

  private:
  ::uint32_t _internal_ack_peer_routes_revision() const;
  void _internal_set_ack_peer_routes_revision(::uint32_t value);

  public:
  // optional fixed32 connection_id = 10;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional uint32 seq_num_c2r = 11;
  bool has_seq_num_c2r() const;
  void clear_seq_num_c2r() ;
  ::uint32_t seq_num_c2r() const;
  void set_seq_num_c2r(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_c2r() const;
  void _internal_set_seq_num_c2r(::uint32_t value);

  public:
  // optional uint32 seq_num_e2e = 12;
  bool has_seq_num_e2e() const;
  void clear_seq_num_e2e() ;
  ::uint32_t seq_num_e2e() const;
  void set_seq_num_e2e(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_e2e() const;
  void _internal_set_seq_num_e2e(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsP2PClientToRouter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectionStatsP2PClientToRouter& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> ack_relay_;
    ::google::protobuf::RepeatedField<::uint32_t> legacy_ack_e2e_;
    ::google::protobuf::internal::ArenaStringPtr forward_target_relay_routing_token_;
    ::google::protobuf::internal::ArenaStringPtr routes_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE p2p_routing_summary_;
    ::uint32_t flags_;
    ::uint32_t forward_target_revision_;
    ::uint32_t ack_peer_routes_revision_;
    ::uint32_t connection_id_;
    ::uint32_t seq_num_c2r_;
    ::uint32_t seq_num_e2e_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsP2PClientToRouter_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsClientToRouter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsClientToRouter) */ {
 public:
  inline CMsgSteamDatagramConnectionStatsClientToRouter() : CMsgSteamDatagramConnectionStatsClientToRouter(nullptr) {}
  ~CMsgSteamDatagramConnectionStatsClientToRouter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectionStatsClientToRouter* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectionStatsClientToRouter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectionStatsClientToRouter(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectionStatsClientToRouter(const CMsgSteamDatagramConnectionStatsClientToRouter& from) : CMsgSteamDatagramConnectionStatsClientToRouter(nullptr, from) {}
  inline CMsgSteamDatagramConnectionStatsClientToRouter(CMsgSteamDatagramConnectionStatsClientToRouter&& from) noexcept
      : CMsgSteamDatagramConnectionStatsClientToRouter(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectionStatsClientToRouter& operator=(const CMsgSteamDatagramConnectionStatsClientToRouter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectionStatsClientToRouter& operator=(CMsgSteamDatagramConnectionStatsClientToRouter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectionStatsClientToRouter& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectionStatsClientToRouter*>(
        &_CMsgSteamDatagramConnectionStatsClientToRouter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(CMsgSteamDatagramConnectionStatsClientToRouter& a, CMsgSteamDatagramConnectionStatsClientToRouter& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectionStatsClientToRouter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectionStatsClientToRouter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionStatsClientToRouter* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectionStatsClientToRouter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsClientToRouter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectionStatsClientToRouter& from) { CMsgSteamDatagramConnectionStatsClientToRouter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectionStatsClientToRouter* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectionStatsClientToRouter"; }

 protected:
  explicit CMsgSteamDatagramConnectionStatsClientToRouter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectionStatsClientToRouter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectionStatsClientToRouter& from);
  CMsgSteamDatagramConnectionStatsClientToRouter(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectionStatsClientToRouter&& from) noexcept
      : CMsgSteamDatagramConnectionStatsClientToRouter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Flags = CMsgSteamDatagramConnectionStatsClientToRouter_Flags;
  static constexpr Flags ACK_REQUEST_RELAY = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_ACK_REQUEST_RELAY;
  static constexpr Flags ACK_REQUEST_E2E = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_ACK_REQUEST_E2E;
  static constexpr Flags ACK_REQUEST_IMMEDIATE = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_ACK_REQUEST_IMMEDIATE;
  static constexpr Flags NOT_PRIMARY_SESSION = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_NOT_PRIMARY_SESSION;
  static constexpr Flags CLIENT_RELAY_OVERRIDE = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_CLIENT_RELAY_OVERRIDE;
  static inline bool Flags_IsValid(int value) {
    return CMsgSteamDatagramConnectionStatsClientToRouter_Flags_IsValid(value);
  }
  static constexpr Flags Flags_MIN = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Flags_MIN;
  static constexpr Flags Flags_MAX = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Flags_MAX;
  static constexpr int Flags_ARRAYSIZE = CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Flags_descriptor() {
    return CMsgSteamDatagramConnectionStatsClientToRouter_Flags_descriptor();
  }
  template <typename T>
  static inline const std::string& Flags_Name(T value) {
    return CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Name(value);
  }
  static inline bool Flags_Parse(
      absl::string_view name, Flags* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramConnectionStatsClientToRouter_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAckRelayFieldNumber = 4,
    kLegacyAckE2EFieldNumber = 5,
    kQualityRelayFieldNumber = 1,
    kQualityE2EFieldNumber = 2,
    kFlagsFieldNumber = 6,
    kClientConnectionIdFieldNumber = 8,
    kSeqNumC2RFieldNumber = 9,
    kSeqNumE2EFieldNumber = 10,
  };
  // repeated fixed32 ack_relay = 4;
  int ack_relay_size() const;
  private:
  int _internal_ack_relay_size() const;

  public:
  void clear_ack_relay() ;
  ::uint32_t ack_relay(int index) const;
  void set_ack_relay(int index, ::uint32_t value);
  void add_ack_relay(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_ack_relay();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_ack_relay() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_ack_relay();

  public:
  // repeated fixed32 legacy_ack_e2e = 5;
  int legacy_ack_e2e_size() const;
  private:
  int _internal_legacy_ack_e2e_size() const;

  public:
  void clear_legacy_ack_e2e() ;
  ::uint32_t legacy_ack_e2e(int index) const;
  void set_legacy_ack_e2e(int index, ::uint32_t value);
  void add_legacy_ack_e2e(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_legacy_ack_e2e();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_legacy_ack_e2e() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_legacy_ack_e2e();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional uint32 flags = 6;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional fixed32 client_connection_id = 8;
  bool has_client_connection_id() const;
  void clear_client_connection_id() ;
  ::uint32_t client_connection_id() const;
  void set_client_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_client_connection_id() const;
  void _internal_set_client_connection_id(::uint32_t value);

  public:
  // optional uint32 seq_num_c2r = 9;
  bool has_seq_num_c2r() const;
  void clear_seq_num_c2r() ;
  ::uint32_t seq_num_c2r() const;
  void set_seq_num_c2r(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_c2r() const;
  void _internal_set_seq_num_c2r(::uint32_t value);

  public:
  // optional uint32 seq_num_e2e = 10;
  bool has_seq_num_e2e() const;
  void clear_seq_num_e2e() ;
  ::uint32_t seq_num_e2e() const;
  void set_seq_num_e2e(::uint32_t value);

  private:
  ::uint32_t _internal_seq_num_e2e() const;
  void _internal_set_seq_num_e2e(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsClientToRouter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 8,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectionStatsClientToRouter& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> ack_relay_;
    ::google::protobuf::RepeatedField<::uint32_t> legacy_ack_e2e_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::uint32_t flags_;
    ::uint32_t client_connection_id_;
    ::uint32_t seq_num_c2r_;
    ::uint32_t seq_num_e2e_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionStatsClientToRouter_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionClosed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionClosed) */ {
 public:
  inline CMsgSteamDatagramConnectionClosed() : CMsgSteamDatagramConnectionClosed(nullptr) {}
  ~CMsgSteamDatagramConnectionClosed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramConnectionClosed* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramConnectionClosed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramConnectionClosed(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramConnectionClosed(const CMsgSteamDatagramConnectionClosed& from) : CMsgSteamDatagramConnectionClosed(nullptr, from) {}
  inline CMsgSteamDatagramConnectionClosed(CMsgSteamDatagramConnectionClosed&& from) noexcept
      : CMsgSteamDatagramConnectionClosed(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramConnectionClosed& operator=(const CMsgSteamDatagramConnectionClosed& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramConnectionClosed& operator=(CMsgSteamDatagramConnectionClosed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramConnectionClosed& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramConnectionClosed*>(
        &_CMsgSteamDatagramConnectionClosed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CMsgSteamDatagramConnectionClosed& a, CMsgSteamDatagramConnectionClosed& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramConnectionClosed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramConnectionClosed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramConnectionClosed* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramConnectionClosed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramConnectionClosed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramConnectionClosed& from) { CMsgSteamDatagramConnectionClosed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramConnectionClosed* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramConnectionClosed"; }

 protected:
  explicit CMsgSteamDatagramConnectionClosed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramConnectionClosed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramConnectionClosed& from);
  CMsgSteamDatagramConnectionClosed(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramConnectionClosed&& from) noexcept
      : CMsgSteamDatagramConnectionClosed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ERelayMode = CMsgSteamDatagramConnectionClosed_ERelayMode;
  static constexpr ERelayMode None = CMsgSteamDatagramConnectionClosed_ERelayMode_None;
  static constexpr ERelayMode EndToEnd = CMsgSteamDatagramConnectionClosed_ERelayMode_EndToEnd;
  static constexpr ERelayMode ClosedByPeer = CMsgSteamDatagramConnectionClosed_ERelayMode_ClosedByPeer;
  static inline bool ERelayMode_IsValid(int value) {
    return CMsgSteamDatagramConnectionClosed_ERelayMode_IsValid(value);
  }
  static constexpr ERelayMode ERelayMode_MIN = CMsgSteamDatagramConnectionClosed_ERelayMode_ERelayMode_MIN;
  static constexpr ERelayMode ERelayMode_MAX = CMsgSteamDatagramConnectionClosed_ERelayMode_ERelayMode_MAX;
  static constexpr int ERelayMode_ARRAYSIZE = CMsgSteamDatagramConnectionClosed_ERelayMode_ERelayMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ERelayMode_descriptor() {
    return CMsgSteamDatagramConnectionClosed_ERelayMode_descriptor();
  }
  template <typename T>
  static inline const std::string& ERelayMode_Name(T value) {
    return CMsgSteamDatagramConnectionClosed_ERelayMode_Name(value);
  }
  static inline bool ERelayMode_Parse(
      absl::string_view name, ERelayMode* PROTOBUF_NONNULL value) {
    return CMsgSteamDatagramConnectionClosed_ERelayMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kDebugFieldNumber = 5,
    kForwardTargetRelayRoutingTokenFieldNumber = 11,
    kFromIdentityStringFieldNumber = 15,
    kLegacyFromIdentityBinaryFieldNumber = 13,
    kQualityRelayFieldNumber = 17,
    kQualityE2EFieldNumber = 18,
    kP2PRoutingSummaryFieldNumber = 21,
    kLegacyFromSteamIdFieldNumber = 3,
    kLegacyGameserverRelaySessionIdFieldNumber = 2,
    kRelayModeFieldNumber = 4,
    kReasonCodeFieldNumber = 6,
    kToConnectionIdFieldNumber = 7,
    kFromConnectionIdFieldNumber = 8,
    kToRelaySessionIdFieldNumber = 9,
    kFromRelaySessionIdFieldNumber = 10,
    kForwardTargetRevisionFieldNumber = 12,
    kRoutingSecretFieldNumber = 14,
    kNotPrimarySessionFieldNumber = 16,
    kNotPrimaryTransportFieldNumber = 19,
    kRelayOverrideActiveFieldNumber = 22,
  };
  // optional string debug = 5;
  bool has_debug() const;
  void clear_debug() ;
  const std::string& debug() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_debug(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_debug();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_debug();
  void set_allocated_debug(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_debug() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_debug(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_debug();

  public:
  // optional bytes forward_target_relay_routing_token = 11;
  bool has_forward_target_relay_routing_token() const;
  void clear_forward_target_relay_routing_token() ;
  const std::string& forward_target_relay_routing_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_forward_target_relay_routing_token(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_forward_target_relay_routing_token();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_forward_target_relay_routing_token();
  void set_allocated_forward_target_relay_routing_token(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_forward_target_relay_routing_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_forward_target_relay_routing_token(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_forward_target_relay_routing_token();

  public:
  // optional string from_identity_string = 15;
  bool has_from_identity_string() const;
  void clear_from_identity_string() ;
  const std::string& from_identity_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_identity_string(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_from_identity_string();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_from_identity_string();
  void set_allocated_from_identity_string(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_from_identity_string() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_from_identity_string(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_from_identity_string();

  public:
  // optional .CMsgSteamNetworkingIdentityLegacyBinary legacy_from_identity_binary = 13;
  bool has_legacy_from_identity_binary() const;
  void clear_legacy_from_identity_binary() ;
  const ::CMsgSteamNetworkingIdentityLegacyBinary& legacy_from_identity_binary() const;
  [[nodiscard]] ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE release_legacy_from_identity_binary();
  ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NONNULL mutable_legacy_from_identity_binary();
  void set_allocated_legacy_from_identity_binary(::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_legacy_from_identity_binary(::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE value);
  ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE unsafe_arena_release_legacy_from_identity_binary();

  private:
  const ::CMsgSteamNetworkingIdentityLegacyBinary& _internal_legacy_from_identity_binary() const;
  ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NONNULL _internal_mutable_legacy_from_identity_binary();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_relay = 17;
  bool has_quality_relay() const;
  void clear_quality_relay() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_relay() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_relay();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_relay();
  void set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_relay();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_relay() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_relay();

  public:
  // optional .CMsgSteamDatagramConnectionQuality quality_e2e = 18;
  bool has_quality_e2e() const;
  void clear_quality_e2e() ;
  const ::CMsgSteamDatagramConnectionQuality& quality_e2e() const;
  [[nodiscard]] ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE release_quality_e2e();
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL mutable_quality_e2e();
  void set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE unsafe_arena_release_quality_e2e();

  private:
  const ::CMsgSteamDatagramConnectionQuality& _internal_quality_e2e() const;
  ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL _internal_mutable_quality_e2e();

  public:
  // optional .CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 21;
  bool has_p2p_routing_summary() const;
  void clear_p2p_routing_summary() ;
  const ::CMsgSteamDatagramP2PRoutingSummary& p2p_routing_summary() const;
  [[nodiscard]] ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE release_p2p_routing_summary();
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL mutable_p2p_routing_summary();
  void set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value);
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE unsafe_arena_release_p2p_routing_summary();

  private:
  const ::CMsgSteamDatagramP2PRoutingSummary& _internal_p2p_routing_summary() const;
  ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL _internal_mutable_p2p_routing_summary();

  public:
  // optional fixed64 legacy_from_steam_id = 3;
  bool has_legacy_from_steam_id() const;
  void clear_legacy_from_steam_id() ;
  ::uint64_t legacy_from_steam_id() const;
  void set_legacy_from_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_legacy_from_steam_id() const;
  void _internal_set_legacy_from_steam_id(::uint64_t value);

  public:
  // optional uint32 legacy_gameserver_relay_session_id = 2;
  bool has_legacy_gameserver_relay_session_id() const;
  void clear_legacy_gameserver_relay_session_id() ;
  ::uint32_t legacy_gameserver_relay_session_id() const;
  void set_legacy_gameserver_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_legacy_gameserver_relay_session_id() const;
  void _internal_set_legacy_gameserver_relay_session_id(::uint32_t value);

  public:
  // optional .CMsgSteamDatagramConnectionClosed.ERelayMode relay_mode = 4 [default = None];
  bool has_relay_mode() const;
  void clear_relay_mode() ;
  ::CMsgSteamDatagramConnectionClosed_ERelayMode relay_mode() const;
  void set_relay_mode(::CMsgSteamDatagramConnectionClosed_ERelayMode value);

  private:
  ::CMsgSteamDatagramConnectionClosed_ERelayMode _internal_relay_mode() const;
  void _internal_set_relay_mode(::CMsgSteamDatagramConnectionClosed_ERelayMode value);

  public:
  // optional uint32 reason_code = 6;
  bool has_reason_code() const;
  void clear_reason_code() ;
  ::uint32_t reason_code() const;
  void set_reason_code(::uint32_t value);

  private:
  ::uint32_t _internal_reason_code() const;
  void _internal_set_reason_code(::uint32_t value);

  public:
  // optional fixed32 to_connection_id = 7;
  bool has_to_connection_id() const;
  void clear_to_connection_id() ;
  ::uint32_t to_connection_id() const;
  void set_to_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_to_connection_id() const;
  void _internal_set_to_connection_id(::uint32_t value);

  public:
  // optional fixed32 from_connection_id = 8;
  bool has_from_connection_id() const;
  void clear_from_connection_id() ;
  ::uint32_t from_connection_id() const;
  void set_from_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_from_connection_id() const;
  void _internal_set_from_connection_id(::uint32_t value);

  public:
  // optional fixed32 to_relay_session_id = 9;
  bool has_to_relay_session_id() const;
  void clear_to_relay_session_id() ;
  ::uint32_t to_relay_session_id() const;
  void set_to_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_to_relay_session_id() const;
  void _internal_set_to_relay_session_id(::uint32_t value);

  public:
  // optional fixed32 from_relay_session_id = 10;
  bool has_from_relay_session_id() const;
  void clear_from_relay_session_id() ;
  ::uint32_t from_relay_session_id() const;
  void set_from_relay_session_id(::uint32_t value);

  private:
  ::uint32_t _internal_from_relay_session_id() const;
  void _internal_set_from_relay_session_id(::uint32_t value);

  public:
  // optional uint32 forward_target_revision = 12;
  bool has_forward_target_revision() const;
  void clear_forward_target_revision() ;
  ::uint32_t forward_target_revision() const;
  void set_forward_target_revision(::uint32_t value);

  private:
  ::uint32_t _internal_forward_target_revision() const;
  void _internal_set_forward_target_revision(::uint32_t value);

  public:
  // optional fixed64 routing_secret = 14;
  bool has_routing_secret() const;
  void clear_routing_secret() ;
  ::uint64_t routing_secret() const;
  void set_routing_secret(::uint64_t value);

  private:
  ::uint64_t _internal_routing_secret() const;
  void _internal_set_routing_secret(::uint64_t value);

  public:
  // optional bool not_primary_session = 16;
  bool has_not_primary_session() const;
  void clear_not_primary_session() ;
  bool not_primary_session() const;
  void set_not_primary_session(bool value);

  private:
  bool _internal_not_primary_session() const;
  void _internal_set_not_primary_session(bool value);

  public:
  // optional bool not_primary_transport = 19;
  bool has_not_primary_transport() const;
  void clear_not_primary_transport() ;
  bool not_primary_transport() const;
  void set_not_primary_transport(bool value);

  private:
  bool _internal_not_primary_transport() const;
  void _internal_set_not_primary_transport(bool value);

  public:
  // optional bool relay_override_active = 22;
  bool has_relay_override_active() const;
  void clear_relay_override_active() ;
  bool relay_override_active() const;
  void set_relay_override_active(bool value);

  private:
  bool _internal_relay_override_active() const;
  void _internal_set_relay_override_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionClosed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 20,
                                   5, 83,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramConnectionClosed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr debug_;
    ::google::protobuf::internal::ArenaStringPtr forward_target_relay_routing_token_;
    ::google::protobuf::internal::ArenaStringPtr from_identity_string_;
    ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE legacy_from_identity_binary_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_relay_;
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE quality_e2e_;
    ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE p2p_routing_summary_;
    ::uint64_t legacy_from_steam_id_;
    ::uint32_t legacy_gameserver_relay_session_id_;
    int relay_mode_;
    ::uint32_t reason_code_;
    ::uint32_t to_connection_id_;
    ::uint32_t from_connection_id_;
    ::uint32_t to_relay_session_id_;
    ::uint32_t from_relay_session_id_;
    ::uint32_t forward_target_revision_;
    ::uint64_t routing_secret_;
    bool not_primary_session_;
    bool not_primary_transport_;
    bool relay_override_active_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramConnectionClosed_class_data_;
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleReply) */ {
 public:
  inline CMsgSteamDatagramClientPingSampleReply() : CMsgSteamDatagramClientPingSampleReply(nullptr) {}
  ~CMsgSteamDatagramClientPingSampleReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgSteamDatagramClientPingSampleReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgSteamDatagramClientPingSampleReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamDatagramClientPingSampleReply(::google::protobuf::internal::ConstantInitialized);

  inline CMsgSteamDatagramClientPingSampleReply(const CMsgSteamDatagramClientPingSampleReply& from) : CMsgSteamDatagramClientPingSampleReply(nullptr, from) {}
  inline CMsgSteamDatagramClientPingSampleReply(CMsgSteamDatagramClientPingSampleReply&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply(nullptr, std::move(from)) {}
  inline CMsgSteamDatagramClientPingSampleReply& operator=(const CMsgSteamDatagramClientPingSampleReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamDatagramClientPingSampleReply& operator=(CMsgSteamDatagramClientPingSampleReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamDatagramClientPingSampleReply& default_instance() {
    return *reinterpret_cast<const CMsgSteamDatagramClientPingSampleReply*>(
        &_CMsgSteamDatagramClientPingSampleReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CMsgSteamDatagramClientPingSampleReply& a, CMsgSteamDatagramClientPingSampleReply& b) { a.Swap(&b); }
  inline void Swap(CMsgSteamDatagramClientPingSampleReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamDatagramClientPingSampleReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamDatagramClientPingSampleReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgSteamDatagramClientPingSampleReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply& from) { CMsgSteamDatagramClientPingSampleReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgSteamDatagramClientPingSampleReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgSteamDatagramClientPingSampleReply"; }

 protected:
  explicit CMsgSteamDatagramClientPingSampleReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgSteamDatagramClientPingSampleReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgSteamDatagramClientPingSampleReply& from);
  CMsgSteamDatagramClientPingSampleReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgSteamDatagramClientPingSampleReply&& from) noexcept
      : CMsgSteamDatagramClientPingSampleReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using POP = CMsgSteamDatagramClientPingSampleReply_POP;
  using LegacyDataCenter = CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter;

  // accessors -------------------------------------------------------
  enum : int {
    kPopsFieldNumber = 2,
    kLegacyDataCentersFieldNumber = 3,
    kTosFieldNumber = 6,
    kConnectionIdFieldNumber = 1,
    kRelayOverrideActiveFieldNumber = 5,
  };
  // repeated .CMsgSteamDatagramClientPingSampleReply.POP pops = 2;
  int pops_size() const;
  private:
  int _internal_pops_size() const;

  public:
  void clear_pops() ;
  ::CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL mutable_pops(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>* PROTOBUF_NONNULL mutable_pops();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>& _internal_pops() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>* PROTOBUF_NONNULL _internal_mutable_pops();
  public:
  const ::CMsgSteamDatagramClientPingSampleReply_POP& pops(int index) const;
  ::CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL add_pops();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>& pops() const;
  // repeated .CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter legacy_data_centers = 3;
  int legacy_data_centers_size() const;
  private:
  int _internal_legacy_data_centers_size() const;

  public:
  void clear_legacy_data_centers() ;
  ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL mutable_legacy_data_centers(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>* PROTOBUF_NONNULL mutable_legacy_data_centers();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>& _internal_legacy_data_centers() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>* PROTOBUF_NONNULL _internal_mutable_legacy_data_centers();
  public:
  const ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& legacy_data_centers(int index) const;
  ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL add_legacy_data_centers();
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>& legacy_data_centers() const;
  // optional .CMsgTOSTreatment tos = 6;
  bool has_tos() const;
  void clear_tos() ;
  const ::CMsgTOSTreatment& tos() const;
  [[nodiscard]] ::CMsgTOSTreatment* PROTOBUF_NULLABLE release_tos();
  ::CMsgTOSTreatment* PROTOBUF_NONNULL mutable_tos();
  void set_allocated_tos(::CMsgTOSTreatment* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tos(::CMsgTOSTreatment* PROTOBUF_NULLABLE value);
  ::CMsgTOSTreatment* PROTOBUF_NULLABLE unsafe_arena_release_tos();

  private:
  const ::CMsgTOSTreatment& _internal_tos() const;
  ::CMsgTOSTreatment* PROTOBUF_NONNULL _internal_mutable_tos();

  public:
  // optional fixed32 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id() ;
  ::uint32_t connection_id() const;
  void set_connection_id(::uint32_t value);

  private:
  ::uint32_t _internal_connection_id() const;
  void _internal_set_connection_id(::uint32_t value);

  public:
  // optional bool relay_override_active = 5;
  bool has_relay_override_active() const;
  void clear_relay_override_active() ;
  bool relay_override_active() const;
  void set_relay_override_active(bool value);

  private:
  bool _internal_relay_override_active() const;
  void _internal_set_relay_override_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgSteamDatagramClientPingSampleReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_POP > pops_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter > legacy_data_centers_;
    ::CMsgTOSTreatment* PROTOBUF_NULLABLE tos_;
    ::uint32_t connection_id_;
    bool relay_override_active_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steamdatagram_5fmessages_5fsdr_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgSteamDatagramClientPingSampleReply_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CMsgSteamNetworkingIPAddress

// optional fixed32 v4 = 1;
inline bool CMsgSteamNetworkingIPAddress::has_v4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamNetworkingIPAddress::clear_v4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v4_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamNetworkingIPAddress::v4() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingIPAddress.v4)
  return _internal_v4();
}
inline void CMsgSteamNetworkingIPAddress::set_v4(::uint32_t value) {
  _internal_set_v4(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingIPAddress.v4)
}
inline ::uint32_t CMsgSteamNetworkingIPAddress::_internal_v4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v4_;
}
inline void CMsgSteamNetworkingIPAddress::_internal_set_v4(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v4_ = value;
}

// optional bytes v6 = 2;
inline bool CMsgSteamNetworkingIPAddress::has_v6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamNetworkingIPAddress::clear_v6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v6_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamNetworkingIPAddress::v6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingIPAddress.v6)
  return _internal_v6();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamNetworkingIPAddress::set_v6(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.v6_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingIPAddress.v6)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamNetworkingIPAddress::mutable_v6()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_v6();
  // @@protoc_insertion_point(field_mutable:CMsgSteamNetworkingIPAddress.v6)
  return _s;
}
inline const std::string& CMsgSteamNetworkingIPAddress::_internal_v6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v6_.Get();
}
inline void CMsgSteamNetworkingIPAddress::_internal_set_v6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.v6_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamNetworkingIPAddress::_internal_mutable_v6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.v6_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamNetworkingIPAddress::release_v6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamNetworkingIPAddress.v6)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.v6_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.v6_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamNetworkingIPAddress::set_allocated_v6(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.v6_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.v6_.IsDefault()) {
    _impl_.v6_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamNetworkingIPAddress.v6)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramSignedMessageGeneric

// optional .CMsgSteamDatagramCertificateSigned cert = 1;
inline bool CMsgSteamDatagramSignedMessageGeneric::has_cert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cert_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramSignedMessageGeneric::_internal_cert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramCertificateSigned* p = _impl_.cert_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramCertificateSigned&>(::_CMsgSteamDatagramCertificateSigned_default_instance_);
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramSignedMessageGeneric::cert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSignedMessageGeneric.cert)
  return _internal_cert();
}
inline void CMsgSteamDatagramSignedMessageGeneric::unsafe_arena_set_allocated_cert(
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }
  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramSignedMessageGeneric.cert)
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramSignedMessageGeneric::release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramCertificateSigned* released = _impl_.cert_;
  _impl_.cert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramSignedMessageGeneric::unsafe_arena_release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramSignedMessageGeneric.cert)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramCertificateSigned* temp = _impl_.cert_;
  _impl_.cert_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::_internal_mutable_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramCertificateSigned>(GetArena());
    _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(p);
  }
  return _impl_.cert_;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::mutable_cert()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgSteamDatagramCertificateSigned* _msg = _internal_mutable_cert();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramSignedMessageGeneric.cert)
  return _msg;
}
inline void CMsgSteamDatagramSignedMessageGeneric::set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramSignedMessageGeneric.cert)
}

// optional bytes signed_data = 2;
inline bool CMsgSteamDatagramSignedMessageGeneric::has_signed_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramSignedMessageGeneric::clear_signed_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramSignedMessageGeneric::signed_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSignedMessageGeneric.signed_data)
  return _internal_signed_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramSignedMessageGeneric::set_signed_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.signed_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSignedMessageGeneric.signed_data)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::mutable_signed_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signed_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramSignedMessageGeneric.signed_data)
  return _s;
}
inline const std::string& CMsgSteamDatagramSignedMessageGeneric::_internal_signed_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signed_data_.Get();
}
inline void CMsgSteamDatagramSignedMessageGeneric::_internal_set_signed_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.signed_data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::_internal_mutable_signed_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.signed_data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramSignedMessageGeneric::release_signed_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramSignedMessageGeneric.signed_data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.signed_data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.signed_data_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramSignedMessageGeneric::set_allocated_signed_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.signed_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signed_data_.IsDefault()) {
    _impl_.signed_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramSignedMessageGeneric.signed_data)
}

// optional bytes signature = 3;
inline bool CMsgSteamDatagramSignedMessageGeneric::has_signature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramSignedMessageGeneric::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramSignedMessageGeneric::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSignedMessageGeneric.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramSignedMessageGeneric::set_signature(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSignedMessageGeneric.signature)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::mutable_signature()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramSignedMessageGeneric.signature)
  return _s;
}
inline const std::string& CMsgSteamDatagramSignedMessageGeneric::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void CMsgSteamDatagramSignedMessageGeneric::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramSignedMessageGeneric::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramSignedMessageGeneric.signature)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.signature_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.signature_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramSignedMessageGeneric::set_allocated_signature(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.signature_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signature_.IsDefault()) {
    _impl_.signature_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramSignedMessageGeneric.signature)
}

// optional bytes dummy_pad = 1023;
inline bool CMsgSteamDatagramSignedMessageGeneric::has_dummy_pad() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramSignedMessageGeneric::clear_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_pad_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgSteamDatagramSignedMessageGeneric::dummy_pad() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSignedMessageGeneric.dummy_pad)
  return _internal_dummy_pad();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramSignedMessageGeneric::set_dummy_pad(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.dummy_pad_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSignedMessageGeneric.dummy_pad)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::mutable_dummy_pad()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dummy_pad();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramSignedMessageGeneric.dummy_pad)
  return _s;
}
inline const std::string& CMsgSteamDatagramSignedMessageGeneric::_internal_dummy_pad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_pad_.Get();
}
inline void CMsgSteamDatagramSignedMessageGeneric::_internal_set_dummy_pad(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.dummy_pad_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSignedMessageGeneric::_internal_mutable_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.dummy_pad_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramSignedMessageGeneric::release_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramSignedMessageGeneric.dummy_pad)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.dummy_pad_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dummy_pad_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramSignedMessageGeneric::set_allocated_dummy_pad(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.dummy_pad_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dummy_pad_.IsDefault()) {
    _impl_.dummy_pad_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramSignedMessageGeneric.dummy_pad)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramRouterPingReply_RouteException

// optional fixed32 data_center_id = 1;
inline bool CMsgSteamDatagramRouterPingReply_RouteException::has_data_center_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::clear_data_center_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_center_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_RouteException::data_center_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.RouteException.data_center_id)
  return _internal_data_center_id();
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::set_data_center_id(::uint32_t value) {
  _internal_set_data_center_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.RouteException.data_center_id)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_RouteException::_internal_data_center_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_center_id_;
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::_internal_set_data_center_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_center_id_ = value;
}

// optional uint32 flags = 2;
inline bool CMsgSteamDatagramRouterPingReply_RouteException::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_RouteException::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.RouteException.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.RouteException.flags)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_RouteException::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// optional uint32 penalty = 3;
inline bool CMsgSteamDatagramRouterPingReply_RouteException::has_penalty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::clear_penalty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_RouteException::penalty() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.RouteException.penalty)
  return _internal_penalty();
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::set_penalty(::uint32_t value) {
  _internal_set_penalty(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.RouteException.penalty)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_RouteException::_internal_penalty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.penalty_;
}
inline void CMsgSteamDatagramRouterPingReply_RouteException::_internal_set_penalty(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramRouterPingReply_AltAddress

// optional fixed32 ipv4 = 1;
inline bool CMsgSteamDatagramRouterPingReply_AltAddress::has_ipv4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::clear_ipv4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipv4_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_AltAddress::ipv4() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.AltAddress.ipv4)
  return _internal_ipv4();
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::set_ipv4(::uint32_t value) {
  _internal_set_ipv4(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.AltAddress.ipv4)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_AltAddress::_internal_ipv4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ipv4_;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::_internal_set_ipv4(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipv4_ = value;
}

// optional uint32 port = 2;
inline bool CMsgSteamDatagramRouterPingReply_AltAddress::has_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_AltAddress::port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.AltAddress.port)
  return _internal_port();
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::set_port(::uint32_t value) {
  _internal_set_port(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.AltAddress.port)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_AltAddress::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// optional uint32 penalty = 3;
inline bool CMsgSteamDatagramRouterPingReply_AltAddress::has_penalty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::clear_penalty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_AltAddress::penalty() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.AltAddress.penalty)
  return _internal_penalty();
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::set_penalty(::uint32_t value) {
  _internal_set_penalty(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.AltAddress.penalty)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply_AltAddress::_internal_penalty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.penalty_;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::_internal_set_penalty(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = value;
}

// optional .CMsgSteamDatagramRouterPingReply.AltAddress.Protocol protocol = 4 [default = DefaultProtocol];
inline bool CMsgSteamDatagramRouterPingReply_AltAddress::has_protocol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol CMsgSteamDatagramRouterPingReply_AltAddress::protocol() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.AltAddress.protocol)
  return _internal_protocol();
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::set_protocol(::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol value) {
  _internal_set_protocol(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.AltAddress.protocol)
}
inline ::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol CMsgSteamDatagramRouterPingReply_AltAddress::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>(_impl_.protocol_);
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::_internal_set_protocol(::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_internal_data_));
                                          _impl_.protocol_ = value;
}

// optional string id = 5;
inline bool CMsgSteamDatagramRouterPingReply_AltAddress::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramRouterPingReply_AltAddress::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.AltAddress.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramRouterPingReply_AltAddress::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.AltAddress.id)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply_AltAddress::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRouterPingReply.AltAddress.id)
  return _s;
}
inline const std::string& CMsgSteamDatagramRouterPingReply_AltAddress::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply_AltAddress::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramRouterPingReply_AltAddress::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRouterPingReply.AltAddress.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramRouterPingReply_AltAddress::set_allocated_id(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRouterPingReply.AltAddress.id)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramRouterPingReply

// optional fixed32 client_timestamp = 1;
inline bool CMsgSteamDatagramRouterPingReply::has_client_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_client_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.client_timestamp)
  return _internal_client_timestamp();
}
inline void CMsgSteamDatagramRouterPingReply::set_client_timestamp(::uint32_t value) {
  _internal_set_client_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.client_timestamp)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_client_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_timestamp_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_client_timestamp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_timestamp_ = value;
}

// repeated fixed32 latency_datacenter_ids = 2 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::_internal_latency_datacenter_ids_size() const {
  return _internal_latency_datacenter_ids().size();
}
inline int CMsgSteamDatagramRouterPingReply::latency_datacenter_ids_size() const {
  return _internal_latency_datacenter_ids_size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_datacenter_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_datacenter_ids_.Clear();
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::latency_datacenter_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return _internal_latency_datacenter_ids().Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_datacenter_ids(int index, ::uint32_t value) {
  _internal_mutable_latency_datacenter_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_datacenter_ids(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_latency_datacenter_ids()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramRouterPingReply::latency_datacenter_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return _internal_latency_datacenter_ids();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_latency_datacenter_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_latency_datacenter_ids();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramRouterPingReply::_internal_latency_datacenter_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_datacenter_ids_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramRouterPingReply::_internal_mutable_latency_datacenter_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.latency_datacenter_ids_;
}

// repeated uint32 latency_ping_ms = 3 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::_internal_latency_ping_ms_size() const {
  return _internal_latency_ping_ms().size();
}
inline int CMsgSteamDatagramRouterPingReply::latency_ping_ms_size() const {
  return _internal_latency_ping_ms_size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ping_ms_.Clear();
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::latency_ping_ms(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return _internal_latency_ping_ms().Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_ping_ms(int index, ::uint32_t value) {
  _internal_mutable_latency_ping_ms()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_latency_ping_ms()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramRouterPingReply::latency_ping_ms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return _internal_latency_ping_ms();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_latency_ping_ms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_latency_ping_ms();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramRouterPingReply::_internal_latency_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_ping_ms_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramRouterPingReply::_internal_mutable_latency_ping_ms() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.latency_ping_ms_;
}

// repeated fixed32 latency_datacenter_ids_p2p = 14 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::_internal_latency_datacenter_ids_p2p_size() const {
  return _internal_latency_datacenter_ids_p2p().size();
}
inline int CMsgSteamDatagramRouterPingReply::latency_datacenter_ids_p2p_size() const {
  return _internal_latency_datacenter_ids_p2p_size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_datacenter_ids_p2p() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_datacenter_ids_p2p_.Clear();
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::latency_datacenter_ids_p2p(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids_p2p)
  return _internal_latency_datacenter_ids_p2p().Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_datacenter_ids_p2p(int index, ::uint32_t value) {
  _internal_mutable_latency_datacenter_ids_p2p()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids_p2p)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_datacenter_ids_p2p(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_latency_datacenter_ids_p2p()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids_p2p)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramRouterPingReply::latency_datacenter_ids_p2p() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids_p2p)
  return _internal_latency_datacenter_ids_p2p();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_latency_datacenter_ids_p2p()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids_p2p)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_latency_datacenter_ids_p2p();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramRouterPingReply::_internal_latency_datacenter_ids_p2p() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_datacenter_ids_p2p_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramRouterPingReply::_internal_mutable_latency_datacenter_ids_p2p() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.latency_datacenter_ids_p2p_;
}

// repeated uint32 latency_ping_ms_p2p = 15 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::_internal_latency_ping_ms_p2p_size() const {
  return _internal_latency_ping_ms_p2p().size();
}
inline int CMsgSteamDatagramRouterPingReply::latency_ping_ms_p2p_size() const {
  return _internal_latency_ping_ms_p2p_size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_ping_ms_p2p() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ping_ms_p2p_.Clear();
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::latency_ping_ms_p2p(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_ping_ms_p2p)
  return _internal_latency_ping_ms_p2p().Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_ping_ms_p2p(int index, ::uint32_t value) {
  _internal_mutable_latency_ping_ms_p2p()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_ping_ms_p2p)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_ping_ms_p2p(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_latency_ping_ms_p2p()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_ping_ms_p2p)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramRouterPingReply::latency_ping_ms_p2p() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms_p2p)
  return _internal_latency_ping_ms_p2p();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_latency_ping_ms_p2p()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms_p2p)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_latency_ping_ms_p2p();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramRouterPingReply::_internal_latency_ping_ms_p2p() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_ping_ms_p2p_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramRouterPingReply::_internal_mutable_latency_ping_ms_p2p() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.latency_ping_ms_p2p_;
}

// optional fixed32 your_public_ip = 4;
inline bool CMsgSteamDatagramRouterPingReply::has_your_public_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_your_public_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::your_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.your_public_ip)
  return _internal_your_public_ip();
}
inline void CMsgSteamDatagramRouterPingReply::set_your_public_ip(::uint32_t value) {
  _internal_set_your_public_ip(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.your_public_ip)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_your_public_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.your_public_ip_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_your_public_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_ip_ = value;
}

// optional fixed32 your_public_port = 11;
inline bool CMsgSteamDatagramRouterPingReply::has_your_public_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_your_public_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::your_public_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.your_public_port)
  return _internal_your_public_port();
}
inline void CMsgSteamDatagramRouterPingReply::set_your_public_port(::uint32_t value) {
  _internal_set_your_public_port(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.your_public_port)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_your_public_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.your_public_port_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_your_public_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_port_ = value;
}

// optional fixed32 server_time = 5;
inline bool CMsgSteamDatagramRouterPingReply::has_server_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_server_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::server_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.server_time)
  return _internal_server_time();
}
inline void CMsgSteamDatagramRouterPingReply::set_server_time(::uint32_t value) {
  _internal_set_server_time(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.server_time)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_server_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_time_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_server_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_time_ = value;
}

// optional fixed64 challenge = 6;
inline bool CMsgSteamDatagramRouterPingReply::has_challenge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t CMsgSteamDatagramRouterPingReply::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.challenge)
  return _internal_challenge();
}
inline void CMsgSteamDatagramRouterPingReply::set_challenge(::uint64_t value) {
  _internal_set_challenge(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.challenge)
}
inline ::uint64_t CMsgSteamDatagramRouterPingReply::_internal_challenge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.challenge_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_challenge(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = value;
}

// optional uint32 seconds_until_shutdown = 7;
inline bool CMsgSteamDatagramRouterPingReply::has_seconds_until_shutdown() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_seconds_until_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.seconds_until_shutdown)
  return _internal_seconds_until_shutdown();
}
inline void CMsgSteamDatagramRouterPingReply::set_seconds_until_shutdown(::uint32_t value) {
  _internal_set_seconds_until_shutdown(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.seconds_until_shutdown)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_seconds_until_shutdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seconds_until_shutdown_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_seconds_until_shutdown(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = value;
}

// optional fixed32 client_cookie = 8;
inline bool CMsgSteamDatagramRouterPingReply::has_client_cookie() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_client_cookie() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_cookie_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.client_cookie)
  return _internal_client_cookie();
}
inline void CMsgSteamDatagramRouterPingReply::set_client_cookie(::uint32_t value) {
  _internal_set_client_cookie(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.client_cookie)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_client_cookie() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_cookie_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_client_cookie(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_cookie_ = value;
}

// optional uint32 recv_tos = 16;
inline bool CMsgSteamDatagramRouterPingReply::has_recv_tos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_recv_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_tos_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::recv_tos() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.recv_tos)
  return _internal_recv_tos();
}
inline void CMsgSteamDatagramRouterPingReply::set_recv_tos(::uint32_t value) {
  _internal_set_recv_tos(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.recv_tos)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_recv_tos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recv_tos_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_recv_tos(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recv_tos_ = value;
}

// optional uint32 echo_sent_tos = 17;
inline bool CMsgSteamDatagramRouterPingReply::has_echo_sent_tos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_echo_sent_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_sent_tos_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::echo_sent_tos() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.echo_sent_tos)
  return _internal_echo_sent_tos();
}
inline void CMsgSteamDatagramRouterPingReply::set_echo_sent_tos(::uint32_t value) {
  _internal_set_echo_sent_tos(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.echo_sent_tos)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_echo_sent_tos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.echo_sent_tos_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_echo_sent_tos(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_sent_tos_ = value;
}

// optional uint32 sent_tos = 18;
inline bool CMsgSteamDatagramRouterPingReply::has_sent_tos() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_sent_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sent_tos_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::sent_tos() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.sent_tos)
  return _internal_sent_tos();
}
inline void CMsgSteamDatagramRouterPingReply::set_sent_tos(::uint32_t value) {
  _internal_set_sent_tos(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.sent_tos)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_sent_tos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sent_tos_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_sent_tos(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sent_tos_ = value;
}

// optional uint32 echo_request_reply_tos = 19;
inline bool CMsgSteamDatagramRouterPingReply::has_echo_request_reply_tos() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_echo_request_reply_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_request_reply_tos_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::echo_request_reply_tos() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.echo_request_reply_tos)
  return _internal_echo_request_reply_tos();
}
inline void CMsgSteamDatagramRouterPingReply::set_echo_request_reply_tos(::uint32_t value) {
  _internal_set_echo_request_reply_tos(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.echo_request_reply_tos)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_echo_request_reply_tos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.echo_request_reply_tos_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_echo_request_reply_tos(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_request_reply_tos_ = value;
}

// optional uint32 scoring_penalty_relay_cluster = 9;
inline bool CMsgSteamDatagramRouterPingReply::has_scoring_penalty_relay_cluster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_scoring_penalty_relay_cluster() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scoring_penalty_relay_cluster_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::scoring_penalty_relay_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.scoring_penalty_relay_cluster)
  return _internal_scoring_penalty_relay_cluster();
}
inline void CMsgSteamDatagramRouterPingReply::set_scoring_penalty_relay_cluster(::uint32_t value) {
  _internal_set_scoring_penalty_relay_cluster(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.scoring_penalty_relay_cluster)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_scoring_penalty_relay_cluster() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scoring_penalty_relay_cluster_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_scoring_penalty_relay_cluster(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scoring_penalty_relay_cluster_ = value;
}

// optional uint32 flags = 12;
inline bool CMsgSteamDatagramRouterPingReply::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramRouterPingReply::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.flags)
}
inline ::uint32_t CMsgSteamDatagramRouterPingReply::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// repeated .CMsgSteamDatagramRouterPingReply.RouteException route_exceptions = 10;
inline int CMsgSteamDatagramRouterPingReply::_internal_route_exceptions_size() const {
  return _internal_route_exceptions().size();
}
inline int CMsgSteamDatagramRouterPingReply::route_exceptions_size() const {
  return _internal_route_exceptions_size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_route_exceptions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.route_exceptions_.Clear();
}
inline ::CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_route_exceptions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRouterPingReply.route_exceptions)
  return _internal_mutable_route_exceptions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_route_exceptions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.route_exceptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_route_exceptions();
}
inline const ::CMsgSteamDatagramRouterPingReply_RouteException& CMsgSteamDatagramRouterPingReply::route_exceptions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.route_exceptions)
  return _internal_route_exceptions().Get(index);
}
inline ::CMsgSteamDatagramRouterPingReply_RouteException* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::add_route_exceptions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamDatagramRouterPingReply_RouteException* _add = _internal_mutable_route_exceptions()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.route_exceptions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>& CMsgSteamDatagramRouterPingReply::route_exceptions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.route_exceptions)
  return _internal_route_exceptions();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>&
CMsgSteamDatagramRouterPingReply::_internal_route_exceptions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.route_exceptions_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_RouteException>* PROTOBUF_NONNULL
CMsgSteamDatagramRouterPingReply::_internal_mutable_route_exceptions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.route_exceptions_;
}

// repeated .CMsgSteamDatagramRouterPingReply.AltAddress alt_addresses = 13;
inline int CMsgSteamDatagramRouterPingReply::_internal_alt_addresses_size() const {
  return _internal_alt_addresses().size();
}
inline int CMsgSteamDatagramRouterPingReply::alt_addresses_size() const {
  return _internal_alt_addresses_size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_alt_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alt_addresses_.Clear();
}
inline ::CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_alt_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRouterPingReply.alt_addresses)
  return _internal_mutable_alt_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_alt_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.alt_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alt_addresses();
}
inline const ::CMsgSteamDatagramRouterPingReply_AltAddress& CMsgSteamDatagramRouterPingReply::alt_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.alt_addresses)
  return _internal_alt_addresses().Get(index);
}
inline ::CMsgSteamDatagramRouterPingReply_AltAddress* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::add_alt_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamDatagramRouterPingReply_AltAddress* _add = _internal_mutable_alt_addresses()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.alt_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>& CMsgSteamDatagramRouterPingReply::alt_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.alt_addresses)
  return _internal_alt_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>&
CMsgSteamDatagramRouterPingReply::_internal_alt_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alt_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramRouterPingReply_AltAddress>* PROTOBUF_NONNULL
CMsgSteamDatagramRouterPingReply::_internal_mutable_alt_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alt_addresses_;
}

// optional bytes dummy_pad = 99;
inline bool CMsgSteamDatagramRouterPingReply::has_dummy_pad() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_pad_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramRouterPingReply::dummy_pad() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.dummy_pad)
  return _internal_dummy_pad();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramRouterPingReply::set_dummy_pad(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dummy_pad_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.dummy_pad)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::mutable_dummy_pad()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dummy_pad();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRouterPingReply.dummy_pad)
  return _s;
}
inline const std::string& CMsgSteamDatagramRouterPingReply::_internal_dummy_pad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_pad_.Get();
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_dummy_pad(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dummy_pad_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramRouterPingReply::_internal_mutable_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.dummy_pad_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramRouterPingReply::release_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRouterPingReply.dummy_pad)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.dummy_pad_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dummy_pad_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramRouterPingReply::set_allocated_dummy_pad(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.dummy_pad_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dummy_pad_.IsDefault()) {
    _impl_.dummy_pad_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRouterPingReply.dummy_pad)
}

// optional uint64 dummy_varint = 100;
inline bool CMsgSteamDatagramRouterPingReply::has_dummy_varint() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CMsgSteamDatagramRouterPingReply::clear_dummy_varint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_varint_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint64_t CMsgSteamDatagramRouterPingReply::dummy_varint() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.dummy_varint)
  return _internal_dummy_varint();
}
inline void CMsgSteamDatagramRouterPingReply::set_dummy_varint(::uint64_t value) {
  _internal_set_dummy_varint(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.dummy_varint)
}
inline ::uint64_t CMsgSteamDatagramRouterPingReply::_internal_dummy_varint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_varint_;
}
inline void CMsgSteamDatagramRouterPingReply::_internal_set_dummy_varint(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_varint_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverPingRequestBody

// optional fixed32 relay_popid = 1;
inline bool CMsgSteamDatagramGameserverPingRequestBody::has_relay_popid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::clear_relay_popid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_popid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestBody::relay_popid() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestBody.relay_popid)
  return _internal_relay_popid();
}
inline void CMsgSteamDatagramGameserverPingRequestBody::set_relay_popid(::uint32_t value) {
  _internal_set_relay_popid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestBody.relay_popid)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestBody::_internal_relay_popid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_popid_;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::_internal_set_relay_popid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_popid_ = value;
}

// optional .CMsgSteamNetworkingIPAddress your_public_ip = 2;
inline bool CMsgSteamDatagramGameserverPingRequestBody::has_your_public_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.your_public_ip_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::clear_your_public_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.your_public_ip_ != nullptr) _impl_.your_public_ip_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamNetworkingIPAddress& CMsgSteamDatagramGameserverPingRequestBody::_internal_your_public_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamNetworkingIPAddress* p = _impl_.your_public_ip_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamNetworkingIPAddress&>(::_CMsgSteamNetworkingIPAddress_default_instance_);
}
inline const ::CMsgSteamNetworkingIPAddress& CMsgSteamDatagramGameserverPingRequestBody::your_public_ip() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestBody.your_public_ip)
  return _internal_your_public_ip();
}
inline void CMsgSteamDatagramGameserverPingRequestBody::unsafe_arena_set_allocated_your_public_ip(
    ::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.your_public_ip_);
  }
  _impl_.your_public_ip_ = reinterpret_cast<::CMsgSteamNetworkingIPAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramGameserverPingRequestBody.your_public_ip)
}
inline ::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestBody::release_your_public_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamNetworkingIPAddress* released = _impl_.your_public_ip_;
  _impl_.your_public_ip_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestBody::unsafe_arena_release_your_public_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingRequestBody.your_public_ip)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamNetworkingIPAddress* temp = _impl_.your_public_ip_;
  _impl_.your_public_ip_ = nullptr;
  return temp;
}
inline ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestBody::_internal_mutable_your_public_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.your_public_ip_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamNetworkingIPAddress>(GetArena());
    _impl_.your_public_ip_ = reinterpret_cast<::CMsgSteamNetworkingIPAddress*>(p);
  }
  return _impl_.your_public_ip_;
}
inline ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestBody::mutable_your_public_ip()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamNetworkingIPAddress* _msg = _internal_mutable_your_public_ip();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingRequestBody.your_public_ip)
  return _msg;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::set_allocated_your_public_ip(::CMsgSteamNetworkingIPAddress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.your_public_ip_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.your_public_ip_ = reinterpret_cast<::CMsgSteamNetworkingIPAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingRequestBody.your_public_ip)
}

// optional uint32 your_public_port = 3;
inline bool CMsgSteamDatagramGameserverPingRequestBody::has_your_public_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::clear_your_public_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestBody::your_public_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestBody.your_public_port)
  return _internal_your_public_port();
}
inline void CMsgSteamDatagramGameserverPingRequestBody::set_your_public_port(::uint32_t value) {
  _internal_set_your_public_port(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestBody.your_public_port)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestBody::_internal_your_public_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.your_public_port_;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::_internal_set_your_public_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_port_ = value;
}

// optional uint64 relay_unix_time = 4;
inline bool CMsgSteamDatagramGameserverPingRequestBody::has_relay_unix_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::clear_relay_unix_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_unix_time_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t CMsgSteamDatagramGameserverPingRequestBody::relay_unix_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestBody.relay_unix_time)
  return _internal_relay_unix_time();
}
inline void CMsgSteamDatagramGameserverPingRequestBody::set_relay_unix_time(::uint64_t value) {
  _internal_set_relay_unix_time(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestBody.relay_unix_time)
}
inline ::uint64_t CMsgSteamDatagramGameserverPingRequestBody::_internal_relay_unix_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_unix_time_;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::_internal_set_relay_unix_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_unix_time_ = value;
}

// optional fixed64 routing_secret = 5;
inline bool CMsgSteamDatagramGameserverPingRequestBody::has_routing_secret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::clear_routing_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t CMsgSteamDatagramGameserverPingRequestBody::routing_secret() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestBody.routing_secret)
  return _internal_routing_secret();
}
inline void CMsgSteamDatagramGameserverPingRequestBody::set_routing_secret(::uint64_t value) {
  _internal_set_routing_secret(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestBody.routing_secret)
}
inline ::uint64_t CMsgSteamDatagramGameserverPingRequestBody::_internal_routing_secret() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routing_secret_;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::_internal_set_routing_secret(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = value;
}

// repeated .CMsgSteamNetworkingIPAddress my_ips = 6;
inline int CMsgSteamDatagramGameserverPingRequestBody::_internal_my_ips_size() const {
  return _internal_my_ips().size();
}
inline int CMsgSteamDatagramGameserverPingRequestBody::my_ips_size() const {
  return _internal_my_ips_size();
}
inline void CMsgSteamDatagramGameserverPingRequestBody::clear_my_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_ips_.Clear();
}
inline ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestBody::mutable_my_ips(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingRequestBody.my_ips)
  return _internal_mutable_my_ips()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestBody::mutable_my_ips()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramGameserverPingRequestBody.my_ips)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_my_ips();
}
inline const ::CMsgSteamNetworkingIPAddress& CMsgSteamDatagramGameserverPingRequestBody::my_ips(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestBody.my_ips)
  return _internal_my_ips().Get(index);
}
inline ::CMsgSteamNetworkingIPAddress* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestBody::add_my_ips()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamNetworkingIPAddress* _add = _internal_mutable_my_ips()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramGameserverPingRequestBody.my_ips)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>& CMsgSteamDatagramGameserverPingRequestBody::my_ips() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramGameserverPingRequestBody.my_ips)
  return _internal_my_ips();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>&
CMsgSteamDatagramGameserverPingRequestBody::_internal_my_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_ips_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamNetworkingIPAddress>* PROTOBUF_NONNULL
CMsgSteamDatagramGameserverPingRequestBody::_internal_mutable_my_ips() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.my_ips_;
}

// optional bytes echo = 8;
inline bool CMsgSteamDatagramGameserverPingRequestBody::has_echo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::clear_echo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestBody::echo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestBody.echo)
  return _internal_echo();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverPingRequestBody::set_echo(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.echo_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestBody.echo)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestBody::mutable_echo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_echo();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingRequestBody.echo)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestBody::_internal_echo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.echo_.Get();
}
inline void CMsgSteamDatagramGameserverPingRequestBody::_internal_set_echo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.echo_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestBody::_internal_mutable_echo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.echo_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestBody::release_echo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingRequestBody.echo)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.echo_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.echo_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverPingRequestBody::set_allocated_echo(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.echo_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.echo_.IsDefault()) {
    _impl_.echo_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingRequestBody.echo)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverPingRequestEnvelope

// optional .CMsgSteamDatagramCertificateSigned cert = 6;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_cert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cert_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_cert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramCertificateSigned* p = _impl_.cert_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramCertificateSigned&>(::_CMsgSteamDatagramCertificateSigned_default_instance_);
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramGameserverPingRequestEnvelope::cert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.cert)
  return _internal_cert();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::unsafe_arena_set_allocated_cert(
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }
  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramGameserverPingRequestEnvelope.cert)
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestEnvelope::release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramCertificateSigned* released = _impl_.cert_;
  _impl_.cert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestEnvelope::unsafe_arena_release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingRequestEnvelope.cert)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramCertificateSigned* temp = _impl_.cert_;
  _impl_.cert_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_mutable_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramCertificateSigned>(GetArena());
    _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(p);
  }
  return _impl_.cert_;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::mutable_cert()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgSteamDatagramCertificateSigned* _msg = _internal_mutable_cert();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingRequestEnvelope.cert)
  return _msg;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingRequestEnvelope.cert)
}

// optional bytes signed_data = 7;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_signed_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_signed_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestEnvelope::signed_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.signed_data)
  return _internal_signed_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverPingRequestEnvelope::set_signed_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.signed_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.signed_data)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::mutable_signed_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signed_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingRequestEnvelope.signed_data)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_signed_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signed_data_.Get();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_signed_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.signed_data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_mutable_signed_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.signed_data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestEnvelope::release_signed_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingRequestEnvelope.signed_data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.signed_data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.signed_data_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_allocated_signed_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.signed_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signed_data_.IsDefault()) {
    _impl_.signed_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingRequestEnvelope.signed_data)
}

// optional bytes signature = 8;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_signature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestEnvelope::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverPingRequestEnvelope::set_signature(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.signature)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::mutable_signature()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingRequestEnvelope.signature)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestEnvelope::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingRequestEnvelope.signature)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.signature_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.signature_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_allocated_signature(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.signature_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signature_.IsDefault()) {
    _impl_.signature_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingRequestEnvelope.signature)
}

// optional fixed32 legacy_your_public_ip = 1;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_legacy_your_public_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_legacy_your_public_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_your_public_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::legacy_your_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_your_public_ip)
  return _internal_legacy_your_public_ip();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_legacy_your_public_ip(::uint32_t value) {
  _internal_set_legacy_your_public_ip(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_your_public_ip)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_legacy_your_public_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_your_public_ip_;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_legacy_your_public_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_your_public_ip_ = value;
}

// optional fixed32 legacy_your_public_port = 5;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_legacy_your_public_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_legacy_your_public_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_your_public_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::legacy_your_public_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_your_public_port)
  return _internal_legacy_your_public_port();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_legacy_your_public_port(::uint32_t value) {
  _internal_set_legacy_your_public_port(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_your_public_port)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_legacy_your_public_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_your_public_port_;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_legacy_your_public_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_your_public_port_ = value;
}

// optional fixed32 legacy_relay_unix_time = 2;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_legacy_relay_unix_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_legacy_relay_unix_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_relay_unix_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::legacy_relay_unix_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_relay_unix_time)
  return _internal_legacy_relay_unix_time();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_legacy_relay_unix_time(::uint32_t value) {
  _internal_set_legacy_relay_unix_time(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_relay_unix_time)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_legacy_relay_unix_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_relay_unix_time_;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_legacy_relay_unix_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_relay_unix_time_ = value;
}

// optional fixed64 legacy_challenge = 3;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_legacy_challenge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_legacy_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_challenge_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint64_t CMsgSteamDatagramGameserverPingRequestEnvelope::legacy_challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_challenge)
  return _internal_legacy_challenge();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_legacy_challenge(::uint64_t value) {
  _internal_set_legacy_challenge(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_challenge)
}
inline ::uint64_t CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_legacy_challenge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_challenge_;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_legacy_challenge(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_challenge_ = value;
}

// optional fixed32 legacy_router_timestamp = 4;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_legacy_router_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_legacy_router_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_router_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::legacy_router_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_router_timestamp)
  return _internal_legacy_router_timestamp();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_legacy_router_timestamp(::uint32_t value) {
  _internal_set_legacy_router_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.legacy_router_timestamp)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_legacy_router_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_router_timestamp_;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_legacy_router_timestamp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_router_timestamp_ = value;
}

// optional bytes dummy_pad = 1023;
inline bool CMsgSteamDatagramGameserverPingRequestEnvelope::has_dummy_pad() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::clear_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_pad_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestEnvelope::dummy_pad() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingRequestEnvelope.dummy_pad)
  return _internal_dummy_pad();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverPingRequestEnvelope::set_dummy_pad(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.dummy_pad_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingRequestEnvelope.dummy_pad)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::mutable_dummy_pad()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dummy_pad();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingRequestEnvelope.dummy_pad)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_dummy_pad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_pad_.Get();
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_set_dummy_pad(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.dummy_pad_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingRequestEnvelope::_internal_mutable_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.dummy_pad_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingRequestEnvelope::release_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingRequestEnvelope.dummy_pad)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.dummy_pad_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dummy_pad_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverPingRequestEnvelope::set_allocated_dummy_pad(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.dummy_pad_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dummy_pad_.IsDefault()) {
    _impl_.dummy_pad_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingRequestEnvelope.dummy_pad)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverPingReplyData

// optional fixed32 echo_relay_unix_time = 2;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_echo_relay_unix_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_echo_relay_unix_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_relay_unix_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::echo_relay_unix_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.echo_relay_unix_time)
  return _internal_echo_relay_unix_time();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_echo_relay_unix_time(::uint32_t value) {
  _internal_set_echo_relay_unix_time(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.echo_relay_unix_time)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::_internal_echo_relay_unix_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.echo_relay_unix_time_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_echo_relay_unix_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_relay_unix_time_ = value;
}

// optional bytes echo = 8;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_echo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_echo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.echo_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramGameserverPingReplyData::echo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.echo)
  return _internal_echo();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverPingReplyData::set_echo(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.echo_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.echo)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingReplyData::mutable_echo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_echo();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingReplyData.echo)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverPingReplyData::_internal_echo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.echo_.Get();
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_echo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.echo_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingReplyData::_internal_mutable_echo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.echo_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingReplyData::release_echo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingReplyData.echo)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.echo_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.echo_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_allocated_echo(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.echo_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.echo_.IsDefault()) {
    _impl_.echo_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingReplyData.echo)
}

// optional fixed64 legacy_challenge = 3;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_legacy_challenge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_legacy_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_challenge_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t CMsgSteamDatagramGameserverPingReplyData::legacy_challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.legacy_challenge)
  return _internal_legacy_challenge();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_legacy_challenge(::uint64_t value) {
  _internal_set_legacy_challenge(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.legacy_challenge)
}
inline ::uint64_t CMsgSteamDatagramGameserverPingReplyData::_internal_legacy_challenge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_challenge_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_legacy_challenge(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_challenge_ = value;
}

// optional fixed32 legacy_router_timestamp = 4;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_legacy_router_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_legacy_router_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_router_timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::legacy_router_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.legacy_router_timestamp)
  return _internal_legacy_router_timestamp();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_legacy_router_timestamp(::uint32_t value) {
  _internal_set_legacy_router_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.legacy_router_timestamp)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::_internal_legacy_router_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_router_timestamp_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_legacy_router_timestamp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_router_timestamp_ = value;
}

// optional fixed32 data_center_id = 5;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_data_center_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_data_center_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_center_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::data_center_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.data_center_id)
  return _internal_data_center_id();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_data_center_id(::uint32_t value) {
  _internal_set_data_center_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.data_center_id)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::_internal_data_center_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_center_id_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_data_center_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_center_id_ = value;
}

// optional uint32 appid = 6;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::appid() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.appid)
  return _internal_appid();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.appid)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// optional uint32 protocol_version = 7;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_protocol_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_protocol_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::protocol_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.protocol_version)
  return _internal_protocol_version();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_protocol_version(::uint32_t value) {
  _internal_set_protocol_version(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.protocol_version)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::_internal_protocol_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_version_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_protocol_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = value;
}

// optional string build = 9;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_build() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramGameserverPingReplyData::build() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.build)
  return _internal_build();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverPingReplyData::set_build(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.build_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.build)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingReplyData::mutable_build()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_build();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingReplyData.build)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverPingReplyData::_internal_build() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.build_.Get();
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_build(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.build_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingReplyData::_internal_mutable_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.build_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingReplyData::release_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingReplyData.build)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.build_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.build_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_allocated_build(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.build_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.build_.IsDefault()) {
    _impl_.build_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingReplyData.build)
}

// optional uint64 network_config_version = 10;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_network_config_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_network_config_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_config_version_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint64_t CMsgSteamDatagramGameserverPingReplyData::network_config_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.network_config_version)
  return _internal_network_config_version();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_network_config_version(::uint64_t value) {
  _internal_set_network_config_version(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.network_config_version)
}
inline ::uint64_t CMsgSteamDatagramGameserverPingReplyData::_internal_network_config_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_config_version_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_network_config_version(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_config_version_ = value;
}

// optional fixed32 my_unix_time = 11;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_my_unix_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_my_unix_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_unix_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::my_unix_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.my_unix_time)
  return _internal_my_unix_time();
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_my_unix_time(::uint32_t value) {
  _internal_set_my_unix_time(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.my_unix_time)
}
inline ::uint32_t CMsgSteamDatagramGameserverPingReplyData::_internal_my_unix_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_unix_time_;
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_my_unix_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_unix_time_ = value;
}

// optional bytes routing_blob = 12;
inline bool CMsgSteamDatagramGameserverPingReplyData::has_routing_blob() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverPingReplyData::clear_routing_blob() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_blob_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgSteamDatagramGameserverPingReplyData::routing_blob() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPingReplyData.routing_blob)
  return _internal_routing_blob();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverPingReplyData::set_routing_blob(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.routing_blob_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPingReplyData.routing_blob)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingReplyData::mutable_routing_blob()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_routing_blob();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverPingReplyData.routing_blob)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverPingReplyData::_internal_routing_blob() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routing_blob_.Get();
}
inline void CMsgSteamDatagramGameserverPingReplyData::_internal_set_routing_blob(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.routing_blob_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverPingReplyData::_internal_mutable_routing_blob() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.routing_blob_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverPingReplyData::release_routing_blob() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverPingReplyData.routing_blob)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.routing_blob_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.routing_blob_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverPingReplyData::set_allocated_routing_blob(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.routing_blob_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.routing_blob_.IsDefault()) {
    _impl_.routing_blob_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverPingReplyData.routing_blob)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramNoSessionRelayToClient

// optional fixed32 connection_id = 7;
inline bool CMsgSteamDatagramNoSessionRelayToClient::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToClient.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramNoSessionRelayToClient::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToClient.connection_id)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional fixed32 your_public_ip = 2;
inline bool CMsgSteamDatagramNoSessionRelayToClient::has_your_public_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::clear_your_public_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::your_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToClient.your_public_ip)
  return _internal_your_public_ip();
}
inline void CMsgSteamDatagramNoSessionRelayToClient::set_your_public_ip(::uint32_t value) {
  _internal_set_your_public_ip(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToClient.your_public_ip)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::_internal_your_public_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.your_public_ip_;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::_internal_set_your_public_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_ip_ = value;
}

// optional fixed32 your_public_port = 6;
inline bool CMsgSteamDatagramNoSessionRelayToClient::has_your_public_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::clear_your_public_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::your_public_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToClient.your_public_port)
  return _internal_your_public_port();
}
inline void CMsgSteamDatagramNoSessionRelayToClient::set_your_public_port(::uint32_t value) {
  _internal_set_your_public_port(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToClient.your_public_port)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::_internal_your_public_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.your_public_port_;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::_internal_set_your_public_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_public_port_ = value;
}

// optional fixed32 server_time = 3;
inline bool CMsgSteamDatagramNoSessionRelayToClient::has_server_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::clear_server_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::server_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToClient.server_time)
  return _internal_server_time();
}
inline void CMsgSteamDatagramNoSessionRelayToClient::set_server_time(::uint32_t value) {
  _internal_set_server_time(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToClient.server_time)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::_internal_server_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_time_;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::_internal_set_server_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_time_ = value;
}

// optional fixed64 challenge = 4;
inline bool CMsgSteamDatagramNoSessionRelayToClient::has_challenge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::clear_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CMsgSteamDatagramNoSessionRelayToClient::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToClient.challenge)
  return _internal_challenge();
}
inline void CMsgSteamDatagramNoSessionRelayToClient::set_challenge(::uint64_t value) {
  _internal_set_challenge(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToClient.challenge)
}
inline ::uint64_t CMsgSteamDatagramNoSessionRelayToClient::_internal_challenge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.challenge_;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::_internal_set_challenge(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = value;
}

// optional uint32 seconds_until_shutdown = 5;
inline bool CMsgSteamDatagramNoSessionRelayToClient::has_seconds_until_shutdown() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::clear_seconds_until_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToClient.seconds_until_shutdown)
  return _internal_seconds_until_shutdown();
}
inline void CMsgSteamDatagramNoSessionRelayToClient::set_seconds_until_shutdown(::uint32_t value) {
  _internal_set_seconds_until_shutdown(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToClient.seconds_until_shutdown)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToClient::_internal_seconds_until_shutdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seconds_until_shutdown_;
}
inline void CMsgSteamDatagramNoSessionRelayToClient::_internal_set_seconds_until_shutdown(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramNoSessionRelayToPeer

// optional uint32 legacy_relay_session_id = 1;
inline bool CMsgSteamDatagramNoSessionRelayToPeer::has_legacy_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::clear_legacy_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToPeer::legacy_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToPeer.legacy_relay_session_id)
  return _internal_legacy_relay_session_id();
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::set_legacy_relay_session_id(::uint32_t value) {
  _internal_set_legacy_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToPeer.legacy_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToPeer::_internal_legacy_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_relay_session_id_;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::_internal_set_legacy_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_relay_session_id_ = value;
}

// optional fixed32 from_relay_session_id = 2;
inline bool CMsgSteamDatagramNoSessionRelayToPeer::has_from_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::clear_from_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToPeer::from_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToPeer.from_relay_session_id)
  return _internal_from_relay_session_id();
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::set_from_relay_session_id(::uint32_t value) {
  _internal_set_from_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToPeer.from_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToPeer::_internal_from_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_relay_session_id_;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::_internal_set_from_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_relay_session_id_ = value;
}

// optional fixed32 from_connection_id = 7;
inline bool CMsgSteamDatagramNoSessionRelayToPeer::has_from_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::clear_from_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToPeer::from_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToPeer.from_connection_id)
  return _internal_from_connection_id();
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::set_from_connection_id(::uint32_t value) {
  _internal_set_from_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToPeer.from_connection_id)
}
inline ::uint32_t CMsgSteamDatagramNoSessionRelayToPeer::_internal_from_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_connection_id_;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::_internal_set_from_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_connection_id_ = value;
}

// optional fixed64 kludge_pad = 99;
inline bool CMsgSteamDatagramNoSessionRelayToPeer::has_kludge_pad() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::clear_kludge_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kludge_pad_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CMsgSteamDatagramNoSessionRelayToPeer::kludge_pad() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSessionRelayToPeer.kludge_pad)
  return _internal_kludge_pad();
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::set_kludge_pad(::uint64_t value) {
  _internal_set_kludge_pad(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSessionRelayToPeer.kludge_pad)
}
inline ::uint64_t CMsgSteamDatagramNoSessionRelayToPeer::_internal_kludge_pad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kludge_pad_;
}
inline void CMsgSteamDatagramNoSessionRelayToPeer::_internal_set_kludge_pad(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kludge_pad_ = value;
}

// -------------------------------------------------------------------

// CMsgTOSTreatment

// optional string l4s_detect = 1;
inline bool CMsgTOSTreatment::has_l4s_detect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgTOSTreatment::clear_l4s_detect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.l4s_detect_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgTOSTreatment::l4s_detect() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgTOSTreatment.l4s_detect)
  return _internal_l4s_detect();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgTOSTreatment::set_l4s_detect(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.l4s_detect_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgTOSTreatment.l4s_detect)
}
inline std::string* PROTOBUF_NONNULL CMsgTOSTreatment::mutable_l4s_detect()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_l4s_detect();
  // @@protoc_insertion_point(field_mutable:CMsgTOSTreatment.l4s_detect)
  return _s;
}
inline const std::string& CMsgTOSTreatment::_internal_l4s_detect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.l4s_detect_.Get();
}
inline void CMsgTOSTreatment::_internal_set_l4s_detect(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.l4s_detect_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgTOSTreatment::_internal_mutable_l4s_detect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.l4s_detect_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgTOSTreatment::release_l4s_detect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgTOSTreatment.l4s_detect)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.l4s_detect_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.l4s_detect_.Set("", GetArena());
  }
  return released;
}
inline void CMsgTOSTreatment::set_allocated_l4s_detect(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.l4s_detect_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.l4s_detect_.IsDefault()) {
    _impl_.l4s_detect_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTOSTreatment.l4s_detect)
}

// optional string up_ecn1 = 2;
inline bool CMsgTOSTreatment::has_up_ecn1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgTOSTreatment::clear_up_ecn1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.up_ecn1_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgTOSTreatment::up_ecn1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgTOSTreatment.up_ecn1)
  return _internal_up_ecn1();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgTOSTreatment::set_up_ecn1(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.up_ecn1_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgTOSTreatment.up_ecn1)
}
inline std::string* PROTOBUF_NONNULL CMsgTOSTreatment::mutable_up_ecn1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_up_ecn1();
  // @@protoc_insertion_point(field_mutable:CMsgTOSTreatment.up_ecn1)
  return _s;
}
inline const std::string& CMsgTOSTreatment::_internal_up_ecn1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.up_ecn1_.Get();
}
inline void CMsgTOSTreatment::_internal_set_up_ecn1(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.up_ecn1_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgTOSTreatment::_internal_mutable_up_ecn1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.up_ecn1_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgTOSTreatment::release_up_ecn1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgTOSTreatment.up_ecn1)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.up_ecn1_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.up_ecn1_.Set("", GetArena());
  }
  return released;
}
inline void CMsgTOSTreatment::set_allocated_up_ecn1(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.up_ecn1_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.up_ecn1_.IsDefault()) {
    _impl_.up_ecn1_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTOSTreatment.up_ecn1)
}

// optional string down_dscp45 = 3;
inline bool CMsgTOSTreatment::has_down_dscp45() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgTOSTreatment::clear_down_dscp45() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.down_dscp45_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgTOSTreatment::down_dscp45() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgTOSTreatment.down_dscp45)
  return _internal_down_dscp45();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgTOSTreatment::set_down_dscp45(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.down_dscp45_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgTOSTreatment.down_dscp45)
}
inline std::string* PROTOBUF_NONNULL CMsgTOSTreatment::mutable_down_dscp45()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_down_dscp45();
  // @@protoc_insertion_point(field_mutable:CMsgTOSTreatment.down_dscp45)
  return _s;
}
inline const std::string& CMsgTOSTreatment::_internal_down_dscp45() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.down_dscp45_.Get();
}
inline void CMsgTOSTreatment::_internal_set_down_dscp45(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.down_dscp45_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgTOSTreatment::_internal_mutable_down_dscp45() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.down_dscp45_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgTOSTreatment::release_down_dscp45() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgTOSTreatment.down_dscp45)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.down_dscp45_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.down_dscp45_.Set("", GetArena());
  }
  return released;
}
inline void CMsgTOSTreatment::set_allocated_down_dscp45(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.down_dscp45_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.down_dscp45_.IsDefault()) {
    _impl_.down_dscp45_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTOSTreatment.down_dscp45)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleRequest

// optional fixed32 connection_id = 1;
inline bool CMsgSteamDatagramClientPingSampleRequest::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleRequest::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleRequest.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramClientPingSampleRequest::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleRequest.connection_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleRequest::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramClientPingSampleRequest::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply_POP_AltAddress

// optional string id = 1;
inline bool CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.id)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.id)
  return _s;
}
inline const std::string& CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::set_allocated_id(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.id)
}

// optional uint32 front_ping_ms = 2;
inline bool CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::has_front_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::clear_front_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.front_ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::front_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.front_ping_ms)
  return _internal_front_ping_ms();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::set_front_ping_ms(::uint32_t value) {
  _internal_set_front_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.front_ping_ms)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::_internal_front_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.front_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::_internal_set_front_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.front_ping_ms_ = value;
}

// optional uint32 penalty = 3;
inline bool CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::has_penalty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::clear_penalty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::penalty() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.penalty)
  return _internal_penalty();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::set_penalty(::uint32_t value) {
  _internal_set_penalty(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.penalty)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::_internal_penalty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.penalty_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP_AltAddress::_internal_set_penalty(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply_POP

// optional fixed32 pop_id = 1;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.pop_id)
  return _internal_pop_id();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_pop_id(::uint32_t value) {
  _internal_set_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.pop_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pop_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pop_id_ = value;
}

// optional uint32 default_front_ping_ms = 2;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_default_front_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_default_front_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_front_ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::default_front_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.default_front_ping_ms)
  return _internal_default_front_ping_ms();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_default_front_ping_ms(::uint32_t value) {
  _internal_set_default_front_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.default_front_ping_ms)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_default_front_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_front_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_default_front_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_front_ping_ms_ = value;
}

// optional uint32 cluster_penalty = 4;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_cluster_penalty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_cluster_penalty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_penalty_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::cluster_penalty() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.cluster_penalty)
  return _internal_cluster_penalty();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_cluster_penalty(::uint32_t value) {
  _internal_set_cluster_penalty(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.cluster_penalty)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_cluster_penalty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_penalty_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_cluster_penalty(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_penalty_ = value;
}

// repeated .CMsgSteamDatagramClientPingSampleReply.POP.AltAddress alt_addresses = 7;
inline int CMsgSteamDatagramClientPingSampleReply_POP::_internal_alt_addresses_size() const {
  return _internal_alt_addresses().size();
}
inline int CMsgSteamDatagramClientPingSampleReply_POP::alt_addresses_size() const {
  return _internal_alt_addresses_size();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_alt_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alt_addresses_.Clear();
}
inline ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply_POP::mutable_alt_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.POP.alt_addresses)
  return _internal_mutable_alt_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply_POP::mutable_alt_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramClientPingSampleReply.POP.alt_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alt_addresses();
}
inline const ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress& CMsgSteamDatagramClientPingSampleReply_POP::alt_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.alt_addresses)
  return _internal_alt_addresses().Get(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply_POP::add_alt_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress* _add = _internal_mutable_alt_addresses()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramClientPingSampleReply.POP.alt_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>& CMsgSteamDatagramClientPingSampleReply_POP::alt_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramClientPingSampleReply.POP.alt_addresses)
  return _internal_alt_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>&
CMsgSteamDatagramClientPingSampleReply_POP::_internal_alt_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alt_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP_AltAddress>* PROTOBUF_NONNULL
CMsgSteamDatagramClientPingSampleReply_POP::_internal_mutable_alt_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alt_addresses_;
}

// optional uint32 default_e2e_ping_ms = 3;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_default_e2e_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_default_e2e_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_e2e_ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::default_e2e_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.default_e2e_ping_ms)
  return _internal_default_e2e_ping_ms();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_default_e2e_ping_ms(::uint32_t value) {
  _internal_set_default_e2e_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.default_e2e_ping_ms)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_default_e2e_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_e2e_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_default_e2e_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_e2e_ping_ms_ = value;
}

// optional uint32 default_e2e_score = 5;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_default_e2e_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_default_e2e_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_e2e_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::default_e2e_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.default_e2e_score)
  return _internal_default_e2e_score();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_default_e2e_score(::uint32_t value) {
  _internal_set_default_e2e_score(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.default_e2e_score)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_default_e2e_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_e2e_score_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_default_e2e_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_e2e_score_ = value;
}

// optional fixed32 p2p_via_peer_relay_pop_id = 6;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_p2p_via_peer_relay_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_p2p_via_peer_relay_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p2p_via_peer_relay_pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::p2p_via_peer_relay_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.p2p_via_peer_relay_pop_id)
  return _internal_p2p_via_peer_relay_pop_id();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_p2p_via_peer_relay_pop_id(::uint32_t value) {
  _internal_set_p2p_via_peer_relay_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.p2p_via_peer_relay_pop_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_p2p_via_peer_relay_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.p2p_via_peer_relay_pop_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_p2p_via_peer_relay_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p2p_via_peer_relay_pop_id_ = value;
}

// optional uint32 best_dc_ping_ms = 9;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_best_dc_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_best_dc_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::best_dc_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.best_dc_ping_ms)
  return _internal_best_dc_ping_ms();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_best_dc_ping_ms(::uint32_t value) {
  _internal_set_best_dc_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.best_dc_ping_ms)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_best_dc_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_dc_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_best_dc_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_ping_ms_ = value;
}

// optional uint32 best_dc_score = 10;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_best_dc_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_best_dc_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::best_dc_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.best_dc_score)
  return _internal_best_dc_score();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_best_dc_score(::uint32_t value) {
  _internal_set_best_dc_score(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.best_dc_score)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_best_dc_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_dc_score_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_best_dc_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_score_ = value;
}

// optional fixed32 best_dc_via_relay_pop_id = 11;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_best_dc_via_relay_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_best_dc_via_relay_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_via_relay_pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::best_dc_via_relay_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.best_dc_via_relay_pop_id)
  return _internal_best_dc_via_relay_pop_id();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_best_dc_via_relay_pop_id(::uint32_t value) {
  _internal_set_best_dc_via_relay_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.best_dc_via_relay_pop_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_best_dc_via_relay_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_dc_via_relay_pop_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_best_dc_via_relay_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_via_relay_pop_id_ = value;
}

// optional uint32 default_dc_ping_ms = 12;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_default_dc_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_default_dc_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_dc_ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::default_dc_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.default_dc_ping_ms)
  return _internal_default_dc_ping_ms();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_default_dc_ping_ms(::uint32_t value) {
  _internal_set_default_dc_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.default_dc_ping_ms)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_default_dc_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_dc_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_default_dc_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_dc_ping_ms_ = value;
}

// optional uint32 default_dc_score = 13;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_default_dc_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_default_dc_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_dc_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::default_dc_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.default_dc_score)
  return _internal_default_dc_score();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_default_dc_score(::uint32_t value) {
  _internal_set_default_dc_score(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.default_dc_score)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_default_dc_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_dc_score_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_default_dc_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_dc_score_ = value;
}

// optional fixed32 default_dc_via_relay_pop_id = 14;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_default_dc_via_relay_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_default_dc_via_relay_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_dc_via_relay_pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::default_dc_via_relay_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.default_dc_via_relay_pop_id)
  return _internal_default_dc_via_relay_pop_id();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_default_dc_via_relay_pop_id(::uint32_t value) {
  _internal_set_default_dc_via_relay_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.default_dc_via_relay_pop_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_default_dc_via_relay_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_dc_via_relay_pop_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_default_dc_via_relay_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_dc_via_relay_pop_id_ = value;
}

// optional uint32 test_dc_ping_ms = 15;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_test_dc_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_test_dc_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_dc_ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::test_dc_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.test_dc_ping_ms)
  return _internal_test_dc_ping_ms();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_test_dc_ping_ms(::uint32_t value) {
  _internal_set_test_dc_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.test_dc_ping_ms)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_test_dc_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.test_dc_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_test_dc_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_dc_ping_ms_ = value;
}

// optional uint32 test_dc_score = 16;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_test_dc_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_test_dc_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_dc_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::test_dc_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.test_dc_score)
  return _internal_test_dc_score();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_test_dc_score(::uint32_t value) {
  _internal_set_test_dc_score(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.test_dc_score)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_test_dc_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.test_dc_score_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_test_dc_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_dc_score_ = value;
}

// optional fixed32 test_dc_via_relay_pop_id = 17;
inline bool CMsgSteamDatagramClientPingSampleReply_POP::has_test_dc_via_relay_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::clear_test_dc_via_relay_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_dc_via_relay_pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::test_dc_via_relay_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.POP.test_dc_via_relay_pop_id)
  return _internal_test_dc_via_relay_pop_id();
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::set_test_dc_via_relay_pop_id(::uint32_t value) {
  _internal_set_test_dc_via_relay_pop_id(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.POP.test_dc_via_relay_pop_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_POP::_internal_test_dc_via_relay_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.test_dc_via_relay_pop_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_POP::_internal_set_test_dc_via_relay_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_dc_via_relay_pop_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter

// optional fixed32 data_center_id = 1;
inline bool CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::has_data_center_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::clear_data_center_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_center_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::data_center_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter.data_center_id)
  return _internal_data_center_id();
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::set_data_center_id(::uint32_t value) {
  _internal_set_data_center_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter.data_center_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::_internal_data_center_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_center_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::_internal_set_data_center_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_center_id_ = value;
}

// optional fixed32 best_dc_via_relay_pop_id = 2;
inline bool CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::has_best_dc_via_relay_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::clear_best_dc_via_relay_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_via_relay_pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::best_dc_via_relay_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter.best_dc_via_relay_pop_id)
  return _internal_best_dc_via_relay_pop_id();
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::set_best_dc_via_relay_pop_id(::uint32_t value) {
  _internal_set_best_dc_via_relay_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter.best_dc_via_relay_pop_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::_internal_best_dc_via_relay_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_dc_via_relay_pop_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::_internal_set_best_dc_via_relay_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_via_relay_pop_id_ = value;
}

// optional uint32 best_dc_ping_ms = 3;
inline bool CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::has_best_dc_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::clear_best_dc_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::best_dc_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter.best_dc_ping_ms)
  return _internal_best_dc_ping_ms();
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::set_best_dc_ping_ms(::uint32_t value) {
  _internal_set_best_dc_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter.best_dc_ping_ms)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::_internal_best_dc_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_dc_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter::_internal_set_best_dc_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_dc_ping_ms_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply

// optional fixed32 connection_id = 1;
inline bool CMsgSteamDatagramClientPingSampleReply::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramClientPingSampleReply::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.connection_id)
}
inline ::uint32_t CMsgSteamDatagramClientPingSampleReply::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional bool relay_override_active = 5;
inline bool CMsgSteamDatagramClientPingSampleReply::has_relay_override_active() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_relay_override_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_override_active_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgSteamDatagramClientPingSampleReply::relay_override_active() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.relay_override_active)
  return _internal_relay_override_active();
}
inline void CMsgSteamDatagramClientPingSampleReply::set_relay_override_active(bool value) {
  _internal_set_relay_override_active(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.relay_override_active)
}
inline bool CMsgSteamDatagramClientPingSampleReply::_internal_relay_override_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_override_active_;
}
inline void CMsgSteamDatagramClientPingSampleReply::_internal_set_relay_override_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_override_active_ = value;
}

// optional .CMsgTOSTreatment tos = 6;
inline bool CMsgSteamDatagramClientPingSampleReply::has_tos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tos_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tos_ != nullptr) _impl_.tos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgTOSTreatment& CMsgSteamDatagramClientPingSampleReply::_internal_tos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgTOSTreatment* p = _impl_.tos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgTOSTreatment&>(::_CMsgTOSTreatment_default_instance_);
}
inline const ::CMsgTOSTreatment& CMsgSteamDatagramClientPingSampleReply::tos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.tos)
  return _internal_tos();
}
inline void CMsgSteamDatagramClientPingSampleReply::unsafe_arena_set_allocated_tos(
    ::CMsgTOSTreatment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tos_);
  }
  _impl_.tos_ = reinterpret_cast<::CMsgTOSTreatment*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramClientPingSampleReply.tos)
}
inline ::CMsgTOSTreatment* PROTOBUF_NULLABLE CMsgSteamDatagramClientPingSampleReply::release_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgTOSTreatment* released = _impl_.tos_;
  _impl_.tos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgTOSTreatment* PROTOBUF_NULLABLE CMsgSteamDatagramClientPingSampleReply::unsafe_arena_release_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientPingSampleReply.tos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgTOSTreatment* temp = _impl_.tos_;
  _impl_.tos_ = nullptr;
  return temp;
}
inline ::CMsgTOSTreatment* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::_internal_mutable_tos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgTOSTreatment>(GetArena());
    _impl_.tos_ = reinterpret_cast<::CMsgTOSTreatment*>(p);
  }
  return _impl_.tos_;
}
inline ::CMsgTOSTreatment* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::mutable_tos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgTOSTreatment* _msg = _internal_mutable_tos();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.tos)
  return _msg;
}
inline void CMsgSteamDatagramClientPingSampleReply::set_allocated_tos(::CMsgTOSTreatment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tos_ = reinterpret_cast<::CMsgTOSTreatment*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientPingSampleReply.tos)
}

// repeated .CMsgSteamDatagramClientPingSampleReply.POP pops = 2;
inline int CMsgSteamDatagramClientPingSampleReply::_internal_pops_size() const {
  return _internal_pops().size();
}
inline int CMsgSteamDatagramClientPingSampleReply::pops_size() const {
  return _internal_pops_size();
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_pops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pops_.Clear();
}
inline ::CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::mutable_pops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.pops)
  return _internal_mutable_pops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::mutable_pops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramClientPingSampleReply.pops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pops();
}
inline const ::CMsgSteamDatagramClientPingSampleReply_POP& CMsgSteamDatagramClientPingSampleReply::pops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.pops)
  return _internal_pops().Get(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_POP* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::add_pops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamDatagramClientPingSampleReply_POP* _add = _internal_mutable_pops()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramClientPingSampleReply.pops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>& CMsgSteamDatagramClientPingSampleReply::pops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramClientPingSampleReply.pops)
  return _internal_pops();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>&
CMsgSteamDatagramClientPingSampleReply::_internal_pops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pops_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_POP>* PROTOBUF_NONNULL
CMsgSteamDatagramClientPingSampleReply::_internal_mutable_pops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pops_;
}

// repeated .CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter legacy_data_centers = 3;
inline int CMsgSteamDatagramClientPingSampleReply::_internal_legacy_data_centers_size() const {
  return _internal_legacy_data_centers().size();
}
inline int CMsgSteamDatagramClientPingSampleReply::legacy_data_centers_size() const {
  return _internal_legacy_data_centers_size();
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_legacy_data_centers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_data_centers_.Clear();
}
inline ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::mutable_legacy_data_centers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.legacy_data_centers)
  return _internal_mutable_legacy_data_centers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::mutable_legacy_data_centers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramClientPingSampleReply.legacy_data_centers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legacy_data_centers();
}
inline const ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter& CMsgSteamDatagramClientPingSampleReply::legacy_data_centers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.legacy_data_centers)
  return _internal_legacy_data_centers().Get(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* PROTOBUF_NONNULL CMsgSteamDatagramClientPingSampleReply::add_legacy_data_centers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter* _add = _internal_mutable_legacy_data_centers()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramClientPingSampleReply.legacy_data_centers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>& CMsgSteamDatagramClientPingSampleReply::legacy_data_centers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramClientPingSampleReply.legacy_data_centers)
  return _internal_legacy_data_centers();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>&
CMsgSteamDatagramClientPingSampleReply::_internal_legacy_data_centers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_data_centers_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter>* PROTOBUF_NONNULL
CMsgSteamDatagramClientPingSampleReply::_internal_mutable_legacy_data_centers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legacy_data_centers_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientSwitchedPrimary_RouterQuality

// optional uint32 score = 1;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.score)
  return _internal_score();
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_score(::uint32_t value) {
  _internal_set_score(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.score)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.score_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_set_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_ = value;
}

// optional uint32 front_ping = 2;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_front_ping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_front_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.front_ping_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::front_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.front_ping)
  return _internal_front_ping();
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_front_ping(::uint32_t value) {
  _internal_set_front_ping(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.front_ping)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_front_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.front_ping_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_set_front_ping(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.front_ping_ = value;
}

// optional uint32 back_ping = 3;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_back_ping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_back_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.back_ping_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::back_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.back_ping)
  return _internal_back_ping();
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_back_ping(::uint32_t value) {
  _internal_set_back_ping(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.back_ping)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_back_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.back_ping_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_set_back_ping(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.back_ping_ = value;
}

// optional uint32 seconds_until_down = 4;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_seconds_until_down() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_seconds_until_down() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_down_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::seconds_until_down() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.seconds_until_down)
  return _internal_seconds_until_down();
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_seconds_until_down(::uint32_t value) {
  _internal_set_seconds_until_down(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.seconds_until_down)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_seconds_until_down() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seconds_until_down_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::_internal_set_seconds_until_down(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_down_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientSwitchedPrimary

// optional fixed32 connection_id = 1;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.connection_id)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional fixed32 from_ip = 2;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::from_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_ip)
  return _internal_from_ip();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_ip(::uint32_t value) {
  _internal_set_from_ip(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_ip)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::_internal_from_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_ip_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_from_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ip_ = value;
}

// optional uint32 from_port = 3;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::from_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_port)
  return _internal_from_port();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_port(::uint32_t value) {
  _internal_set_from_port(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_port)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::_internal_from_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_port_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_from_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_port_ = value;
}

// optional fixed32 from_router_cluster = 4;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_router_cluster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_router_cluster() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_router_cluster_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::from_router_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_router_cluster)
  return _internal_from_router_cluster();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_router_cluster(::uint32_t value) {
  _internal_set_from_router_cluster(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_router_cluster)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::_internal_from_router_cluster() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_router_cluster_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_from_router_cluster(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_router_cluster_ = value;
}

// optional uint32 from_active_time = 5;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_active_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_active_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_active_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::from_active_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_active_time)
  return _internal_from_active_time();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_active_time(::uint32_t value) {
  _internal_set_from_active_time(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_active_time)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::_internal_from_active_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_active_time_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_from_active_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_active_time_ = value;
}

// optional uint32 from_active_packets_recv = 6;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_active_packets_recv() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_active_packets_recv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_active_packets_recv_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::from_active_packets_recv() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_active_packets_recv)
  return _internal_from_active_packets_recv();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_active_packets_recv(::uint32_t value) {
  _internal_set_from_active_packets_recv(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_active_packets_recv)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::_internal_from_active_packets_recv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_active_packets_recv_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_from_active_packets_recv(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_active_packets_recv_ = value;
}

// optional string from_dropped_reason = 7;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_dropped_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_dropped_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_dropped_reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramClientSwitchedPrimary::from_dropped_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  return _internal_from_dropped_reason();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.from_dropped_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::mutable_from_dropped_reason()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_dropped_reason();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  return _s;
}
inline const std::string& CMsgSteamDatagramClientSwitchedPrimary::_internal_from_dropped_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_dropped_reason_.Get();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_from_dropped_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.from_dropped_reason_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::_internal_mutable_from_dropped_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.from_dropped_reason_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::release_from_dropped_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.from_dropped_reason_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.from_dropped_reason_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_dropped_reason(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.from_dropped_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_dropped_reason_.IsDefault()) {
    _impl_.from_dropped_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}

// optional uint32 gap_ms = 8;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_gap_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_gap_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gap_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::gap_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.gap_ms)
  return _internal_gap_ms();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_gap_ms(::uint32_t value) {
  _internal_set_gap_ms(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.gap_ms)
}
inline ::uint32_t CMsgSteamDatagramClientSwitchedPrimary::_internal_gap_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gap_ms_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::_internal_set_gap_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gap_ms_ = value;
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_now = 9;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_quality_now() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_quality_now_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_quality_now_ != nullptr) _impl_.from_quality_now_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::_internal_from_quality_now() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = _impl_.from_quality_now_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&>(::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::from_quality_now() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
  return _internal_from_quality_now();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_set_allocated_from_quality_now(
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_quality_now_);
  }
  _impl_.from_quality_now_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::release_from_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* released = _impl_.from_quality_now_;
  _impl_.from_quality_now_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_release_from_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = _impl_.from_quality_now_;
  _impl_.from_quality_now_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::_internal_mutable_from_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_quality_now_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality>(GetArena());
    _impl_.from_quality_now_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(p);
  }
  return _impl_.from_quality_now_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::mutable_from_quality_now()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* _msg = _internal_mutable_from_quality_now();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
  return _msg;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_quality_now_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.from_quality_now_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_now = 10;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_to_quality_now() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_quality_now_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_to_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_quality_now_ != nullptr) _impl_.to_quality_now_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::_internal_to_quality_now() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = _impl_.to_quality_now_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&>(::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::to_quality_now() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
  return _internal_to_quality_now();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_set_allocated_to_quality_now(
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_quality_now_);
  }
  _impl_.to_quality_now_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::release_to_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* released = _impl_.to_quality_now_;
  _impl_.to_quality_now_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_release_to_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = _impl_.to_quality_now_;
  _impl_.to_quality_now_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::_internal_mutable_to_quality_now() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_quality_now_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality>(GetArena());
    _impl_.to_quality_now_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(p);
  }
  return _impl_.to_quality_now_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::mutable_to_quality_now()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* _msg = _internal_mutable_to_quality_now();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
  return _msg;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_to_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_quality_now_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.to_quality_now_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_then = 11;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_quality_then() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_quality_then_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_quality_then_ != nullptr) _impl_.from_quality_then_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::_internal_from_quality_then() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = _impl_.from_quality_then_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&>(::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::from_quality_then() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
  return _internal_from_quality_then();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_set_allocated_from_quality_then(
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_quality_then_);
  }
  _impl_.from_quality_then_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::release_from_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* released = _impl_.from_quality_then_;
  _impl_.from_quality_then_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_release_from_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = _impl_.from_quality_then_;
  _impl_.from_quality_then_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::_internal_mutable_from_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_quality_then_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality>(GetArena());
    _impl_.from_quality_then_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(p);
  }
  return _impl_.from_quality_then_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::mutable_from_quality_then()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* _msg = _internal_mutable_from_quality_then();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
  return _msg;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_quality_then_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.from_quality_then_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_then = 12;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_to_quality_then() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_quality_then_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_to_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_quality_then_ != nullptr) _impl_.to_quality_then_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::_internal_to_quality_then() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = _impl_.to_quality_then_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&>(::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::to_quality_then() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
  return _internal_to_quality_then();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_set_allocated_to_quality_then(
    ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_quality_then_);
  }
  _impl_.to_quality_then_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::release_to_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* released = _impl_.to_quality_then_;
  _impl_.to_quality_then_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE CMsgSteamDatagramClientSwitchedPrimary::unsafe_arena_release_to_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = _impl_.to_quality_then_;
  _impl_.to_quality_then_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::_internal_mutable_to_quality_then() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_quality_then_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality>(GetArena());
    _impl_.to_quality_then_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(p);
  }
  return _impl_.to_quality_then_;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NONNULL CMsgSteamDatagramClientSwitchedPrimary::mutable_to_quality_then()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* _msg = _internal_mutable_to_quality_then();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
  return _msg;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_to_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_quality_then_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.to_quality_then_ = reinterpret_cast<::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectRequest

// optional fixed32 connection_id = 1;
inline bool CMsgSteamDatagramConnectRequest::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectRequest::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramConnectRequest::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectRequest.connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramConnectRequest::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional fixed64 my_timestamp = 4;
inline bool CMsgSteamDatagramConnectRequest::has_my_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectRequest::clear_my_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t CMsgSteamDatagramConnectRequest::my_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.my_timestamp)
  return _internal_my_timestamp();
}
inline void CMsgSteamDatagramConnectRequest::set_my_timestamp(::uint64_t value) {
  _internal_set_my_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectRequest.my_timestamp)
}
inline ::uint64_t CMsgSteamDatagramConnectRequest::_internal_my_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_timestamp_;
}
inline void CMsgSteamDatagramConnectRequest::_internal_set_my_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_timestamp_ = value;
}

// optional uint32 ping_est_ms = 5;
inline bool CMsgSteamDatagramConnectRequest::has_ping_est_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectRequest::clear_ping_est_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_est_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::ping_est_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.ping_est_ms)
  return _internal_ping_est_ms();
}
inline void CMsgSteamDatagramConnectRequest::set_ping_est_ms(::uint32_t value) {
  _internal_set_ping_est_ms(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectRequest.ping_est_ms)
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::_internal_ping_est_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_est_ms_;
}
inline void CMsgSteamDatagramConnectRequest::_internal_set_ping_est_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_est_ms_ = value;
}

// optional uint32 virtual_port = 9;
inline bool CMsgSteamDatagramConnectRequest::has_virtual_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectRequest::clear_virtual_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.virtual_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::virtual_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.virtual_port)
  return _internal_virtual_port();
}
inline void CMsgSteamDatagramConnectRequest::set_virtual_port(::uint32_t value) {
  _internal_set_virtual_port(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectRequest.virtual_port)
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::_internal_virtual_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.virtual_port_;
}
inline void CMsgSteamDatagramConnectRequest::_internal_set_virtual_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.virtual_port_ = value;
}

// optional uint32 gameserver_relay_session_id = 2;
inline bool CMsgSteamDatagramConnectRequest::has_gameserver_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectRequest::clear_gameserver_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameserver_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::gameserver_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.gameserver_relay_session_id)
  return _internal_gameserver_relay_session_id();
}
inline void CMsgSteamDatagramConnectRequest::set_gameserver_relay_session_id(::uint32_t value) {
  _internal_set_gameserver_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectRequest.gameserver_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramConnectRequest::_internal_gameserver_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameserver_relay_session_id_;
}
inline void CMsgSteamDatagramConnectRequest::_internal_set_gameserver_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameserver_relay_session_id_ = value;
}

// optional .CMsgSteamDatagramSessionCryptInfoSigned crypt = 6;
inline bool CMsgSteamDatagramConnectRequest::has_crypt() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.crypt_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramSessionCryptInfoSigned& CMsgSteamDatagramConnectRequest::_internal_crypt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramSessionCryptInfoSigned* p = _impl_.crypt_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramSessionCryptInfoSigned&>(::_CMsgSteamDatagramSessionCryptInfoSigned_default_instance_);
}
inline const ::CMsgSteamDatagramSessionCryptInfoSigned& CMsgSteamDatagramConnectRequest::crypt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.crypt)
  return _internal_crypt();
}
inline void CMsgSteamDatagramConnectRequest::unsafe_arena_set_allocated_crypt(
    ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.crypt_);
  }
  _impl_.crypt_ = reinterpret_cast<::CMsgSteamDatagramSessionCryptInfoSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectRequest.crypt)
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectRequest::release_crypt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramSessionCryptInfoSigned* released = _impl_.crypt_;
  _impl_.crypt_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectRequest::unsafe_arena_release_crypt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectRequest.crypt)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramSessionCryptInfoSigned* temp = _impl_.crypt_;
  _impl_.crypt_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectRequest::_internal_mutable_crypt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.crypt_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramSessionCryptInfoSigned>(GetArena());
    _impl_.crypt_ = reinterpret_cast<::CMsgSteamDatagramSessionCryptInfoSigned*>(p);
  }
  return _impl_.crypt_;
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectRequest::mutable_crypt()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgSteamDatagramSessionCryptInfoSigned* _msg = _internal_mutable_crypt();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectRequest.crypt)
  return _msg;
}
inline void CMsgSteamDatagramConnectRequest::set_allocated_crypt(::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.crypt_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.crypt_ = reinterpret_cast<::CMsgSteamDatagramSessionCryptInfoSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectRequest.crypt)
}

// optional .CMsgSteamDatagramCertificateSigned cert = 7;
inline bool CMsgSteamDatagramConnectRequest::has_cert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cert_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramConnectRequest::_internal_cert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramCertificateSigned* p = _impl_.cert_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramCertificateSigned&>(::_CMsgSteamDatagramCertificateSigned_default_instance_);
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramConnectRequest::cert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.cert)
  return _internal_cert();
}
inline void CMsgSteamDatagramConnectRequest::unsafe_arena_set_allocated_cert(
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }
  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectRequest.cert)
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectRequest::release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramCertificateSigned* released = _impl_.cert_;
  _impl_.cert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectRequest::unsafe_arena_release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectRequest.cert)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramCertificateSigned* temp = _impl_.cert_;
  _impl_.cert_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectRequest::_internal_mutable_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramCertificateSigned>(GetArena());
    _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(p);
  }
  return _impl_.cert_;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectRequest::mutable_cert()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramCertificateSigned* _msg = _internal_mutable_cert();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectRequest.cert)
  return _msg;
}
inline void CMsgSteamDatagramConnectRequest::set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectRequest.cert)
}

// optional fixed64 routing_secret = 10;
inline bool CMsgSteamDatagramConnectRequest::has_routing_secret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectRequest::clear_routing_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint64_t CMsgSteamDatagramConnectRequest::routing_secret() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.routing_secret)
  return _internal_routing_secret();
}
inline void CMsgSteamDatagramConnectRequest::set_routing_secret(::uint64_t value) {
  _internal_set_routing_secret(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectRequest.routing_secret)
}
inline ::uint64_t CMsgSteamDatagramConnectRequest::_internal_routing_secret() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routing_secret_;
}
inline void CMsgSteamDatagramConnectRequest::_internal_set_routing_secret(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = value;
}

// optional fixed64 legacy_client_steam_id = 3;
inline bool CMsgSteamDatagramConnectRequest::has_legacy_client_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectRequest::clear_legacy_client_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_client_steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t CMsgSteamDatagramConnectRequest::legacy_client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectRequest.legacy_client_steam_id)
  return _internal_legacy_client_steam_id();
}
inline void CMsgSteamDatagramConnectRequest::set_legacy_client_steam_id(::uint64_t value) {
  _internal_set_legacy_client_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectRequest.legacy_client_steam_id)
}
inline ::uint64_t CMsgSteamDatagramConnectRequest::_internal_legacy_client_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_client_steam_id_;
}
inline void CMsgSteamDatagramConnectRequest::_internal_set_legacy_client_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_client_steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectOK

// optional fixed32 client_connection_id = 1;
inline bool CMsgSteamDatagramConnectOK::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectOK::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramConnectOK::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectOK.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramConnectOK::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectOK.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectOK::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramConnectOK::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional fixed32 server_connection_id = 7;
inline bool CMsgSteamDatagramConnectOK::has_server_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectOK::clear_server_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramConnectOK::server_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectOK.server_connection_id)
  return _internal_server_connection_id();
}
inline void CMsgSteamDatagramConnectOK::set_server_connection_id(::uint32_t value) {
  _internal_set_server_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectOK.server_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectOK::_internal_server_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_connection_id_;
}
inline void CMsgSteamDatagramConnectOK::_internal_set_server_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = value;
}

// optional fixed64 your_timestamp = 3;
inline bool CMsgSteamDatagramConnectOK::has_your_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectOK::clear_your_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t CMsgSteamDatagramConnectOK::your_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectOK.your_timestamp)
  return _internal_your_timestamp();
}
inline void CMsgSteamDatagramConnectOK::set_your_timestamp(::uint64_t value) {
  _internal_set_your_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectOK.your_timestamp)
}
inline ::uint64_t CMsgSteamDatagramConnectOK::_internal_your_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.your_timestamp_;
}
inline void CMsgSteamDatagramConnectOK::_internal_set_your_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_timestamp_ = value;
}

// optional uint32 delay_time_usec = 4;
inline bool CMsgSteamDatagramConnectOK::has_delay_time_usec() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectOK::clear_delay_time_usec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_time_usec_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramConnectOK::delay_time_usec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectOK.delay_time_usec)
  return _internal_delay_time_usec();
}
inline void CMsgSteamDatagramConnectOK::set_delay_time_usec(::uint32_t value) {
  _internal_set_delay_time_usec(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectOK.delay_time_usec)
}
inline ::uint32_t CMsgSteamDatagramConnectOK::_internal_delay_time_usec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_time_usec_;
}
inline void CMsgSteamDatagramConnectOK::_internal_set_delay_time_usec(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_time_usec_ = value;
}

// optional uint32 gameserver_relay_session_id = 2;
inline bool CMsgSteamDatagramConnectOK::has_gameserver_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectOK::clear_gameserver_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameserver_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramConnectOK::gameserver_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectOK.gameserver_relay_session_id)
  return _internal_gameserver_relay_session_id();
}
inline void CMsgSteamDatagramConnectOK::set_gameserver_relay_session_id(::uint32_t value) {
  _internal_set_gameserver_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectOK.gameserver_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramConnectOK::_internal_gameserver_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameserver_relay_session_id_;
}
inline void CMsgSteamDatagramConnectOK::_internal_set_gameserver_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameserver_relay_session_id_ = value;
}

// optional .CMsgSteamDatagramSessionCryptInfoSigned crypt = 5;
inline bool CMsgSteamDatagramConnectOK::has_crypt() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.crypt_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramSessionCryptInfoSigned& CMsgSteamDatagramConnectOK::_internal_crypt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramSessionCryptInfoSigned* p = _impl_.crypt_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramSessionCryptInfoSigned&>(::_CMsgSteamDatagramSessionCryptInfoSigned_default_instance_);
}
inline const ::CMsgSteamDatagramSessionCryptInfoSigned& CMsgSteamDatagramConnectOK::crypt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectOK.crypt)
  return _internal_crypt();
}
inline void CMsgSteamDatagramConnectOK::unsafe_arena_set_allocated_crypt(
    ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.crypt_);
  }
  _impl_.crypt_ = reinterpret_cast<::CMsgSteamDatagramSessionCryptInfoSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectOK.crypt)
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectOK::release_crypt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramSessionCryptInfoSigned* released = _impl_.crypt_;
  _impl_.crypt_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectOK::unsafe_arena_release_crypt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectOK.crypt)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramSessionCryptInfoSigned* temp = _impl_.crypt_;
  _impl_.crypt_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectOK::_internal_mutable_crypt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.crypt_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramSessionCryptInfoSigned>(GetArena());
    _impl_.crypt_ = reinterpret_cast<::CMsgSteamDatagramSessionCryptInfoSigned*>(p);
  }
  return _impl_.crypt_;
}
inline ::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectOK::mutable_crypt()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgSteamDatagramSessionCryptInfoSigned* _msg = _internal_mutable_crypt();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectOK.crypt)
  return _msg;
}
inline void CMsgSteamDatagramConnectOK::set_allocated_crypt(::CMsgSteamDatagramSessionCryptInfoSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.crypt_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.crypt_ = reinterpret_cast<::CMsgSteamDatagramSessionCryptInfoSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectOK.crypt)
}

// optional .CMsgSteamDatagramCertificateSigned cert = 6;
inline bool CMsgSteamDatagramConnectOK::has_cert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cert_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramConnectOK::_internal_cert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramCertificateSigned* p = _impl_.cert_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramCertificateSigned&>(::_CMsgSteamDatagramCertificateSigned_default_instance_);
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramConnectOK::cert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectOK.cert)
  return _internal_cert();
}
inline void CMsgSteamDatagramConnectOK::unsafe_arena_set_allocated_cert(
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }
  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectOK.cert)
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectOK::release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramCertificateSigned* released = _impl_.cert_;
  _impl_.cert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramConnectOK::unsafe_arena_release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectOK.cert)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramCertificateSigned* temp = _impl_.cert_;
  _impl_.cert_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectOK::_internal_mutable_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramCertificateSigned>(GetArena());
    _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(p);
  }
  return _impl_.cert_;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramConnectOK::mutable_cert()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramCertificateSigned* _msg = _internal_mutable_cert();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectOK.cert)
  return _msg;
}
inline void CMsgSteamDatagramConnectOK::set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectOK.cert)
}

// -------------------------------------------------------------------

// CMsgSteamNetworkingP2PSDRRoutingSummary

// optional uint32 initial_ping = 1;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_initial_ping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_initial_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_ping_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::initial_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_ping)
  return _internal_initial_ping();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_initial_ping(::uint32_t value) {
  _internal_set_initial_ping(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_ping)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_initial_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_ping_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_initial_ping(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_ping_ = value;
}

// optional uint32 initial_ping_front_local = 2;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_initial_ping_front_local() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_initial_ping_front_local() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_ping_front_local_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::initial_ping_front_local() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_ping_front_local)
  return _internal_initial_ping_front_local();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_initial_ping_front_local(::uint32_t value) {
  _internal_set_initial_ping_front_local(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_ping_front_local)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_initial_ping_front_local() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_ping_front_local_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_initial_ping_front_local(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_ping_front_local_ = value;
}

// optional uint32 initial_ping_front_remote = 3;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_initial_ping_front_remote() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_initial_ping_front_remote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_ping_front_remote_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::initial_ping_front_remote() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_ping_front_remote)
  return _internal_initial_ping_front_remote();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_initial_ping_front_remote(::uint32_t value) {
  _internal_set_initial_ping_front_remote(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_ping_front_remote)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_initial_ping_front_remote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_ping_front_remote_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_initial_ping_front_remote(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_ping_front_remote_ = value;
}

// optional uint32 initial_score = 4;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_initial_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_initial_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::initial_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_score)
  return _internal_initial_score();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_initial_score(::uint32_t value) {
  _internal_set_initial_score(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_score)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_initial_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_score_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_initial_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_score_ = value;
}

// optional fixed32 initial_pop_local = 5;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_initial_pop_local() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_initial_pop_local() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_pop_local_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::initial_pop_local() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_pop_local)
  return _internal_initial_pop_local();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_initial_pop_local(::uint32_t value) {
  _internal_set_initial_pop_local(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_pop_local)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_initial_pop_local() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_pop_local_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_initial_pop_local(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_pop_local_ = value;
}

// optional fixed32 initial_pop_remote = 6;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_initial_pop_remote() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_initial_pop_remote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_pop_remote_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::initial_pop_remote() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_pop_remote)
  return _internal_initial_pop_remote();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_initial_pop_remote(::uint32_t value) {
  _internal_set_initial_pop_remote(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.initial_pop_remote)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_initial_pop_remote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_pop_remote_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_initial_pop_remote(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_pop_remote_ = value;
}

// optional uint32 best_ping = 11;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_best_ping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_best_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ping_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::best_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.best_ping)
  return _internal_best_ping();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_best_ping(::uint32_t value) {
  _internal_set_best_ping(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.best_ping)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_best_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_ping_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_best_ping(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ping_ = value;
}

// optional uint32 best_ping_front_local = 12;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_best_ping_front_local() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_best_ping_front_local() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ping_front_local_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::best_ping_front_local() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.best_ping_front_local)
  return _internal_best_ping_front_local();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_best_ping_front_local(::uint32_t value) {
  _internal_set_best_ping_front_local(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.best_ping_front_local)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_best_ping_front_local() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_ping_front_local_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_best_ping_front_local(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ping_front_local_ = value;
}

// optional uint32 best_ping_front_remote = 13;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_best_ping_front_remote() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_best_ping_front_remote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ping_front_remote_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::best_ping_front_remote() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.best_ping_front_remote)
  return _internal_best_ping_front_remote();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_best_ping_front_remote(::uint32_t value) {
  _internal_set_best_ping_front_remote(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.best_ping_front_remote)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_best_ping_front_remote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_ping_front_remote_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_best_ping_front_remote(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ping_front_remote_ = value;
}

// optional uint32 best_score = 14;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_best_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_best_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::best_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.best_score)
  return _internal_best_score();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_best_score(::uint32_t value) {
  _internal_set_best_score(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.best_score)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_best_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_score_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_best_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_score_ = value;
}

// optional fixed32 best_pop_local = 15;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_best_pop_local() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_best_pop_local() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_pop_local_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::best_pop_local() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.best_pop_local)
  return _internal_best_pop_local();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_best_pop_local(::uint32_t value) {
  _internal_set_best_pop_local(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.best_pop_local)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_best_pop_local() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_pop_local_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_best_pop_local(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_pop_local_ = value;
}

// optional fixed32 best_pop_remote = 16;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_best_pop_remote() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_best_pop_remote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_pop_remote_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::best_pop_remote() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.best_pop_remote)
  return _internal_best_pop_remote();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_best_pop_remote(::uint32_t value) {
  _internal_set_best_pop_remote(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.best_pop_remote)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_best_pop_remote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_pop_remote_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_best_pop_remote(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_pop_remote_ = value;
}

// optional uint32 best_time = 17;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_best_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_best_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::best_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.best_time)
  return _internal_best_time();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_best_time(::uint32_t value) {
  _internal_set_best_time(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.best_time)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_best_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_time_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_best_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_time_ = value;
}

// optional uint32 negotiation_ms = 7;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_negotiation_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_negotiation_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.negotiation_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::negotiation_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.negotiation_ms)
  return _internal_negotiation_ms();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_negotiation_ms(::uint32_t value) {
  _internal_set_negotiation_ms(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.negotiation_ms)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_negotiation_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.negotiation_ms_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_negotiation_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.negotiation_ms_ = value;
}

// optional uint32 selected_seconds = 8;
inline bool CMsgSteamNetworkingP2PSDRRoutingSummary::has_selected_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::clear_selected_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selected_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::selected_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgSteamNetworkingP2PSDRRoutingSummary.selected_seconds)
  return _internal_selected_seconds();
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::set_selected_seconds(::uint32_t value) {
  _internal_set_selected_seconds(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamNetworkingP2PSDRRoutingSummary.selected_seconds)
}
inline ::uint32_t CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_selected_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.selected_seconds_;
}
inline void CMsgSteamNetworkingP2PSDRRoutingSummary::_internal_set_selected_seconds(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selected_seconds_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PRoutingSummary

// optional .CMsgSteamNetworkingICESessionSummary ice = 2;
inline bool CMsgSteamDatagramP2PRoutingSummary::has_ice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ice_ != nullptr);
  return value;
}
inline const ::CMsgSteamNetworkingICESessionSummary& CMsgSteamDatagramP2PRoutingSummary::_internal_ice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamNetworkingICESessionSummary* p = _impl_.ice_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamNetworkingICESessionSummary&>(::_CMsgSteamNetworkingICESessionSummary_default_instance_);
}
inline const ::CMsgSteamNetworkingICESessionSummary& CMsgSteamDatagramP2PRoutingSummary::ice() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutingSummary.ice)
  return _internal_ice();
}
inline void CMsgSteamDatagramP2PRoutingSummary::unsafe_arena_set_allocated_ice(
    ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ice_);
  }
  _impl_.ice_ = reinterpret_cast<::CMsgSteamNetworkingICESessionSummary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramP2PRoutingSummary.ice)
}
inline ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE CMsgSteamDatagramP2PRoutingSummary::release_ice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamNetworkingICESessionSummary* released = _impl_.ice_;
  _impl_.ice_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE CMsgSteamDatagramP2PRoutingSummary::unsafe_arena_release_ice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PRoutingSummary.ice)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamNetworkingICESessionSummary* temp = _impl_.ice_;
  _impl_.ice_ = nullptr;
  return temp;
}
inline ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutingSummary::_internal_mutable_ice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ice_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamNetworkingICESessionSummary>(GetArena());
    _impl_.ice_ = reinterpret_cast<::CMsgSteamNetworkingICESessionSummary*>(p);
  }
  return _impl_.ice_;
}
inline ::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutingSummary::mutable_ice()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgSteamNetworkingICESessionSummary* _msg = _internal_mutable_ice();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PRoutingSummary.ice)
  return _msg;
}
inline void CMsgSteamDatagramP2PRoutingSummary::set_allocated_ice(::CMsgSteamNetworkingICESessionSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ice_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ice_ = reinterpret_cast<::CMsgSteamNetworkingICESessionSummary*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PRoutingSummary.ice)
}

// optional .CMsgSteamNetworkingP2PSDRRoutingSummary sdr = 3;
inline bool CMsgSteamDatagramP2PRoutingSummary::has_sdr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sdr_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramP2PRoutingSummary::clear_sdr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sdr_ != nullptr) _impl_.sdr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamNetworkingP2PSDRRoutingSummary& CMsgSteamDatagramP2PRoutingSummary::_internal_sdr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamNetworkingP2PSDRRoutingSummary* p = _impl_.sdr_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamNetworkingP2PSDRRoutingSummary&>(::_CMsgSteamNetworkingP2PSDRRoutingSummary_default_instance_);
}
inline const ::CMsgSteamNetworkingP2PSDRRoutingSummary& CMsgSteamDatagramP2PRoutingSummary::sdr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutingSummary.sdr)
  return _internal_sdr();
}
inline void CMsgSteamDatagramP2PRoutingSummary::unsafe_arena_set_allocated_sdr(
    ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sdr_);
  }
  _impl_.sdr_ = reinterpret_cast<::CMsgSteamNetworkingP2PSDRRoutingSummary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramP2PRoutingSummary.sdr)
}
inline ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramP2PRoutingSummary::release_sdr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamNetworkingP2PSDRRoutingSummary* released = _impl_.sdr_;
  _impl_.sdr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramP2PRoutingSummary::unsafe_arena_release_sdr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PRoutingSummary.sdr)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamNetworkingP2PSDRRoutingSummary* temp = _impl_.sdr_;
  _impl_.sdr_ = nullptr;
  return temp;
}
inline ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutingSummary::_internal_mutable_sdr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sdr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamNetworkingP2PSDRRoutingSummary>(GetArena());
    _impl_.sdr_ = reinterpret_cast<::CMsgSteamNetworkingP2PSDRRoutingSummary*>(p);
  }
  return _impl_.sdr_;
}
inline ::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutingSummary::mutable_sdr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamNetworkingP2PSDRRoutingSummary* _msg = _internal_mutable_sdr();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PRoutingSummary.sdr)
  return _msg;
}
inline void CMsgSteamDatagramP2PRoutingSummary::set_allocated_sdr(::CMsgSteamNetworkingP2PSDRRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sdr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sdr_ = reinterpret_cast<::CMsgSteamNetworkingP2PSDRRoutingSummary*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PRoutingSummary.sdr)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionClosed

// optional fixed32 to_connection_id = 7;
inline bool CMsgSteamDatagramConnectionClosed::has_to_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_to_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::to_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.to_connection_id)
  return _internal_to_connection_id();
}
inline void CMsgSteamDatagramConnectionClosed::set_to_connection_id(::uint32_t value) {
  _internal_set_to_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.to_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::_internal_to_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_connection_id_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_to_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_connection_id_ = value;
}

// optional fixed32 from_connection_id = 8;
inline bool CMsgSteamDatagramConnectionClosed::has_from_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_from_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::from_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.from_connection_id)
  return _internal_from_connection_id();
}
inline void CMsgSteamDatagramConnectionClosed::set_from_connection_id(::uint32_t value) {
  _internal_set_from_connection_id(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.from_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::_internal_from_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_connection_id_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_from_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_connection_id_ = value;
}

// optional string from_identity_string = 15;
inline bool CMsgSteamDatagramConnectionClosed::has_from_identity_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_from_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_identity_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgSteamDatagramConnectionClosed::from_identity_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.from_identity_string)
  return _internal_from_identity_string();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramConnectionClosed::set_from_identity_string(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.from_identity_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.from_identity_string)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::mutable_from_identity_string()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionClosed.from_identity_string)
  return _s;
}
inline const std::string& CMsgSteamDatagramConnectionClosed::_internal_from_identity_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_identity_string_.Get();
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_from_identity_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.from_identity_string_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::_internal_mutable_from_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.from_identity_string_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::release_from_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionClosed.from_identity_string)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.from_identity_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.from_identity_string_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramConnectionClosed::set_allocated_from_identity_string(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.from_identity_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_identity_string_.IsDefault()) {
    _impl_.from_identity_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionClosed.from_identity_string)
}

// optional .CMsgSteamNetworkingIdentityLegacyBinary legacy_from_identity_binary = 13;
inline bool CMsgSteamDatagramConnectionClosed::has_legacy_from_identity_binary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.legacy_from_identity_binary_ != nullptr);
  return value;
}
inline const ::CMsgSteamNetworkingIdentityLegacyBinary& CMsgSteamDatagramConnectionClosed::_internal_legacy_from_identity_binary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamNetworkingIdentityLegacyBinary* p = _impl_.legacy_from_identity_binary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamNetworkingIdentityLegacyBinary&>(::_CMsgSteamNetworkingIdentityLegacyBinary_default_instance_);
}
inline const ::CMsgSteamNetworkingIdentityLegacyBinary& CMsgSteamDatagramConnectionClosed::legacy_from_identity_binary() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.legacy_from_identity_binary)
  return _internal_legacy_from_identity_binary();
}
inline void CMsgSteamDatagramConnectionClosed::unsafe_arena_set_allocated_legacy_from_identity_binary(
    ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.legacy_from_identity_binary_);
  }
  _impl_.legacy_from_identity_binary_ = reinterpret_cast<::CMsgSteamNetworkingIdentityLegacyBinary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionClosed.legacy_from_identity_binary)
}
inline ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::release_legacy_from_identity_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamNetworkingIdentityLegacyBinary* released = _impl_.legacy_from_identity_binary_;
  _impl_.legacy_from_identity_binary_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::unsafe_arena_release_legacy_from_identity_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionClosed.legacy_from_identity_binary)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamNetworkingIdentityLegacyBinary* temp = _impl_.legacy_from_identity_binary_;
  _impl_.legacy_from_identity_binary_ = nullptr;
  return temp;
}
inline ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::_internal_mutable_legacy_from_identity_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.legacy_from_identity_binary_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamNetworkingIdentityLegacyBinary>(GetArena());
    _impl_.legacy_from_identity_binary_ = reinterpret_cast<::CMsgSteamNetworkingIdentityLegacyBinary*>(p);
  }
  return _impl_.legacy_from_identity_binary_;
}
inline ::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::mutable_legacy_from_identity_binary()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgSteamNetworkingIdentityLegacyBinary* _msg = _internal_mutable_legacy_from_identity_binary();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionClosed.legacy_from_identity_binary)
  return _msg;
}
inline void CMsgSteamDatagramConnectionClosed::set_allocated_legacy_from_identity_binary(::CMsgSteamNetworkingIdentityLegacyBinary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.legacy_from_identity_binary_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.legacy_from_identity_binary_ = reinterpret_cast<::CMsgSteamNetworkingIdentityLegacyBinary*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionClosed.legacy_from_identity_binary)
}

// optional fixed64 legacy_from_steam_id = 3;
inline bool CMsgSteamDatagramConnectionClosed::has_legacy_from_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_legacy_from_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_from_steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint64_t CMsgSteamDatagramConnectionClosed::legacy_from_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.legacy_from_steam_id)
  return _internal_legacy_from_steam_id();
}
inline void CMsgSteamDatagramConnectionClosed::set_legacy_from_steam_id(::uint64_t value) {
  _internal_set_legacy_from_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.legacy_from_steam_id)
}
inline ::uint64_t CMsgSteamDatagramConnectionClosed::_internal_legacy_from_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_from_steam_id_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_legacy_from_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_from_steam_id_ = value;
}

// optional uint32 legacy_gameserver_relay_session_id = 2;
inline bool CMsgSteamDatagramConnectionClosed::has_legacy_gameserver_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_legacy_gameserver_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_gameserver_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::legacy_gameserver_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.legacy_gameserver_relay_session_id)
  return _internal_legacy_gameserver_relay_session_id();
}
inline void CMsgSteamDatagramConnectionClosed::set_legacy_gameserver_relay_session_id(::uint32_t value) {
  _internal_set_legacy_gameserver_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.legacy_gameserver_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::_internal_legacy_gameserver_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_gameserver_relay_session_id_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_legacy_gameserver_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_gameserver_relay_session_id_ = value;
}

// optional fixed32 to_relay_session_id = 9;
inline bool CMsgSteamDatagramConnectionClosed::has_to_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_to_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::to_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.to_relay_session_id)
  return _internal_to_relay_session_id();
}
inline void CMsgSteamDatagramConnectionClosed::set_to_relay_session_id(::uint32_t value) {
  _internal_set_to_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.to_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::_internal_to_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_relay_session_id_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_to_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_relay_session_id_ = value;
}

// optional fixed32 from_relay_session_id = 10;
inline bool CMsgSteamDatagramConnectionClosed::has_from_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_from_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::from_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.from_relay_session_id)
  return _internal_from_relay_session_id();
}
inline void CMsgSteamDatagramConnectionClosed::set_from_relay_session_id(::uint32_t value) {
  _internal_set_from_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.from_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::_internal_from_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_relay_session_id_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_from_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_relay_session_id_ = value;
}

// optional bytes forward_target_relay_routing_token = 11;
inline bool CMsgSteamDatagramConnectionClosed::has_forward_target_relay_routing_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_forward_target_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_target_relay_routing_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramConnectionClosed::forward_target_relay_routing_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.forward_target_relay_routing_token)
  return _internal_forward_target_relay_routing_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramConnectionClosed::set_forward_target_relay_routing_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.forward_target_relay_routing_token_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.forward_target_relay_routing_token)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::mutable_forward_target_relay_routing_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_forward_target_relay_routing_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionClosed.forward_target_relay_routing_token)
  return _s;
}
inline const std::string& CMsgSteamDatagramConnectionClosed::_internal_forward_target_relay_routing_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forward_target_relay_routing_token_.Get();
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_forward_target_relay_routing_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.forward_target_relay_routing_token_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::_internal_mutable_forward_target_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.forward_target_relay_routing_token_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::release_forward_target_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionClosed.forward_target_relay_routing_token)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.forward_target_relay_routing_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.forward_target_relay_routing_token_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramConnectionClosed::set_allocated_forward_target_relay_routing_token(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.forward_target_relay_routing_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.forward_target_relay_routing_token_.IsDefault()) {
    _impl_.forward_target_relay_routing_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionClosed.forward_target_relay_routing_token)
}

// optional uint32 forward_target_revision = 12;
inline bool CMsgSteamDatagramConnectionClosed::has_forward_target_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_forward_target_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_target_revision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::forward_target_revision() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.forward_target_revision)
  return _internal_forward_target_revision();
}
inline void CMsgSteamDatagramConnectionClosed::set_forward_target_revision(::uint32_t value) {
  _internal_set_forward_target_revision(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.forward_target_revision)
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::_internal_forward_target_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forward_target_revision_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_forward_target_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_target_revision_ = value;
}

// optional .CMsgSteamDatagramConnectionClosed.ERelayMode relay_mode = 4 [default = None];
inline bool CMsgSteamDatagramConnectionClosed::has_relay_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_relay_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::CMsgSteamDatagramConnectionClosed_ERelayMode CMsgSteamDatagramConnectionClosed::relay_mode() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.relay_mode)
  return _internal_relay_mode();
}
inline void CMsgSteamDatagramConnectionClosed::set_relay_mode(::CMsgSteamDatagramConnectionClosed_ERelayMode value) {
  _internal_set_relay_mode(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.relay_mode)
}
inline ::CMsgSteamDatagramConnectionClosed_ERelayMode CMsgSteamDatagramConnectionClosed::_internal_relay_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::CMsgSteamDatagramConnectionClosed_ERelayMode>(_impl_.relay_mode_);
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_relay_mode(::CMsgSteamDatagramConnectionClosed_ERelayMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::CMsgSteamDatagramConnectionClosed_ERelayMode_internal_data_));
                                          _impl_.relay_mode_ = value;
}

// optional string debug = 5;
inline bool CMsgSteamDatagramConnectionClosed::has_debug() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debug_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramConnectionClosed::debug() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.debug)
  return _internal_debug();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramConnectionClosed::set_debug(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.debug_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.debug)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::mutable_debug()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_debug();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionClosed.debug)
  return _s;
}
inline const std::string& CMsgSteamDatagramConnectionClosed::_internal_debug() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.debug_.Get();
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_debug(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.debug_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::_internal_mutable_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.debug_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::release_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionClosed.debug)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.debug_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.debug_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramConnectionClosed::set_allocated_debug(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.debug_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.debug_.IsDefault()) {
    _impl_.debug_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionClosed.debug)
}

// optional uint32 reason_code = 6;
inline bool CMsgSteamDatagramConnectionClosed::has_reason_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_reason_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_code_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::reason_code() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.reason_code)
  return _internal_reason_code();
}
inline void CMsgSteamDatagramConnectionClosed::set_reason_code(::uint32_t value) {
  _internal_set_reason_code(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.reason_code)
}
inline ::uint32_t CMsgSteamDatagramConnectionClosed::_internal_reason_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_code_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_reason_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_code_ = value;
}

// optional fixed64 routing_secret = 14;
inline bool CMsgSteamDatagramConnectionClosed::has_routing_secret() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_routing_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::uint64_t CMsgSteamDatagramConnectionClosed::routing_secret() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.routing_secret)
  return _internal_routing_secret();
}
inline void CMsgSteamDatagramConnectionClosed::set_routing_secret(::uint64_t value) {
  _internal_set_routing_secret(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.routing_secret)
}
inline ::uint64_t CMsgSteamDatagramConnectionClosed::_internal_routing_secret() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routing_secret_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_routing_secret(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = value;
}

// optional bool not_primary_session = 16;
inline bool CMsgSteamDatagramConnectionClosed::has_not_primary_session() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_not_primary_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_session_ = false;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline bool CMsgSteamDatagramConnectionClosed::not_primary_session() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.not_primary_session)
  return _internal_not_primary_session();
}
inline void CMsgSteamDatagramConnectionClosed::set_not_primary_session(bool value) {
  _internal_set_not_primary_session(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.not_primary_session)
}
inline bool CMsgSteamDatagramConnectionClosed::_internal_not_primary_session() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.not_primary_session_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_not_primary_session(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_session_ = value;
}

// optional bool not_primary_transport = 19;
inline bool CMsgSteamDatagramConnectionClosed::has_not_primary_transport() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_not_primary_transport() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_transport_ = false;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline bool CMsgSteamDatagramConnectionClosed::not_primary_transport() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.not_primary_transport)
  return _internal_not_primary_transport();
}
inline void CMsgSteamDatagramConnectionClosed::set_not_primary_transport(bool value) {
  _internal_set_not_primary_transport(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.not_primary_transport)
}
inline bool CMsgSteamDatagramConnectionClosed::_internal_not_primary_transport() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.not_primary_transport_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_not_primary_transport(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_transport_ = value;
}

// optional bool relay_override_active = 22;
inline bool CMsgSteamDatagramConnectionClosed::has_relay_override_active() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_relay_override_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_override_active_ = false;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline bool CMsgSteamDatagramConnectionClosed::relay_override_active() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.relay_override_active)
  return _internal_relay_override_active();
}
inline void CMsgSteamDatagramConnectionClosed::set_relay_override_active(bool value) {
  _internal_set_relay_override_active(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionClosed.relay_override_active)
}
inline bool CMsgSteamDatagramConnectionClosed::_internal_relay_override_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_override_active_;
}
inline void CMsgSteamDatagramConnectionClosed::_internal_set_relay_override_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_override_active_ = value;
}

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 17;
inline bool CMsgSteamDatagramConnectionClosed::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionClosed::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionClosed::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramConnectionClosed::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionClosed.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionClosed.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionClosed.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramConnectionClosed::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionClosed.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 18;
inline bool CMsgSteamDatagramConnectionClosed::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionClosed::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionClosed::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramConnectionClosed::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionClosed.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionClosed.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionClosed.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramConnectionClosed::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionClosed.quality_e2e)
}

// optional .CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 21;
inline bool CMsgSteamDatagramConnectionClosed::has_p2p_routing_summary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.p2p_routing_summary_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramConnectionClosed::clear_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.p2p_routing_summary_ != nullptr) _impl_.p2p_routing_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::CMsgSteamDatagramP2PRoutingSummary& CMsgSteamDatagramConnectionClosed::_internal_p2p_routing_summary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramP2PRoutingSummary* p = _impl_.p2p_routing_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramP2PRoutingSummary&>(::_CMsgSteamDatagramP2PRoutingSummary_default_instance_);
}
inline const ::CMsgSteamDatagramP2PRoutingSummary& CMsgSteamDatagramConnectionClosed::p2p_routing_summary() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionClosed.p2p_routing_summary)
  return _internal_p2p_routing_summary();
}
inline void CMsgSteamDatagramConnectionClosed::unsafe_arena_set_allocated_p2p_routing_summary(
    ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.p2p_routing_summary_);
  }
  _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionClosed.p2p_routing_summary)
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::release_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::CMsgSteamDatagramP2PRoutingSummary* released = _impl_.p2p_routing_summary_;
  _impl_.p2p_routing_summary_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionClosed::unsafe_arena_release_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionClosed.p2p_routing_summary)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::CMsgSteamDatagramP2PRoutingSummary* temp = _impl_.p2p_routing_summary_;
  _impl_.p2p_routing_summary_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::_internal_mutable_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.p2p_routing_summary_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramP2PRoutingSummary>(GetArena());
    _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(p);
  }
  return _impl_.p2p_routing_summary_;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramConnectionClosed::mutable_p2p_routing_summary()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::CMsgSteamDatagramP2PRoutingSummary* _msg = _internal_mutable_p2p_routing_summary();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionClosed.p2p_routing_summary)
  return _msg;
}
inline void CMsgSteamDatagramConnectionClosed::set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.p2p_routing_summary_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionClosed.p2p_routing_summary)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramNoConnection

// optional fixed32 to_connection_id = 5;
inline bool CMsgSteamDatagramNoConnection::has_to_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_to_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramNoConnection::to_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.to_connection_id)
  return _internal_to_connection_id();
}
inline void CMsgSteamDatagramNoConnection::set_to_connection_id(::uint32_t value) {
  _internal_set_to_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.to_connection_id)
}
inline ::uint32_t CMsgSteamDatagramNoConnection::_internal_to_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_connection_id_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_to_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_connection_id_ = value;
}

// optional fixed32 from_connection_id = 6;
inline bool CMsgSteamDatagramNoConnection::has_from_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_from_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramNoConnection::from_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.from_connection_id)
  return _internal_from_connection_id();
}
inline void CMsgSteamDatagramNoConnection::set_from_connection_id(::uint32_t value) {
  _internal_set_from_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.from_connection_id)
}
inline ::uint32_t CMsgSteamDatagramNoConnection::_internal_from_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_connection_id_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_from_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_connection_id_ = value;
}

// optional uint32 legacy_gameserver_relay_session_id = 2;
inline bool CMsgSteamDatagramNoConnection::has_legacy_gameserver_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_legacy_gameserver_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_gameserver_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramNoConnection::legacy_gameserver_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.legacy_gameserver_relay_session_id)
  return _internal_legacy_gameserver_relay_session_id();
}
inline void CMsgSteamDatagramNoConnection::set_legacy_gameserver_relay_session_id(::uint32_t value) {
  _internal_set_legacy_gameserver_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.legacy_gameserver_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramNoConnection::_internal_legacy_gameserver_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_gameserver_relay_session_id_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_legacy_gameserver_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_gameserver_relay_session_id_ = value;
}

// optional fixed32 to_relay_session_id = 9;
inline bool CMsgSteamDatagramNoConnection::has_to_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_to_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramNoConnection::to_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.to_relay_session_id)
  return _internal_to_relay_session_id();
}
inline void CMsgSteamDatagramNoConnection::set_to_relay_session_id(::uint32_t value) {
  _internal_set_to_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.to_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramNoConnection::_internal_to_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_relay_session_id_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_to_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_relay_session_id_ = value;
}

// optional fixed32 from_relay_session_id = 10;
inline bool CMsgSteamDatagramNoConnection::has_from_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_from_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramNoConnection::from_relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.from_relay_session_id)
  return _internal_from_relay_session_id();
}
inline void CMsgSteamDatagramNoConnection::set_from_relay_session_id(::uint32_t value) {
  _internal_set_from_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.from_relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramNoConnection::_internal_from_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_relay_session_id_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_from_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_relay_session_id_ = value;
}

// optional string from_identity_string = 7;
inline bool CMsgSteamDatagramNoConnection::has_from_identity_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_from_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_identity_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramNoConnection::from_identity_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.from_identity_string)
  return _internal_from_identity_string();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramNoConnection::set_from_identity_string(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.from_identity_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.from_identity_string)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::mutable_from_identity_string()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramNoConnection.from_identity_string)
  return _s;
}
inline const std::string& CMsgSteamDatagramNoConnection::_internal_from_identity_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_identity_string_.Get();
}
inline void CMsgSteamDatagramNoConnection::_internal_set_from_identity_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.from_identity_string_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::_internal_mutable_from_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.from_identity_string_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramNoConnection::release_from_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramNoConnection.from_identity_string)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.from_identity_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.from_identity_string_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramNoConnection::set_allocated_from_identity_string(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.from_identity_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_identity_string_.IsDefault()) {
    _impl_.from_identity_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramNoConnection.from_identity_string)
}

// optional fixed64 legacy_from_steam_id = 3;
inline bool CMsgSteamDatagramNoConnection::has_legacy_from_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_legacy_from_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_from_steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t CMsgSteamDatagramNoConnection::legacy_from_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.legacy_from_steam_id)
  return _internal_legacy_from_steam_id();
}
inline void CMsgSteamDatagramNoConnection::set_legacy_from_steam_id(::uint64_t value) {
  _internal_set_legacy_from_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.legacy_from_steam_id)
}
inline ::uint64_t CMsgSteamDatagramNoConnection::_internal_legacy_from_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_from_steam_id_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_legacy_from_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_from_steam_id_ = value;
}

// optional bool end_to_end = 4;
inline bool CMsgSteamDatagramNoConnection::has_end_to_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_end_to_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_to_end_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgSteamDatagramNoConnection::end_to_end() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.end_to_end)
  return _internal_end_to_end();
}
inline void CMsgSteamDatagramNoConnection::set_end_to_end(bool value) {
  _internal_set_end_to_end(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.end_to_end)
}
inline bool CMsgSteamDatagramNoConnection::_internal_end_to_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_to_end_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_end_to_end(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_to_end_ = value;
}

// optional bool not_primary_session = 12;
inline bool CMsgSteamDatagramNoConnection::has_not_primary_session() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_not_primary_session() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_session_ = false;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgSteamDatagramNoConnection::not_primary_session() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.not_primary_session)
  return _internal_not_primary_session();
}
inline void CMsgSteamDatagramNoConnection::set_not_primary_session(bool value) {
  _internal_set_not_primary_session(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.not_primary_session)
}
inline bool CMsgSteamDatagramNoConnection::_internal_not_primary_session() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.not_primary_session_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_not_primary_session(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_session_ = value;
}

// optional bool not_primary_transport = 15;
inline bool CMsgSteamDatagramNoConnection::has_not_primary_transport() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_not_primary_transport() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_transport_ = false;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgSteamDatagramNoConnection::not_primary_transport() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.not_primary_transport)
  return _internal_not_primary_transport();
}
inline void CMsgSteamDatagramNoConnection::set_not_primary_transport(bool value) {
  _internal_set_not_primary_transport(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.not_primary_transport)
}
inline bool CMsgSteamDatagramNoConnection::_internal_not_primary_transport() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.not_primary_transport_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_not_primary_transport(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.not_primary_transport_ = value;
}

// optional bool relay_override_active = 17;
inline bool CMsgSteamDatagramNoConnection::has_relay_override_active() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_relay_override_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_override_active_ = false;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline bool CMsgSteamDatagramNoConnection::relay_override_active() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.relay_override_active)
  return _internal_relay_override_active();
}
inline void CMsgSteamDatagramNoConnection::set_relay_override_active(bool value) {
  _internal_set_relay_override_active(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.relay_override_active)
}
inline bool CMsgSteamDatagramNoConnection::_internal_relay_override_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_override_active_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_relay_override_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_override_active_ = value;
}

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 13;
inline bool CMsgSteamDatagramNoConnection::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramNoConnection::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramNoConnection::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramNoConnection::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramNoConnection.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramNoConnection::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramNoConnection::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramNoConnection.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramNoConnection.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramNoConnection::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramNoConnection.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 14;
inline bool CMsgSteamDatagramNoConnection::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramNoConnection::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramNoConnection::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramNoConnection::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramNoConnection.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramNoConnection::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramNoConnection::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramNoConnection.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramNoConnection.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramNoConnection::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramNoConnection.quality_e2e)
}

// optional .CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 16;
inline bool CMsgSteamDatagramNoConnection::has_p2p_routing_summary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.p2p_routing_summary_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.p2p_routing_summary_ != nullptr) _impl_.p2p_routing_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::CMsgSteamDatagramP2PRoutingSummary& CMsgSteamDatagramNoConnection::_internal_p2p_routing_summary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramP2PRoutingSummary* p = _impl_.p2p_routing_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramP2PRoutingSummary&>(::_CMsgSteamDatagramP2PRoutingSummary_default_instance_);
}
inline const ::CMsgSteamDatagramP2PRoutingSummary& CMsgSteamDatagramNoConnection::p2p_routing_summary() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.p2p_routing_summary)
  return _internal_p2p_routing_summary();
}
inline void CMsgSteamDatagramNoConnection::unsafe_arena_set_allocated_p2p_routing_summary(
    ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.p2p_routing_summary_);
  }
  _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramNoConnection.p2p_routing_summary)
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramNoConnection::release_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramP2PRoutingSummary* released = _impl_.p2p_routing_summary_;
  _impl_.p2p_routing_summary_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramNoConnection::unsafe_arena_release_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramNoConnection.p2p_routing_summary)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramP2PRoutingSummary* temp = _impl_.p2p_routing_summary_;
  _impl_.p2p_routing_summary_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::_internal_mutable_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.p2p_routing_summary_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramP2PRoutingSummary>(GetArena());
    _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(p);
  }
  return _impl_.p2p_routing_summary_;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramNoConnection::mutable_p2p_routing_summary()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgSteamDatagramP2PRoutingSummary* _msg = _internal_mutable_p2p_routing_summary();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramNoConnection.p2p_routing_summary)
  return _msg;
}
inline void CMsgSteamDatagramNoConnection::set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.p2p_routing_summary_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramNoConnection.p2p_routing_summary)
}

// optional fixed64 routing_secret = 11;
inline bool CMsgSteamDatagramNoConnection::has_routing_secret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_routing_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint64_t CMsgSteamDatagramNoConnection::routing_secret() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.routing_secret)
  return _internal_routing_secret();
}
inline void CMsgSteamDatagramNoConnection::set_routing_secret(::uint64_t value) {
  _internal_set_routing_secret(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.routing_secret)
}
inline ::uint64_t CMsgSteamDatagramNoConnection::_internal_routing_secret() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routing_secret_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_routing_secret(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = value;
}

// optional fixed32 dummy_pad = 1023;
inline bool CMsgSteamDatagramNoConnection::has_dummy_pad() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void CMsgSteamDatagramNoConnection::clear_dummy_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_pad_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::uint32_t CMsgSteamDatagramNoConnection::dummy_pad() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoConnection.dummy_pad)
  return _internal_dummy_pad();
}
inline void CMsgSteamDatagramNoConnection::set_dummy_pad(::uint32_t value) {
  _internal_set_dummy_pad(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoConnection.dummy_pad)
}
inline ::uint32_t CMsgSteamDatagramNoConnection::_internal_dummy_pad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_pad_;
}
inline void CMsgSteamDatagramNoConnection::_internal_set_dummy_pad(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_pad_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverSessionRequest

// optional bytes ticket = 1;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_ticket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_ticket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ticket_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::ticket() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.ticket)
  return _internal_ticket();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverSessionRequest::set_ticket(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ticket_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.ticket)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::mutable_ticket()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ticket();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionRequest.ticket)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::_internal_ticket() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ticket_.Get();
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_ticket(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ticket_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::_internal_mutable_ticket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.ticket_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionRequest::release_ticket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionRequest.ticket)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.ticket_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ticket_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_allocated_ticket(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ticket_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ticket_.IsDefault()) {
    _impl_.ticket_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionRequest.ticket)
}

// optional fixed32 challenge_time = 3;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_challenge_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_challenge_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::challenge_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.challenge_time)
  return _internal_challenge_time();
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_challenge_time(::uint32_t value) {
  _internal_set_challenge_time(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.challenge_time)
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::_internal_challenge_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.challenge_time_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_challenge_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_time_ = value;
}

// optional fixed64 challenge = 4;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_challenge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t CMsgSteamDatagramGameserverSessionRequest::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.challenge)
  return _internal_challenge();
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_challenge(::uint64_t value) {
  _internal_set_challenge(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.challenge)
}
inline ::uint64_t CMsgSteamDatagramGameserverSessionRequest::_internal_challenge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.challenge_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_challenge(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = value;
}

// optional fixed32 client_connection_id = 5;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional fixed32 server_connection_id = 8;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_server_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_server_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::server_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.server_connection_id)
  return _internal_server_connection_id();
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_server_connection_id(::uint32_t value) {
  _internal_set_server_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.server_connection_id)
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::_internal_server_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_connection_id_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_server_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = value;
}

// optional uint64 network_config_version = 6;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_network_config_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_network_config_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_config_version_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint64_t CMsgSteamDatagramGameserverSessionRequest::network_config_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.network_config_version)
  return _internal_network_config_version();
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_network_config_version(::uint64_t value) {
  _internal_set_network_config_version(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.network_config_version)
}
inline ::uint64_t CMsgSteamDatagramGameserverSessionRequest::_internal_network_config_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_config_version_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_network_config_version(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_config_version_ = value;
}

// optional uint32 protocol_version = 7;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_protocol_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_protocol_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::protocol_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.protocol_version)
  return _internal_protocol_version();
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_protocol_version(::uint32_t value) {
  _internal_set_protocol_version(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.protocol_version)
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionRequest::_internal_protocol_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_version_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_protocol_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = value;
}

// optional string platform = 9;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::platform() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.platform)
  return _internal_platform();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverSessionRequest::set_platform(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.platform_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.platform)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::mutable_platform()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_platform();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionRequest.platform)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::_internal_platform() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_.Get();
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_platform(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.platform_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::_internal_mutable_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.platform_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionRequest::release_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionRequest.platform)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.platform_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.platform_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_allocated_platform(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.platform_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.platform_.IsDefault()) {
    _impl_.platform_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionRequest.platform)
}

// optional string build = 10;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_build() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::build() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.build)
  return _internal_build();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverSessionRequest::set_build(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.build_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.build)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::mutable_build()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_build();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionRequest.build)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::_internal_build() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.build_.Get();
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_build(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.build_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::_internal_mutable_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.build_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionRequest::release_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionRequest.build)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.build_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.build_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_allocated_build(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.build_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.build_.IsDefault()) {
    _impl_.build_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionRequest.build)
}

// optional string dev_gameserver_identity = 100;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_dev_gameserver_identity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_dev_gameserver_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_gameserver_identity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::dev_gameserver_identity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.dev_gameserver_identity)
  return _internal_dev_gameserver_identity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverSessionRequest::set_dev_gameserver_identity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.dev_gameserver_identity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.dev_gameserver_identity)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::mutable_dev_gameserver_identity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dev_gameserver_identity();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionRequest.dev_gameserver_identity)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverSessionRequest::_internal_dev_gameserver_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_gameserver_identity_.Get();
}
inline void CMsgSteamDatagramGameserverSessionRequest::_internal_set_dev_gameserver_identity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.dev_gameserver_identity_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::_internal_mutable_dev_gameserver_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.dev_gameserver_identity_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionRequest::release_dev_gameserver_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionRequest.dev_gameserver_identity)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.dev_gameserver_identity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dev_gameserver_identity_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_allocated_dev_gameserver_identity(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.dev_gameserver_identity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dev_gameserver_identity_.IsDefault()) {
    _impl_.dev_gameserver_identity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionRequest.dev_gameserver_identity)
}

// optional .CMsgSteamDatagramCertificateSigned dev_client_cert = 101;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_dev_client_cert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dev_client_cert_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramGameserverSessionRequest::_internal_dev_client_cert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramCertificateSigned* p = _impl_.dev_client_cert_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramCertificateSigned&>(::_CMsgSteamDatagramCertificateSigned_default_instance_);
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramGameserverSessionRequest::dev_client_cert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.dev_client_cert)
  return _internal_dev_client_cert();
}
inline void CMsgSteamDatagramGameserverSessionRequest::unsafe_arena_set_allocated_dev_client_cert(
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dev_client_cert_);
  }
  _impl_.dev_client_cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramGameserverSessionRequest.dev_client_cert)
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionRequest::release_dev_client_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramCertificateSigned* released = _impl_.dev_client_cert_;
  _impl_.dev_client_cert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionRequest::unsafe_arena_release_dev_client_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionRequest.dev_client_cert)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramCertificateSigned* temp = _impl_.dev_client_cert_;
  _impl_.dev_client_cert_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::_internal_mutable_dev_client_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dev_client_cert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramCertificateSigned>(GetArena());
    _impl_.dev_client_cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(p);
  }
  return _impl_.dev_client_cert_;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionRequest::mutable_dev_client_cert()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::CMsgSteamDatagramCertificateSigned* _msg = _internal_mutable_dev_client_cert();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionRequest.dev_client_cert)
  return _msg;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_allocated_dev_client_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dev_client_cert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.dev_client_cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionRequest.dev_client_cert)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverSessionEstablished

// optional fixed32 connection_id = 1;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionEstablished::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.connection_id)
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionEstablished::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional string gameserver_identity_string = 2;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_gameserver_identity_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_gameserver_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameserver_identity_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramGameserverSessionEstablished::gameserver_identity_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.gameserver_identity_string)
  return _internal_gameserver_identity_string();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverSessionEstablished::set_gameserver_identity_string(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.gameserver_identity_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.gameserver_identity_string)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionEstablished::mutable_gameserver_identity_string()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_gameserver_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionEstablished.gameserver_identity_string)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverSessionEstablished::_internal_gameserver_identity_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameserver_identity_string_.Get();
}
inline void CMsgSteamDatagramGameserverSessionEstablished::_internal_set_gameserver_identity_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.gameserver_identity_string_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionEstablished::_internal_mutable_gameserver_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.gameserver_identity_string_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionEstablished::release_gameserver_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionEstablished.gameserver_identity_string)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.gameserver_identity_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.gameserver_identity_string_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_allocated_gameserver_identity_string(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.gameserver_identity_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.gameserver_identity_string_.IsDefault()) {
    _impl_.gameserver_identity_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionEstablished.gameserver_identity_string)
}

// optional uint32 seconds_until_shutdown = 4;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_seconds_until_shutdown() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_seconds_until_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionEstablished::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.seconds_until_shutdown)
  return _internal_seconds_until_shutdown();
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_seconds_until_shutdown(::uint32_t value) {
  _internal_set_seconds_until_shutdown(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.seconds_until_shutdown)
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionEstablished::_internal_seconds_until_shutdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seconds_until_shutdown_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::_internal_set_seconds_until_shutdown(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = value;
}

// optional uint32 seq_num_r2c = 6;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_seq_num_r2c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_seq_num_r2c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionEstablished::seq_num_r2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.seq_num_r2c)
  return _internal_seq_num_r2c();
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_seq_num_r2c(::uint32_t value) {
  _internal_set_seq_num_r2c(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.seq_num_r2c)
}
inline ::uint32_t CMsgSteamDatagramGameserverSessionEstablished::_internal_seq_num_r2c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_r2c_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::_internal_set_seq_num_r2c(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = value;
}

// optional bytes dummy_legacy_identity_binary = 7;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_dummy_legacy_identity_binary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_dummy_legacy_identity_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dummy_legacy_identity_binary_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramGameserverSessionEstablished::dummy_legacy_identity_binary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.dummy_legacy_identity_binary)
  return _internal_dummy_legacy_identity_binary();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramGameserverSessionEstablished::set_dummy_legacy_identity_binary(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dummy_legacy_identity_binary_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.dummy_legacy_identity_binary)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionEstablished::mutable_dummy_legacy_identity_binary()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dummy_legacy_identity_binary();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionEstablished.dummy_legacy_identity_binary)
  return _s;
}
inline const std::string& CMsgSteamDatagramGameserverSessionEstablished::_internal_dummy_legacy_identity_binary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dummy_legacy_identity_binary_.Get();
}
inline void CMsgSteamDatagramGameserverSessionEstablished::_internal_set_dummy_legacy_identity_binary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dummy_legacy_identity_binary_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramGameserverSessionEstablished::_internal_mutable_dummy_legacy_identity_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.dummy_legacy_identity_binary_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramGameserverSessionEstablished::release_dummy_legacy_identity_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionEstablished.dummy_legacy_identity_binary)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.dummy_legacy_identity_binary_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dummy_legacy_identity_binary_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_allocated_dummy_legacy_identity_binary(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.dummy_legacy_identity_binary_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dummy_legacy_identity_binary_.IsDefault()) {
    _impl_.dummy_legacy_identity_binary_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionEstablished.dummy_legacy_identity_binary)
}

// optional fixed64 legacy_gameserver_steamid = 3;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_legacy_gameserver_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_legacy_gameserver_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_gameserver_steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t CMsgSteamDatagramGameserverSessionEstablished::legacy_gameserver_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.legacy_gameserver_steamid)
  return _internal_legacy_gameserver_steamid();
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_legacy_gameserver_steamid(::uint64_t value) {
  _internal_set_legacy_gameserver_steamid(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.legacy_gameserver_steamid)
}
inline ::uint64_t CMsgSteamDatagramGameserverSessionEstablished::_internal_legacy_gameserver_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_gameserver_steamid_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::_internal_set_legacy_gameserver_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_gameserver_steamid_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsClientToRouter

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsClientToRouter::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsClientToRouter::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsClientToRouter.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsClientToRouter::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsClientToRouter::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsClientToRouter.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsClientToRouter::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsClientToRouter::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsClientToRouter.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsClientToRouter::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsClientToRouter::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsClientToRouter.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.quality_e2e)
}

// repeated fixed32 ack_relay = 4;
inline int CMsgSteamDatagramConnectionStatsClientToRouter::_internal_ack_relay_size() const {
  return _internal_ack_relay().size();
}
inline int CMsgSteamDatagramConnectionStatsClientToRouter::ack_relay_size() const {
  return _internal_ack_relay_size();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_ack_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_relay_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::ack_relay(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.ack_relay)
  return _internal_ack_relay().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_ack_relay(int index, ::uint32_t value) {
  _internal_mutable_ack_relay()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.ack_relay)
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::add_ack_relay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ack_relay()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsClientToRouter.ack_relay)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsClientToRouter::ack_relay() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsClientToRouter.ack_relay)
  return _internal_ack_relay();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsClientToRouter::mutable_ack_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsClientToRouter.ack_relay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ack_relay();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsClientToRouter::_internal_ack_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_relay_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsClientToRouter::_internal_mutable_ack_relay() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ack_relay_;
}

// repeated fixed32 legacy_ack_e2e = 5;
inline int CMsgSteamDatagramConnectionStatsClientToRouter::_internal_legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e().size();
}
inline int CMsgSteamDatagramConnectionStatsClientToRouter::legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e_size();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_ack_e2e_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::legacy_ack_e2e(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.legacy_ack_e2e)
  return _internal_legacy_ack_e2e().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_legacy_ack_e2e(int index, ::uint32_t value) {
  _internal_mutable_legacy_ack_e2e()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.legacy_ack_e2e)
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::add_legacy_ack_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_legacy_ack_e2e()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsClientToRouter.legacy_ack_e2e)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsClientToRouter::legacy_ack_e2e() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsClientToRouter.legacy_ack_e2e)
  return _internal_legacy_ack_e2e();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsClientToRouter::mutable_legacy_ack_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsClientToRouter.legacy_ack_e2e)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legacy_ack_e2e();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsClientToRouter::_internal_legacy_ack_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_ack_e2e_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsClientToRouter::_internal_mutable_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legacy_ack_e2e_;
}

// optional uint32 flags = 6;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.flags)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// optional fixed32 client_connection_id = 8;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional uint32 seq_num_c2r = 9;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_seq_num_c2r() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_seq_num_c2r() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_c2r_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::seq_num_c2r() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2r)
  return _internal_seq_num_c2r();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_seq_num_c2r(::uint32_t value) {
  _internal_set_seq_num_c2r(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2r)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::_internal_seq_num_c2r() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_c2r_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::_internal_set_seq_num_c2r(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_c2r_ = value;
}

// optional uint32 seq_num_e2e = 10;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_seq_num_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_seq_num_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::seq_num_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_e2e)
  return _internal_seq_num_e2e();
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_seq_num_e2e(::uint32_t value) {
  _internal_set_seq_num_e2e(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_e2e)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsClientToRouter::_internal_seq_num_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_e2e_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::_internal_set_seq_num_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsRouterToClient

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToClient::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToClient::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToClient.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToClient::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToClient::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToClient.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToClient::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToClient::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToClient.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToClient::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToClient::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToClient.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.quality_e2e)
}

// optional uint32 seconds_until_shutdown = 6;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seconds_until_shutdown() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seconds_until_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seconds_until_shutdown)
  return _internal_seconds_until_shutdown();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seconds_until_shutdown(::uint32_t value) {
  _internal_set_seconds_until_shutdown(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seconds_until_shutdown)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_seconds_until_shutdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seconds_until_shutdown_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_seconds_until_shutdown(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = value;
}

// optional fixed32 migrate_request_ip = 10;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_migrate_request_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_migrate_request_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::migrate_request_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_ip)
  return _internal_migrate_request_ip();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_migrate_request_ip(::uint32_t value) {
  _internal_set_migrate_request_ip(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_ip)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_migrate_request_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.migrate_request_ip_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_migrate_request_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_ip_ = value;
}

// optional uint32 migrate_request_port = 11;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_migrate_request_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_migrate_request_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::migrate_request_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_port)
  return _internal_migrate_request_port();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_migrate_request_port(::uint32_t value) {
  _internal_set_migrate_request_port(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_port)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_migrate_request_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.migrate_request_port_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_migrate_request_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_port_ = value;
}

// optional uint32 scoring_penalty_relay_cluster = 12;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_scoring_penalty_relay_cluster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_scoring_penalty_relay_cluster() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scoring_penalty_relay_cluster_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::scoring_penalty_relay_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.scoring_penalty_relay_cluster)
  return _internal_scoring_penalty_relay_cluster();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_scoring_penalty_relay_cluster(::uint32_t value) {
  _internal_set_scoring_penalty_relay_cluster(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.scoring_penalty_relay_cluster)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_scoring_penalty_relay_cluster() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scoring_penalty_relay_cluster_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_scoring_penalty_relay_cluster(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scoring_penalty_relay_cluster_ = value;
}

// repeated fixed32 ack_relay = 13;
inline int CMsgSteamDatagramConnectionStatsRouterToClient::_internal_ack_relay_size() const {
  return _internal_ack_relay().size();
}
inline int CMsgSteamDatagramConnectionStatsRouterToClient::ack_relay_size() const {
  return _internal_ack_relay_size();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_ack_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_relay_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::ack_relay(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.ack_relay)
  return _internal_ack_relay().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_ack_relay(int index, ::uint32_t value) {
  _internal_mutable_ack_relay()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.ack_relay)
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::add_ack_relay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ack_relay()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsRouterToClient.ack_relay)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsRouterToClient::ack_relay() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsRouterToClient.ack_relay)
  return _internal_ack_relay();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToClient::mutable_ack_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsRouterToClient.ack_relay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ack_relay();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsRouterToClient::_internal_ack_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_relay_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsRouterToClient::_internal_mutable_ack_relay() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ack_relay_;
}

// repeated fixed32 legacy_ack_e2e = 14;
inline int CMsgSteamDatagramConnectionStatsRouterToClient::_internal_legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e().size();
}
inline int CMsgSteamDatagramConnectionStatsRouterToClient::legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e_size();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_ack_e2e_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::legacy_ack_e2e(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.legacy_ack_e2e)
  return _internal_legacy_ack_e2e().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_legacy_ack_e2e(int index, ::uint32_t value) {
  _internal_mutable_legacy_ack_e2e()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.legacy_ack_e2e)
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::add_legacy_ack_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_legacy_ack_e2e()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsRouterToClient.legacy_ack_e2e)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsRouterToClient::legacy_ack_e2e() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsRouterToClient.legacy_ack_e2e)
  return _internal_legacy_ack_e2e();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToClient::mutable_legacy_ack_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsRouterToClient.legacy_ack_e2e)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legacy_ack_e2e();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsRouterToClient::_internal_legacy_ack_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_ack_e2e_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsRouterToClient::_internal_mutable_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legacy_ack_e2e_;
}

// optional uint32 flags = 15;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.flags)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// optional fixed32 client_connection_id = 7;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional uint32 seq_num_r2c = 8;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seq_num_r2c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seq_num_r2c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::seq_num_r2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_r2c)
  return _internal_seq_num_r2c();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seq_num_r2c(::uint32_t value) {
  _internal_set_seq_num_r2c(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_r2c)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_seq_num_r2c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_r2c_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_seq_num_r2c(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = value;
}

// optional uint32 seq_num_e2e = 9;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seq_num_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seq_num_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::seq_num_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_e2e)
  return _internal_seq_num_e2e();
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seq_num_e2e(::uint32_t value) {
  _internal_set_seq_num_e2e(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_e2e)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToClient::_internal_seq_num_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_e2e_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::_internal_set_seq_num_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsRouterToServer

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToServer::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToServer::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToServer::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToServer::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToServer.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToServer.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToServer::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToServer::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToServer::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToServer::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToServer.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToServer.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.quality_e2e)
}

// repeated fixed32 ack_relay = 10;
inline int CMsgSteamDatagramConnectionStatsRouterToServer::_internal_ack_relay_size() const {
  return _internal_ack_relay().size();
}
inline int CMsgSteamDatagramConnectionStatsRouterToServer::ack_relay_size() const {
  return _internal_ack_relay_size();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_ack_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_relay_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::ack_relay(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.ack_relay)
  return _internal_ack_relay().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_ack_relay(int index, ::uint32_t value) {
  _internal_mutable_ack_relay()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.ack_relay)
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::add_ack_relay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ack_relay()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsRouterToServer.ack_relay)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsRouterToServer::ack_relay() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsRouterToServer.ack_relay)
  return _internal_ack_relay();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::mutable_ack_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsRouterToServer.ack_relay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ack_relay();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsRouterToServer::_internal_ack_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_relay_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsRouterToServer::_internal_mutable_ack_relay() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ack_relay_;
}

// repeated fixed32 legacy_ack_e2e = 11;
inline int CMsgSteamDatagramConnectionStatsRouterToServer::_internal_legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e().size();
}
inline int CMsgSteamDatagramConnectionStatsRouterToServer::legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e_size();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_ack_e2e_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::legacy_ack_e2e(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.legacy_ack_e2e)
  return _internal_legacy_ack_e2e().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_legacy_ack_e2e(int index, ::uint32_t value) {
  _internal_mutable_legacy_ack_e2e()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.legacy_ack_e2e)
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::add_legacy_ack_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_legacy_ack_e2e()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsRouterToServer.legacy_ack_e2e)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsRouterToServer::legacy_ack_e2e() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsRouterToServer.legacy_ack_e2e)
  return _internal_legacy_ack_e2e();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::mutable_legacy_ack_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsRouterToServer.legacy_ack_e2e)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legacy_ack_e2e();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsRouterToServer::_internal_legacy_ack_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_ack_e2e_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsRouterToServer::_internal_mutable_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legacy_ack_e2e_;
}

// optional uint32 flags = 12;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.flags)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// optional uint32 seq_num_r2s = 5;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_seq_num_r2s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_seq_num_r2s() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::seq_num_r2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_r2s)
  return _internal_seq_num_r2s();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_seq_num_r2s(::uint32_t value) {
  _internal_set_seq_num_r2s(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_r2s)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_seq_num_r2s() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_r2s_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_seq_num_r2s(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2s_ = value;
}

// optional uint32 seq_num_e2e = 6;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_seq_num_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_seq_num_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::seq_num_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_e2e)
  return _internal_seq_num_e2e();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_seq_num_e2e(::uint32_t value) {
  _internal_set_seq_num_e2e(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_e2e)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_seq_num_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_e2e_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_seq_num_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = value;
}

// optional string client_identity_string = 15;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_identity_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_identity_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramConnectionStatsRouterToServer::client_identity_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_identity_string)
  return _internal_client_identity_string();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_identity_string(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_identity_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_identity_string)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::mutable_client_identity_string()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToServer.client_identity_string)
  return _s;
}
inline const std::string& CMsgSteamDatagramConnectionStatsRouterToServer::_internal_client_identity_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_identity_string_.Get();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_client_identity_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_identity_string_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsRouterToServer::_internal_mutable_client_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.client_identity_string_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsRouterToServer::release_client_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToServer.client_identity_string)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.client_identity_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.client_identity_string_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_allocated_client_identity_string(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.client_identity_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_identity_string_.IsDefault()) {
    _impl_.client_identity_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.client_identity_string)
}

// optional fixed64 legacy_client_steam_id = 7;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_legacy_client_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_legacy_client_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_client_steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t CMsgSteamDatagramConnectionStatsRouterToServer::legacy_client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.legacy_client_steam_id)
  return _internal_legacy_client_steam_id();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_legacy_client_steam_id(::uint64_t value) {
  _internal_set_legacy_client_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.legacy_client_steam_id)
}
inline ::uint64_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_legacy_client_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_client_steam_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_legacy_client_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_client_steam_id_ = value;
}

// optional uint32 relay_session_id = 8;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.relay_session_id)
  return _internal_relay_session_id();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_relay_session_id(::uint32_t value) {
  _internal_set_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_session_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_session_id_ = value;
}

// optional fixed32 client_connection_id = 9;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional fixed32 server_connection_id = 13;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_server_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_server_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::server_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.server_connection_id)
  return _internal_server_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_server_connection_id(::uint32_t value) {
  _internal_set_server_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.server_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_server_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_server_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = value;
}

// optional fixed64 routing_secret = 14;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_routing_secret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_routing_secret() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint64_t CMsgSteamDatagramConnectionStatsRouterToServer::routing_secret() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.routing_secret)
  return _internal_routing_secret();
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_routing_secret(::uint64_t value) {
  _internal_set_routing_secret(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.routing_secret)
}
inline ::uint64_t CMsgSteamDatagramConnectionStatsRouterToServer::_internal_routing_secret() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routing_secret_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::_internal_set_routing_secret(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routing_secret_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsServerToRouter

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsServerToRouter::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsServerToRouter::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsServerToRouter.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsServerToRouter::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsServerToRouter::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsServerToRouter.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsServerToRouter::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsServerToRouter::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsServerToRouter.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsServerToRouter.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsServerToRouter::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsServerToRouter::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsServerToRouter.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsServerToRouter::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsServerToRouter::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsServerToRouter.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsServerToRouter::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsServerToRouter::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsServerToRouter.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsServerToRouter.quality_e2e)
}

// repeated fixed32 ack_relay = 8;
inline int CMsgSteamDatagramConnectionStatsServerToRouter::_internal_ack_relay_size() const {
  return _internal_ack_relay().size();
}
inline int CMsgSteamDatagramConnectionStatsServerToRouter::ack_relay_size() const {
  return _internal_ack_relay_size();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_ack_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_relay_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::ack_relay(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.ack_relay)
  return _internal_ack_relay().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_ack_relay(int index, ::uint32_t value) {
  _internal_mutable_ack_relay()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.ack_relay)
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::add_ack_relay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ack_relay()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsServerToRouter.ack_relay)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsServerToRouter::ack_relay() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsServerToRouter.ack_relay)
  return _internal_ack_relay();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsServerToRouter::mutable_ack_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsServerToRouter.ack_relay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ack_relay();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsServerToRouter::_internal_ack_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_relay_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsServerToRouter::_internal_mutable_ack_relay() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ack_relay_;
}

// repeated fixed32 legacy_ack_e2e = 9;
inline int CMsgSteamDatagramConnectionStatsServerToRouter::_internal_legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e().size();
}
inline int CMsgSteamDatagramConnectionStatsServerToRouter::legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e_size();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_ack_e2e_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::legacy_ack_e2e(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.legacy_ack_e2e)
  return _internal_legacy_ack_e2e().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_legacy_ack_e2e(int index, ::uint32_t value) {
  _internal_mutable_legacy_ack_e2e()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.legacy_ack_e2e)
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::add_legacy_ack_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_legacy_ack_e2e()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsServerToRouter.legacy_ack_e2e)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsServerToRouter::legacy_ack_e2e() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsServerToRouter.legacy_ack_e2e)
  return _internal_legacy_ack_e2e();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsServerToRouter::mutable_legacy_ack_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsServerToRouter.legacy_ack_e2e)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legacy_ack_e2e();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsServerToRouter::_internal_legacy_ack_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_ack_e2e_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsServerToRouter::_internal_mutable_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legacy_ack_e2e_;
}

// optional uint32 flags = 10;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.flags)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// optional uint32 seq_num_s2r = 3;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_seq_num_s2r() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_seq_num_s2r() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_s2r_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::seq_num_s2r() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_s2r)
  return _internal_seq_num_s2r();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_seq_num_s2r(::uint32_t value) {
  _internal_set_seq_num_s2r(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_s2r)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::_internal_seq_num_s2r() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_s2r_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::_internal_set_seq_num_s2r(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_s2r_ = value;
}

// optional uint32 seq_num_e2e = 4;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_seq_num_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_seq_num_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::seq_num_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_e2e)
  return _internal_seq_num_e2e();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_seq_num_e2e(::uint32_t value) {
  _internal_set_seq_num_e2e(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_e2e)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::_internal_seq_num_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_e2e_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::_internal_set_seq_num_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = value;
}

// optional uint32 relay_session_id = 6;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_relay_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_relay_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_session_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::relay_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.relay_session_id)
  return _internal_relay_session_id();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_relay_session_id(::uint32_t value) {
  _internal_set_relay_session_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.relay_session_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::_internal_relay_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_session_id_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::_internal_set_relay_session_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_session_id_ = value;
}

// optional fixed32 client_connection_id = 7;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional fixed32 server_connection_id = 11;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_server_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_server_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::server_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.server_connection_id)
  return _internal_server_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_server_connection_id(::uint32_t value) {
  _internal_set_server_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.server_connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsServerToRouter::_internal_server_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::_internal_set_server_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_connection_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PSessionRequestBody_EncryptedData

// optional string peer_identity_string = 1;
inline bool CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::has_peer_identity_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::clear_peer_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_identity_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::peer_identity_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.EncryptedData.peer_identity_string)
  return _internal_peer_identity_string();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::set_peer_identity_string(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.peer_identity_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.EncryptedData.peer_identity_string)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::mutable_peer_identity_string()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequestBody.EncryptedData.peer_identity_string)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::_internal_peer_identity_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_identity_string_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::_internal_set_peer_identity_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.peer_identity_string_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::_internal_mutable_peer_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.peer_identity_string_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::release_peer_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequestBody.EncryptedData.peer_identity_string)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.peer_identity_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.peer_identity_string_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequestBody_EncryptedData::set_allocated_peer_identity_string(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.peer_identity_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.peer_identity_string_.IsDefault()) {
    _impl_.peer_identity_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequestBody.EncryptedData.peer_identity_string)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PSessionRequestBody

// optional fixed32 challenge_time = 1;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_challenge_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_challenge_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::challenge_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.challenge_time)
  return _internal_challenge_time();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_challenge_time(::uint32_t value) {
  _internal_set_challenge_time(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.challenge_time)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::_internal_challenge_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.challenge_time_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_challenge_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_time_ = value;
}

// optional fixed64 challenge = 2;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_challenge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_challenge() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t CMsgSteamDatagramP2PSessionRequestBody::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.challenge)
  return _internal_challenge();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_challenge(::uint64_t value) {
  _internal_set_challenge(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.challenge)
}
inline ::uint64_t CMsgSteamDatagramP2PSessionRequestBody::_internal_challenge() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.challenge_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_challenge(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.challenge_ = value;
}

// optional fixed32 client_connection_id = 3;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional fixed64 legacy_peer_steam_id = 4;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_legacy_peer_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_legacy_peer_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_peer_steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint64_t CMsgSteamDatagramP2PSessionRequestBody::legacy_peer_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.legacy_peer_steam_id)
  return _internal_legacy_peer_steam_id();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_legacy_peer_steam_id(::uint64_t value) {
  _internal_set_legacy_peer_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.legacy_peer_steam_id)
}
inline ::uint64_t CMsgSteamDatagramP2PSessionRequestBody::_internal_legacy_peer_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_peer_steam_id_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_legacy_peer_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_peer_steam_id_ = value;
}

// optional string peer_identity_string = 11;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_peer_identity_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_peer_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_identity_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::peer_identity_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.peer_identity_string)
  return _internal_peer_identity_string();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequestBody::set_peer_identity_string(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.peer_identity_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.peer_identity_string)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::mutable_peer_identity_string()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequestBody.peer_identity_string)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::_internal_peer_identity_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_identity_string_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_peer_identity_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.peer_identity_string_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::_internal_mutable_peer_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.peer_identity_string_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequestBody::release_peer_identity_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequestBody.peer_identity_string)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.peer_identity_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.peer_identity_string_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_allocated_peer_identity_string(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.peer_identity_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.peer_identity_string_.IsDefault()) {
    _impl_.peer_identity_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequestBody.peer_identity_string)
}

// optional fixed32 peer_connection_id = 5;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_peer_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_peer_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::peer_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.peer_connection_id)
  return _internal_peer_connection_id();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_peer_connection_id(::uint32_t value) {
  _internal_set_peer_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.peer_connection_id)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::_internal_peer_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_connection_id_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_peer_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_connection_id_ = value;
}

// optional bytes encrypted_data = 14;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_encrypted_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::encrypted_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.encrypted_data)
  return _internal_encrypted_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequestBody::set_encrypted_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.encrypted_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.encrypted_data)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::mutable_encrypted_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encrypted_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequestBody.encrypted_data)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::_internal_encrypted_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encrypted_data_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_encrypted_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.encrypted_data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::_internal_mutable_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.encrypted_data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequestBody::release_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequestBody.encrypted_data)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.encrypted_data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.encrypted_data_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_allocated_encrypted_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.encrypted_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encrypted_data_.IsDefault()) {
    _impl_.encrypted_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequestBody.encrypted_data)
}

// optional uint32 encryption_your_public_key_lead_byte = 15;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_encryption_your_public_key_lead_byte() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_encryption_your_public_key_lead_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_your_public_key_lead_byte_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::encryption_your_public_key_lead_byte() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.encryption_your_public_key_lead_byte)
  return _internal_encryption_your_public_key_lead_byte();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_encryption_your_public_key_lead_byte(::uint32_t value) {
  _internal_set_encryption_your_public_key_lead_byte(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.encryption_your_public_key_lead_byte)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::_internal_encryption_your_public_key_lead_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encryption_your_public_key_lead_byte_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_encryption_your_public_key_lead_byte(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_your_public_key_lead_byte_ = value;
}

// optional bytes encryption_my_ephemeral_public_key = 16;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_encryption_my_ephemeral_public_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_encryption_my_ephemeral_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_my_ephemeral_public_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::encryption_my_ephemeral_public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.encryption_my_ephemeral_public_key)
  return _internal_encryption_my_ephemeral_public_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequestBody::set_encryption_my_ephemeral_public_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.encryption_my_ephemeral_public_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.encryption_my_ephemeral_public_key)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::mutable_encryption_my_ephemeral_public_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encryption_my_ephemeral_public_key();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequestBody.encryption_my_ephemeral_public_key)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::_internal_encryption_my_ephemeral_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encryption_my_ephemeral_public_key_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_encryption_my_ephemeral_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.encryption_my_ephemeral_public_key_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::_internal_mutable_encryption_my_ephemeral_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.encryption_my_ephemeral_public_key_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequestBody::release_encryption_my_ephemeral_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequestBody.encryption_my_ephemeral_public_key)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.encryption_my_ephemeral_public_key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.encryption_my_ephemeral_public_key_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_allocated_encryption_my_ephemeral_public_key(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.encryption_my_ephemeral_public_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encryption_my_ephemeral_public_key_.IsDefault()) {
    _impl_.encryption_my_ephemeral_public_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequestBody.encryption_my_ephemeral_public_key)
}

// optional uint32 protocol_version = 8;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_protocol_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_protocol_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::protocol_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.protocol_version)
  return _internal_protocol_version();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_protocol_version(::uint32_t value) {
  _internal_set_protocol_version(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.protocol_version)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionRequestBody::_internal_protocol_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_version_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_protocol_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = value;
}

// optional uint64 network_config_version = 9;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_network_config_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_network_config_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_config_version_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint64_t CMsgSteamDatagramP2PSessionRequestBody::network_config_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.network_config_version)
  return _internal_network_config_version();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_network_config_version(::uint64_t value) {
  _internal_set_network_config_version(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.network_config_version)
}
inline ::uint64_t CMsgSteamDatagramP2PSessionRequestBody::_internal_network_config_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_config_version_;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_network_config_version(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_config_version_ = value;
}

// optional string platform = 12;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::platform() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.platform)
  return _internal_platform();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequestBody::set_platform(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.platform_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.platform)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::mutable_platform()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_platform();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequestBody.platform)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::_internal_platform() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_platform(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.platform_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::_internal_mutable_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.platform_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequestBody::release_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequestBody.platform)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.platform_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.platform_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_allocated_platform(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.platform_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.platform_.IsDefault()) {
    _impl_.platform_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequestBody.platform)
}

// optional string build = 13;
inline bool CMsgSteamDatagramP2PSessionRequestBody::has_build() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::clear_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::build() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequestBody.build)
  return _internal_build();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequestBody::set_build(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.build_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequestBody.build)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::mutable_build()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_build();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequestBody.build)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequestBody::_internal_build() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.build_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequestBody::_internal_set_build(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.build_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequestBody::_internal_mutable_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.build_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequestBody::release_build() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequestBody.build)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.build_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.build_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequestBody::set_allocated_build(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.build_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.build_.IsDefault()) {
    _impl_.build_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequestBody.build)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PSessionRequest

// optional .CMsgSteamDatagramCertificateSigned cert = 1;
inline bool CMsgSteamDatagramP2PSessionRequest::has_cert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cert_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramP2PSessionRequest::_internal_cert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramCertificateSigned* p = _impl_.cert_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramCertificateSigned&>(::_CMsgSteamDatagramCertificateSigned_default_instance_);
}
inline const ::CMsgSteamDatagramCertificateSigned& CMsgSteamDatagramP2PSessionRequest::cert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequest.cert)
  return _internal_cert();
}
inline void CMsgSteamDatagramP2PSessionRequest::unsafe_arena_set_allocated_cert(
    ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }
  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramP2PSessionRequest.cert)
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequest::release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramCertificateSigned* released = _impl_.cert_;
  _impl_.cert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequest::unsafe_arena_release_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequest.cert)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramCertificateSigned* temp = _impl_.cert_;
  _impl_.cert_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequest::_internal_mutable_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramCertificateSigned>(GetArena());
    _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(p);
  }
  return _impl_.cert_;
}
inline ::CMsgSteamDatagramCertificateSigned* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequest::mutable_cert()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgSteamDatagramCertificateSigned* _msg = _internal_mutable_cert();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequest.cert)
  return _msg;
}
inline void CMsgSteamDatagramP2PSessionRequest::set_allocated_cert(::CMsgSteamDatagramCertificateSigned* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.cert_ = reinterpret_cast<::CMsgSteamDatagramCertificateSigned*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequest.cert)
}

// optional bytes body = 2;
inline bool CMsgSteamDatagramP2PSessionRequest::has_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequest::clear_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequest::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequest.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequest::set_body(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.body_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequest.body)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequest::mutable_body()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequest.body)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequest::_internal_body() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.body_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequest::_internal_set_body(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.body_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequest::_internal_mutable_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequest::release_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequest.body)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.body_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.body_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequest::set_allocated_body(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.body_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.body_.IsDefault()) {
    _impl_.body_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequest.body)
}

// optional bytes signature = 3;
inline bool CMsgSteamDatagramP2PSessionRequest::has_signature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionRequest::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequest::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionRequest.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionRequest::set_signature(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionRequest.signature)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequest::mutable_signature()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionRequest.signature)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionRequest::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void CMsgSteamDatagramP2PSessionRequest::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionRequest::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionRequest::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionRequest.signature)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.signature_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.signature_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionRequest::set_allocated_signature(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.signature_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signature_.IsDefault()) {
    _impl_.signature_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionRequest.signature)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PSessionEstablished

// optional fixed32 connection_id = 1;
inline bool CMsgSteamDatagramP2PSessionEstablished::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionEstablished::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionEstablished::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionEstablished.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramP2PSessionEstablished::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionEstablished.connection_id)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionEstablished::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramP2PSessionEstablished::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional uint32 seconds_until_shutdown = 3;
inline bool CMsgSteamDatagramP2PSessionEstablished::has_seconds_until_shutdown() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionEstablished::clear_seconds_until_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionEstablished::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionEstablished.seconds_until_shutdown)
  return _internal_seconds_until_shutdown();
}
inline void CMsgSteamDatagramP2PSessionEstablished::set_seconds_until_shutdown(::uint32_t value) {
  _internal_set_seconds_until_shutdown(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionEstablished.seconds_until_shutdown)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionEstablished::_internal_seconds_until_shutdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seconds_until_shutdown_;
}
inline void CMsgSteamDatagramP2PSessionEstablished::_internal_set_seconds_until_shutdown(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = value;
}

// optional bytes relay_routing_token = 4;
inline bool CMsgSteamDatagramP2PSessionEstablished::has_relay_routing_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionEstablished::clear_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_routing_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramP2PSessionEstablished::relay_routing_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionEstablished.relay_routing_token)
  return _internal_relay_routing_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PSessionEstablished::set_relay_routing_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.relay_routing_token_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionEstablished.relay_routing_token)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionEstablished::mutable_relay_routing_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_relay_routing_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PSessionEstablished.relay_routing_token)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PSessionEstablished::_internal_relay_routing_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_routing_token_.Get();
}
inline void CMsgSteamDatagramP2PSessionEstablished::_internal_set_relay_routing_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.relay_routing_token_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PSessionEstablished::_internal_mutable_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.relay_routing_token_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PSessionEstablished::release_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PSessionEstablished.relay_routing_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.relay_routing_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.relay_routing_token_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PSessionEstablished::set_allocated_relay_routing_token(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.relay_routing_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.relay_routing_token_.IsDefault()) {
    _impl_.relay_routing_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PSessionEstablished.relay_routing_token)
}

// optional uint32 seq_num_r2c = 5;
inline bool CMsgSteamDatagramP2PSessionEstablished::has_seq_num_r2c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PSessionEstablished::clear_seq_num_r2c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramP2PSessionEstablished::seq_num_r2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PSessionEstablished.seq_num_r2c)
  return _internal_seq_num_r2c();
}
inline void CMsgSteamDatagramP2PSessionEstablished::set_seq_num_r2c(::uint32_t value) {
  _internal_set_seq_num_r2c(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PSessionEstablished.seq_num_r2c)
}
inline ::uint32_t CMsgSteamDatagramP2PSessionEstablished::_internal_seq_num_r2c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_r2c_;
}
inline void CMsgSteamDatagramP2PSessionEstablished::_internal_set_seq_num_r2c(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsP2PClientToRouter

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PClientToRouter::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PClientToRouter::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.quality_e2e)
}

// optional .CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 14;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_p2p_routing_summary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.p2p_routing_summary_ != nullptr);
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.p2p_routing_summary_ != nullptr) _impl_.p2p_routing_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::CMsgSteamDatagramP2PRoutingSummary& CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_p2p_routing_summary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramP2PRoutingSummary* p = _impl_.p2p_routing_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramP2PRoutingSummary&>(::_CMsgSteamDatagramP2PRoutingSummary_default_instance_);
}
inline const ::CMsgSteamDatagramP2PRoutingSummary& CMsgSteamDatagramConnectionStatsP2PClientToRouter::p2p_routing_summary() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.p2p_routing_summary)
  return _internal_p2p_routing_summary();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::unsafe_arena_set_allocated_p2p_routing_summary(
    ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.p2p_routing_summary_);
  }
  _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.p2p_routing_summary)
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::release_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramP2PRoutingSummary* released = _impl_.p2p_routing_summary_;
  _impl_.p2p_routing_summary_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::unsafe_arena_release_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PClientToRouter.p2p_routing_summary)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgSteamDatagramP2PRoutingSummary* temp = _impl_.p2p_routing_summary_;
  _impl_.p2p_routing_summary_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_mutable_p2p_routing_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.p2p_routing_summary_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramP2PRoutingSummary>(GetArena());
    _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(p);
  }
  return _impl_.p2p_routing_summary_;
}
inline ::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::mutable_p2p_routing_summary()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::CMsgSteamDatagramP2PRoutingSummary* _msg = _internal_mutable_p2p_routing_summary();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PClientToRouter.p2p_routing_summary)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_allocated_p2p_routing_summary(::CMsgSteamDatagramP2PRoutingSummary* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.p2p_routing_summary_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.p2p_routing_summary_ = reinterpret_cast<::CMsgSteamDatagramP2PRoutingSummary*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.p2p_routing_summary)
}

// repeated fixed32 ack_relay = 3;
inline int CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_ack_relay_size() const {
  return _internal_ack_relay().size();
}
inline int CMsgSteamDatagramConnectionStatsP2PClientToRouter::ack_relay_size() const {
  return _internal_ack_relay_size();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_ack_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_relay_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::ack_relay(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.ack_relay)
  return _internal_ack_relay().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_ack_relay(int index, ::uint32_t value) {
  _internal_mutable_ack_relay()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.ack_relay)
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::add_ack_relay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ack_relay()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsP2PClientToRouter.ack_relay)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsP2PClientToRouter::ack_relay() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsP2PClientToRouter.ack_relay)
  return _internal_ack_relay();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::mutable_ack_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsP2PClientToRouter.ack_relay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ack_relay();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_ack_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_relay_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_mutable_ack_relay() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ack_relay_;
}

// repeated fixed32 legacy_ack_e2e = 4;
inline int CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e().size();
}
inline int CMsgSteamDatagramConnectionStatsP2PClientToRouter::legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e_size();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_ack_e2e_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::legacy_ack_e2e(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.legacy_ack_e2e)
  return _internal_legacy_ack_e2e().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_legacy_ack_e2e(int index, ::uint32_t value) {
  _internal_mutable_legacy_ack_e2e()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.legacy_ack_e2e)
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::add_legacy_ack_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_legacy_ack_e2e()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsP2PClientToRouter.legacy_ack_e2e)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsP2PClientToRouter::legacy_ack_e2e() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsP2PClientToRouter.legacy_ack_e2e)
  return _internal_legacy_ack_e2e();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::mutable_legacy_ack_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsP2PClientToRouter.legacy_ack_e2e)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legacy_ack_e2e();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_legacy_ack_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_ack_e2e_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_mutable_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legacy_ack_e2e_;
}

// optional uint32 flags = 5;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.flags)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// optional bytes forward_target_relay_routing_token = 6;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_forward_target_relay_routing_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_forward_target_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_target_relay_routing_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramConnectionStatsP2PClientToRouter::forward_target_relay_routing_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.forward_target_relay_routing_token)
  return _internal_forward_target_relay_routing_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_forward_target_relay_routing_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.forward_target_relay_routing_token_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.forward_target_relay_routing_token)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::mutable_forward_target_relay_routing_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_forward_target_relay_routing_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PClientToRouter.forward_target_relay_routing_token)
  return _s;
}
inline const std::string& CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_forward_target_relay_routing_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forward_target_relay_routing_token_.Get();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_forward_target_relay_routing_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.forward_target_relay_routing_token_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_mutable_forward_target_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.forward_target_relay_routing_token_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::release_forward_target_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PClientToRouter.forward_target_relay_routing_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.forward_target_relay_routing_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.forward_target_relay_routing_token_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_allocated_forward_target_relay_routing_token(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.forward_target_relay_routing_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.forward_target_relay_routing_token_.IsDefault()) {
    _impl_.forward_target_relay_routing_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.forward_target_relay_routing_token)
}

// optional uint32 forward_target_revision = 7;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_forward_target_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_forward_target_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_target_revision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::forward_target_revision() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.forward_target_revision)
  return _internal_forward_target_revision();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_forward_target_revision(::uint32_t value) {
  _internal_set_forward_target_revision(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.forward_target_revision)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_forward_target_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forward_target_revision_;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_forward_target_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_target_revision_ = value;
}

// optional bytes routes = 8;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_routes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routes_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramConnectionStatsP2PClientToRouter::routes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.routes)
  return _internal_routes();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_routes(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.routes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.routes)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::mutable_routes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_routes();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PClientToRouter.routes)
  return _s;
}
inline const std::string& CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_routes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routes_.Get();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_routes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.routes_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_mutable_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.routes_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PClientToRouter::release_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PClientToRouter.routes)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.routes_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.routes_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_allocated_routes(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.routes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.routes_.IsDefault()) {
    _impl_.routes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PClientToRouter.routes)
}

// optional uint32 ack_peer_routes_revision = 9;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_ack_peer_routes_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_ack_peer_routes_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_peer_routes_revision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::ack_peer_routes_revision() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.ack_peer_routes_revision)
  return _internal_ack_peer_routes_revision();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_ack_peer_routes_revision(::uint32_t value) {
  _internal_set_ack_peer_routes_revision(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.ack_peer_routes_revision)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_ack_peer_routes_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_peer_routes_revision_;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_ack_peer_routes_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_peer_routes_revision_ = value;
}

// optional fixed32 connection_id = 10;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional uint32 seq_num_c2r = 11;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_seq_num_c2r() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_seq_num_c2r() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_c2r_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::seq_num_c2r() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.seq_num_c2r)
  return _internal_seq_num_c2r();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_seq_num_c2r(::uint32_t value) {
  _internal_set_seq_num_c2r(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.seq_num_c2r)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_seq_num_c2r() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_c2r_;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_seq_num_c2r(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_c2r_ = value;
}

// optional uint32 seq_num_e2e = 12;
inline bool CMsgSteamDatagramConnectionStatsP2PClientToRouter::has_seq_num_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::clear_seq_num_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::seq_num_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PClientToRouter.seq_num_e2e)
  return _internal_seq_num_e2e();
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::set_seq_num_e2e(::uint32_t value) {
  _internal_set_seq_num_e2e(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PClientToRouter.seq_num_e2e)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_seq_num_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_e2e_;
}
inline void CMsgSteamDatagramConnectionStatsP2PClientToRouter::_internal_set_seq_num_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsP2PRouterToClient

// optional .CMsgSteamDatagramConnectionQuality quality_relay = 1;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_quality_relay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_relay_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_quality_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_relay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PRouterToClient::quality_relay() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_relay)
  return _internal_quality_relay();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::unsafe_arena_set_allocated_quality_relay(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }
  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_relay)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PRouterToClient::release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PRouterToClient::unsafe_arena_release_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_relay)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_relay_;
  _impl_.quality_relay_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_mutable_quality_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_relay_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_relay_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::mutable_quality_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_relay();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_relay)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_allocated_quality_relay(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_relay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.quality_relay_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_relay)
}

// optional .CMsgSteamDatagramConnectionQuality quality_e2e = 2;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_quality_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quality_e2e_ != nullptr);
  return value;
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_quality_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgSteamDatagramConnectionQuality* p = _impl_.quality_e2e_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality&>(::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsP2PRouterToClient::quality_e2e() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_e2e)
  return _internal_quality_e2e();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::unsafe_arena_set_allocated_quality_e2e(
    ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }
  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_e2e)
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PRouterToClient::release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* released = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PRouterToClient::unsafe_arena_release_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_e2e)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* temp = _impl_.quality_e2e_;
  _impl_.quality_e2e_ = nullptr;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_mutable_quality_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quality_e2e_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgSteamDatagramConnectionQuality>(GetArena());
    _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(p);
  }
  return _impl_.quality_e2e_;
}
inline ::CMsgSteamDatagramConnectionQuality* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::mutable_quality_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgSteamDatagramConnectionQuality* _msg = _internal_mutable_quality_e2e();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_e2e)
  return _msg;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_allocated_quality_e2e(::CMsgSteamDatagramConnectionQuality* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quality_e2e_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.quality_e2e_ = reinterpret_cast<::CMsgSteamDatagramConnectionQuality*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PRouterToClient.quality_e2e)
}

// optional uint32 seconds_until_shutdown = 3;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_seconds_until_shutdown() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_seconds_until_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.seconds_until_shutdown)
  return _internal_seconds_until_shutdown();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_seconds_until_shutdown(::uint32_t value) {
  _internal_set_seconds_until_shutdown(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.seconds_until_shutdown)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_seconds_until_shutdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seconds_until_shutdown_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_seconds_until_shutdown(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seconds_until_shutdown_ = value;
}

// optional fixed32 migrate_request_ip = 4;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_migrate_request_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_migrate_request_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::migrate_request_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.migrate_request_ip)
  return _internal_migrate_request_ip();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_migrate_request_ip(::uint32_t value) {
  _internal_set_migrate_request_ip(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.migrate_request_ip)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_migrate_request_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.migrate_request_ip_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_migrate_request_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_ip_ = value;
}

// optional uint32 migrate_request_port = 5;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_migrate_request_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_migrate_request_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::migrate_request_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.migrate_request_port)
  return _internal_migrate_request_port();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_migrate_request_port(::uint32_t value) {
  _internal_set_migrate_request_port(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.migrate_request_port)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_migrate_request_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.migrate_request_port_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_migrate_request_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migrate_request_port_ = value;
}

// optional uint32 scoring_penalty_relay_cluster = 6;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_scoring_penalty_relay_cluster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_scoring_penalty_relay_cluster() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scoring_penalty_relay_cluster_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::scoring_penalty_relay_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.scoring_penalty_relay_cluster)
  return _internal_scoring_penalty_relay_cluster();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_scoring_penalty_relay_cluster(::uint32_t value) {
  _internal_set_scoring_penalty_relay_cluster(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.scoring_penalty_relay_cluster)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_scoring_penalty_relay_cluster() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scoring_penalty_relay_cluster_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_scoring_penalty_relay_cluster(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scoring_penalty_relay_cluster_ = value;
}

// repeated fixed32 ack_relay = 7;
inline int CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_ack_relay_size() const {
  return _internal_ack_relay().size();
}
inline int CMsgSteamDatagramConnectionStatsP2PRouterToClient::ack_relay_size() const {
  return _internal_ack_relay_size();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_ack_relay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_relay_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::ack_relay(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_relay)
  return _internal_ack_relay().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_ack_relay(int index, ::uint32_t value) {
  _internal_mutable_ack_relay()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_relay)
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::add_ack_relay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ack_relay()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_relay)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsP2PRouterToClient::ack_relay() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_relay)
  return _internal_ack_relay();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::mutable_ack_relay()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_relay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ack_relay();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_ack_relay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_relay_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_mutable_ack_relay() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ack_relay_;
}

// repeated fixed32 legacy_ack_e2e = 8;
inline int CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e().size();
}
inline int CMsgSteamDatagramConnectionStatsP2PRouterToClient::legacy_ack_e2e_size() const {
  return _internal_legacy_ack_e2e_size();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_ack_e2e_.Clear();
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::legacy_ack_e2e(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.legacy_ack_e2e)
  return _internal_legacy_ack_e2e().Get(index);
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_legacy_ack_e2e(int index, ::uint32_t value) {
  _internal_mutable_legacy_ack_e2e()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.legacy_ack_e2e)
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::add_legacy_ack_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_legacy_ack_e2e()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramConnectionStatsP2PRouterToClient.legacy_ack_e2e)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamDatagramConnectionStatsP2PRouterToClient::legacy_ack_e2e() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramConnectionStatsP2PRouterToClient.legacy_ack_e2e)
  return _internal_legacy_ack_e2e();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::mutable_legacy_ack_e2e()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramConnectionStatsP2PRouterToClient.legacy_ack_e2e)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legacy_ack_e2e();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_legacy_ack_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_ack_e2e_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_mutable_legacy_ack_e2e() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legacy_ack_e2e_;
}

// optional uint32 flags = 9;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::flags() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.flags)
  return _internal_flags();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.flags)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// optional uint32 ack_forward_target_revision = 10;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_ack_forward_target_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_ack_forward_target_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_forward_target_revision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::ack_forward_target_revision() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_forward_target_revision)
  return _internal_ack_forward_target_revision();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_ack_forward_target_revision(::uint32_t value) {
  _internal_set_ack_forward_target_revision(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_forward_target_revision)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_ack_forward_target_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_forward_target_revision_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_ack_forward_target_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_forward_target_revision_ = value;
}

// optional bytes routes = 11;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_routes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routes_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramConnectionStatsP2PRouterToClient::routes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.routes)
  return _internal_routes();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_routes(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.routes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.routes)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::mutable_routes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_routes();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsP2PRouterToClient.routes)
  return _s;
}
inline const std::string& CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_routes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routes_.Get();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_routes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.routes_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_mutable_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.routes_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramConnectionStatsP2PRouterToClient::release_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsP2PRouterToClient.routes)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.routes_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.routes_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_allocated_routes(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.routes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.routes_.IsDefault()) {
    _impl_.routes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsP2PRouterToClient.routes)
}

// optional uint32 ack_peer_routes_revision = 12;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_ack_peer_routes_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_ack_peer_routes_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_peer_routes_revision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::ack_peer_routes_revision() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_peer_routes_revision)
  return _internal_ack_peer_routes_revision();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_ack_peer_routes_revision(::uint32_t value) {
  _internal_set_ack_peer_routes_revision(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.ack_peer_routes_revision)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_ack_peer_routes_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_peer_routes_revision_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_ack_peer_routes_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_peer_routes_revision_ = value;
}

// optional fixed32 connection_id = 13;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.connection_id)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional uint32 seq_num_r2c = 14;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_seq_num_r2c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_seq_num_r2c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::seq_num_r2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.seq_num_r2c)
  return _internal_seq_num_r2c();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_seq_num_r2c(::uint32_t value) {
  _internal_set_seq_num_r2c(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.seq_num_r2c)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_seq_num_r2c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_r2c_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_seq_num_r2c(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_r2c_ = value;
}

// optional uint32 seq_num_e2e = 15;
inline bool CMsgSteamDatagramConnectionStatsP2PRouterToClient::has_seq_num_e2e() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::clear_seq_num_e2e() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::seq_num_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsP2PRouterToClient.seq_num_e2e)
  return _internal_seq_num_e2e();
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::set_seq_num_e2e(::uint32_t value) {
  _internal_set_seq_num_e2e(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsP2PRouterToClient.seq_num_e2e)
}
inline ::uint32_t CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_seq_num_e2e() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_e2e_;
}
inline void CMsgSteamDatagramConnectionStatsP2PRouterToClient::_internal_set_seq_num_e2e(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_e2e_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PBadRouteRouterToClient

// optional fixed32 connection_id = 1;
inline bool CMsgSteamDatagramP2PBadRouteRouterToClient::has_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramP2PBadRouteRouterToClient::connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PBadRouteRouterToClient.connection_id)
  return _internal_connection_id();
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::set_connection_id(::uint32_t value) {
  _internal_set_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PBadRouteRouterToClient.connection_id)
}
inline ::uint32_t CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_set_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_ = value;
}

// optional bytes failed_relay_routing_token = 2;
inline bool CMsgSteamDatagramP2PBadRouteRouterToClient::has_failed_relay_routing_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::clear_failed_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_relay_routing_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramP2PBadRouteRouterToClient::failed_relay_routing_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PBadRouteRouterToClient.failed_relay_routing_token)
  return _internal_failed_relay_routing_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PBadRouteRouterToClient::set_failed_relay_routing_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.failed_relay_routing_token_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PBadRouteRouterToClient.failed_relay_routing_token)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PBadRouteRouterToClient::mutable_failed_relay_routing_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_failed_relay_routing_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PBadRouteRouterToClient.failed_relay_routing_token)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_failed_relay_routing_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_relay_routing_token_.Get();
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_set_failed_relay_routing_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.failed_relay_routing_token_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_mutable_failed_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.failed_relay_routing_token_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PBadRouteRouterToClient::release_failed_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PBadRouteRouterToClient.failed_relay_routing_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.failed_relay_routing_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.failed_relay_routing_token_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::set_allocated_failed_relay_routing_token(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.failed_relay_routing_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.failed_relay_routing_token_.IsDefault()) {
    _impl_.failed_relay_routing_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PBadRouteRouterToClient.failed_relay_routing_token)
}

// optional uint32 ack_forward_target_revision = 3;
inline bool CMsgSteamDatagramP2PBadRouteRouterToClient::has_ack_forward_target_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::clear_ack_forward_target_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_forward_target_revision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramP2PBadRouteRouterToClient::ack_forward_target_revision() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PBadRouteRouterToClient.ack_forward_target_revision)
  return _internal_ack_forward_target_revision();
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::set_ack_forward_target_revision(::uint32_t value) {
  _internal_set_ack_forward_target_revision(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PBadRouteRouterToClient.ack_forward_target_revision)
}
inline ::uint32_t CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_ack_forward_target_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_forward_target_revision_;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_set_ack_forward_target_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_forward_target_revision_ = value;
}

// optional fixed64 kludge_pad = 99;
inline bool CMsgSteamDatagramP2PBadRouteRouterToClient::has_kludge_pad() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::clear_kludge_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kludge_pad_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t CMsgSteamDatagramP2PBadRouteRouterToClient::kludge_pad() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PBadRouteRouterToClient.kludge_pad)
  return _internal_kludge_pad();
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::set_kludge_pad(::uint64_t value) {
  _internal_set_kludge_pad(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PBadRouteRouterToClient.kludge_pad)
}
inline ::uint64_t CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_kludge_pad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kludge_pad_;
}
inline void CMsgSteamDatagramP2PBadRouteRouterToClient::_internal_set_kludge_pad(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kludge_pad_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PRoutes_RelayCluster

// optional fixed32 pop_id = 1;
inline bool CMsgSteamDatagramP2PRoutes_RelayCluster::has_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::clear_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_RelayCluster::pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.RelayCluster.pop_id)
  return _internal_pop_id();
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::set_pop_id(::uint32_t value) {
  _internal_set_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.RelayCluster.pop_id)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pop_id_;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_set_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pop_id_ = value;
}

// optional uint32 ping_ms = 2;
inline bool CMsgSteamDatagramP2PRoutes_RelayCluster::has_ping_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::clear_ping_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_ms_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_RelayCluster::ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.RelayCluster.ping_ms)
  return _internal_ping_ms();
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::set_ping_ms(::uint32_t value) {
  _internal_set_ping_ms(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.RelayCluster.ping_ms)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_ping_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_ms_;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_set_ping_ms(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_ms_ = value;
}

// optional uint32 score_penalty = 3;
inline bool CMsgSteamDatagramP2PRoutes_RelayCluster::has_score_penalty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::clear_score_penalty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_penalty_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_RelayCluster::score_penalty() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.RelayCluster.score_penalty)
  return _internal_score_penalty();
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::set_score_penalty(::uint32_t value) {
  _internal_set_score_penalty(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.RelayCluster.score_penalty)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_score_penalty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.score_penalty_;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_set_score_penalty(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_penalty_ = value;
}

// optional bytes session_relay_routing_token = 4;
inline bool CMsgSteamDatagramP2PRoutes_RelayCluster::has_session_relay_routing_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::clear_session_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_relay_routing_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramP2PRoutes_RelayCluster::session_relay_routing_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.RelayCluster.session_relay_routing_token)
  return _internal_session_relay_routing_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramP2PRoutes_RelayCluster::set_session_relay_routing_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.session_relay_routing_token_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.RelayCluster.session_relay_routing_token)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes_RelayCluster::mutable_session_relay_routing_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_relay_routing_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PRoutes.RelayCluster.session_relay_routing_token)
  return _s;
}
inline const std::string& CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_session_relay_routing_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_relay_routing_token_.Get();
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_set_session_relay_routing_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.session_relay_routing_token_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes_RelayCluster::_internal_mutable_session_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.session_relay_routing_token_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramP2PRoutes_RelayCluster::release_session_relay_routing_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramP2PRoutes.RelayCluster.session_relay_routing_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.session_relay_routing_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.session_relay_routing_token_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramP2PRoutes_RelayCluster::set_allocated_session_relay_routing_token(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.session_relay_routing_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.session_relay_routing_token_.IsDefault()) {
    _impl_.session_relay_routing_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramP2PRoutes.RelayCluster.session_relay_routing_token)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PRoutes_Route

// optional fixed32 my_pop_id = 1;
inline bool CMsgSteamDatagramP2PRoutes_Route::has_my_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_Route::clear_my_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::my_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.Route.my_pop_id)
  return _internal_my_pop_id();
}
inline void CMsgSteamDatagramP2PRoutes_Route::set_my_pop_id(::uint32_t value) {
  _internal_set_my_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.Route.my_pop_id)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::_internal_my_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.my_pop_id_;
}
inline void CMsgSteamDatagramP2PRoutes_Route::_internal_set_my_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.my_pop_id_ = value;
}

// optional fixed32 your_pop_id = 2;
inline bool CMsgSteamDatagramP2PRoutes_Route::has_your_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_Route::clear_your_pop_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_pop_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::your_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.Route.your_pop_id)
  return _internal_your_pop_id();
}
inline void CMsgSteamDatagramP2PRoutes_Route::set_your_pop_id(::uint32_t value) {
  _internal_set_your_pop_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.Route.your_pop_id)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::_internal_your_pop_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.your_pop_id_;
}
inline void CMsgSteamDatagramP2PRoutes_Route::_internal_set_your_pop_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.your_pop_id_ = value;
}

// optional uint32 legacy_score = 3;
inline bool CMsgSteamDatagramP2PRoutes_Route::has_legacy_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_Route::clear_legacy_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::legacy_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.Route.legacy_score)
  return _internal_legacy_score();
}
inline void CMsgSteamDatagramP2PRoutes_Route::set_legacy_score(::uint32_t value) {
  _internal_set_legacy_score(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.Route.legacy_score)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::_internal_legacy_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legacy_score_;
}
inline void CMsgSteamDatagramP2PRoutes_Route::_internal_set_legacy_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legacy_score_ = value;
}

// optional uint32 interior_score = 4;
inline bool CMsgSteamDatagramP2PRoutes_Route::has_interior_score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes_Route::clear_interior_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interior_score_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::interior_score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.Route.interior_score)
  return _internal_interior_score();
}
inline void CMsgSteamDatagramP2PRoutes_Route::set_interior_score(::uint32_t value) {
  _internal_set_interior_score(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.Route.interior_score)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes_Route::_internal_interior_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interior_score_;
}
inline void CMsgSteamDatagramP2PRoutes_Route::_internal_set_interior_score(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interior_score_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramP2PRoutes

// repeated .CMsgSteamDatagramP2PRoutes.RelayCluster relay_clusters = 1;
inline int CMsgSteamDatagramP2PRoutes::_internal_relay_clusters_size() const {
  return _internal_relay_clusters().size();
}
inline int CMsgSteamDatagramP2PRoutes::relay_clusters_size() const {
  return _internal_relay_clusters_size();
}
inline void CMsgSteamDatagramP2PRoutes::clear_relay_clusters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relay_clusters_.Clear();
}
inline ::CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes::mutable_relay_clusters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PRoutes.relay_clusters)
  return _internal_mutable_relay_clusters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes::mutable_relay_clusters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramP2PRoutes.relay_clusters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_relay_clusters();
}
inline const ::CMsgSteamDatagramP2PRoutes_RelayCluster& CMsgSteamDatagramP2PRoutes::relay_clusters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.relay_clusters)
  return _internal_relay_clusters().Get(index);
}
inline ::CMsgSteamDatagramP2PRoutes_RelayCluster* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes::add_relay_clusters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamDatagramP2PRoutes_RelayCluster* _add = _internal_mutable_relay_clusters()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramP2PRoutes.relay_clusters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>& CMsgSteamDatagramP2PRoutes::relay_clusters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramP2PRoutes.relay_clusters)
  return _internal_relay_clusters();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>&
CMsgSteamDatagramP2PRoutes::_internal_relay_clusters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relay_clusters_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_RelayCluster>* PROTOBUF_NONNULL
CMsgSteamDatagramP2PRoutes::_internal_mutable_relay_clusters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.relay_clusters_;
}

// repeated .CMsgSteamDatagramP2PRoutes.Route routes = 2;
inline int CMsgSteamDatagramP2PRoutes::_internal_routes_size() const {
  return _internal_routes().size();
}
inline int CMsgSteamDatagramP2PRoutes::routes_size() const {
  return _internal_routes_size();
}
inline void CMsgSteamDatagramP2PRoutes::clear_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routes_.Clear();
}
inline ::CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes::mutable_routes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramP2PRoutes.routes)
  return _internal_mutable_routes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes::mutable_routes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramP2PRoutes.routes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_routes();
}
inline const ::CMsgSteamDatagramP2PRoutes_Route& CMsgSteamDatagramP2PRoutes::routes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.routes)
  return _internal_routes().Get(index);
}
inline ::CMsgSteamDatagramP2PRoutes_Route* PROTOBUF_NONNULL CMsgSteamDatagramP2PRoutes::add_routes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgSteamDatagramP2PRoutes_Route* _add = _internal_mutable_routes()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramP2PRoutes.routes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>& CMsgSteamDatagramP2PRoutes::routes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramP2PRoutes.routes)
  return _internal_routes();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>&
CMsgSteamDatagramP2PRoutes::_internal_routes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routes_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamDatagramP2PRoutes_Route>* PROTOBUF_NONNULL
CMsgSteamDatagramP2PRoutes::_internal_mutable_routes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.routes_;
}

// optional uint32 revision = 3;
inline bool CMsgSteamDatagramP2PRoutes::has_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramP2PRoutes::clear_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes::revision() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramP2PRoutes.revision)
  return _internal_revision();
}
inline void CMsgSteamDatagramP2PRoutes::set_revision(::uint32_t value) {
  _internal_set_revision(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramP2PRoutes.revision)
}
inline ::uint32_t CMsgSteamDatagramP2PRoutes::_internal_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_;
}
inline void CMsgSteamDatagramP2PRoutes::_internal_set_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramSetSecondaryAddressRequest

// optional fixed32 client_main_ip = 1;
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::has_client_main_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::clear_client_main_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_main_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamDatagramSetSecondaryAddressRequest::client_main_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressRequest.client_main_ip)
  return _internal_client_main_ip();
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::set_client_main_ip(::uint32_t value) {
  _internal_set_client_main_ip(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressRequest.client_main_ip)
}
inline ::uint32_t CMsgSteamDatagramSetSecondaryAddressRequest::_internal_client_main_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_main_ip_;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::_internal_set_client_main_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_main_ip_ = value;
}

// optional fixed32 client_main_port = 2;
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::has_client_main_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::clear_client_main_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_main_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamDatagramSetSecondaryAddressRequest::client_main_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressRequest.client_main_port)
  return _internal_client_main_port();
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::set_client_main_port(::uint32_t value) {
  _internal_set_client_main_port(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressRequest.client_main_port)
}
inline ::uint32_t CMsgSteamDatagramSetSecondaryAddressRequest::_internal_client_main_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_main_port_;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::_internal_set_client_main_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_main_port_ = value;
}

// optional fixed32 client_connection_id = 3;
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::has_client_connection_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::clear_client_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamDatagramSetSecondaryAddressRequest::client_connection_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressRequest.client_connection_id)
  return _internal_client_connection_id();
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::set_client_connection_id(::uint32_t value) {
  _internal_set_client_connection_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressRequest.client_connection_id)
}
inline ::uint32_t CMsgSteamDatagramSetSecondaryAddressRequest::_internal_client_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_connection_id_;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::_internal_set_client_connection_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_connection_id_ = value;
}

// optional string client_identity = 4;
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::has_client_identity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::clear_client_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_identity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramSetSecondaryAddressRequest::client_identity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressRequest.client_identity)
  return _internal_client_identity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramSetSecondaryAddressRequest::set_client_identity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_identity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressRequest.client_identity)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSetSecondaryAddressRequest::mutable_client_identity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_identity();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramSetSecondaryAddressRequest.client_identity)
  return _s;
}
inline const std::string& CMsgSteamDatagramSetSecondaryAddressRequest::_internal_client_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_identity_.Get();
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::_internal_set_client_identity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_identity_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSetSecondaryAddressRequest::_internal_mutable_client_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.client_identity_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramSetSecondaryAddressRequest::release_client_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramSetSecondaryAddressRequest.client_identity)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.client_identity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.client_identity_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::set_allocated_client_identity(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.client_identity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_identity_.IsDefault()) {
    _impl_.client_identity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramSetSecondaryAddressRequest.client_identity)
}

// optional bool request_send_duplication = 5;
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::has_request_send_duplication() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::clear_request_send_duplication() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_send_duplication_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::request_send_duplication() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressRequest.request_send_duplication)
  return _internal_request_send_duplication();
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::set_request_send_duplication(bool value) {
  _internal_set_request_send_duplication(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressRequest.request_send_duplication)
}
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::_internal_request_send_duplication() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_send_duplication_;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::_internal_set_request_send_duplication(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_send_duplication_ = value;
}

// optional bytes kludge_pad = 99;
inline bool CMsgSteamDatagramSetSecondaryAddressRequest::has_kludge_pad() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::clear_kludge_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kludge_pad_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamDatagramSetSecondaryAddressRequest::kludge_pad() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressRequest.kludge_pad)
  return _internal_kludge_pad();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramSetSecondaryAddressRequest::set_kludge_pad(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.kludge_pad_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressRequest.kludge_pad)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSetSecondaryAddressRequest::mutable_kludge_pad()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kludge_pad();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramSetSecondaryAddressRequest.kludge_pad)
  return _s;
}
inline const std::string& CMsgSteamDatagramSetSecondaryAddressRequest::_internal_kludge_pad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kludge_pad_.Get();
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::_internal_set_kludge_pad(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.kludge_pad_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSetSecondaryAddressRequest::_internal_mutable_kludge_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.kludge_pad_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramSetSecondaryAddressRequest::release_kludge_pad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramSetSecondaryAddressRequest.kludge_pad)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.kludge_pad_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.kludge_pad_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramSetSecondaryAddressRequest::set_allocated_kludge_pad(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.kludge_pad_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.kludge_pad_.IsDefault()) {
    _impl_.kludge_pad_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramSetSecondaryAddressRequest.kludge_pad)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramSetSecondaryAddressResult

// optional bool success = 1;
inline bool CMsgSteamDatagramSetSecondaryAddressResult::has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressResult::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgSteamDatagramSetSecondaryAddressResult::success() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressResult.success)
  return _internal_success();
}
inline void CMsgSteamDatagramSetSecondaryAddressResult::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressResult.success)
}
inline bool CMsgSteamDatagramSetSecondaryAddressResult::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CMsgSteamDatagramSetSecondaryAddressResult::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// optional string message = 2;
inline bool CMsgSteamDatagramSetSecondaryAddressResult::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamDatagramSetSecondaryAddressResult::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamDatagramSetSecondaryAddressResult::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramSetSecondaryAddressResult.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgSteamDatagramSetSecondaryAddressResult::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramSetSecondaryAddressResult.message)
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSetSecondaryAddressResult::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramSetSecondaryAddressResult.message)
  return _s;
}
inline const std::string& CMsgSteamDatagramSetSecondaryAddressResult::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void CMsgSteamDatagramSetSecondaryAddressResult::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgSteamDatagramSetSecondaryAddressResult::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgSteamDatagramSetSecondaryAddressResult::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramSetSecondaryAddressResult.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void CMsgSteamDatagramSetSecondaryAddressResult::set_allocated_message(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramSetSecondaryAddressResult.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol>() {
  return ::CMsgSteamDatagramRouterPingReply_AltAddress_Protocol_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramRouterPingReply_Flags> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramRouterPingReply_Flags>() {
  return ::CMsgSteamDatagramRouterPingReply_Flags_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramConnectionClosed_ERelayMode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramConnectionClosed_ERelayMode>() {
  return ::CMsgSteamDatagramConnectionClosed_ERelayMode_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramConnectionStatsClientToRouter_Flags> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramConnectionStatsClientToRouter_Flags>() {
  return ::CMsgSteamDatagramConnectionStatsClientToRouter_Flags_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramConnectionStatsRouterToClient_Flags> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramConnectionStatsRouterToClient_Flags>() {
  return ::CMsgSteamDatagramConnectionStatsRouterToClient_Flags_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramConnectionStatsRouterToServer_Flags> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramConnectionStatsRouterToServer_Flags>() {
  return ::CMsgSteamDatagramConnectionStatsRouterToServer_Flags_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramConnectionStatsServerToRouter_Flags> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramConnectionStatsServerToRouter_Flags>() {
  return ::CMsgSteamDatagramConnectionStatsServerToRouter_Flags_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags>() {
  return ::CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_descriptor();
}
template <>
struct is_proto_enum<::CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags>() {
  return ::CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_descriptor();
}
template <>
struct is_proto_enum<::ESteamDatagramMsgID> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ESteamDatagramMsgID>() {
  return ::ESteamDatagramMsgID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // steamdatagram_5fmessages_5fsdr_2eproto_2epb_2eh

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steammessages_player.steamworkssdk.proto
// Protobuf C++ Version: 6.30.0-rc1

#ifndef steammessages_5fplayer_2esteamworkssdk_2eproto_2epb_2eh
#define steammessages_5fplayer_2esteamworkssdk_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fplayer_2esteamworkssdk_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_steammessages_5fplayer_2esteamworkssdk_2eproto;
}  // extern "C"
enum ENotificationSetting : int;
extern const uint32_t ENotificationSetting_internal_data_[];
class CPlayer_AcceptSSA_Request;
struct CPlayer_AcceptSSA_RequestDefaultTypeInternal;
extern CPlayer_AcceptSSA_RequestDefaultTypeInternal _CPlayer_AcceptSSA_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_AcceptSSA_Request_class_data_;
class CPlayer_AcceptSSA_Response;
struct CPlayer_AcceptSSA_ResponseDefaultTypeInternal;
extern CPlayer_AcceptSSA_ResponseDefaultTypeInternal _CPlayer_AcceptSSA_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_AcceptSSA_Response_class_data_;
class CPlayer_AddFriend_Request;
struct CPlayer_AddFriend_RequestDefaultTypeInternal;
extern CPlayer_AddFriend_RequestDefaultTypeInternal _CPlayer_AddFriend_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_AddFriend_Request_class_data_;
class CPlayer_AddFriend_Response;
struct CPlayer_AddFriend_ResponseDefaultTypeInternal;
extern CPlayer_AddFriend_ResponseDefaultTypeInternal _CPlayer_AddFriend_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_AddFriend_Response_class_data_;
class CPlayer_CommunityPreferences;
struct CPlayer_CommunityPreferencesDefaultTypeInternal;
extern CPlayer_CommunityPreferencesDefaultTypeInternal _CPlayer_CommunityPreferences_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_CommunityPreferences_class_data_;
class CPlayer_GetCommunityPreferences_Request;
struct CPlayer_GetCommunityPreferences_RequestDefaultTypeInternal;
extern CPlayer_GetCommunityPreferences_RequestDefaultTypeInternal _CPlayer_GetCommunityPreferences_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetCommunityPreferences_Request_class_data_;
class CPlayer_GetCommunityPreferences_Response;
struct CPlayer_GetCommunityPreferences_ResponseDefaultTypeInternal;
extern CPlayer_GetCommunityPreferences_ResponseDefaultTypeInternal _CPlayer_GetCommunityPreferences_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetCommunityPreferences_Response_class_data_;
class CPlayer_GetFriendsGameplayInfo_Request;
struct CPlayer_GetFriendsGameplayInfo_RequestDefaultTypeInternal;
extern CPlayer_GetFriendsGameplayInfo_RequestDefaultTypeInternal _CPlayer_GetFriendsGameplayInfo_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Request_class_data_;
class CPlayer_GetFriendsGameplayInfo_Response;
struct CPlayer_GetFriendsGameplayInfo_ResponseDefaultTypeInternal;
extern CPlayer_GetFriendsGameplayInfo_ResponseDefaultTypeInternal _CPlayer_GetFriendsGameplayInfo_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Response_class_data_;
class CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo;
struct CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfoDefaultTypeInternal;
extern CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfoDefaultTypeInternal _CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo_class_data_;
class CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo;
struct CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfoDefaultTypeInternal;
extern CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfoDefaultTypeInternal _CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo_class_data_;
class CPlayer_GetGameBadgeLevels_Request;
struct CPlayer_GetGameBadgeLevels_RequestDefaultTypeInternal;
extern CPlayer_GetGameBadgeLevels_RequestDefaultTypeInternal _CPlayer_GetGameBadgeLevels_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetGameBadgeLevels_Request_class_data_;
class CPlayer_GetGameBadgeLevels_Response;
struct CPlayer_GetGameBadgeLevels_ResponseDefaultTypeInternal;
extern CPlayer_GetGameBadgeLevels_ResponseDefaultTypeInternal _CPlayer_GetGameBadgeLevels_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetGameBadgeLevels_Response_class_data_;
class CPlayer_GetGameBadgeLevels_Response_Badge;
struct CPlayer_GetGameBadgeLevels_Response_BadgeDefaultTypeInternal;
extern CPlayer_GetGameBadgeLevels_Response_BadgeDefaultTypeInternal _CPlayer_GetGameBadgeLevels_Response_Badge_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetGameBadgeLevels_Response_Badge_class_data_;
class CPlayer_GetLastPlayedTimes_Request;
struct CPlayer_GetLastPlayedTimes_RequestDefaultTypeInternal;
extern CPlayer_GetLastPlayedTimes_RequestDefaultTypeInternal _CPlayer_GetLastPlayedTimes_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetLastPlayedTimes_Request_class_data_;
class CPlayer_GetLastPlayedTimes_Response;
struct CPlayer_GetLastPlayedTimes_ResponseDefaultTypeInternal;
extern CPlayer_GetLastPlayedTimes_ResponseDefaultTypeInternal _CPlayer_GetLastPlayedTimes_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetLastPlayedTimes_Response_class_data_;
class CPlayer_GetLastPlayedTimes_Response_Game;
struct CPlayer_GetLastPlayedTimes_Response_GameDefaultTypeInternal;
extern CPlayer_GetLastPlayedTimes_Response_GameDefaultTypeInternal _CPlayer_GetLastPlayedTimes_Response_Game_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetLastPlayedTimes_Response_Game_class_data_;
class CPlayer_GetMutualFriendsForIncomingInvites_Request;
struct CPlayer_GetMutualFriendsForIncomingInvites_RequestDefaultTypeInternal;
extern CPlayer_GetMutualFriendsForIncomingInvites_RequestDefaultTypeInternal _CPlayer_GetMutualFriendsForIncomingInvites_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetMutualFriendsForIncomingInvites_Request_class_data_;
class CPlayer_GetMutualFriendsForIncomingInvites_Response;
struct CPlayer_GetMutualFriendsForIncomingInvites_ResponseDefaultTypeInternal;
extern CPlayer_GetMutualFriendsForIncomingInvites_ResponseDefaultTypeInternal _CPlayer_GetMutualFriendsForIncomingInvites_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetMutualFriendsForIncomingInvites_Response_class_data_;
class CPlayer_GetNewSteamAnnouncementState_Request;
struct CPlayer_GetNewSteamAnnouncementState_RequestDefaultTypeInternal;
extern CPlayer_GetNewSteamAnnouncementState_RequestDefaultTypeInternal _CPlayer_GetNewSteamAnnouncementState_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNewSteamAnnouncementState_Request_class_data_;
class CPlayer_GetNewSteamAnnouncementState_Response;
struct CPlayer_GetNewSteamAnnouncementState_ResponseDefaultTypeInternal;
extern CPlayer_GetNewSteamAnnouncementState_ResponseDefaultTypeInternal _CPlayer_GetNewSteamAnnouncementState_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNewSteamAnnouncementState_Response_class_data_;
class CPlayer_GetNicknameList_Request;
struct CPlayer_GetNicknameList_RequestDefaultTypeInternal;
extern CPlayer_GetNicknameList_RequestDefaultTypeInternal _CPlayer_GetNicknameList_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNicknameList_Request_class_data_;
class CPlayer_GetNicknameList_Response;
struct CPlayer_GetNicknameList_ResponseDefaultTypeInternal;
extern CPlayer_GetNicknameList_ResponseDefaultTypeInternal _CPlayer_GetNicknameList_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNicknameList_Response_class_data_;
class CPlayer_GetNicknameList_Response_PlayerNickname;
struct CPlayer_GetNicknameList_Response_PlayerNicknameDefaultTypeInternal;
extern CPlayer_GetNicknameList_Response_PlayerNicknameDefaultTypeInternal _CPlayer_GetNicknameList_Response_PlayerNickname_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNicknameList_Response_PlayerNickname_class_data_;
class CPlayer_GetPerFriendPreferences_Request;
struct CPlayer_GetPerFriendPreferences_RequestDefaultTypeInternal;
extern CPlayer_GetPerFriendPreferences_RequestDefaultTypeInternal _CPlayer_GetPerFriendPreferences_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetPerFriendPreferences_Request_class_data_;
class CPlayer_GetPerFriendPreferences_Response;
struct CPlayer_GetPerFriendPreferences_ResponseDefaultTypeInternal;
extern CPlayer_GetPerFriendPreferences_ResponseDefaultTypeInternal _CPlayer_GetPerFriendPreferences_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetPerFriendPreferences_Response_class_data_;
class CPlayer_IgnoreFriend_Request;
struct CPlayer_IgnoreFriend_RequestDefaultTypeInternal;
extern CPlayer_IgnoreFriend_RequestDefaultTypeInternal _CPlayer_IgnoreFriend_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_IgnoreFriend_Request_class_data_;
class CPlayer_IgnoreFriend_Response;
struct CPlayer_IgnoreFriend_ResponseDefaultTypeInternal;
extern CPlayer_IgnoreFriend_ResponseDefaultTypeInternal _CPlayer_IgnoreFriend_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_IgnoreFriend_Response_class_data_;
class CPlayer_IncomingInviteMutualFriendList;
struct CPlayer_IncomingInviteMutualFriendListDefaultTypeInternal;
extern CPlayer_IncomingInviteMutualFriendListDefaultTypeInternal _CPlayer_IncomingInviteMutualFriendList_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_IncomingInviteMutualFriendList_class_data_;
class CPlayer_RemoveFriend_Request;
struct CPlayer_RemoveFriend_RequestDefaultTypeInternal;
extern CPlayer_RemoveFriend_RequestDefaultTypeInternal _CPlayer_RemoveFriend_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_RemoveFriend_Request_class_data_;
class CPlayer_RemoveFriend_Response;
struct CPlayer_RemoveFriend_ResponseDefaultTypeInternal;
extern CPlayer_RemoveFriend_ResponseDefaultTypeInternal _CPlayer_RemoveFriend_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_RemoveFriend_Response_class_data_;
class CPlayer_SetCommunityPreferences_Request;
struct CPlayer_SetCommunityPreferences_RequestDefaultTypeInternal;
extern CPlayer_SetCommunityPreferences_RequestDefaultTypeInternal _CPlayer_SetCommunityPreferences_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetCommunityPreferences_Request_class_data_;
class CPlayer_SetCommunityPreferences_Response;
struct CPlayer_SetCommunityPreferences_ResponseDefaultTypeInternal;
extern CPlayer_SetCommunityPreferences_ResponseDefaultTypeInternal _CPlayer_SetCommunityPreferences_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetCommunityPreferences_Response_class_data_;
class CPlayer_SetPerFriendPreferences_Request;
struct CPlayer_SetPerFriendPreferences_RequestDefaultTypeInternal;
extern CPlayer_SetPerFriendPreferences_RequestDefaultTypeInternal _CPlayer_SetPerFriendPreferences_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetPerFriendPreferences_Request_class_data_;
class CPlayer_SetPerFriendPreferences_Response;
struct CPlayer_SetPerFriendPreferences_ResponseDefaultTypeInternal;
extern CPlayer_SetPerFriendPreferences_ResponseDefaultTypeInternal _CPlayer_SetPerFriendPreferences_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetPerFriendPreferences_Response_class_data_;
class CPlayer_UpdateSteamAnnouncementLastRead_Request;
struct CPlayer_UpdateSteamAnnouncementLastRead_RequestDefaultTypeInternal;
extern CPlayer_UpdateSteamAnnouncementLastRead_RequestDefaultTypeInternal _CPlayer_UpdateSteamAnnouncementLastRead_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_UpdateSteamAnnouncementLastRead_Request_class_data_;
class CPlayer_UpdateSteamAnnouncementLastRead_Response;
struct CPlayer_UpdateSteamAnnouncementLastRead_ResponseDefaultTypeInternal;
extern CPlayer_UpdateSteamAnnouncementLastRead_ResponseDefaultTypeInternal _CPlayer_UpdateSteamAnnouncementLastRead_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CPlayer_UpdateSteamAnnouncementLastRead_Response_class_data_;
class PerFriendPreferences;
struct PerFriendPreferencesDefaultTypeInternal;
extern PerFriendPreferencesDefaultTypeInternal _PerFriendPreferences_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PerFriendPreferences_class_data_;
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ENotificationSetting_internal_data_>
    internal::EnumTraitsImpl::value<::ENotificationSetting>;
}  // namespace protobuf
}  // namespace google

enum ENotificationSetting : int {
  k_ENotificationSettingNotifyUseDefault = 0,
  k_ENotificationSettingAlways = 1,
  k_ENotificationSettingNever = 2,
};

extern const uint32_t ENotificationSetting_internal_data_[];
inline constexpr ENotificationSetting ENotificationSetting_MIN =
    static_cast<ENotificationSetting>(0);
inline constexpr ENotificationSetting ENotificationSetting_MAX =
    static_cast<ENotificationSetting>(2);
inline bool ENotificationSetting_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int ENotificationSetting_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ENotificationSetting_descriptor();
template <typename T>
const std::string& ENotificationSetting_Name(T value) {
  static_assert(std::is_same<T, ENotificationSetting>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ENotificationSetting_Name().");
  return ENotificationSetting_Name(static_cast<ENotificationSetting>(value));
}
template <>
inline const std::string& ENotificationSetting_Name(ENotificationSetting value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ENotificationSetting_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool ENotificationSetting_Parse(
    absl::string_view name, ENotificationSetting* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENotificationSetting>(ENotificationSetting_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class PerFriendPreferences final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PerFriendPreferences) */ {
 public:
  inline PerFriendPreferences() : PerFriendPreferences(nullptr) {}
  ~PerFriendPreferences() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PerFriendPreferences* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PerFriendPreferences));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PerFriendPreferences(::google::protobuf::internal::ConstantInitialized);

  inline PerFriendPreferences(const PerFriendPreferences& from) : PerFriendPreferences(nullptr, from) {}
  inline PerFriendPreferences(PerFriendPreferences&& from) noexcept
      : PerFriendPreferences(nullptr, std::move(from)) {}
  inline PerFriendPreferences& operator=(const PerFriendPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerFriendPreferences& operator=(PerFriendPreferences&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PerFriendPreferences& default_instance() {
    return *reinterpret_cast<const PerFriendPreferences*>(
        &_PerFriendPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(PerFriendPreferences& a, PerFriendPreferences& b) { a.Swap(&b); }
  inline void Swap(PerFriendPreferences* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PerFriendPreferences* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PerFriendPreferences* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PerFriendPreferences>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PerFriendPreferences& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PerFriendPreferences& from) { PerFriendPreferences::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PerFriendPreferences* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PerFriendPreferences"; }

 protected:
  explicit PerFriendPreferences(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PerFriendPreferences(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PerFriendPreferences& from);
  PerFriendPreferences(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PerFriendPreferences&& from) noexcept
      : PerFriendPreferences(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNicknameFieldNumber = 2,
    kAccountidFieldNumber = 1,
    kNotificationsShowingameFieldNumber = 3,
    kNotificationsShowonlineFieldNumber = 4,
    kNotificationsShowmessagesFieldNumber = 5,
    kSoundsShowingameFieldNumber = 6,
    kSoundsShowonlineFieldNumber = 7,
    kSoundsShowmessagesFieldNumber = 8,
    kNotificationsSendmobileFieldNumber = 9,
  };
  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_nickname();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_nickname();
  void set_allocated_nickname(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_nickname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_nickname();

  public:
  // optional fixed32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid() ;
  ::uint32_t accountid() const;
  void set_accountid(::uint32_t value);

  private:
  ::uint32_t _internal_accountid() const;
  void _internal_set_accountid(::uint32_t value);

  public:
  // optional .ENotificationSetting notifications_showingame = 3 [default = k_ENotificationSettingNotifyUseDefault];
  bool has_notifications_showingame() const;
  void clear_notifications_showingame() ;
  ::ENotificationSetting notifications_showingame() const;
  void set_notifications_showingame(::ENotificationSetting value);

  private:
  ::ENotificationSetting _internal_notifications_showingame() const;
  void _internal_set_notifications_showingame(::ENotificationSetting value);

  public:
  // optional .ENotificationSetting notifications_showonline = 4 [default = k_ENotificationSettingNotifyUseDefault];
  bool has_notifications_showonline() const;
  void clear_notifications_showonline() ;
  ::ENotificationSetting notifications_showonline() const;
  void set_notifications_showonline(::ENotificationSetting value);

  private:
  ::ENotificationSetting _internal_notifications_showonline() const;
  void _internal_set_notifications_showonline(::ENotificationSetting value);

  public:
  // optional .ENotificationSetting notifications_showmessages = 5 [default = k_ENotificationSettingNotifyUseDefault];
  bool has_notifications_showmessages() const;
  void clear_notifications_showmessages() ;
  ::ENotificationSetting notifications_showmessages() const;
  void set_notifications_showmessages(::ENotificationSetting value);

  private:
  ::ENotificationSetting _internal_notifications_showmessages() const;
  void _internal_set_notifications_showmessages(::ENotificationSetting value);

  public:
  // optional .ENotificationSetting sounds_showingame = 6 [default = k_ENotificationSettingNotifyUseDefault];
  bool has_sounds_showingame() const;
  void clear_sounds_showingame() ;
  ::ENotificationSetting sounds_showingame() const;
  void set_sounds_showingame(::ENotificationSetting value);

  private:
  ::ENotificationSetting _internal_sounds_showingame() const;
  void _internal_set_sounds_showingame(::ENotificationSetting value);

  public:
  // optional .ENotificationSetting sounds_showonline = 7 [default = k_ENotificationSettingNotifyUseDefault];
  bool has_sounds_showonline() const;
  void clear_sounds_showonline() ;
  ::ENotificationSetting sounds_showonline() const;
  void set_sounds_showonline(::ENotificationSetting value);

  private:
  ::ENotificationSetting _internal_sounds_showonline() const;
  void _internal_set_sounds_showonline(::ENotificationSetting value);

  public:
  // optional .ENotificationSetting sounds_showmessages = 8 [default = k_ENotificationSettingNotifyUseDefault];
  bool has_sounds_showmessages() const;
  void clear_sounds_showmessages() ;
  ::ENotificationSetting sounds_showmessages() const;
  void set_sounds_showmessages(::ENotificationSetting value);

  private:
  ::ENotificationSetting _internal_sounds_showmessages() const;
  void _internal_set_sounds_showmessages(::ENotificationSetting value);

  public:
  // optional .ENotificationSetting notifications_sendmobile = 9 [default = k_ENotificationSettingNotifyUseDefault];
  bool has_notifications_sendmobile() const;
  void clear_notifications_sendmobile() ;
  ::ENotificationSetting notifications_sendmobile() const;
  void set_notifications_sendmobile(::ENotificationSetting value);

  private:
  ::ENotificationSetting _internal_notifications_sendmobile() const;
  void _internal_set_notifications_sendmobile(::ENotificationSetting value);

  public:
  // @@protoc_insertion_point(class_scope:PerFriendPreferences)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   7, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PerFriendPreferences& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::uint32_t accountid_;
    int notifications_showingame_;
    int notifications_showonline_;
    int notifications_showmessages_;
    int sounds_showingame_;
    int sounds_showonline_;
    int sounds_showmessages_;
    int notifications_sendmobile_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PerFriendPreferences_class_data_;
// -------------------------------------------------------------------

class CPlayer_UpdateSteamAnnouncementLastRead_Response final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_UpdateSteamAnnouncementLastRead_Response) */ {
 public:
  inline CPlayer_UpdateSteamAnnouncementLastRead_Response() : CPlayer_UpdateSteamAnnouncementLastRead_Response(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_UpdateSteamAnnouncementLastRead_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_UpdateSteamAnnouncementLastRead_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_UpdateSteamAnnouncementLastRead_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_UpdateSteamAnnouncementLastRead_Response(const CPlayer_UpdateSteamAnnouncementLastRead_Response& from) : CPlayer_UpdateSteamAnnouncementLastRead_Response(nullptr, from) {}
  inline CPlayer_UpdateSteamAnnouncementLastRead_Response(CPlayer_UpdateSteamAnnouncementLastRead_Response&& from) noexcept
      : CPlayer_UpdateSteamAnnouncementLastRead_Response(nullptr, std::move(from)) {}
  inline CPlayer_UpdateSteamAnnouncementLastRead_Response& operator=(const CPlayer_UpdateSteamAnnouncementLastRead_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_UpdateSteamAnnouncementLastRead_Response& operator=(CPlayer_UpdateSteamAnnouncementLastRead_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_UpdateSteamAnnouncementLastRead_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_UpdateSteamAnnouncementLastRead_Response*>(
        &_CPlayer_UpdateSteamAnnouncementLastRead_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(CPlayer_UpdateSteamAnnouncementLastRead_Response& a, CPlayer_UpdateSteamAnnouncementLastRead_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_UpdateSteamAnnouncementLastRead_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_UpdateSteamAnnouncementLastRead_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_UpdateSteamAnnouncementLastRead_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_UpdateSteamAnnouncementLastRead_Response>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_UpdateSteamAnnouncementLastRead_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_UpdateSteamAnnouncementLastRead_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_UpdateSteamAnnouncementLastRead_Response"; }

 protected:
  explicit CPlayer_UpdateSteamAnnouncementLastRead_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_UpdateSteamAnnouncementLastRead_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_UpdateSteamAnnouncementLastRead_Response& from);
  CPlayer_UpdateSteamAnnouncementLastRead_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_UpdateSteamAnnouncementLastRead_Response&& from) noexcept
      : CPlayer_UpdateSteamAnnouncementLastRead_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_UpdateSteamAnnouncementLastRead_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_UpdateSteamAnnouncementLastRead_Response& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_UpdateSteamAnnouncementLastRead_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_UpdateSteamAnnouncementLastRead_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_UpdateSteamAnnouncementLastRead_Request) */ {
 public:
  inline CPlayer_UpdateSteamAnnouncementLastRead_Request() : CPlayer_UpdateSteamAnnouncementLastRead_Request(nullptr) {}
  ~CPlayer_UpdateSteamAnnouncementLastRead_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_UpdateSteamAnnouncementLastRead_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_UpdateSteamAnnouncementLastRead_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_UpdateSteamAnnouncementLastRead_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_UpdateSteamAnnouncementLastRead_Request(const CPlayer_UpdateSteamAnnouncementLastRead_Request& from) : CPlayer_UpdateSteamAnnouncementLastRead_Request(nullptr, from) {}
  inline CPlayer_UpdateSteamAnnouncementLastRead_Request(CPlayer_UpdateSteamAnnouncementLastRead_Request&& from) noexcept
      : CPlayer_UpdateSteamAnnouncementLastRead_Request(nullptr, std::move(from)) {}
  inline CPlayer_UpdateSteamAnnouncementLastRead_Request& operator=(const CPlayer_UpdateSteamAnnouncementLastRead_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_UpdateSteamAnnouncementLastRead_Request& operator=(CPlayer_UpdateSteamAnnouncementLastRead_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_UpdateSteamAnnouncementLastRead_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_UpdateSteamAnnouncementLastRead_Request*>(
        &_CPlayer_UpdateSteamAnnouncementLastRead_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(CPlayer_UpdateSteamAnnouncementLastRead_Request& a, CPlayer_UpdateSteamAnnouncementLastRead_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_UpdateSteamAnnouncementLastRead_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_UpdateSteamAnnouncementLastRead_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_UpdateSteamAnnouncementLastRead_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_UpdateSteamAnnouncementLastRead_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_UpdateSteamAnnouncementLastRead_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_UpdateSteamAnnouncementLastRead_Request& from) { CPlayer_UpdateSteamAnnouncementLastRead_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_UpdateSteamAnnouncementLastRead_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_UpdateSteamAnnouncementLastRead_Request"; }

 protected:
  explicit CPlayer_UpdateSteamAnnouncementLastRead_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_UpdateSteamAnnouncementLastRead_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_UpdateSteamAnnouncementLastRead_Request& from);
  CPlayer_UpdateSteamAnnouncementLastRead_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_UpdateSteamAnnouncementLastRead_Request&& from) noexcept
      : CPlayer_UpdateSteamAnnouncementLastRead_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnnouncementGidFieldNumber = 1,
    kTimePostedFieldNumber = 2,
  };
  // optional uint64 announcement_gid = 1;
  bool has_announcement_gid() const;
  void clear_announcement_gid() ;
  ::uint64_t announcement_gid() const;
  void set_announcement_gid(::uint64_t value);

  private:
  ::uint64_t _internal_announcement_gid() const;
  void _internal_set_announcement_gid(::uint64_t value);

  public:
  // optional uint32 time_posted = 2;
  bool has_time_posted() const;
  void clear_time_posted() ;
  ::uint32_t time_posted() const;
  void set_time_posted(::uint32_t value);

  private:
  ::uint32_t _internal_time_posted() const;
  void _internal_set_time_posted(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_UpdateSteamAnnouncementLastRead_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_UpdateSteamAnnouncementLastRead_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t announcement_gid_;
    ::uint32_t time_posted_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_UpdateSteamAnnouncementLastRead_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_SetPerFriendPreferences_Response final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_SetPerFriendPreferences_Response) */ {
 public:
  inline CPlayer_SetPerFriendPreferences_Response() : CPlayer_SetPerFriendPreferences_Response(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_SetPerFriendPreferences_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_SetPerFriendPreferences_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_SetPerFriendPreferences_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_SetPerFriendPreferences_Response(const CPlayer_SetPerFriendPreferences_Response& from) : CPlayer_SetPerFriendPreferences_Response(nullptr, from) {}
  inline CPlayer_SetPerFriendPreferences_Response(CPlayer_SetPerFriendPreferences_Response&& from) noexcept
      : CPlayer_SetPerFriendPreferences_Response(nullptr, std::move(from)) {}
  inline CPlayer_SetPerFriendPreferences_Response& operator=(const CPlayer_SetPerFriendPreferences_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_SetPerFriendPreferences_Response& operator=(CPlayer_SetPerFriendPreferences_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_SetPerFriendPreferences_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_SetPerFriendPreferences_Response*>(
        &_CPlayer_SetPerFriendPreferences_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CPlayer_SetPerFriendPreferences_Response& a, CPlayer_SetPerFriendPreferences_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_SetPerFriendPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_SetPerFriendPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_SetPerFriendPreferences_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_SetPerFriendPreferences_Response>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_SetPerFriendPreferences_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_SetPerFriendPreferences_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_SetPerFriendPreferences_Response"; }

 protected:
  explicit CPlayer_SetPerFriendPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_SetPerFriendPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_SetPerFriendPreferences_Response& from);
  CPlayer_SetPerFriendPreferences_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_SetPerFriendPreferences_Response&& from) noexcept
      : CPlayer_SetPerFriendPreferences_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_SetPerFriendPreferences_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_SetPerFriendPreferences_Response& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetPerFriendPreferences_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_SetCommunityPreferences_Response final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_SetCommunityPreferences_Response) */ {
 public:
  inline CPlayer_SetCommunityPreferences_Response() : CPlayer_SetCommunityPreferences_Response(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_SetCommunityPreferences_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_SetCommunityPreferences_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_SetCommunityPreferences_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_SetCommunityPreferences_Response(const CPlayer_SetCommunityPreferences_Response& from) : CPlayer_SetCommunityPreferences_Response(nullptr, from) {}
  inline CPlayer_SetCommunityPreferences_Response(CPlayer_SetCommunityPreferences_Response&& from) noexcept
      : CPlayer_SetCommunityPreferences_Response(nullptr, std::move(from)) {}
  inline CPlayer_SetCommunityPreferences_Response& operator=(const CPlayer_SetCommunityPreferences_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_SetCommunityPreferences_Response& operator=(CPlayer_SetCommunityPreferences_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_SetCommunityPreferences_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_SetCommunityPreferences_Response*>(
        &_CPlayer_SetCommunityPreferences_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(CPlayer_SetCommunityPreferences_Response& a, CPlayer_SetCommunityPreferences_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_SetCommunityPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_SetCommunityPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_SetCommunityPreferences_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_SetCommunityPreferences_Response>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_SetCommunityPreferences_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_SetCommunityPreferences_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_SetCommunityPreferences_Response"; }

 protected:
  explicit CPlayer_SetCommunityPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_SetCommunityPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_SetCommunityPreferences_Response& from);
  CPlayer_SetCommunityPreferences_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_SetCommunityPreferences_Response&& from) noexcept
      : CPlayer_SetCommunityPreferences_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_SetCommunityPreferences_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_SetCommunityPreferences_Response& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetCommunityPreferences_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_RemoveFriend_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_RemoveFriend_Response) */ {
 public:
  inline CPlayer_RemoveFriend_Response() : CPlayer_RemoveFriend_Response(nullptr) {}
  ~CPlayer_RemoveFriend_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_RemoveFriend_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_RemoveFriend_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_RemoveFriend_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_RemoveFriend_Response(const CPlayer_RemoveFriend_Response& from) : CPlayer_RemoveFriend_Response(nullptr, from) {}
  inline CPlayer_RemoveFriend_Response(CPlayer_RemoveFriend_Response&& from) noexcept
      : CPlayer_RemoveFriend_Response(nullptr, std::move(from)) {}
  inline CPlayer_RemoveFriend_Response& operator=(const CPlayer_RemoveFriend_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_RemoveFriend_Response& operator=(CPlayer_RemoveFriend_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_RemoveFriend_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_RemoveFriend_Response*>(
        &_CPlayer_RemoveFriend_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(CPlayer_RemoveFriend_Response& a, CPlayer_RemoveFriend_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_RemoveFriend_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_RemoveFriend_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_RemoveFriend_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_RemoveFriend_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_RemoveFriend_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_RemoveFriend_Response& from) { CPlayer_RemoveFriend_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_RemoveFriend_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_RemoveFriend_Response"; }

 protected:
  explicit CPlayer_RemoveFriend_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_RemoveFriend_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_RemoveFriend_Response& from);
  CPlayer_RemoveFriend_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_RemoveFriend_Response&& from) noexcept
      : CPlayer_RemoveFriend_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFriendRelationshipFieldNumber = 1,
  };
  // optional uint32 friend_relationship = 1 [(.description) = "the resulting relationship"];
  bool has_friend_relationship() const;
  void clear_friend_relationship() ;
  ::uint32_t friend_relationship() const;
  void set_friend_relationship(::uint32_t value);

  private:
  ::uint32_t _internal_friend_relationship() const;
  void _internal_set_friend_relationship(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_RemoveFriend_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_RemoveFriend_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t friend_relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_RemoveFriend_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_RemoveFriend_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_RemoveFriend_Request) */ {
 public:
  inline CPlayer_RemoveFriend_Request() : CPlayer_RemoveFriend_Request(nullptr) {}
  ~CPlayer_RemoveFriend_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_RemoveFriend_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_RemoveFriend_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_RemoveFriend_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_RemoveFriend_Request(const CPlayer_RemoveFriend_Request& from) : CPlayer_RemoveFriend_Request(nullptr, from) {}
  inline CPlayer_RemoveFriend_Request(CPlayer_RemoveFriend_Request&& from) noexcept
      : CPlayer_RemoveFriend_Request(nullptr, std::move(from)) {}
  inline CPlayer_RemoveFriend_Request& operator=(const CPlayer_RemoveFriend_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_RemoveFriend_Request& operator=(CPlayer_RemoveFriend_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_RemoveFriend_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_RemoveFriend_Request*>(
        &_CPlayer_RemoveFriend_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(CPlayer_RemoveFriend_Request& a, CPlayer_RemoveFriend_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_RemoveFriend_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_RemoveFriend_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_RemoveFriend_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_RemoveFriend_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_RemoveFriend_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_RemoveFriend_Request& from) { CPlayer_RemoveFriend_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_RemoveFriend_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_RemoveFriend_Request"; }

 protected:
  explicit CPlayer_RemoveFriend_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_RemoveFriend_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_RemoveFriend_Request& from);
  CPlayer_RemoveFriend_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_RemoveFriend_Request&& from) noexcept
      : CPlayer_RemoveFriend_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSteamidFieldNumber = 1,
  };
  // optional fixed64 steamid = 1 [(.description) = "Steam ID of friend to remove."];
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_RemoveFriend_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_RemoveFriend_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t steamid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_RemoveFriend_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_IncomingInviteMutualFriendList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_IncomingInviteMutualFriendList) */ {
 public:
  inline CPlayer_IncomingInviteMutualFriendList() : CPlayer_IncomingInviteMutualFriendList(nullptr) {}
  ~CPlayer_IncomingInviteMutualFriendList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_IncomingInviteMutualFriendList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_IncomingInviteMutualFriendList(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_IncomingInviteMutualFriendList(const CPlayer_IncomingInviteMutualFriendList& from) : CPlayer_IncomingInviteMutualFriendList(nullptr, from) {}
  inline CPlayer_IncomingInviteMutualFriendList(CPlayer_IncomingInviteMutualFriendList&& from) noexcept
      : CPlayer_IncomingInviteMutualFriendList(nullptr, std::move(from)) {}
  inline CPlayer_IncomingInviteMutualFriendList& operator=(const CPlayer_IncomingInviteMutualFriendList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_IncomingInviteMutualFriendList& operator=(CPlayer_IncomingInviteMutualFriendList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_IncomingInviteMutualFriendList& default_instance() {
    return *reinterpret_cast<const CPlayer_IncomingInviteMutualFriendList*>(
        &_CPlayer_IncomingInviteMutualFriendList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CPlayer_IncomingInviteMutualFriendList& a, CPlayer_IncomingInviteMutualFriendList& b) { a.Swap(&b); }
  inline void Swap(CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_IncomingInviteMutualFriendList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_IncomingInviteMutualFriendList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_IncomingInviteMutualFriendList& from) { CPlayer_IncomingInviteMutualFriendList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_IncomingInviteMutualFriendList"; }

 protected:
  explicit CPlayer_IncomingInviteMutualFriendList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_IncomingInviteMutualFriendList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_IncomingInviteMutualFriendList& from);
  CPlayer_IncomingInviteMutualFriendList(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_IncomingInviteMutualFriendList&& from) noexcept
      : CPlayer_IncomingInviteMutualFriendList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMutualFriendAccountIdsFieldNumber = 2,
    kSteamidFieldNumber = 1,
  };
  // repeated uint32 mutual_friend_account_ids = 2;
  int mutual_friend_account_ids_size() const;
  private:
  int _internal_mutual_friend_account_ids_size() const;

  public:
  void clear_mutual_friend_account_ids() ;
  ::uint32_t mutual_friend_account_ids(int index) const;
  void set_mutual_friend_account_ids(int index, ::uint32_t value);
  void add_mutual_friend_account_ids(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& mutual_friend_account_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_mutual_friend_account_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_mutual_friend_account_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_mutual_friend_account_ids();

  public:
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_IncomingInviteMutualFriendList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_IncomingInviteMutualFriendList& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> mutual_friend_account_ids_;
    ::uint64_t steamid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_IncomingInviteMutualFriendList_class_data_;
// -------------------------------------------------------------------

class CPlayer_IgnoreFriend_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_IgnoreFriend_Response) */ {
 public:
  inline CPlayer_IgnoreFriend_Response() : CPlayer_IgnoreFriend_Response(nullptr) {}
  ~CPlayer_IgnoreFriend_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_IgnoreFriend_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_IgnoreFriend_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_IgnoreFriend_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_IgnoreFriend_Response(const CPlayer_IgnoreFriend_Response& from) : CPlayer_IgnoreFriend_Response(nullptr, from) {}
  inline CPlayer_IgnoreFriend_Response(CPlayer_IgnoreFriend_Response&& from) noexcept
      : CPlayer_IgnoreFriend_Response(nullptr, std::move(from)) {}
  inline CPlayer_IgnoreFriend_Response& operator=(const CPlayer_IgnoreFriend_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_IgnoreFriend_Response& operator=(CPlayer_IgnoreFriend_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_IgnoreFriend_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_IgnoreFriend_Response*>(
        &_CPlayer_IgnoreFriend_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(CPlayer_IgnoreFriend_Response& a, CPlayer_IgnoreFriend_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_IgnoreFriend_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_IgnoreFriend_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_IgnoreFriend_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_IgnoreFriend_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_IgnoreFriend_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_IgnoreFriend_Response& from) { CPlayer_IgnoreFriend_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_IgnoreFriend_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_IgnoreFriend_Response"; }

 protected:
  explicit CPlayer_IgnoreFriend_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_IgnoreFriend_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_IgnoreFriend_Response& from);
  CPlayer_IgnoreFriend_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_IgnoreFriend_Response&& from) noexcept
      : CPlayer_IgnoreFriend_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFriendRelationshipFieldNumber = 1,
  };
  // optional uint32 friend_relationship = 1 [(.description) = "the resulting relationship"];
  bool has_friend_relationship() const;
  void clear_friend_relationship() ;
  ::uint32_t friend_relationship() const;
  void set_friend_relationship(::uint32_t value);

  private:
  ::uint32_t _internal_friend_relationship() const;
  void _internal_set_friend_relationship(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_IgnoreFriend_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_IgnoreFriend_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t friend_relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_IgnoreFriend_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_IgnoreFriend_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_IgnoreFriend_Request) */ {
 public:
  inline CPlayer_IgnoreFriend_Request() : CPlayer_IgnoreFriend_Request(nullptr) {}
  ~CPlayer_IgnoreFriend_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_IgnoreFriend_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_IgnoreFriend_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_IgnoreFriend_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_IgnoreFriend_Request(const CPlayer_IgnoreFriend_Request& from) : CPlayer_IgnoreFriend_Request(nullptr, from) {}
  inline CPlayer_IgnoreFriend_Request(CPlayer_IgnoreFriend_Request&& from) noexcept
      : CPlayer_IgnoreFriend_Request(nullptr, std::move(from)) {}
  inline CPlayer_IgnoreFriend_Request& operator=(const CPlayer_IgnoreFriend_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_IgnoreFriend_Request& operator=(CPlayer_IgnoreFriend_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_IgnoreFriend_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_IgnoreFriend_Request*>(
        &_CPlayer_IgnoreFriend_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(CPlayer_IgnoreFriend_Request& a, CPlayer_IgnoreFriend_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_IgnoreFriend_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_IgnoreFriend_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_IgnoreFriend_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_IgnoreFriend_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_IgnoreFriend_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_IgnoreFriend_Request& from) { CPlayer_IgnoreFriend_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_IgnoreFriend_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_IgnoreFriend_Request"; }

 protected:
  explicit CPlayer_IgnoreFriend_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_IgnoreFriend_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_IgnoreFriend_Request& from);
  CPlayer_IgnoreFriend_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_IgnoreFriend_Request&& from) noexcept
      : CPlayer_IgnoreFriend_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSteamidFieldNumber = 1,
    kUnignoreFieldNumber = 2,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // optional bool unignore = 2 [(.description) = "If set, remove from ignore/block list instead of adding "];
  bool has_unignore() const;
  void clear_unignore() ;
  bool unignore() const;
  void set_unignore(bool value);

  private:
  bool _internal_unignore() const;
  void _internal_set_unignore(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_IgnoreFriend_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_IgnoreFriend_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t steamid_;
    bool unignore_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_IgnoreFriend_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetPerFriendPreferences_Request final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_GetPerFriendPreferences_Request) */ {
 public:
  inline CPlayer_GetPerFriendPreferences_Request() : CPlayer_GetPerFriendPreferences_Request(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetPerFriendPreferences_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetPerFriendPreferences_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetPerFriendPreferences_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetPerFriendPreferences_Request(const CPlayer_GetPerFriendPreferences_Request& from) : CPlayer_GetPerFriendPreferences_Request(nullptr, from) {}
  inline CPlayer_GetPerFriendPreferences_Request(CPlayer_GetPerFriendPreferences_Request&& from) noexcept
      : CPlayer_GetPerFriendPreferences_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetPerFriendPreferences_Request& operator=(const CPlayer_GetPerFriendPreferences_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetPerFriendPreferences_Request& operator=(CPlayer_GetPerFriendPreferences_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetPerFriendPreferences_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetPerFriendPreferences_Request*>(
        &_CPlayer_GetPerFriendPreferences_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(CPlayer_GetPerFriendPreferences_Request& a, CPlayer_GetPerFriendPreferences_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetPerFriendPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetPerFriendPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetPerFriendPreferences_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_GetPerFriendPreferences_Request>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_GetPerFriendPreferences_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_GetPerFriendPreferences_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetPerFriendPreferences_Request"; }

 protected:
  explicit CPlayer_GetPerFriendPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetPerFriendPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetPerFriendPreferences_Request& from);
  CPlayer_GetPerFriendPreferences_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetPerFriendPreferences_Request&& from) noexcept
      : CPlayer_GetPerFriendPreferences_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_GetPerFriendPreferences_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetPerFriendPreferences_Request& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetPerFriendPreferences_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetNicknameList_Response_PlayerNickname final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetNicknameList_Response.PlayerNickname) */ {
 public:
  inline CPlayer_GetNicknameList_Response_PlayerNickname() : CPlayer_GetNicknameList_Response_PlayerNickname(nullptr) {}
  ~CPlayer_GetNicknameList_Response_PlayerNickname() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetNicknameList_Response_PlayerNickname));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetNicknameList_Response_PlayerNickname(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetNicknameList_Response_PlayerNickname(const CPlayer_GetNicknameList_Response_PlayerNickname& from) : CPlayer_GetNicknameList_Response_PlayerNickname(nullptr, from) {}
  inline CPlayer_GetNicknameList_Response_PlayerNickname(CPlayer_GetNicknameList_Response_PlayerNickname&& from) noexcept
      : CPlayer_GetNicknameList_Response_PlayerNickname(nullptr, std::move(from)) {}
  inline CPlayer_GetNicknameList_Response_PlayerNickname& operator=(const CPlayer_GetNicknameList_Response_PlayerNickname& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetNicknameList_Response_PlayerNickname& operator=(CPlayer_GetNicknameList_Response_PlayerNickname&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetNicknameList_Response_PlayerNickname& default_instance() {
    return *reinterpret_cast<const CPlayer_GetNicknameList_Response_PlayerNickname*>(
        &_CPlayer_GetNicknameList_Response_PlayerNickname_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CPlayer_GetNicknameList_Response_PlayerNickname& a, CPlayer_GetNicknameList_Response_PlayerNickname& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetNicknameList_Response_PlayerNickname>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetNicknameList_Response_PlayerNickname& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetNicknameList_Response_PlayerNickname& from) { CPlayer_GetNicknameList_Response_PlayerNickname::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetNicknameList_Response.PlayerNickname"; }

 protected:
  explicit CPlayer_GetNicknameList_Response_PlayerNickname(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetNicknameList_Response_PlayerNickname(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetNicknameList_Response_PlayerNickname& from);
  CPlayer_GetNicknameList_Response_PlayerNickname(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetNicknameList_Response_PlayerNickname&& from) noexcept
      : CPlayer_GetNicknameList_Response_PlayerNickname(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNicknameFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_nickname();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_nickname();
  void set_allocated_nickname(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_nickname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_nickname();

  public:
  // optional fixed32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid() ;
  ::uint32_t accountid() const;
  void set_accountid(::uint32_t value);

  private:
  ::uint32_t _internal_accountid() const;
  void _internal_set_accountid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetNicknameList_Response.PlayerNickname)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetNicknameList_Response_PlayerNickname& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::uint32_t accountid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNicknameList_Response_PlayerNickname_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetNicknameList_Request final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_GetNicknameList_Request) */ {
 public:
  inline CPlayer_GetNicknameList_Request() : CPlayer_GetNicknameList_Request(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetNicknameList_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetNicknameList_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetNicknameList_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetNicknameList_Request(const CPlayer_GetNicknameList_Request& from) : CPlayer_GetNicknameList_Request(nullptr, from) {}
  inline CPlayer_GetNicknameList_Request(CPlayer_GetNicknameList_Request&& from) noexcept
      : CPlayer_GetNicknameList_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetNicknameList_Request& operator=(const CPlayer_GetNicknameList_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetNicknameList_Request& operator=(CPlayer_GetNicknameList_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetNicknameList_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetNicknameList_Request*>(
        &_CPlayer_GetNicknameList_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CPlayer_GetNicknameList_Request& a, CPlayer_GetNicknameList_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetNicknameList_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetNicknameList_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetNicknameList_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_GetNicknameList_Request>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_GetNicknameList_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_GetNicknameList_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetNicknameList_Request"; }

 protected:
  explicit CPlayer_GetNicknameList_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetNicknameList_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetNicknameList_Request& from);
  CPlayer_GetNicknameList_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetNicknameList_Request&& from) noexcept
      : CPlayer_GetNicknameList_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_GetNicknameList_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetNicknameList_Request& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNicknameList_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetNewSteamAnnouncementState_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetNewSteamAnnouncementState_Response) */ {
 public:
  inline CPlayer_GetNewSteamAnnouncementState_Response() : CPlayer_GetNewSteamAnnouncementState_Response(nullptr) {}
  ~CPlayer_GetNewSteamAnnouncementState_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetNewSteamAnnouncementState_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetNewSteamAnnouncementState_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetNewSteamAnnouncementState_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetNewSteamAnnouncementState_Response(const CPlayer_GetNewSteamAnnouncementState_Response& from) : CPlayer_GetNewSteamAnnouncementState_Response(nullptr, from) {}
  inline CPlayer_GetNewSteamAnnouncementState_Response(CPlayer_GetNewSteamAnnouncementState_Response&& from) noexcept
      : CPlayer_GetNewSteamAnnouncementState_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetNewSteamAnnouncementState_Response& operator=(const CPlayer_GetNewSteamAnnouncementState_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetNewSteamAnnouncementState_Response& operator=(CPlayer_GetNewSteamAnnouncementState_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetNewSteamAnnouncementState_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetNewSteamAnnouncementState_Response*>(
        &_CPlayer_GetNewSteamAnnouncementState_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(CPlayer_GetNewSteamAnnouncementState_Response& a, CPlayer_GetNewSteamAnnouncementState_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetNewSteamAnnouncementState_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetNewSteamAnnouncementState_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetNewSteamAnnouncementState_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetNewSteamAnnouncementState_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetNewSteamAnnouncementState_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetNewSteamAnnouncementState_Response& from) { CPlayer_GetNewSteamAnnouncementState_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetNewSteamAnnouncementState_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetNewSteamAnnouncementState_Response"; }

 protected:
  explicit CPlayer_GetNewSteamAnnouncementState_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetNewSteamAnnouncementState_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetNewSteamAnnouncementState_Response& from);
  CPlayer_GetNewSteamAnnouncementState_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetNewSteamAnnouncementState_Response&& from) noexcept
      : CPlayer_GetNewSteamAnnouncementState_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnnouncementHeadlineFieldNumber = 2,
    kAnnouncementUrlFieldNumber = 3,
    kStateFieldNumber = 1,
    kTimePostedFieldNumber = 4,
    kAnnouncementGidFieldNumber = 5,
  };
  // optional string announcement_headline = 2;
  bool has_announcement_headline() const;
  void clear_announcement_headline() ;
  const std::string& announcement_headline() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_announcement_headline(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_announcement_headline();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_announcement_headline();
  void set_allocated_announcement_headline(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_announcement_headline() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_announcement_headline(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_announcement_headline();

  public:
  // optional string announcement_url = 3;
  bool has_announcement_url() const;
  void clear_announcement_url() ;
  const std::string& announcement_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_announcement_url(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_announcement_url();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_announcement_url();
  void set_allocated_announcement_url(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_announcement_url() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_announcement_url(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_announcement_url();

  public:
  // optional int32 state = 1;
  bool has_state() const;
  void clear_state() ;
  ::int32_t state() const;
  void set_state(::int32_t value);

  private:
  ::int32_t _internal_state() const;
  void _internal_set_state(::int32_t value);

  public:
  // optional uint32 time_posted = 4;
  bool has_time_posted() const;
  void clear_time_posted() ;
  ::uint32_t time_posted() const;
  void set_time_posted(::uint32_t value);

  private:
  ::uint32_t _internal_time_posted() const;
  void _internal_set_time_posted(::uint32_t value);

  public:
  // optional uint64 announcement_gid = 5;
  bool has_announcement_gid() const;
  void clear_announcement_gid() ;
  ::uint64_t announcement_gid() const;
  void set_announcement_gid(::uint64_t value);

  private:
  ::uint64_t _internal_announcement_gid() const;
  void _internal_set_announcement_gid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetNewSteamAnnouncementState_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 91,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetNewSteamAnnouncementState_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr announcement_headline_;
    ::google::protobuf::internal::ArenaStringPtr announcement_url_;
    ::int32_t state_;
    ::uint32_t time_posted_;
    ::uint64_t announcement_gid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNewSteamAnnouncementState_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetNewSteamAnnouncementState_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetNewSteamAnnouncementState_Request) */ {
 public:
  inline CPlayer_GetNewSteamAnnouncementState_Request() : CPlayer_GetNewSteamAnnouncementState_Request(nullptr) {}
  ~CPlayer_GetNewSteamAnnouncementState_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetNewSteamAnnouncementState_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetNewSteamAnnouncementState_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetNewSteamAnnouncementState_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetNewSteamAnnouncementState_Request(const CPlayer_GetNewSteamAnnouncementState_Request& from) : CPlayer_GetNewSteamAnnouncementState_Request(nullptr, from) {}
  inline CPlayer_GetNewSteamAnnouncementState_Request(CPlayer_GetNewSteamAnnouncementState_Request&& from) noexcept
      : CPlayer_GetNewSteamAnnouncementState_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetNewSteamAnnouncementState_Request& operator=(const CPlayer_GetNewSteamAnnouncementState_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetNewSteamAnnouncementState_Request& operator=(CPlayer_GetNewSteamAnnouncementState_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetNewSteamAnnouncementState_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetNewSteamAnnouncementState_Request*>(
        &_CPlayer_GetNewSteamAnnouncementState_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(CPlayer_GetNewSteamAnnouncementState_Request& a, CPlayer_GetNewSteamAnnouncementState_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetNewSteamAnnouncementState_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetNewSteamAnnouncementState_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetNewSteamAnnouncementState_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetNewSteamAnnouncementState_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetNewSteamAnnouncementState_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetNewSteamAnnouncementState_Request& from) { CPlayer_GetNewSteamAnnouncementState_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetNewSteamAnnouncementState_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetNewSteamAnnouncementState_Request"; }

 protected:
  explicit CPlayer_GetNewSteamAnnouncementState_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetNewSteamAnnouncementState_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetNewSteamAnnouncementState_Request& from);
  CPlayer_GetNewSteamAnnouncementState_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetNewSteamAnnouncementState_Request&& from) noexcept
      : CPlayer_GetNewSteamAnnouncementState_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLanguageFieldNumber = 1,
  };
  // optional int32 language = 1;
  bool has_language() const;
  void clear_language() ;
  ::int32_t language() const;
  void set_language(::int32_t value);

  private:
  ::int32_t _internal_language() const;
  void _internal_set_language(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetNewSteamAnnouncementState_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetNewSteamAnnouncementState_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t language_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNewSteamAnnouncementState_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetMutualFriendsForIncomingInvites_Request final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_GetMutualFriendsForIncomingInvites_Request) */ {
 public:
  inline CPlayer_GetMutualFriendsForIncomingInvites_Request() : CPlayer_GetMutualFriendsForIncomingInvites_Request(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetMutualFriendsForIncomingInvites_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetMutualFriendsForIncomingInvites_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetMutualFriendsForIncomingInvites_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetMutualFriendsForIncomingInvites_Request(const CPlayer_GetMutualFriendsForIncomingInvites_Request& from) : CPlayer_GetMutualFriendsForIncomingInvites_Request(nullptr, from) {}
  inline CPlayer_GetMutualFriendsForIncomingInvites_Request(CPlayer_GetMutualFriendsForIncomingInvites_Request&& from) noexcept
      : CPlayer_GetMutualFriendsForIncomingInvites_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetMutualFriendsForIncomingInvites_Request& operator=(const CPlayer_GetMutualFriendsForIncomingInvites_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetMutualFriendsForIncomingInvites_Request& operator=(CPlayer_GetMutualFriendsForIncomingInvites_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetMutualFriendsForIncomingInvites_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetMutualFriendsForIncomingInvites_Request*>(
        &_CPlayer_GetMutualFriendsForIncomingInvites_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CPlayer_GetMutualFriendsForIncomingInvites_Request& a, CPlayer_GetMutualFriendsForIncomingInvites_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetMutualFriendsForIncomingInvites_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetMutualFriendsForIncomingInvites_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetMutualFriendsForIncomingInvites_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_GetMutualFriendsForIncomingInvites_Request>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_GetMutualFriendsForIncomingInvites_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_GetMutualFriendsForIncomingInvites_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetMutualFriendsForIncomingInvites_Request"; }

 protected:
  explicit CPlayer_GetMutualFriendsForIncomingInvites_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetMutualFriendsForIncomingInvites_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetMutualFriendsForIncomingInvites_Request& from);
  CPlayer_GetMutualFriendsForIncomingInvites_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetMutualFriendsForIncomingInvites_Request&& from) noexcept
      : CPlayer_GetMutualFriendsForIncomingInvites_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_GetMutualFriendsForIncomingInvites_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetMutualFriendsForIncomingInvites_Request& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetMutualFriendsForIncomingInvites_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetLastPlayedTimes_Response_Game final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetLastPlayedTimes_Response.Game) */ {
 public:
  inline CPlayer_GetLastPlayedTimes_Response_Game() : CPlayer_GetLastPlayedTimes_Response_Game(nullptr) {}
  ~CPlayer_GetLastPlayedTimes_Response_Game() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetLastPlayedTimes_Response_Game));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetLastPlayedTimes_Response_Game(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetLastPlayedTimes_Response_Game(const CPlayer_GetLastPlayedTimes_Response_Game& from) : CPlayer_GetLastPlayedTimes_Response_Game(nullptr, from) {}
  inline CPlayer_GetLastPlayedTimes_Response_Game(CPlayer_GetLastPlayedTimes_Response_Game&& from) noexcept
      : CPlayer_GetLastPlayedTimes_Response_Game(nullptr, std::move(from)) {}
  inline CPlayer_GetLastPlayedTimes_Response_Game& operator=(const CPlayer_GetLastPlayedTimes_Response_Game& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetLastPlayedTimes_Response_Game& operator=(CPlayer_GetLastPlayedTimes_Response_Game&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetLastPlayedTimes_Response_Game& default_instance() {
    return *reinterpret_cast<const CPlayer_GetLastPlayedTimes_Response_Game*>(
        &_CPlayer_GetLastPlayedTimes_Response_Game_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CPlayer_GetLastPlayedTimes_Response_Game& a, CPlayer_GetLastPlayedTimes_Response_Game& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetLastPlayedTimes_Response_Game>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetLastPlayedTimes_Response_Game& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetLastPlayedTimes_Response_Game& from) { CPlayer_GetLastPlayedTimes_Response_Game::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetLastPlayedTimes_Response.Game"; }

 protected:
  explicit CPlayer_GetLastPlayedTimes_Response_Game(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetLastPlayedTimes_Response_Game(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetLastPlayedTimes_Response_Game& from);
  CPlayer_GetLastPlayedTimes_Response_Game(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetLastPlayedTimes_Response_Game&& from) noexcept
      : CPlayer_GetLastPlayedTimes_Response_Game(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppidFieldNumber = 1,
    kLastPlaytimeFieldNumber = 2,
    kPlaytime2WeeksFieldNumber = 3,
    kPlaytimeForeverFieldNumber = 4,
    kFirstPlaytimeFieldNumber = 5,
  };
  // optional int32 appid = 1;
  bool has_appid() const;
  void clear_appid() ;
  ::int32_t appid() const;
  void set_appid(::int32_t value);

  private:
  ::int32_t _internal_appid() const;
  void _internal_set_appid(::int32_t value);

  public:
  // optional uint32 last_playtime = 2;
  bool has_last_playtime() const;
  void clear_last_playtime() ;
  ::uint32_t last_playtime() const;
  void set_last_playtime(::uint32_t value);

  private:
  ::uint32_t _internal_last_playtime() const;
  void _internal_set_last_playtime(::uint32_t value);

  public:
  // optional int32 playtime_2weeks = 3;
  bool has_playtime_2weeks() const;
  void clear_playtime_2weeks() ;
  ::int32_t playtime_2weeks() const;
  void set_playtime_2weeks(::int32_t value);

  private:
  ::int32_t _internal_playtime_2weeks() const;
  void _internal_set_playtime_2weeks(::int32_t value);

  public:
  // optional int32 playtime_forever = 4;
  bool has_playtime_forever() const;
  void clear_playtime_forever() ;
  ::int32_t playtime_forever() const;
  void set_playtime_forever(::int32_t value);

  private:
  ::int32_t _internal_playtime_forever() const;
  void _internal_set_playtime_forever(::int32_t value);

  public:
  // optional uint32 first_playtime = 5;
  bool has_first_playtime() const;
  void clear_first_playtime() ;
  ::uint32_t first_playtime() const;
  void set_first_playtime(::uint32_t value);

  private:
  ::uint32_t _internal_first_playtime() const;
  void _internal_set_first_playtime(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Response.Game)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetLastPlayedTimes_Response_Game& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t appid_;
    ::uint32_t last_playtime_;
    ::int32_t playtime_2weeks_;
    ::int32_t playtime_forever_;
    ::uint32_t first_playtime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetLastPlayedTimes_Response_Game_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetLastPlayedTimes_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetLastPlayedTimes_Request) */ {
 public:
  inline CPlayer_GetLastPlayedTimes_Request() : CPlayer_GetLastPlayedTimes_Request(nullptr) {}
  ~CPlayer_GetLastPlayedTimes_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetLastPlayedTimes_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetLastPlayedTimes_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetLastPlayedTimes_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetLastPlayedTimes_Request(const CPlayer_GetLastPlayedTimes_Request& from) : CPlayer_GetLastPlayedTimes_Request(nullptr, from) {}
  inline CPlayer_GetLastPlayedTimes_Request(CPlayer_GetLastPlayedTimes_Request&& from) noexcept
      : CPlayer_GetLastPlayedTimes_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetLastPlayedTimes_Request& operator=(const CPlayer_GetLastPlayedTimes_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetLastPlayedTimes_Request& operator=(CPlayer_GetLastPlayedTimes_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetLastPlayedTimes_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetLastPlayedTimes_Request*>(
        &_CPlayer_GetLastPlayedTimes_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CPlayer_GetLastPlayedTimes_Request& a, CPlayer_GetLastPlayedTimes_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetLastPlayedTimes_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetLastPlayedTimes_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetLastPlayedTimes_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetLastPlayedTimes_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetLastPlayedTimes_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetLastPlayedTimes_Request& from) { CPlayer_GetLastPlayedTimes_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetLastPlayedTimes_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetLastPlayedTimes_Request"; }

 protected:
  explicit CPlayer_GetLastPlayedTimes_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetLastPlayedTimes_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetLastPlayedTimes_Request& from);
  CPlayer_GetLastPlayedTimes_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetLastPlayedTimes_Request&& from) noexcept
      : CPlayer_GetLastPlayedTimes_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinLastPlayedFieldNumber = 1,
  };
  // optional uint32 min_last_played = 1 [(.description) = "The most recent last-played time the client already knows about"];
  bool has_min_last_played() const;
  void clear_min_last_played() ;
  ::uint32_t min_last_played() const;
  void set_min_last_played(::uint32_t value);

  private:
  ::uint32_t _internal_min_last_played() const;
  void _internal_set_min_last_played(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetLastPlayedTimes_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t min_last_played_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetLastPlayedTimes_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetGameBadgeLevels_Response_Badge final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetGameBadgeLevels_Response.Badge) */ {
 public:
  inline CPlayer_GetGameBadgeLevels_Response_Badge() : CPlayer_GetGameBadgeLevels_Response_Badge(nullptr) {}
  ~CPlayer_GetGameBadgeLevels_Response_Badge() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetGameBadgeLevels_Response_Badge));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetGameBadgeLevels_Response_Badge(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetGameBadgeLevels_Response_Badge(const CPlayer_GetGameBadgeLevels_Response_Badge& from) : CPlayer_GetGameBadgeLevels_Response_Badge(nullptr, from) {}
  inline CPlayer_GetGameBadgeLevels_Response_Badge(CPlayer_GetGameBadgeLevels_Response_Badge&& from) noexcept
      : CPlayer_GetGameBadgeLevels_Response_Badge(nullptr, std::move(from)) {}
  inline CPlayer_GetGameBadgeLevels_Response_Badge& operator=(const CPlayer_GetGameBadgeLevels_Response_Badge& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetGameBadgeLevels_Response_Badge& operator=(CPlayer_GetGameBadgeLevels_Response_Badge&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetGameBadgeLevels_Response_Badge& default_instance() {
    return *reinterpret_cast<const CPlayer_GetGameBadgeLevels_Response_Badge*>(
        &_CPlayer_GetGameBadgeLevels_Response_Badge_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CPlayer_GetGameBadgeLevels_Response_Badge& a, CPlayer_GetGameBadgeLevels_Response_Badge& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetGameBadgeLevels_Response_Badge>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetGameBadgeLevels_Response_Badge& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetGameBadgeLevels_Response_Badge& from) { CPlayer_GetGameBadgeLevels_Response_Badge::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetGameBadgeLevels_Response.Badge"; }

 protected:
  explicit CPlayer_GetGameBadgeLevels_Response_Badge(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetGameBadgeLevels_Response_Badge(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetGameBadgeLevels_Response_Badge& from);
  CPlayer_GetGameBadgeLevels_Response_Badge(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetGameBadgeLevels_Response_Badge&& from) noexcept
      : CPlayer_GetGameBadgeLevels_Response_Badge(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLevelFieldNumber = 1,
    kSeriesFieldNumber = 2,
    kBorderColorFieldNumber = 3,
  };
  // optional int32 level = 1;
  bool has_level() const;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // optional int32 series = 2;
  bool has_series() const;
  void clear_series() ;
  ::int32_t series() const;
  void set_series(::int32_t value);

  private:
  ::int32_t _internal_series() const;
  void _internal_set_series(::int32_t value);

  public:
  // optional uint32 border_color = 3;
  bool has_border_color() const;
  void clear_border_color() ;
  ::uint32_t border_color() const;
  void set_border_color(::uint32_t value);

  private:
  ::uint32_t _internal_border_color() const;
  void _internal_set_border_color(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Response.Badge)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetGameBadgeLevels_Response_Badge& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t level_;
    ::int32_t series_;
    ::uint32_t border_color_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetGameBadgeLevels_Response_Badge_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetGameBadgeLevels_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetGameBadgeLevels_Request) */ {
 public:
  inline CPlayer_GetGameBadgeLevels_Request() : CPlayer_GetGameBadgeLevels_Request(nullptr) {}
  ~CPlayer_GetGameBadgeLevels_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetGameBadgeLevels_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetGameBadgeLevels_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetGameBadgeLevels_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetGameBadgeLevels_Request(const CPlayer_GetGameBadgeLevels_Request& from) : CPlayer_GetGameBadgeLevels_Request(nullptr, from) {}
  inline CPlayer_GetGameBadgeLevels_Request(CPlayer_GetGameBadgeLevels_Request&& from) noexcept
      : CPlayer_GetGameBadgeLevels_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetGameBadgeLevels_Request& operator=(const CPlayer_GetGameBadgeLevels_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetGameBadgeLevels_Request& operator=(CPlayer_GetGameBadgeLevels_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetGameBadgeLevels_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetGameBadgeLevels_Request*>(
        &_CPlayer_GetGameBadgeLevels_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CPlayer_GetGameBadgeLevels_Request& a, CPlayer_GetGameBadgeLevels_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetGameBadgeLevels_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetGameBadgeLevels_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetGameBadgeLevels_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetGameBadgeLevels_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetGameBadgeLevels_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetGameBadgeLevels_Request& from) { CPlayer_GetGameBadgeLevels_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetGameBadgeLevels_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetGameBadgeLevels_Request"; }

 protected:
  explicit CPlayer_GetGameBadgeLevels_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetGameBadgeLevels_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetGameBadgeLevels_Request& from);
  CPlayer_GetGameBadgeLevels_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetGameBadgeLevels_Request&& from) noexcept
      : CPlayer_GetGameBadgeLevels_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetGameBadgeLevels_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetGameBadgeLevels_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo) */ {
 public:
  inline CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo() : CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(nullptr) {}
  ~CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& from) : CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(nullptr, from) {}
  inline CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(nullptr, std::move(from)) {}
  inline CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& operator=(const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& operator=(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& default_instance() {
    return *reinterpret_cast<const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo*>(
        &_CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& a, CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& from) { CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo"; }

 protected:
  explicit CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& from);
  CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSteamidFieldNumber = 1,
    kMinutesPlayedFieldNumber = 2,
    kMinutesPlayedForeverFieldNumber = 3,
    kInWishlistFieldNumber = 4,
    kOwnedFieldNumber = 5,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // optional uint32 minutes_played = 2;
  bool has_minutes_played() const;
  void clear_minutes_played() ;
  ::uint32_t minutes_played() const;
  void set_minutes_played(::uint32_t value);

  private:
  ::uint32_t _internal_minutes_played() const;
  void _internal_set_minutes_played(::uint32_t value);

  public:
  // optional uint32 minutes_played_forever = 3;
  bool has_minutes_played_forever() const;
  void clear_minutes_played_forever() ;
  ::uint32_t minutes_played_forever() const;
  void set_minutes_played_forever(::uint32_t value);

  private:
  ::uint32_t _internal_minutes_played_forever() const;
  void _internal_set_minutes_played_forever(::uint32_t value);

  public:
  // optional bool in_wishlist = 4;
  bool has_in_wishlist() const;
  void clear_in_wishlist() ;
  bool in_wishlist() const;
  void set_in_wishlist(bool value);

  private:
  bool _internal_in_wishlist() const;
  void _internal_set_in_wishlist(bool value);

  public:
  // optional bool owned = 5;
  bool has_owned() const;
  void clear_owned() ;
  bool owned() const;
  void set_owned(bool value);

  private:
  bool _internal_owned() const;
  void _internal_set_owned(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t steamid_;
    ::uint32_t minutes_played_;
    ::uint32_t minutes_played_forever_;
    bool in_wishlist_;
    bool owned_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo) */ {
 public:
  inline CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo() : CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(nullptr) {}
  ~CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& from) : CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(nullptr, from) {}
  inline CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(nullptr, std::move(from)) {}
  inline CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& operator=(const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& operator=(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& default_instance() {
    return *reinterpret_cast<const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo*>(
        &_CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& a, CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& from) { CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo"; }

 protected:
  explicit CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& from);
  CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSteamidFieldNumber = 1,
    kMinutesPlayedFieldNumber = 2,
    kMinutesPlayedForeverFieldNumber = 3,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // optional uint32 minutes_played = 2;
  bool has_minutes_played() const;
  void clear_minutes_played() ;
  ::uint32_t minutes_played() const;
  void set_minutes_played(::uint32_t value);

  private:
  ::uint32_t _internal_minutes_played() const;
  void _internal_set_minutes_played(::uint32_t value);

  public:
  // optional uint32 minutes_played_forever = 3;
  bool has_minutes_played_forever() const;
  void clear_minutes_played_forever() ;
  ::uint32_t minutes_played_forever() const;
  void set_minutes_played_forever(::uint32_t value);

  private:
  ::uint32_t _internal_minutes_played_forever() const;
  void _internal_set_minutes_played_forever(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t steamid_;
    ::uint32_t minutes_played_;
    ::uint32_t minutes_played_forever_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetFriendsGameplayInfo_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetFriendsGameplayInfo_Request) */ {
 public:
  inline CPlayer_GetFriendsGameplayInfo_Request() : CPlayer_GetFriendsGameplayInfo_Request(nullptr) {}
  ~CPlayer_GetFriendsGameplayInfo_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetFriendsGameplayInfo_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetFriendsGameplayInfo_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetFriendsGameplayInfo_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetFriendsGameplayInfo_Request(const CPlayer_GetFriendsGameplayInfo_Request& from) : CPlayer_GetFriendsGameplayInfo_Request(nullptr, from) {}
  inline CPlayer_GetFriendsGameplayInfo_Request(CPlayer_GetFriendsGameplayInfo_Request&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetFriendsGameplayInfo_Request& operator=(const CPlayer_GetFriendsGameplayInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetFriendsGameplayInfo_Request& operator=(CPlayer_GetFriendsGameplayInfo_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetFriendsGameplayInfo_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetFriendsGameplayInfo_Request*>(
        &_CPlayer_GetFriendsGameplayInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CPlayer_GetFriendsGameplayInfo_Request& a, CPlayer_GetFriendsGameplayInfo_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetFriendsGameplayInfo_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetFriendsGameplayInfo_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetFriendsGameplayInfo_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetFriendsGameplayInfo_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetFriendsGameplayInfo_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetFriendsGameplayInfo_Request& from) { CPlayer_GetFriendsGameplayInfo_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetFriendsGameplayInfo_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetFriendsGameplayInfo_Request"; }

 protected:
  explicit CPlayer_GetFriendsGameplayInfo_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetFriendsGameplayInfo_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetFriendsGameplayInfo_Request& from);
  CPlayer_GetFriendsGameplayInfo_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetFriendsGameplayInfo_Request&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetFriendsGameplayInfo_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetFriendsGameplayInfo_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetCommunityPreferences_Request final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_GetCommunityPreferences_Request) */ {
 public:
  inline CPlayer_GetCommunityPreferences_Request() : CPlayer_GetCommunityPreferences_Request(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetCommunityPreferences_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetCommunityPreferences_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetCommunityPreferences_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetCommunityPreferences_Request(const CPlayer_GetCommunityPreferences_Request& from) : CPlayer_GetCommunityPreferences_Request(nullptr, from) {}
  inline CPlayer_GetCommunityPreferences_Request(CPlayer_GetCommunityPreferences_Request&& from) noexcept
      : CPlayer_GetCommunityPreferences_Request(nullptr, std::move(from)) {}
  inline CPlayer_GetCommunityPreferences_Request& operator=(const CPlayer_GetCommunityPreferences_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetCommunityPreferences_Request& operator=(CPlayer_GetCommunityPreferences_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetCommunityPreferences_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_GetCommunityPreferences_Request*>(
        &_CPlayer_GetCommunityPreferences_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(CPlayer_GetCommunityPreferences_Request& a, CPlayer_GetCommunityPreferences_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetCommunityPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetCommunityPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetCommunityPreferences_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_GetCommunityPreferences_Request>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_GetCommunityPreferences_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_GetCommunityPreferences_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetCommunityPreferences_Request"; }

 protected:
  explicit CPlayer_GetCommunityPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetCommunityPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetCommunityPreferences_Request& from);
  CPlayer_GetCommunityPreferences_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetCommunityPreferences_Request&& from) noexcept
      : CPlayer_GetCommunityPreferences_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_GetCommunityPreferences_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetCommunityPreferences_Request& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetCommunityPreferences_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_CommunityPreferences final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_CommunityPreferences) */ {
 public:
  inline CPlayer_CommunityPreferences() : CPlayer_CommunityPreferences(nullptr) {}
  ~CPlayer_CommunityPreferences() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_CommunityPreferences* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_CommunityPreferences));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_CommunityPreferences(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_CommunityPreferences(const CPlayer_CommunityPreferences& from) : CPlayer_CommunityPreferences(nullptr, from) {}
  inline CPlayer_CommunityPreferences(CPlayer_CommunityPreferences&& from) noexcept
      : CPlayer_CommunityPreferences(nullptr, std::move(from)) {}
  inline CPlayer_CommunityPreferences& operator=(const CPlayer_CommunityPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_CommunityPreferences& operator=(CPlayer_CommunityPreferences&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_CommunityPreferences& default_instance() {
    return *reinterpret_cast<const CPlayer_CommunityPreferences*>(
        &_CPlayer_CommunityPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(CPlayer_CommunityPreferences& a, CPlayer_CommunityPreferences& b) { a.Swap(&b); }
  inline void Swap(CPlayer_CommunityPreferences* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_CommunityPreferences* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_CommunityPreferences* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_CommunityPreferences>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_CommunityPreferences& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_CommunityPreferences& from) { CPlayer_CommunityPreferences::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_CommunityPreferences* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_CommunityPreferences"; }

 protected:
  explicit CPlayer_CommunityPreferences(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_CommunityPreferences(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_CommunityPreferences& from);
  CPlayer_CommunityPreferences(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_CommunityPreferences&& from) noexcept
      : CPlayer_CommunityPreferences(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampUpdatedFieldNumber = 3,
    kParenthesizeNicknamesFieldNumber = 4,
    kHideAdultContentViolenceFieldNumber = 1,
    kHideAdultContentSexFieldNumber = 2,
  };
  // optional uint32 timestamp_updated = 3;
  bool has_timestamp_updated() const;
  void clear_timestamp_updated() ;
  ::uint32_t timestamp_updated() const;
  void set_timestamp_updated(::uint32_t value);

  private:
  ::uint32_t _internal_timestamp_updated() const;
  void _internal_set_timestamp_updated(::uint32_t value);

  public:
  // optional bool parenthesize_nicknames = 4 [default = false];
  bool has_parenthesize_nicknames() const;
  void clear_parenthesize_nicknames() ;
  bool parenthesize_nicknames() const;
  void set_parenthesize_nicknames(bool value);

  private:
  bool _internal_parenthesize_nicknames() const;
  void _internal_set_parenthesize_nicknames(bool value);

  public:
  // optional bool hide_adult_content_violence = 1 [default = true];
  bool has_hide_adult_content_violence() const;
  void clear_hide_adult_content_violence() ;
  bool hide_adult_content_violence() const;
  void set_hide_adult_content_violence(bool value);

  private:
  bool _internal_hide_adult_content_violence() const;
  void _internal_set_hide_adult_content_violence(bool value);

  public:
  // optional bool hide_adult_content_sex = 2 [default = true];
  bool has_hide_adult_content_sex() const;
  void clear_hide_adult_content_sex() ;
  bool hide_adult_content_sex() const;
  void set_hide_adult_content_sex(bool value);

  private:
  bool _internal_hide_adult_content_sex() const;
  void _internal_set_hide_adult_content_sex(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_CommunityPreferences)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_CommunityPreferences& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t timestamp_updated_;
    bool parenthesize_nicknames_;
    bool hide_adult_content_violence_;
    bool hide_adult_content_sex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_CommunityPreferences_class_data_;
// -------------------------------------------------------------------

class CPlayer_AddFriend_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_AddFriend_Response) */ {
 public:
  inline CPlayer_AddFriend_Response() : CPlayer_AddFriend_Response(nullptr) {}
  ~CPlayer_AddFriend_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_AddFriend_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_AddFriend_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_AddFriend_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_AddFriend_Response(const CPlayer_AddFriend_Response& from) : CPlayer_AddFriend_Response(nullptr, from) {}
  inline CPlayer_AddFriend_Response(CPlayer_AddFriend_Response&& from) noexcept
      : CPlayer_AddFriend_Response(nullptr, std::move(from)) {}
  inline CPlayer_AddFriend_Response& operator=(const CPlayer_AddFriend_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_AddFriend_Response& operator=(CPlayer_AddFriend_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_AddFriend_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_AddFriend_Response*>(
        &_CPlayer_AddFriend_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CPlayer_AddFriend_Response& a, CPlayer_AddFriend_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_AddFriend_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_AddFriend_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_AddFriend_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_AddFriend_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_AddFriend_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_AddFriend_Response& from) { CPlayer_AddFriend_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_AddFriend_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_AddFriend_Response"; }

 protected:
  explicit CPlayer_AddFriend_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_AddFriend_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_AddFriend_Response& from);
  CPlayer_AddFriend_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_AddFriend_Response&& from) noexcept
      : CPlayer_AddFriend_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInviteSentFieldNumber = 1,
    kFriendRelationshipFieldNumber = 2,
  };
  // optional bool invite_sent = 1 [(.description) = "True if the operation was successful, false otherwise."];
  bool has_invite_sent() const;
  void clear_invite_sent() ;
  bool invite_sent() const;
  void set_invite_sent(bool value);

  private:
  bool _internal_invite_sent() const;
  void _internal_set_invite_sent(bool value);

  public:
  // optional uint32 friend_relationship = 2 [(.description) = "the resulting relationship.  Depending on state, may move directly to friends rather than invite sent"];
  bool has_friend_relationship() const;
  void clear_friend_relationship() ;
  ::uint32_t friend_relationship() const;
  void set_friend_relationship(::uint32_t value);

  private:
  ::uint32_t _internal_friend_relationship() const;
  void _internal_set_friend_relationship(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_AddFriend_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_AddFriend_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool invite_sent_;
    ::uint32_t friend_relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_AddFriend_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_AddFriend_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_AddFriend_Request) */ {
 public:
  inline CPlayer_AddFriend_Request() : CPlayer_AddFriend_Request(nullptr) {}
  ~CPlayer_AddFriend_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_AddFriend_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_AddFriend_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_AddFriend_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_AddFriend_Request(const CPlayer_AddFriend_Request& from) : CPlayer_AddFriend_Request(nullptr, from) {}
  inline CPlayer_AddFriend_Request(CPlayer_AddFriend_Request&& from) noexcept
      : CPlayer_AddFriend_Request(nullptr, std::move(from)) {}
  inline CPlayer_AddFriend_Request& operator=(const CPlayer_AddFriend_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_AddFriend_Request& operator=(CPlayer_AddFriend_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_AddFriend_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_AddFriend_Request*>(
        &_CPlayer_AddFriend_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(CPlayer_AddFriend_Request& a, CPlayer_AddFriend_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_AddFriend_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_AddFriend_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_AddFriend_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_AddFriend_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_AddFriend_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_AddFriend_Request& from) { CPlayer_AddFriend_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_AddFriend_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_AddFriend_Request"; }

 protected:
  explicit CPlayer_AddFriend_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_AddFriend_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_AddFriend_Request& from);
  CPlayer_AddFriend_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_AddFriend_Request&& from) noexcept
      : CPlayer_AddFriend_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSteamidFieldNumber = 1,
  };
  // optional fixed64 steamid = 1 [(.description) = "Steam ID of user to whom to send a friend invite."];
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_AddFriend_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_AddFriend_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t steamid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_AddFriend_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_AcceptSSA_Response final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_AcceptSSA_Response) */ {
 public:
  inline CPlayer_AcceptSSA_Response() : CPlayer_AcceptSSA_Response(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_AcceptSSA_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_AcceptSSA_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_AcceptSSA_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_AcceptSSA_Response(const CPlayer_AcceptSSA_Response& from) : CPlayer_AcceptSSA_Response(nullptr, from) {}
  inline CPlayer_AcceptSSA_Response(CPlayer_AcceptSSA_Response&& from) noexcept
      : CPlayer_AcceptSSA_Response(nullptr, std::move(from)) {}
  inline CPlayer_AcceptSSA_Response& operator=(const CPlayer_AcceptSSA_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_AcceptSSA_Response& operator=(CPlayer_AcceptSSA_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_AcceptSSA_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_AcceptSSA_Response*>(
        &_CPlayer_AcceptSSA_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(CPlayer_AcceptSSA_Response& a, CPlayer_AcceptSSA_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_AcceptSSA_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_AcceptSSA_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_AcceptSSA_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_AcceptSSA_Response>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_AcceptSSA_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_AcceptSSA_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_AcceptSSA_Response"; }

 protected:
  explicit CPlayer_AcceptSSA_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_AcceptSSA_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_AcceptSSA_Response& from);
  CPlayer_AcceptSSA_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_AcceptSSA_Response&& from) noexcept
      : CPlayer_AcceptSSA_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_AcceptSSA_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_AcceptSSA_Response& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_AcceptSSA_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_AcceptSSA_Request final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CPlayer_AcceptSSA_Request) */ {
 public:
  inline CPlayer_AcceptSSA_Request() : CPlayer_AcceptSSA_Request(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_AcceptSSA_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_AcceptSSA_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_AcceptSSA_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_AcceptSSA_Request(const CPlayer_AcceptSSA_Request& from) : CPlayer_AcceptSSA_Request(nullptr, from) {}
  inline CPlayer_AcceptSSA_Request(CPlayer_AcceptSSA_Request&& from) noexcept
      : CPlayer_AcceptSSA_Request(nullptr, std::move(from)) {}
  inline CPlayer_AcceptSSA_Request& operator=(const CPlayer_AcceptSSA_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_AcceptSSA_Request& operator=(CPlayer_AcceptSSA_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_AcceptSSA_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_AcceptSSA_Request*>(
        &_CPlayer_AcceptSSA_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(CPlayer_AcceptSSA_Request& a, CPlayer_AcceptSSA_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_AcceptSSA_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_AcceptSSA_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_AcceptSSA_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CPlayer_AcceptSSA_Request>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CPlayer_AcceptSSA_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CPlayer_AcceptSSA_Request& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_AcceptSSA_Request"; }

 protected:
  explicit CPlayer_AcceptSSA_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_AcceptSSA_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_AcceptSSA_Request& from);
  CPlayer_AcceptSSA_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_AcceptSSA_Request&& from) noexcept
      : CPlayer_AcceptSSA_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CPlayer_AcceptSSA_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_AcceptSSA_Request& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_AcceptSSA_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_SetPerFriendPreferences_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_SetPerFriendPreferences_Request) */ {
 public:
  inline CPlayer_SetPerFriendPreferences_Request() : CPlayer_SetPerFriendPreferences_Request(nullptr) {}
  ~CPlayer_SetPerFriendPreferences_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_SetPerFriendPreferences_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_SetPerFriendPreferences_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_SetPerFriendPreferences_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_SetPerFriendPreferences_Request(const CPlayer_SetPerFriendPreferences_Request& from) : CPlayer_SetPerFriendPreferences_Request(nullptr, from) {}
  inline CPlayer_SetPerFriendPreferences_Request(CPlayer_SetPerFriendPreferences_Request&& from) noexcept
      : CPlayer_SetPerFriendPreferences_Request(nullptr, std::move(from)) {}
  inline CPlayer_SetPerFriendPreferences_Request& operator=(const CPlayer_SetPerFriendPreferences_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_SetPerFriendPreferences_Request& operator=(CPlayer_SetPerFriendPreferences_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_SetPerFriendPreferences_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_SetPerFriendPreferences_Request*>(
        &_CPlayer_SetPerFriendPreferences_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CPlayer_SetPerFriendPreferences_Request& a, CPlayer_SetPerFriendPreferences_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_SetPerFriendPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_SetPerFriendPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_SetPerFriendPreferences_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_SetPerFriendPreferences_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_SetPerFriendPreferences_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_SetPerFriendPreferences_Request& from) { CPlayer_SetPerFriendPreferences_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_SetPerFriendPreferences_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_SetPerFriendPreferences_Request"; }

 protected:
  explicit CPlayer_SetPerFriendPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_SetPerFriendPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_SetPerFriendPreferences_Request& from);
  CPlayer_SetPerFriendPreferences_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_SetPerFriendPreferences_Request&& from) noexcept
      : CPlayer_SetPerFriendPreferences_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreferencesFieldNumber = 1,
  };
  // optional .PerFriendPreferences preferences = 1;
  bool has_preferences() const;
  void clear_preferences() ;
  const ::PerFriendPreferences& preferences() const;
  [[nodiscard]] ::PerFriendPreferences* PROTOBUF_NULLABLE release_preferences();
  ::PerFriendPreferences* PROTOBUF_NONNULL mutable_preferences();
  void set_allocated_preferences(::PerFriendPreferences* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_preferences(::PerFriendPreferences* PROTOBUF_NULLABLE value);
  ::PerFriendPreferences* PROTOBUF_NULLABLE unsafe_arena_release_preferences();

  private:
  const ::PerFriendPreferences& _internal_preferences() const;
  ::PerFriendPreferences* PROTOBUF_NONNULL _internal_mutable_preferences();

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_SetPerFriendPreferences_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_SetPerFriendPreferences_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::PerFriendPreferences* PROTOBUF_NULLABLE preferences_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetPerFriendPreferences_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_SetCommunityPreferences_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_SetCommunityPreferences_Request) */ {
 public:
  inline CPlayer_SetCommunityPreferences_Request() : CPlayer_SetCommunityPreferences_Request(nullptr) {}
  ~CPlayer_SetCommunityPreferences_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_SetCommunityPreferences_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_SetCommunityPreferences_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_SetCommunityPreferences_Request(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_SetCommunityPreferences_Request(const CPlayer_SetCommunityPreferences_Request& from) : CPlayer_SetCommunityPreferences_Request(nullptr, from) {}
  inline CPlayer_SetCommunityPreferences_Request(CPlayer_SetCommunityPreferences_Request&& from) noexcept
      : CPlayer_SetCommunityPreferences_Request(nullptr, std::move(from)) {}
  inline CPlayer_SetCommunityPreferences_Request& operator=(const CPlayer_SetCommunityPreferences_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_SetCommunityPreferences_Request& operator=(CPlayer_SetCommunityPreferences_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_SetCommunityPreferences_Request& default_instance() {
    return *reinterpret_cast<const CPlayer_SetCommunityPreferences_Request*>(
        &_CPlayer_SetCommunityPreferences_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(CPlayer_SetCommunityPreferences_Request& a, CPlayer_SetCommunityPreferences_Request& b) { a.Swap(&b); }
  inline void Swap(CPlayer_SetCommunityPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_SetCommunityPreferences_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_SetCommunityPreferences_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_SetCommunityPreferences_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_SetCommunityPreferences_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_SetCommunityPreferences_Request& from) { CPlayer_SetCommunityPreferences_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_SetCommunityPreferences_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_SetCommunityPreferences_Request"; }

 protected:
  explicit CPlayer_SetCommunityPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_SetCommunityPreferences_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_SetCommunityPreferences_Request& from);
  CPlayer_SetCommunityPreferences_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_SetCommunityPreferences_Request&& from) noexcept
      : CPlayer_SetCommunityPreferences_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreferencesFieldNumber = 1,
  };
  // optional .CPlayer_CommunityPreferences preferences = 1;
  bool has_preferences() const;
  void clear_preferences() ;
  const ::CPlayer_CommunityPreferences& preferences() const;
  [[nodiscard]] ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE release_preferences();
  ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL mutable_preferences();
  void set_allocated_preferences(::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_preferences(::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value);
  ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE unsafe_arena_release_preferences();

  private:
  const ::CPlayer_CommunityPreferences& _internal_preferences() const;
  ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL _internal_mutable_preferences();

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_SetCommunityPreferences_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_SetCommunityPreferences_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE preferences_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_SetCommunityPreferences_Request_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetPerFriendPreferences_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetPerFriendPreferences_Response) */ {
 public:
  inline CPlayer_GetPerFriendPreferences_Response() : CPlayer_GetPerFriendPreferences_Response(nullptr) {}
  ~CPlayer_GetPerFriendPreferences_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetPerFriendPreferences_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetPerFriendPreferences_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetPerFriendPreferences_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetPerFriendPreferences_Response(const CPlayer_GetPerFriendPreferences_Response& from) : CPlayer_GetPerFriendPreferences_Response(nullptr, from) {}
  inline CPlayer_GetPerFriendPreferences_Response(CPlayer_GetPerFriendPreferences_Response&& from) noexcept
      : CPlayer_GetPerFriendPreferences_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetPerFriendPreferences_Response& operator=(const CPlayer_GetPerFriendPreferences_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetPerFriendPreferences_Response& operator=(CPlayer_GetPerFriendPreferences_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetPerFriendPreferences_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetPerFriendPreferences_Response*>(
        &_CPlayer_GetPerFriendPreferences_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CPlayer_GetPerFriendPreferences_Response& a, CPlayer_GetPerFriendPreferences_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetPerFriendPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetPerFriendPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetPerFriendPreferences_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetPerFriendPreferences_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetPerFriendPreferences_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetPerFriendPreferences_Response& from) { CPlayer_GetPerFriendPreferences_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetPerFriendPreferences_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetPerFriendPreferences_Response"; }

 protected:
  explicit CPlayer_GetPerFriendPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetPerFriendPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetPerFriendPreferences_Response& from);
  CPlayer_GetPerFriendPreferences_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetPerFriendPreferences_Response&& from) noexcept
      : CPlayer_GetPerFriendPreferences_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreferencesFieldNumber = 1,
  };
  // repeated .PerFriendPreferences preferences = 1;
  int preferences_size() const;
  private:
  int _internal_preferences_size() const;

  public:
  void clear_preferences() ;
  ::PerFriendPreferences* PROTOBUF_NONNULL mutable_preferences(int index);
  ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>* PROTOBUF_NONNULL mutable_preferences();

  private:
  const ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>& _internal_preferences() const;
  ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>* PROTOBUF_NONNULL _internal_mutable_preferences();
  public:
  const ::PerFriendPreferences& preferences(int index) const;
  ::PerFriendPreferences* PROTOBUF_NONNULL add_preferences();
  const ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>& preferences() const;
  // @@protoc_insertion_point(class_scope:CPlayer_GetPerFriendPreferences_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetPerFriendPreferences_Response& from_msg);
    ::google::protobuf::RepeatedPtrField< ::PerFriendPreferences > preferences_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetPerFriendPreferences_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetNicknameList_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetNicknameList_Response) */ {
 public:
  inline CPlayer_GetNicknameList_Response() : CPlayer_GetNicknameList_Response(nullptr) {}
  ~CPlayer_GetNicknameList_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetNicknameList_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetNicknameList_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetNicknameList_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetNicknameList_Response(const CPlayer_GetNicknameList_Response& from) : CPlayer_GetNicknameList_Response(nullptr, from) {}
  inline CPlayer_GetNicknameList_Response(CPlayer_GetNicknameList_Response&& from) noexcept
      : CPlayer_GetNicknameList_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetNicknameList_Response& operator=(const CPlayer_GetNicknameList_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetNicknameList_Response& operator=(CPlayer_GetNicknameList_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetNicknameList_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetNicknameList_Response*>(
        &_CPlayer_GetNicknameList_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CPlayer_GetNicknameList_Response& a, CPlayer_GetNicknameList_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetNicknameList_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetNicknameList_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetNicknameList_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetNicknameList_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetNicknameList_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetNicknameList_Response& from) { CPlayer_GetNicknameList_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetNicknameList_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetNicknameList_Response"; }

 protected:
  explicit CPlayer_GetNicknameList_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetNicknameList_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetNicknameList_Response& from);
  CPlayer_GetNicknameList_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetNicknameList_Response&& from) noexcept
      : CPlayer_GetNicknameList_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PlayerNickname = CPlayer_GetNicknameList_Response_PlayerNickname;

  // accessors -------------------------------------------------------
  enum : int {
    kNicknamesFieldNumber = 1,
  };
  // repeated .CPlayer_GetNicknameList_Response.PlayerNickname nicknames = 1;
  int nicknames_size() const;
  private:
  int _internal_nicknames_size() const;

  public:
  void clear_nicknames() ;
  ::CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL mutable_nicknames(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>* PROTOBUF_NONNULL mutable_nicknames();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>& _internal_nicknames() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>* PROTOBUF_NONNULL _internal_mutable_nicknames();
  public:
  const ::CPlayer_GetNicknameList_Response_PlayerNickname& nicknames(int index) const;
  ::CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL add_nicknames();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>& nicknames() const;
  // @@protoc_insertion_point(class_scope:CPlayer_GetNicknameList_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetNicknameList_Response& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetNicknameList_Response_PlayerNickname > nicknames_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetNicknameList_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetMutualFriendsForIncomingInvites_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetMutualFriendsForIncomingInvites_Response) */ {
 public:
  inline CPlayer_GetMutualFriendsForIncomingInvites_Response() : CPlayer_GetMutualFriendsForIncomingInvites_Response(nullptr) {}
  ~CPlayer_GetMutualFriendsForIncomingInvites_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetMutualFriendsForIncomingInvites_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetMutualFriendsForIncomingInvites_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetMutualFriendsForIncomingInvites_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetMutualFriendsForIncomingInvites_Response(const CPlayer_GetMutualFriendsForIncomingInvites_Response& from) : CPlayer_GetMutualFriendsForIncomingInvites_Response(nullptr, from) {}
  inline CPlayer_GetMutualFriendsForIncomingInvites_Response(CPlayer_GetMutualFriendsForIncomingInvites_Response&& from) noexcept
      : CPlayer_GetMutualFriendsForIncomingInvites_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetMutualFriendsForIncomingInvites_Response& operator=(const CPlayer_GetMutualFriendsForIncomingInvites_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetMutualFriendsForIncomingInvites_Response& operator=(CPlayer_GetMutualFriendsForIncomingInvites_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetMutualFriendsForIncomingInvites_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetMutualFriendsForIncomingInvites_Response*>(
        &_CPlayer_GetMutualFriendsForIncomingInvites_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CPlayer_GetMutualFriendsForIncomingInvites_Response& a, CPlayer_GetMutualFriendsForIncomingInvites_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetMutualFriendsForIncomingInvites_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetMutualFriendsForIncomingInvites_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetMutualFriendsForIncomingInvites_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetMutualFriendsForIncomingInvites_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetMutualFriendsForIncomingInvites_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetMutualFriendsForIncomingInvites_Response& from) { CPlayer_GetMutualFriendsForIncomingInvites_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetMutualFriendsForIncomingInvites_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetMutualFriendsForIncomingInvites_Response"; }

 protected:
  explicit CPlayer_GetMutualFriendsForIncomingInvites_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetMutualFriendsForIncomingInvites_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetMutualFriendsForIncomingInvites_Response& from);
  CPlayer_GetMutualFriendsForIncomingInvites_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetMutualFriendsForIncomingInvites_Response&& from) noexcept
      : CPlayer_GetMutualFriendsForIncomingInvites_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIncomingInviteMutualFriendsListsFieldNumber = 1,
  };
  // repeated .CPlayer_IncomingInviteMutualFriendList incoming_invite_mutual_friends_lists = 1;
  int incoming_invite_mutual_friends_lists_size() const;
  private:
  int _internal_incoming_invite_mutual_friends_lists_size() const;

  public:
  void clear_incoming_invite_mutual_friends_lists() ;
  ::CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL mutable_incoming_invite_mutual_friends_lists(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>* PROTOBUF_NONNULL mutable_incoming_invite_mutual_friends_lists();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>& _internal_incoming_invite_mutual_friends_lists() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>* PROTOBUF_NONNULL _internal_mutable_incoming_invite_mutual_friends_lists();
  public:
  const ::CPlayer_IncomingInviteMutualFriendList& incoming_invite_mutual_friends_lists(int index) const;
  ::CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL add_incoming_invite_mutual_friends_lists();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>& incoming_invite_mutual_friends_lists() const;
  // @@protoc_insertion_point(class_scope:CPlayer_GetMutualFriendsForIncomingInvites_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetMutualFriendsForIncomingInvites_Response& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CPlayer_IncomingInviteMutualFriendList > incoming_invite_mutual_friends_lists_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetMutualFriendsForIncomingInvites_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetLastPlayedTimes_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetLastPlayedTimes_Response) */ {
 public:
  inline CPlayer_GetLastPlayedTimes_Response() : CPlayer_GetLastPlayedTimes_Response(nullptr) {}
  ~CPlayer_GetLastPlayedTimes_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetLastPlayedTimes_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetLastPlayedTimes_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetLastPlayedTimes_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetLastPlayedTimes_Response(const CPlayer_GetLastPlayedTimes_Response& from) : CPlayer_GetLastPlayedTimes_Response(nullptr, from) {}
  inline CPlayer_GetLastPlayedTimes_Response(CPlayer_GetLastPlayedTimes_Response&& from) noexcept
      : CPlayer_GetLastPlayedTimes_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetLastPlayedTimes_Response& operator=(const CPlayer_GetLastPlayedTimes_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetLastPlayedTimes_Response& operator=(CPlayer_GetLastPlayedTimes_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetLastPlayedTimes_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetLastPlayedTimes_Response*>(
        &_CPlayer_GetLastPlayedTimes_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CPlayer_GetLastPlayedTimes_Response& a, CPlayer_GetLastPlayedTimes_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetLastPlayedTimes_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetLastPlayedTimes_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetLastPlayedTimes_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetLastPlayedTimes_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetLastPlayedTimes_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetLastPlayedTimes_Response& from) { CPlayer_GetLastPlayedTimes_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetLastPlayedTimes_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetLastPlayedTimes_Response"; }

 protected:
  explicit CPlayer_GetLastPlayedTimes_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetLastPlayedTimes_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetLastPlayedTimes_Response& from);
  CPlayer_GetLastPlayedTimes_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetLastPlayedTimes_Response&& from) noexcept
      : CPlayer_GetLastPlayedTimes_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Game = CPlayer_GetLastPlayedTimes_Response_Game;

  // accessors -------------------------------------------------------
  enum : int {
    kGamesFieldNumber = 1,
  };
  // repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;
  int games_size() const;
  private:
  int _internal_games_size() const;

  public:
  void clear_games() ;
  ::CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL mutable_games(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>* PROTOBUF_NONNULL mutable_games();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>& _internal_games() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>* PROTOBUF_NONNULL _internal_mutable_games();
  public:
  const ::CPlayer_GetLastPlayedTimes_Response_Game& games(int index) const;
  ::CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL add_games();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>& games() const;
  // @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetLastPlayedTimes_Response& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetLastPlayedTimes_Response_Game > games_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetLastPlayedTimes_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetGameBadgeLevels_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetGameBadgeLevels_Response) */ {
 public:
  inline CPlayer_GetGameBadgeLevels_Response() : CPlayer_GetGameBadgeLevels_Response(nullptr) {}
  ~CPlayer_GetGameBadgeLevels_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetGameBadgeLevels_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetGameBadgeLevels_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetGameBadgeLevels_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetGameBadgeLevels_Response(const CPlayer_GetGameBadgeLevels_Response& from) : CPlayer_GetGameBadgeLevels_Response(nullptr, from) {}
  inline CPlayer_GetGameBadgeLevels_Response(CPlayer_GetGameBadgeLevels_Response&& from) noexcept
      : CPlayer_GetGameBadgeLevels_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetGameBadgeLevels_Response& operator=(const CPlayer_GetGameBadgeLevels_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetGameBadgeLevels_Response& operator=(CPlayer_GetGameBadgeLevels_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetGameBadgeLevels_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetGameBadgeLevels_Response*>(
        &_CPlayer_GetGameBadgeLevels_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CPlayer_GetGameBadgeLevels_Response& a, CPlayer_GetGameBadgeLevels_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetGameBadgeLevels_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetGameBadgeLevels_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetGameBadgeLevels_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetGameBadgeLevels_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetGameBadgeLevels_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetGameBadgeLevels_Response& from) { CPlayer_GetGameBadgeLevels_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetGameBadgeLevels_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetGameBadgeLevels_Response"; }

 protected:
  explicit CPlayer_GetGameBadgeLevels_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetGameBadgeLevels_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetGameBadgeLevels_Response& from);
  CPlayer_GetGameBadgeLevels_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetGameBadgeLevels_Response&& from) noexcept
      : CPlayer_GetGameBadgeLevels_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Badge = CPlayer_GetGameBadgeLevels_Response_Badge;

  // accessors -------------------------------------------------------
  enum : int {
    kBadgesFieldNumber = 2,
    kPlayerLevelFieldNumber = 1,
  };
  // repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;
  int badges_size() const;
  private:
  int _internal_badges_size() const;

  public:
  void clear_badges() ;
  ::CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL mutable_badges(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>* PROTOBUF_NONNULL mutable_badges();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>& _internal_badges() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>* PROTOBUF_NONNULL _internal_mutable_badges();
  public:
  const ::CPlayer_GetGameBadgeLevels_Response_Badge& badges(int index) const;
  ::CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL add_badges();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>& badges() const;
  // optional uint32 player_level = 1;
  bool has_player_level() const;
  void clear_player_level() ;
  ::uint32_t player_level() const;
  void set_player_level(::uint32_t value);

  private:
  ::uint32_t _internal_player_level() const;
  void _internal_set_player_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetGameBadgeLevels_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetGameBadgeLevels_Response_Badge > badges_;
    ::uint32_t player_level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetGameBadgeLevels_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetFriendsGameplayInfo_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetFriendsGameplayInfo_Response) */ {
 public:
  inline CPlayer_GetFriendsGameplayInfo_Response() : CPlayer_GetFriendsGameplayInfo_Response(nullptr) {}
  ~CPlayer_GetFriendsGameplayInfo_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetFriendsGameplayInfo_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetFriendsGameplayInfo_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetFriendsGameplayInfo_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetFriendsGameplayInfo_Response(const CPlayer_GetFriendsGameplayInfo_Response& from) : CPlayer_GetFriendsGameplayInfo_Response(nullptr, from) {}
  inline CPlayer_GetFriendsGameplayInfo_Response(CPlayer_GetFriendsGameplayInfo_Response&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetFriendsGameplayInfo_Response& operator=(const CPlayer_GetFriendsGameplayInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetFriendsGameplayInfo_Response& operator=(CPlayer_GetFriendsGameplayInfo_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetFriendsGameplayInfo_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetFriendsGameplayInfo_Response*>(
        &_CPlayer_GetFriendsGameplayInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CPlayer_GetFriendsGameplayInfo_Response& a, CPlayer_GetFriendsGameplayInfo_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetFriendsGameplayInfo_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetFriendsGameplayInfo_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetFriendsGameplayInfo_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetFriendsGameplayInfo_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetFriendsGameplayInfo_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetFriendsGameplayInfo_Response& from) { CPlayer_GetFriendsGameplayInfo_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetFriendsGameplayInfo_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetFriendsGameplayInfo_Response"; }

 protected:
  explicit CPlayer_GetFriendsGameplayInfo_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetFriendsGameplayInfo_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetFriendsGameplayInfo_Response& from);
  CPlayer_GetFriendsGameplayInfo_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetFriendsGameplayInfo_Response&& from) noexcept
      : CPlayer_GetFriendsGameplayInfo_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FriendsGameplayInfo = CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo;
  using OwnGameplayInfo = CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kInGameFieldNumber = 2,
    kPlayedRecentlyFieldNumber = 3,
    kPlayedEverFieldNumber = 4,
    kOwnsFieldNumber = 5,
    kInWishlistFieldNumber = 6,
    kYourInfoFieldNumber = 1,
  };
  // repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo in_game = 2;
  int in_game_size() const;
  private:
  int _internal_in_game_size() const;

  public:
  void clear_in_game() ;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL mutable_in_game(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL mutable_in_game();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& _internal_in_game() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL _internal_mutable_in_game();
  public:
  const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& in_game(int index) const;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL add_in_game();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& in_game() const;
  // repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo played_recently = 3;
  int played_recently_size() const;
  private:
  int _internal_played_recently_size() const;

  public:
  void clear_played_recently() ;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL mutable_played_recently(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL mutable_played_recently();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& _internal_played_recently() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL _internal_mutable_played_recently();
  public:
  const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& played_recently(int index) const;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL add_played_recently();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& played_recently() const;
  // repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo played_ever = 4;
  int played_ever_size() const;
  private:
  int _internal_played_ever_size() const;

  public:
  void clear_played_ever() ;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL mutable_played_ever(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL mutable_played_ever();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& _internal_played_ever() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL _internal_mutable_played_ever();
  public:
  const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& played_ever(int index) const;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL add_played_ever();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& played_ever() const;
  // repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo owns = 5;
  int owns_size() const;
  private:
  int _internal_owns_size() const;

  public:
  void clear_owns() ;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL mutable_owns(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL mutable_owns();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& _internal_owns() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL _internal_mutable_owns();
  public:
  const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& owns(int index) const;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL add_owns();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& owns() const;
  // repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo in_wishlist = 6;
  int in_wishlist_size() const;
  private:
  int _internal_in_wishlist_size() const;

  public:
  void clear_in_wishlist() ;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL mutable_in_wishlist(int index);
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL mutable_in_wishlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& _internal_in_wishlist() const;
  ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL _internal_mutable_in_wishlist();
  public:
  const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& in_wishlist(int index) const;
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL add_in_wishlist();
  const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& in_wishlist() const;
  // optional .CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo your_info = 1;
  bool has_your_info() const;
  void clear_your_info() ;
  const ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& your_info() const;
  [[nodiscard]] ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE release_your_info();
  ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL mutable_your_info();
  void set_allocated_your_info(::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_your_info(::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE value);
  ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE unsafe_arena_release_your_info();

  private:
  const ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& _internal_your_info() const;
  ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL _internal_mutable_your_info();

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetFriendsGameplayInfo_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   6, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetFriendsGameplayInfo_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo > in_game_;
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo > played_recently_;
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo > played_ever_;
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo > owns_;
    ::google::protobuf::RepeatedPtrField< ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo > in_wishlist_;
    ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE your_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetFriendsGameplayInfo_Response_class_data_;
// -------------------------------------------------------------------

class CPlayer_GetCommunityPreferences_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CPlayer_GetCommunityPreferences_Response) */ {
 public:
  inline CPlayer_GetCommunityPreferences_Response() : CPlayer_GetCommunityPreferences_Response(nullptr) {}
  ~CPlayer_GetCommunityPreferences_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CPlayer_GetCommunityPreferences_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CPlayer_GetCommunityPreferences_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CPlayer_GetCommunityPreferences_Response(::google::protobuf::internal::ConstantInitialized);

  inline CPlayer_GetCommunityPreferences_Response(const CPlayer_GetCommunityPreferences_Response& from) : CPlayer_GetCommunityPreferences_Response(nullptr, from) {}
  inline CPlayer_GetCommunityPreferences_Response(CPlayer_GetCommunityPreferences_Response&& from) noexcept
      : CPlayer_GetCommunityPreferences_Response(nullptr, std::move(from)) {}
  inline CPlayer_GetCommunityPreferences_Response& operator=(const CPlayer_GetCommunityPreferences_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPlayer_GetCommunityPreferences_Response& operator=(CPlayer_GetCommunityPreferences_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPlayer_GetCommunityPreferences_Response& default_instance() {
    return *reinterpret_cast<const CPlayer_GetCommunityPreferences_Response*>(
        &_CPlayer_GetCommunityPreferences_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(CPlayer_GetCommunityPreferences_Response& a, CPlayer_GetCommunityPreferences_Response& b) { a.Swap(&b); }
  inline void Swap(CPlayer_GetCommunityPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPlayer_GetCommunityPreferences_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPlayer_GetCommunityPreferences_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CPlayer_GetCommunityPreferences_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CPlayer_GetCommunityPreferences_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CPlayer_GetCommunityPreferences_Response& from) { CPlayer_GetCommunityPreferences_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CPlayer_GetCommunityPreferences_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CPlayer_GetCommunityPreferences_Response"; }

 protected:
  explicit CPlayer_GetCommunityPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CPlayer_GetCommunityPreferences_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CPlayer_GetCommunityPreferences_Response& from);
  CPlayer_GetCommunityPreferences_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CPlayer_GetCommunityPreferences_Response&& from) noexcept
      : CPlayer_GetCommunityPreferences_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreferencesFieldNumber = 1,
  };
  // optional .CPlayer_CommunityPreferences preferences = 1;
  bool has_preferences() const;
  void clear_preferences() ;
  const ::CPlayer_CommunityPreferences& preferences() const;
  [[nodiscard]] ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE release_preferences();
  ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL mutable_preferences();
  void set_allocated_preferences(::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_preferences(::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value);
  ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE unsafe_arena_release_preferences();

  private:
  const ::CPlayer_CommunityPreferences& _internal_preferences() const;
  ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL _internal_mutable_preferences();

  public:
  // @@protoc_insertion_point(class_scope:CPlayer_GetCommunityPreferences_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CPlayer_GetCommunityPreferences_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE preferences_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fplayer_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CPlayer_GetCommunityPreferences_Response_class_data_;

// ===================================================================


// -------------------------------------------------------------------

class Player_Stub;
class Player : public ::google::protobuf::Service {
 protected:
  Player() = default;

 public:
  using Stub = Player_Stub;

  Player(const Player&) = delete;
  Player& operator=(const Player&) = delete;
  virtual ~Player() = default;

  static const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL descriptor();

  virtual void GetMutualFriendsForIncomingInvites(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetMutualFriendsForIncomingInvites_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetMutualFriendsForIncomingInvites_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void GetFriendsGameplayInfo(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetFriendsGameplayInfo_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetFriendsGameplayInfo_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void GetGameBadgeLevels(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetGameBadgeLevels_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetGameBadgeLevels_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void ClientGetLastPlayedTimes(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetLastPlayedTimes_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetLastPlayedTimes_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void AcceptSSA(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_AcceptSSA_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_AcceptSSA_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void GetNicknameList(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetNicknameList_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetNicknameList_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void GetPerFriendPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetPerFriendPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetPerFriendPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void SetPerFriendPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_SetPerFriendPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_SetPerFriendPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void AddFriend(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_AddFriend_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_AddFriend_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void RemoveFriend(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_RemoveFriend_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_RemoveFriend_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void IgnoreFriend(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_IgnoreFriend_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_IgnoreFriend_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void GetCommunityPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetCommunityPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetCommunityPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void SetCommunityPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_SetCommunityPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_SetCommunityPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void GetNewSteamAnnouncementState(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetNewSteamAnnouncementState_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetNewSteamAnnouncementState_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void UpdateSteamAnnouncementLastRead(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_UpdateSteamAnnouncementLastRead_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_UpdateSteamAnnouncementLastRead_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL GetDescriptor() override;

  void CallMethod(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method,
      ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
      const ::google::protobuf::Message* PROTOBUF_NONNULL request,
      ::google::protobuf::Message* PROTOBUF_NONNULL response,
      ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;
};

class Player_Stub final : public Player {
 public:
  Player_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel);
  Player_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  Player_Stub(const Player_Stub&) = delete;
  Player_Stub& operator=(const Player_Stub&) = delete;

  ~Player_Stub() override;

  inline ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel() { return channel_; }

  // implements Player ------------------------------------------
  void GetMutualFriendsForIncomingInvites(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetMutualFriendsForIncomingInvites_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetMutualFriendsForIncomingInvites_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void GetFriendsGameplayInfo(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetFriendsGameplayInfo_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetFriendsGameplayInfo_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void GetGameBadgeLevels(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetGameBadgeLevels_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetGameBadgeLevels_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void ClientGetLastPlayedTimes(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetLastPlayedTimes_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetLastPlayedTimes_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void AcceptSSA(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_AcceptSSA_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_AcceptSSA_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void GetNicknameList(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetNicknameList_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetNicknameList_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void GetPerFriendPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetPerFriendPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetPerFriendPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void SetPerFriendPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_SetPerFriendPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_SetPerFriendPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void AddFriend(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_AddFriend_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_AddFriend_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void RemoveFriend(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_RemoveFriend_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_RemoveFriend_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void IgnoreFriend(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_IgnoreFriend_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_IgnoreFriend_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void GetCommunityPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetCommunityPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetCommunityPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void SetCommunityPreferences(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_SetCommunityPreferences_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_SetCommunityPreferences_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void GetNewSteamAnnouncementState(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_GetNewSteamAnnouncementState_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_GetNewSteamAnnouncementState_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void UpdateSteamAnnouncementLastRead(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::CPlayer_UpdateSteamAnnouncementLastRead_Request* PROTOBUF_NONNULL request,
                        ::CPlayer_UpdateSteamAnnouncementLastRead_Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

 private:
  ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CPlayer_GetMutualFriendsForIncomingInvites_Request

// -------------------------------------------------------------------

// CPlayer_IncomingInviteMutualFriendList

// optional fixed64 steamid = 1;
inline bool CPlayer_IncomingInviteMutualFriendList::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_IncomingInviteMutualFriendList::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CPlayer_IncomingInviteMutualFriendList::steamid() const {
  // @@protoc_insertion_point(field_get:CPlayer_IncomingInviteMutualFriendList.steamid)
  return _internal_steamid();
}
inline void CPlayer_IncomingInviteMutualFriendList::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_IncomingInviteMutualFriendList.steamid)
}
inline ::uint64_t CPlayer_IncomingInviteMutualFriendList::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CPlayer_IncomingInviteMutualFriendList::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// repeated uint32 mutual_friend_account_ids = 2;
inline int CPlayer_IncomingInviteMutualFriendList::_internal_mutual_friend_account_ids_size() const {
  return _internal_mutual_friend_account_ids().size();
}
inline int CPlayer_IncomingInviteMutualFriendList::mutual_friend_account_ids_size() const {
  return _internal_mutual_friend_account_ids_size();
}
inline void CPlayer_IncomingInviteMutualFriendList::clear_mutual_friend_account_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mutual_friend_account_ids_.Clear();
}
inline ::uint32_t CPlayer_IncomingInviteMutualFriendList::mutual_friend_account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CPlayer_IncomingInviteMutualFriendList.mutual_friend_account_ids)
  return _internal_mutual_friend_account_ids().Get(index);
}
inline void CPlayer_IncomingInviteMutualFriendList::set_mutual_friend_account_ids(int index, ::uint32_t value) {
  _internal_mutable_mutual_friend_account_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:CPlayer_IncomingInviteMutualFriendList.mutual_friend_account_ids)
}
inline void CPlayer_IncomingInviteMutualFriendList::add_mutual_friend_account_ids(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_mutual_friend_account_ids()->Add(value);
  // @@protoc_insertion_point(field_add:CPlayer_IncomingInviteMutualFriendList.mutual_friend_account_ids)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CPlayer_IncomingInviteMutualFriendList::mutual_friend_account_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_IncomingInviteMutualFriendList.mutual_friend_account_ids)
  return _internal_mutual_friend_account_ids();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL CPlayer_IncomingInviteMutualFriendList::mutable_mutual_friend_account_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_IncomingInviteMutualFriendList.mutual_friend_account_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_mutual_friend_account_ids();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CPlayer_IncomingInviteMutualFriendList::_internal_mutual_friend_account_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mutual_friend_account_ids_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
CPlayer_IncomingInviteMutualFriendList::_internal_mutable_mutual_friend_account_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.mutual_friend_account_ids_;
}

// -------------------------------------------------------------------

// CPlayer_GetMutualFriendsForIncomingInvites_Response

// repeated .CPlayer_IncomingInviteMutualFriendList incoming_invite_mutual_friends_lists = 1;
inline int CPlayer_GetMutualFriendsForIncomingInvites_Response::_internal_incoming_invite_mutual_friends_lists_size() const {
  return _internal_incoming_invite_mutual_friends_lists().size();
}
inline int CPlayer_GetMutualFriendsForIncomingInvites_Response::incoming_invite_mutual_friends_lists_size() const {
  return _internal_incoming_invite_mutual_friends_lists_size();
}
inline void CPlayer_GetMutualFriendsForIncomingInvites_Response::clear_incoming_invite_mutual_friends_lists() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incoming_invite_mutual_friends_lists_.Clear();
}
inline ::CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL CPlayer_GetMutualFriendsForIncomingInvites_Response::mutable_incoming_invite_mutual_friends_lists(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetMutualFriendsForIncomingInvites_Response.incoming_invite_mutual_friends_lists)
  return _internal_mutable_incoming_invite_mutual_friends_lists()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>* PROTOBUF_NONNULL CPlayer_GetMutualFriendsForIncomingInvites_Response::mutable_incoming_invite_mutual_friends_lists()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetMutualFriendsForIncomingInvites_Response.incoming_invite_mutual_friends_lists)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_incoming_invite_mutual_friends_lists();
}
inline const ::CPlayer_IncomingInviteMutualFriendList& CPlayer_GetMutualFriendsForIncomingInvites_Response::incoming_invite_mutual_friends_lists(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetMutualFriendsForIncomingInvites_Response.incoming_invite_mutual_friends_lists)
  return _internal_incoming_invite_mutual_friends_lists().Get(index);
}
inline ::CPlayer_IncomingInviteMutualFriendList* PROTOBUF_NONNULL CPlayer_GetMutualFriendsForIncomingInvites_Response::add_incoming_invite_mutual_friends_lists()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_IncomingInviteMutualFriendList* _add = _internal_mutable_incoming_invite_mutual_friends_lists()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetMutualFriendsForIncomingInvites_Response.incoming_invite_mutual_friends_lists)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>& CPlayer_GetMutualFriendsForIncomingInvites_Response::incoming_invite_mutual_friends_lists() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetMutualFriendsForIncomingInvites_Response.incoming_invite_mutual_friends_lists)
  return _internal_incoming_invite_mutual_friends_lists();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>&
CPlayer_GetMutualFriendsForIncomingInvites_Response::_internal_incoming_invite_mutual_friends_lists() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.incoming_invite_mutual_friends_lists_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_IncomingInviteMutualFriendList>* PROTOBUF_NONNULL
CPlayer_GetMutualFriendsForIncomingInvites_Response::_internal_mutable_incoming_invite_mutual_friends_lists() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.incoming_invite_mutual_friends_lists_;
}

// -------------------------------------------------------------------

// CPlayer_GetFriendsGameplayInfo_Request

// optional uint32 appid = 1;
inline bool CPlayer_GetFriendsGameplayInfo_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Request::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Request::appid() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Request.appid)
  return _internal_appid();
}
inline void CPlayer_GetFriendsGameplayInfo_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Request.appid)
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Request::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CPlayer_GetFriendsGameplayInfo_Request::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo

// optional fixed64 steamid = 1;
inline bool CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::steamid() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo.steamid)
  return _internal_steamid();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo.steamid)
}
inline ::uint64_t CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// optional uint32 minutes_played = 2;
inline bool CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::has_minutes_played() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::clear_minutes_played() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::minutes_played() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo.minutes_played)
  return _internal_minutes_played();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::set_minutes_played(::uint32_t value) {
  _internal_set_minutes_played(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo.minutes_played)
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::_internal_minutes_played() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minutes_played_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::_internal_set_minutes_played(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_ = value;
}

// optional uint32 minutes_played_forever = 3;
inline bool CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::has_minutes_played_forever() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::clear_minutes_played_forever() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_forever_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::minutes_played_forever() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo.minutes_played_forever)
  return _internal_minutes_played_forever();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::set_minutes_played_forever(::uint32_t value) {
  _internal_set_minutes_played_forever(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo.minutes_played_forever)
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::_internal_minutes_played_forever() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minutes_played_forever_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo::_internal_set_minutes_played_forever(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_forever_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo

// optional fixed64 steamid = 1;
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::steamid() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.steamid)
  return _internal_steamid();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.steamid)
}
inline ::uint64_t CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// optional uint32 minutes_played = 2;
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::has_minutes_played() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::clear_minutes_played() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::minutes_played() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.minutes_played)
  return _internal_minutes_played();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::set_minutes_played(::uint32_t value) {
  _internal_set_minutes_played(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.minutes_played)
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_minutes_played() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minutes_played_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_set_minutes_played(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_ = value;
}

// optional uint32 minutes_played_forever = 3;
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::has_minutes_played_forever() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::clear_minutes_played_forever() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_forever_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::minutes_played_forever() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.minutes_played_forever)
  return _internal_minutes_played_forever();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::set_minutes_played_forever(::uint32_t value) {
  _internal_set_minutes_played_forever(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.minutes_played_forever)
}
inline ::uint32_t CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_minutes_played_forever() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minutes_played_forever_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_set_minutes_played_forever(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minutes_played_forever_ = value;
}

// optional bool in_wishlist = 4;
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::has_in_wishlist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::clear_in_wishlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_wishlist_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::in_wishlist() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.in_wishlist)
  return _internal_in_wishlist();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::set_in_wishlist(bool value) {
  _internal_set_in_wishlist(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.in_wishlist)
}
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_in_wishlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.in_wishlist_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_set_in_wishlist(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_wishlist_ = value;
}

// optional bool owned = 5;
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::has_owned() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::clear_owned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owned_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::owned() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.owned)
  return _internal_owned();
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::set_owned(bool value) {
  _internal_set_owned(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.owned)
}
inline bool CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_owned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owned_;
}
inline void CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo::_internal_set_owned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owned_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetFriendsGameplayInfo_Response

// optional .CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo your_info = 1;
inline bool CPlayer_GetFriendsGameplayInfo_Response::has_your_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.your_info_ != nullptr);
  return value;
}
inline void CPlayer_GetFriendsGameplayInfo_Response::clear_your_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.your_info_ != nullptr) _impl_.your_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& CPlayer_GetFriendsGameplayInfo_Response::_internal_your_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* p = _impl_.your_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo&>(::_CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo_default_instance_);
}
inline const ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo& CPlayer_GetFriendsGameplayInfo_Response::your_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.your_info)
  return _internal_your_info();
}
inline void CPlayer_GetFriendsGameplayInfo_Response::unsafe_arena_set_allocated_your_info(
    ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.your_info_);
  }
  _impl_.your_info_ = reinterpret_cast<::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CPlayer_GetFriendsGameplayInfo_Response.your_info)
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE CPlayer_GetFriendsGameplayInfo_Response::release_your_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* released = _impl_.your_info_;
  _impl_.your_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE CPlayer_GetFriendsGameplayInfo_Response::unsafe_arena_release_your_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CPlayer_GetFriendsGameplayInfo_Response.your_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* temp = _impl_.your_info_;
  _impl_.your_info_ = nullptr;
  return temp;
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::_internal_mutable_your_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.your_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo>(GetArena());
    _impl_.your_info_ = reinterpret_cast<::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo*>(p);
  }
  return _impl_.your_info_;
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_your_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* _msg = _internal_mutable_your_info();
  // @@protoc_insertion_point(field_mutable:CPlayer_GetFriendsGameplayInfo_Response.your_info)
  return _msg;
}
inline void CPlayer_GetFriendsGameplayInfo_Response::set_allocated_your_info(::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.your_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.your_info_ = reinterpret_cast<::CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CPlayer_GetFriendsGameplayInfo_Response.your_info)
}

// repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo in_game = 2;
inline int CPlayer_GetFriendsGameplayInfo_Response::_internal_in_game_size() const {
  return _internal_in_game().size();
}
inline int CPlayer_GetFriendsGameplayInfo_Response::in_game_size() const {
  return _internal_in_game_size();
}
inline void CPlayer_GetFriendsGameplayInfo_Response::clear_in_game() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_game_.Clear();
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_in_game(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetFriendsGameplayInfo_Response.in_game)
  return _internal_mutable_in_game()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_in_game()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetFriendsGameplayInfo_Response.in_game)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_in_game();
}
inline const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& CPlayer_GetFriendsGameplayInfo_Response::in_game(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.in_game)
  return _internal_in_game().Get(index);
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::add_in_game()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* _add = _internal_mutable_in_game()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetFriendsGameplayInfo_Response.in_game)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& CPlayer_GetFriendsGameplayInfo_Response::in_game() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetFriendsGameplayInfo_Response.in_game)
  return _internal_in_game();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>&
CPlayer_GetFriendsGameplayInfo_Response::_internal_in_game() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.in_game_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL
CPlayer_GetFriendsGameplayInfo_Response::_internal_mutable_in_game() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.in_game_;
}

// repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo played_recently = 3;
inline int CPlayer_GetFriendsGameplayInfo_Response::_internal_played_recently_size() const {
  return _internal_played_recently().size();
}
inline int CPlayer_GetFriendsGameplayInfo_Response::played_recently_size() const {
  return _internal_played_recently_size();
}
inline void CPlayer_GetFriendsGameplayInfo_Response::clear_played_recently() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.played_recently_.Clear();
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_played_recently(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetFriendsGameplayInfo_Response.played_recently)
  return _internal_mutable_played_recently()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_played_recently()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetFriendsGameplayInfo_Response.played_recently)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_played_recently();
}
inline const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& CPlayer_GetFriendsGameplayInfo_Response::played_recently(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.played_recently)
  return _internal_played_recently().Get(index);
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::add_played_recently()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* _add = _internal_mutable_played_recently()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetFriendsGameplayInfo_Response.played_recently)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& CPlayer_GetFriendsGameplayInfo_Response::played_recently() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetFriendsGameplayInfo_Response.played_recently)
  return _internal_played_recently();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>&
CPlayer_GetFriendsGameplayInfo_Response::_internal_played_recently() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.played_recently_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL
CPlayer_GetFriendsGameplayInfo_Response::_internal_mutable_played_recently() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.played_recently_;
}

// repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo played_ever = 4;
inline int CPlayer_GetFriendsGameplayInfo_Response::_internal_played_ever_size() const {
  return _internal_played_ever().size();
}
inline int CPlayer_GetFriendsGameplayInfo_Response::played_ever_size() const {
  return _internal_played_ever_size();
}
inline void CPlayer_GetFriendsGameplayInfo_Response::clear_played_ever() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.played_ever_.Clear();
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_played_ever(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetFriendsGameplayInfo_Response.played_ever)
  return _internal_mutable_played_ever()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_played_ever()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetFriendsGameplayInfo_Response.played_ever)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_played_ever();
}
inline const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& CPlayer_GetFriendsGameplayInfo_Response::played_ever(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.played_ever)
  return _internal_played_ever().Get(index);
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::add_played_ever()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* _add = _internal_mutable_played_ever()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetFriendsGameplayInfo_Response.played_ever)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& CPlayer_GetFriendsGameplayInfo_Response::played_ever() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetFriendsGameplayInfo_Response.played_ever)
  return _internal_played_ever();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>&
CPlayer_GetFriendsGameplayInfo_Response::_internal_played_ever() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.played_ever_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL
CPlayer_GetFriendsGameplayInfo_Response::_internal_mutable_played_ever() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.played_ever_;
}

// repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo owns = 5;
inline int CPlayer_GetFriendsGameplayInfo_Response::_internal_owns_size() const {
  return _internal_owns().size();
}
inline int CPlayer_GetFriendsGameplayInfo_Response::owns_size() const {
  return _internal_owns_size();
}
inline void CPlayer_GetFriendsGameplayInfo_Response::clear_owns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owns_.Clear();
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_owns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetFriendsGameplayInfo_Response.owns)
  return _internal_mutable_owns()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_owns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetFriendsGameplayInfo_Response.owns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_owns();
}
inline const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& CPlayer_GetFriendsGameplayInfo_Response::owns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.owns)
  return _internal_owns().Get(index);
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::add_owns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* _add = _internal_mutable_owns()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetFriendsGameplayInfo_Response.owns)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& CPlayer_GetFriendsGameplayInfo_Response::owns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetFriendsGameplayInfo_Response.owns)
  return _internal_owns();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>&
CPlayer_GetFriendsGameplayInfo_Response::_internal_owns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owns_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL
CPlayer_GetFriendsGameplayInfo_Response::_internal_mutable_owns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.owns_;
}

// repeated .CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo in_wishlist = 6;
inline int CPlayer_GetFriendsGameplayInfo_Response::_internal_in_wishlist_size() const {
  return _internal_in_wishlist().size();
}
inline int CPlayer_GetFriendsGameplayInfo_Response::in_wishlist_size() const {
  return _internal_in_wishlist_size();
}
inline void CPlayer_GetFriendsGameplayInfo_Response::clear_in_wishlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_wishlist_.Clear();
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_in_wishlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetFriendsGameplayInfo_Response.in_wishlist)
  return _internal_mutable_in_wishlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::mutable_in_wishlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetFriendsGameplayInfo_Response.in_wishlist)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_in_wishlist();
}
inline const ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo& CPlayer_GetFriendsGameplayInfo_Response::in_wishlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetFriendsGameplayInfo_Response.in_wishlist)
  return _internal_in_wishlist().Get(index);
}
inline ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* PROTOBUF_NONNULL CPlayer_GetFriendsGameplayInfo_Response::add_in_wishlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo* _add = _internal_mutable_in_wishlist()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetFriendsGameplayInfo_Response.in_wishlist)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>& CPlayer_GetFriendsGameplayInfo_Response::in_wishlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetFriendsGameplayInfo_Response.in_wishlist)
  return _internal_in_wishlist();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>&
CPlayer_GetFriendsGameplayInfo_Response::_internal_in_wishlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.in_wishlist_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>* PROTOBUF_NONNULL
CPlayer_GetFriendsGameplayInfo_Response::_internal_mutable_in_wishlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.in_wishlist_;
}

// -------------------------------------------------------------------

// CPlayer_GetGameBadgeLevels_Request

// optional uint32 appid = 1;
inline bool CPlayer_GetGameBadgeLevels_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetGameBadgeLevels_Request::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CPlayer_GetGameBadgeLevels_Request::appid() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetGameBadgeLevels_Request.appid)
  return _internal_appid();
}
inline void CPlayer_GetGameBadgeLevels_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetGameBadgeLevels_Request.appid)
}
inline ::uint32_t CPlayer_GetGameBadgeLevels_Request::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CPlayer_GetGameBadgeLevels_Request::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetGameBadgeLevels_Response_Badge

// optional int32 level = 1;
inline bool CPlayer_GetGameBadgeLevels_Response_Badge::has_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t CPlayer_GetGameBadgeLevels_Response_Badge::level() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetGameBadgeLevels_Response.Badge.level)
  return _internal_level();
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::set_level(::int32_t value) {
  _internal_set_level(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetGameBadgeLevels_Response.Badge.level)
}
inline ::int32_t CPlayer_GetGameBadgeLevels_Response_Badge::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// optional int32 series = 2;
inline bool CPlayer_GetGameBadgeLevels_Response_Badge::has_series() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::clear_series() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.series_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CPlayer_GetGameBadgeLevels_Response_Badge::series() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetGameBadgeLevels_Response.Badge.series)
  return _internal_series();
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::set_series(::int32_t value) {
  _internal_set_series(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_GetGameBadgeLevels_Response.Badge.series)
}
inline ::int32_t CPlayer_GetGameBadgeLevels_Response_Badge::_internal_series() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.series_;
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::_internal_set_series(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.series_ = value;
}

// optional uint32 border_color = 3;
inline bool CPlayer_GetGameBadgeLevels_Response_Badge::has_border_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::clear_border_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.border_color_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CPlayer_GetGameBadgeLevels_Response_Badge::border_color() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetGameBadgeLevels_Response.Badge.border_color)
  return _internal_border_color();
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::set_border_color(::uint32_t value) {
  _internal_set_border_color(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CPlayer_GetGameBadgeLevels_Response.Badge.border_color)
}
inline ::uint32_t CPlayer_GetGameBadgeLevels_Response_Badge::_internal_border_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.border_color_;
}
inline void CPlayer_GetGameBadgeLevels_Response_Badge::_internal_set_border_color(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.border_color_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetGameBadgeLevels_Response

// optional uint32 player_level = 1;
inline bool CPlayer_GetGameBadgeLevels_Response::has_player_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetGameBadgeLevels_Response::clear_player_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CPlayer_GetGameBadgeLevels_Response::player_level() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetGameBadgeLevels_Response.player_level)
  return _internal_player_level();
}
inline void CPlayer_GetGameBadgeLevels_Response::set_player_level(::uint32_t value) {
  _internal_set_player_level(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetGameBadgeLevels_Response.player_level)
}
inline ::uint32_t CPlayer_GetGameBadgeLevels_Response::_internal_player_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_level_;
}
inline void CPlayer_GetGameBadgeLevels_Response::_internal_set_player_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_level_ = value;
}

// repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;
inline int CPlayer_GetGameBadgeLevels_Response::_internal_badges_size() const {
  return _internal_badges().size();
}
inline int CPlayer_GetGameBadgeLevels_Response::badges_size() const {
  return _internal_badges_size();
}
inline void CPlayer_GetGameBadgeLevels_Response::clear_badges() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.badges_.Clear();
}
inline ::CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL CPlayer_GetGameBadgeLevels_Response::mutable_badges(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetGameBadgeLevels_Response.badges)
  return _internal_mutable_badges()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>* PROTOBUF_NONNULL CPlayer_GetGameBadgeLevels_Response::mutable_badges()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetGameBadgeLevels_Response.badges)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_badges();
}
inline const ::CPlayer_GetGameBadgeLevels_Response_Badge& CPlayer_GetGameBadgeLevels_Response::badges(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetGameBadgeLevels_Response.badges)
  return _internal_badges().Get(index);
}
inline ::CPlayer_GetGameBadgeLevels_Response_Badge* PROTOBUF_NONNULL CPlayer_GetGameBadgeLevels_Response::add_badges()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetGameBadgeLevels_Response_Badge* _add = _internal_mutable_badges()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetGameBadgeLevels_Response.badges)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>& CPlayer_GetGameBadgeLevels_Response::badges() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetGameBadgeLevels_Response.badges)
  return _internal_badges();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>&
CPlayer_GetGameBadgeLevels_Response::_internal_badges() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.badges_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetGameBadgeLevels_Response_Badge>* PROTOBUF_NONNULL
CPlayer_GetGameBadgeLevels_Response::_internal_mutable_badges() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.badges_;
}

// -------------------------------------------------------------------

// CPlayer_GetLastPlayedTimes_Request

// optional uint32 min_last_played = 1 [(.description) = "The most recent last-played time the client already knows about"];
inline bool CPlayer_GetLastPlayedTimes_Request::has_min_last_played() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetLastPlayedTimes_Request::clear_min_last_played() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_last_played_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CPlayer_GetLastPlayedTimes_Request::min_last_played() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetLastPlayedTimes_Request.min_last_played)
  return _internal_min_last_played();
}
inline void CPlayer_GetLastPlayedTimes_Request::set_min_last_played(::uint32_t value) {
  _internal_set_min_last_played(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetLastPlayedTimes_Request.min_last_played)
}
inline ::uint32_t CPlayer_GetLastPlayedTimes_Request::_internal_min_last_played() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_last_played_;
}
inline void CPlayer_GetLastPlayedTimes_Request::_internal_set_min_last_played(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_last_played_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetLastPlayedTimes_Response_Game

// optional int32 appid = 1;
inline bool CPlayer_GetLastPlayedTimes_Response_Game::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t CPlayer_GetLastPlayedTimes_Response_Game::appid() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetLastPlayedTimes_Response.Game.appid)
  return _internal_appid();
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::set_appid(::int32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetLastPlayedTimes_Response.Game.appid)
}
inline ::int32_t CPlayer_GetLastPlayedTimes_Response_Game::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::_internal_set_appid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// optional uint32 last_playtime = 2;
inline bool CPlayer_GetLastPlayedTimes_Response_Game::has_last_playtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::clear_last_playtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_playtime_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CPlayer_GetLastPlayedTimes_Response_Game::last_playtime() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetLastPlayedTimes_Response.Game.last_playtime)
  return _internal_last_playtime();
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::set_last_playtime(::uint32_t value) {
  _internal_set_last_playtime(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_GetLastPlayedTimes_Response.Game.last_playtime)
}
inline ::uint32_t CPlayer_GetLastPlayedTimes_Response_Game::_internal_last_playtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_playtime_;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::_internal_set_last_playtime(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_playtime_ = value;
}

// optional int32 playtime_2weeks = 3;
inline bool CPlayer_GetLastPlayedTimes_Response_Game::has_playtime_2weeks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::clear_playtime_2weeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playtime_2weeks_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CPlayer_GetLastPlayedTimes_Response_Game::playtime_2weeks() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetLastPlayedTimes_Response.Game.playtime_2weeks)
  return _internal_playtime_2weeks();
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::set_playtime_2weeks(::int32_t value) {
  _internal_set_playtime_2weeks(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CPlayer_GetLastPlayedTimes_Response.Game.playtime_2weeks)
}
inline ::int32_t CPlayer_GetLastPlayedTimes_Response_Game::_internal_playtime_2weeks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playtime_2weeks_;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::_internal_set_playtime_2weeks(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playtime_2weeks_ = value;
}

// optional int32 playtime_forever = 4;
inline bool CPlayer_GetLastPlayedTimes_Response_Game::has_playtime_forever() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::clear_playtime_forever() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playtime_forever_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CPlayer_GetLastPlayedTimes_Response_Game::playtime_forever() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetLastPlayedTimes_Response.Game.playtime_forever)
  return _internal_playtime_forever();
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::set_playtime_forever(::int32_t value) {
  _internal_set_playtime_forever(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CPlayer_GetLastPlayedTimes_Response.Game.playtime_forever)
}
inline ::int32_t CPlayer_GetLastPlayedTimes_Response_Game::_internal_playtime_forever() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playtime_forever_;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::_internal_set_playtime_forever(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playtime_forever_ = value;
}

// optional uint32 first_playtime = 5;
inline bool CPlayer_GetLastPlayedTimes_Response_Game::has_first_playtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::clear_first_playtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_playtime_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CPlayer_GetLastPlayedTimes_Response_Game::first_playtime() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetLastPlayedTimes_Response.Game.first_playtime)
  return _internal_first_playtime();
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::set_first_playtime(::uint32_t value) {
  _internal_set_first_playtime(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CPlayer_GetLastPlayedTimes_Response.Game.first_playtime)
}
inline ::uint32_t CPlayer_GetLastPlayedTimes_Response_Game::_internal_first_playtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_playtime_;
}
inline void CPlayer_GetLastPlayedTimes_Response_Game::_internal_set_first_playtime(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_playtime_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetLastPlayedTimes_Response

// repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;
inline int CPlayer_GetLastPlayedTimes_Response::_internal_games_size() const {
  return _internal_games().size();
}
inline int CPlayer_GetLastPlayedTimes_Response::games_size() const {
  return _internal_games_size();
}
inline void CPlayer_GetLastPlayedTimes_Response::clear_games() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.games_.Clear();
}
inline ::CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL CPlayer_GetLastPlayedTimes_Response::mutable_games(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetLastPlayedTimes_Response.games)
  return _internal_mutable_games()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>* PROTOBUF_NONNULL CPlayer_GetLastPlayedTimes_Response::mutable_games()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetLastPlayedTimes_Response.games)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_games();
}
inline const ::CPlayer_GetLastPlayedTimes_Response_Game& CPlayer_GetLastPlayedTimes_Response::games(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetLastPlayedTimes_Response.games)
  return _internal_games().Get(index);
}
inline ::CPlayer_GetLastPlayedTimes_Response_Game* PROTOBUF_NONNULL CPlayer_GetLastPlayedTimes_Response::add_games()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetLastPlayedTimes_Response_Game* _add = _internal_mutable_games()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetLastPlayedTimes_Response.games)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>& CPlayer_GetLastPlayedTimes_Response::games() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetLastPlayedTimes_Response.games)
  return _internal_games();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>&
CPlayer_GetLastPlayedTimes_Response::_internal_games() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.games_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetLastPlayedTimes_Response_Game>* PROTOBUF_NONNULL
CPlayer_GetLastPlayedTimes_Response::_internal_mutable_games() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.games_;
}

// -------------------------------------------------------------------

// CPlayer_AcceptSSA_Request

// -------------------------------------------------------------------

// CPlayer_AcceptSSA_Response

// -------------------------------------------------------------------

// CPlayer_GetNicknameList_Request

// -------------------------------------------------------------------

// CPlayer_GetNicknameList_Response_PlayerNickname

// optional fixed32 accountid = 1;
inline bool CPlayer_GetNicknameList_Response_PlayerNickname::has_accountid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_GetNicknameList_Response_PlayerNickname::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CPlayer_GetNicknameList_Response_PlayerNickname::accountid() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetNicknameList_Response.PlayerNickname.accountid)
  return _internal_accountid();
}
inline void CPlayer_GetNicknameList_Response_PlayerNickname::set_accountid(::uint32_t value) {
  _internal_set_accountid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_GetNicknameList_Response.PlayerNickname.accountid)
}
inline ::uint32_t CPlayer_GetNicknameList_Response_PlayerNickname::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void CPlayer_GetNicknameList_Response_PlayerNickname::_internal_set_accountid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// optional string nickname = 2;
inline bool CPlayer_GetNicknameList_Response_PlayerNickname::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetNicknameList_Response_PlayerNickname::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPlayer_GetNicknameList_Response_PlayerNickname::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetNicknameList_Response.PlayerNickname.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CPlayer_GetNicknameList_Response_PlayerNickname::set_nickname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CPlayer_GetNicknameList_Response.PlayerNickname.nickname)
}
inline std::string* PROTOBUF_NONNULL CPlayer_GetNicknameList_Response_PlayerNickname::mutable_nickname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:CPlayer_GetNicknameList_Response.PlayerNickname.nickname)
  return _s;
}
inline const std::string& CPlayer_GetNicknameList_Response_PlayerNickname::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void CPlayer_GetNicknameList_Response_PlayerNickname::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CPlayer_GetNicknameList_Response_PlayerNickname::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CPlayer_GetNicknameList_Response_PlayerNickname::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CPlayer_GetNicknameList_Response.PlayerNickname.nickname)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.nickname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.nickname_.Set("", GetArena());
  }
  return released;
}
inline void CPlayer_GetNicknameList_Response_PlayerNickname::set_allocated_nickname(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nickname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nickname_.IsDefault()) {
    _impl_.nickname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CPlayer_GetNicknameList_Response.PlayerNickname.nickname)
}

// -------------------------------------------------------------------

// CPlayer_GetNicknameList_Response

// repeated .CPlayer_GetNicknameList_Response.PlayerNickname nicknames = 1;
inline int CPlayer_GetNicknameList_Response::_internal_nicknames_size() const {
  return _internal_nicknames().size();
}
inline int CPlayer_GetNicknameList_Response::nicknames_size() const {
  return _internal_nicknames_size();
}
inline void CPlayer_GetNicknameList_Response::clear_nicknames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nicknames_.Clear();
}
inline ::CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL CPlayer_GetNicknameList_Response::mutable_nicknames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetNicknameList_Response.nicknames)
  return _internal_mutable_nicknames()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>* PROTOBUF_NONNULL CPlayer_GetNicknameList_Response::mutable_nicknames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetNicknameList_Response.nicknames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nicknames();
}
inline const ::CPlayer_GetNicknameList_Response_PlayerNickname& CPlayer_GetNicknameList_Response::nicknames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetNicknameList_Response.nicknames)
  return _internal_nicknames().Get(index);
}
inline ::CPlayer_GetNicknameList_Response_PlayerNickname* PROTOBUF_NONNULL CPlayer_GetNicknameList_Response::add_nicknames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CPlayer_GetNicknameList_Response_PlayerNickname* _add = _internal_mutable_nicknames()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetNicknameList_Response.nicknames)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>& CPlayer_GetNicknameList_Response::nicknames() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetNicknameList_Response.nicknames)
  return _internal_nicknames();
}
inline const ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>&
CPlayer_GetNicknameList_Response::_internal_nicknames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nicknames_;
}
inline ::google::protobuf::RepeatedPtrField<::CPlayer_GetNicknameList_Response_PlayerNickname>* PROTOBUF_NONNULL
CPlayer_GetNicknameList_Response::_internal_mutable_nicknames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nicknames_;
}

// -------------------------------------------------------------------

// CPlayer_GetPerFriendPreferences_Request

// -------------------------------------------------------------------

// PerFriendPreferences

// optional fixed32 accountid = 1;
inline bool PerFriendPreferences::has_accountid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t PerFriendPreferences::accountid() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.accountid)
  return _internal_accountid();
}
inline void PerFriendPreferences::set_accountid(::uint32_t value) {
  _internal_set_accountid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.accountid)
}
inline ::uint32_t PerFriendPreferences::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void PerFriendPreferences::_internal_set_accountid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// optional string nickname = 2;
inline bool PerFriendPreferences::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PerFriendPreferences::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PerFriendPreferences::set_nickname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PerFriendPreferences.nickname)
}
inline std::string* PROTOBUF_NONNULL PerFriendPreferences::mutable_nickname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:PerFriendPreferences.nickname)
  return _s;
}
inline const std::string& PerFriendPreferences::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void PerFriendPreferences::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL PerFriendPreferences::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE PerFriendPreferences::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PerFriendPreferences.nickname)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.nickname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.nickname_.Set("", GetArena());
  }
  return released;
}
inline void PerFriendPreferences::set_allocated_nickname(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nickname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nickname_.IsDefault()) {
    _impl_.nickname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:PerFriendPreferences.nickname)
}

// optional .ENotificationSetting notifications_showingame = 3 [default = k_ENotificationSettingNotifyUseDefault];
inline bool PerFriendPreferences::has_notifications_showingame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_notifications_showingame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notifications_showingame_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ENotificationSetting PerFriendPreferences::notifications_showingame() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.notifications_showingame)
  return _internal_notifications_showingame();
}
inline void PerFriendPreferences::set_notifications_showingame(::ENotificationSetting value) {
  _internal_set_notifications_showingame(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.notifications_showingame)
}
inline ::ENotificationSetting PerFriendPreferences::_internal_notifications_showingame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ENotificationSetting>(_impl_.notifications_showingame_);
}
inline void PerFriendPreferences::_internal_set_notifications_showingame(::ENotificationSetting value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ENotificationSetting_internal_data_));
                                          _impl_.notifications_showingame_ = value;
}

// optional .ENotificationSetting notifications_showonline = 4 [default = k_ENotificationSettingNotifyUseDefault];
inline bool PerFriendPreferences::has_notifications_showonline() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_notifications_showonline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notifications_showonline_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ENotificationSetting PerFriendPreferences::notifications_showonline() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.notifications_showonline)
  return _internal_notifications_showonline();
}
inline void PerFriendPreferences::set_notifications_showonline(::ENotificationSetting value) {
  _internal_set_notifications_showonline(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.notifications_showonline)
}
inline ::ENotificationSetting PerFriendPreferences::_internal_notifications_showonline() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ENotificationSetting>(_impl_.notifications_showonline_);
}
inline void PerFriendPreferences::_internal_set_notifications_showonline(::ENotificationSetting value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ENotificationSetting_internal_data_));
                                          _impl_.notifications_showonline_ = value;
}

// optional .ENotificationSetting notifications_showmessages = 5 [default = k_ENotificationSettingNotifyUseDefault];
inline bool PerFriendPreferences::has_notifications_showmessages() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_notifications_showmessages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notifications_showmessages_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ENotificationSetting PerFriendPreferences::notifications_showmessages() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.notifications_showmessages)
  return _internal_notifications_showmessages();
}
inline void PerFriendPreferences::set_notifications_showmessages(::ENotificationSetting value) {
  _internal_set_notifications_showmessages(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.notifications_showmessages)
}
inline ::ENotificationSetting PerFriendPreferences::_internal_notifications_showmessages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ENotificationSetting>(_impl_.notifications_showmessages_);
}
inline void PerFriendPreferences::_internal_set_notifications_showmessages(::ENotificationSetting value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ENotificationSetting_internal_data_));
                                          _impl_.notifications_showmessages_ = value;
}

// optional .ENotificationSetting sounds_showingame = 6 [default = k_ENotificationSettingNotifyUseDefault];
inline bool PerFriendPreferences::has_sounds_showingame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_sounds_showingame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sounds_showingame_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::ENotificationSetting PerFriendPreferences::sounds_showingame() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.sounds_showingame)
  return _internal_sounds_showingame();
}
inline void PerFriendPreferences::set_sounds_showingame(::ENotificationSetting value) {
  _internal_set_sounds_showingame(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.sounds_showingame)
}
inline ::ENotificationSetting PerFriendPreferences::_internal_sounds_showingame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ENotificationSetting>(_impl_.sounds_showingame_);
}
inline void PerFriendPreferences::_internal_set_sounds_showingame(::ENotificationSetting value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ENotificationSetting_internal_data_));
                                          _impl_.sounds_showingame_ = value;
}

// optional .ENotificationSetting sounds_showonline = 7 [default = k_ENotificationSettingNotifyUseDefault];
inline bool PerFriendPreferences::has_sounds_showonline() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_sounds_showonline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sounds_showonline_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::ENotificationSetting PerFriendPreferences::sounds_showonline() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.sounds_showonline)
  return _internal_sounds_showonline();
}
inline void PerFriendPreferences::set_sounds_showonline(::ENotificationSetting value) {
  _internal_set_sounds_showonline(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.sounds_showonline)
}
inline ::ENotificationSetting PerFriendPreferences::_internal_sounds_showonline() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ENotificationSetting>(_impl_.sounds_showonline_);
}
inline void PerFriendPreferences::_internal_set_sounds_showonline(::ENotificationSetting value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ENotificationSetting_internal_data_));
                                          _impl_.sounds_showonline_ = value;
}

// optional .ENotificationSetting sounds_showmessages = 8 [default = k_ENotificationSettingNotifyUseDefault];
inline bool PerFriendPreferences::has_sounds_showmessages() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_sounds_showmessages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sounds_showmessages_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::ENotificationSetting PerFriendPreferences::sounds_showmessages() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.sounds_showmessages)
  return _internal_sounds_showmessages();
}
inline void PerFriendPreferences::set_sounds_showmessages(::ENotificationSetting value) {
  _internal_set_sounds_showmessages(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.sounds_showmessages)
}
inline ::ENotificationSetting PerFriendPreferences::_internal_sounds_showmessages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ENotificationSetting>(_impl_.sounds_showmessages_);
}
inline void PerFriendPreferences::_internal_set_sounds_showmessages(::ENotificationSetting value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ENotificationSetting_internal_data_));
                                          _impl_.sounds_showmessages_ = value;
}

// optional .ENotificationSetting notifications_sendmobile = 9 [default = k_ENotificationSettingNotifyUseDefault];
inline bool PerFriendPreferences::has_notifications_sendmobile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void PerFriendPreferences::clear_notifications_sendmobile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notifications_sendmobile_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::ENotificationSetting PerFriendPreferences::notifications_sendmobile() const {
  // @@protoc_insertion_point(field_get:PerFriendPreferences.notifications_sendmobile)
  return _internal_notifications_sendmobile();
}
inline void PerFriendPreferences::set_notifications_sendmobile(::ENotificationSetting value) {
  _internal_set_notifications_sendmobile(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:PerFriendPreferences.notifications_sendmobile)
}
inline ::ENotificationSetting PerFriendPreferences::_internal_notifications_sendmobile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ENotificationSetting>(_impl_.notifications_sendmobile_);
}
inline void PerFriendPreferences::_internal_set_notifications_sendmobile(::ENotificationSetting value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ENotificationSetting_internal_data_));
                                          _impl_.notifications_sendmobile_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetPerFriendPreferences_Response

// repeated .PerFriendPreferences preferences = 1;
inline int CPlayer_GetPerFriendPreferences_Response::_internal_preferences_size() const {
  return _internal_preferences().size();
}
inline int CPlayer_GetPerFriendPreferences_Response::preferences_size() const {
  return _internal_preferences_size();
}
inline void CPlayer_GetPerFriendPreferences_Response::clear_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preferences_.Clear();
}
inline ::PerFriendPreferences* PROTOBUF_NONNULL CPlayer_GetPerFriendPreferences_Response::mutable_preferences(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CPlayer_GetPerFriendPreferences_Response.preferences)
  return _internal_mutable_preferences()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>* PROTOBUF_NONNULL CPlayer_GetPerFriendPreferences_Response::mutable_preferences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CPlayer_GetPerFriendPreferences_Response.preferences)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_preferences();
}
inline const ::PerFriendPreferences& CPlayer_GetPerFriendPreferences_Response::preferences(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetPerFriendPreferences_Response.preferences)
  return _internal_preferences().Get(index);
}
inline ::PerFriendPreferences* PROTOBUF_NONNULL CPlayer_GetPerFriendPreferences_Response::add_preferences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::PerFriendPreferences* _add = _internal_mutable_preferences()->Add();
  // @@protoc_insertion_point(field_add:CPlayer_GetPerFriendPreferences_Response.preferences)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>& CPlayer_GetPerFriendPreferences_Response::preferences() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CPlayer_GetPerFriendPreferences_Response.preferences)
  return _internal_preferences();
}
inline const ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>&
CPlayer_GetPerFriendPreferences_Response::_internal_preferences() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preferences_;
}
inline ::google::protobuf::RepeatedPtrField<::PerFriendPreferences>* PROTOBUF_NONNULL
CPlayer_GetPerFriendPreferences_Response::_internal_mutable_preferences() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.preferences_;
}

// -------------------------------------------------------------------

// CPlayer_SetPerFriendPreferences_Request

// optional .PerFriendPreferences preferences = 1;
inline bool CPlayer_SetPerFriendPreferences_Request::has_preferences() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.preferences_ != nullptr);
  return value;
}
inline void CPlayer_SetPerFriendPreferences_Request::clear_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.preferences_ != nullptr) _impl_.preferences_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PerFriendPreferences& CPlayer_SetPerFriendPreferences_Request::_internal_preferences() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::PerFriendPreferences* p = _impl_.preferences_;
  return p != nullptr ? *p : reinterpret_cast<const ::PerFriendPreferences&>(::_PerFriendPreferences_default_instance_);
}
inline const ::PerFriendPreferences& CPlayer_SetPerFriendPreferences_Request::preferences() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_SetPerFriendPreferences_Request.preferences)
  return _internal_preferences();
}
inline void CPlayer_SetPerFriendPreferences_Request::unsafe_arena_set_allocated_preferences(
    ::PerFriendPreferences* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferences_);
  }
  _impl_.preferences_ = reinterpret_cast<::PerFriendPreferences*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CPlayer_SetPerFriendPreferences_Request.preferences)
}
inline ::PerFriendPreferences* PROTOBUF_NULLABLE CPlayer_SetPerFriendPreferences_Request::release_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PerFriendPreferences* released = _impl_.preferences_;
  _impl_.preferences_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::PerFriendPreferences* PROTOBUF_NULLABLE CPlayer_SetPerFriendPreferences_Request::unsafe_arena_release_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CPlayer_SetPerFriendPreferences_Request.preferences)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PerFriendPreferences* temp = _impl_.preferences_;
  _impl_.preferences_ = nullptr;
  return temp;
}
inline ::PerFriendPreferences* PROTOBUF_NONNULL CPlayer_SetPerFriendPreferences_Request::_internal_mutable_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.preferences_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::PerFriendPreferences>(GetArena());
    _impl_.preferences_ = reinterpret_cast<::PerFriendPreferences*>(p);
  }
  return _impl_.preferences_;
}
inline ::PerFriendPreferences* PROTOBUF_NONNULL CPlayer_SetPerFriendPreferences_Request::mutable_preferences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::PerFriendPreferences* _msg = _internal_mutable_preferences();
  // @@protoc_insertion_point(field_mutable:CPlayer_SetPerFriendPreferences_Request.preferences)
  return _msg;
}
inline void CPlayer_SetPerFriendPreferences_Request::set_allocated_preferences(::PerFriendPreferences* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferences_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.preferences_ = reinterpret_cast<::PerFriendPreferences*>(value);
  // @@protoc_insertion_point(field_set_allocated:CPlayer_SetPerFriendPreferences_Request.preferences)
}

// -------------------------------------------------------------------

// CPlayer_SetPerFriendPreferences_Response

// -------------------------------------------------------------------

// CPlayer_AddFriend_Request

// optional fixed64 steamid = 1 [(.description) = "Steam ID of user to whom to send a friend invite."];
inline bool CPlayer_AddFriend_Request::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_AddFriend_Request::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CPlayer_AddFriend_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CPlayer_AddFriend_Request.steamid)
  return _internal_steamid();
}
inline void CPlayer_AddFriend_Request::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_AddFriend_Request.steamid)
}
inline ::uint64_t CPlayer_AddFriend_Request::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CPlayer_AddFriend_Request::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// -------------------------------------------------------------------

// CPlayer_AddFriend_Response

// optional bool invite_sent = 1 [(.description) = "True if the operation was successful, false otherwise."];
inline bool CPlayer_AddFriend_Response::has_invite_sent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_AddFriend_Response::clear_invite_sent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invite_sent_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CPlayer_AddFriend_Response::invite_sent() const {
  // @@protoc_insertion_point(field_get:CPlayer_AddFriend_Response.invite_sent)
  return _internal_invite_sent();
}
inline void CPlayer_AddFriend_Response::set_invite_sent(bool value) {
  _internal_set_invite_sent(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_AddFriend_Response.invite_sent)
}
inline bool CPlayer_AddFriend_Response::_internal_invite_sent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invite_sent_;
}
inline void CPlayer_AddFriend_Response::_internal_set_invite_sent(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invite_sent_ = value;
}

// optional uint32 friend_relationship = 2 [(.description) = "the resulting relationship.  Depending on state, may move directly to friends rather than invite sent"];
inline bool CPlayer_AddFriend_Response::has_friend_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_AddFriend_Response::clear_friend_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_relationship_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CPlayer_AddFriend_Response::friend_relationship() const {
  // @@protoc_insertion_point(field_get:CPlayer_AddFriend_Response.friend_relationship)
  return _internal_friend_relationship();
}
inline void CPlayer_AddFriend_Response::set_friend_relationship(::uint32_t value) {
  _internal_set_friend_relationship(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_AddFriend_Response.friend_relationship)
}
inline ::uint32_t CPlayer_AddFriend_Response::_internal_friend_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friend_relationship_;
}
inline void CPlayer_AddFriend_Response::_internal_set_friend_relationship(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_relationship_ = value;
}

// -------------------------------------------------------------------

// CPlayer_RemoveFriend_Request

// optional fixed64 steamid = 1 [(.description) = "Steam ID of friend to remove."];
inline bool CPlayer_RemoveFriend_Request::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_RemoveFriend_Request::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CPlayer_RemoveFriend_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CPlayer_RemoveFriend_Request.steamid)
  return _internal_steamid();
}
inline void CPlayer_RemoveFriend_Request::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_RemoveFriend_Request.steamid)
}
inline ::uint64_t CPlayer_RemoveFriend_Request::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CPlayer_RemoveFriend_Request::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// -------------------------------------------------------------------

// CPlayer_RemoveFriend_Response

// optional uint32 friend_relationship = 1 [(.description) = "the resulting relationship"];
inline bool CPlayer_RemoveFriend_Response::has_friend_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_RemoveFriend_Response::clear_friend_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_relationship_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CPlayer_RemoveFriend_Response::friend_relationship() const {
  // @@protoc_insertion_point(field_get:CPlayer_RemoveFriend_Response.friend_relationship)
  return _internal_friend_relationship();
}
inline void CPlayer_RemoveFriend_Response::set_friend_relationship(::uint32_t value) {
  _internal_set_friend_relationship(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_RemoveFriend_Response.friend_relationship)
}
inline ::uint32_t CPlayer_RemoveFriend_Response::_internal_friend_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friend_relationship_;
}
inline void CPlayer_RemoveFriend_Response::_internal_set_friend_relationship(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_relationship_ = value;
}

// -------------------------------------------------------------------

// CPlayer_IgnoreFriend_Request

// optional fixed64 steamid = 1;
inline bool CPlayer_IgnoreFriend_Request::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_IgnoreFriend_Request::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CPlayer_IgnoreFriend_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CPlayer_IgnoreFriend_Request.steamid)
  return _internal_steamid();
}
inline void CPlayer_IgnoreFriend_Request::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_IgnoreFriend_Request.steamid)
}
inline ::uint64_t CPlayer_IgnoreFriend_Request::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CPlayer_IgnoreFriend_Request::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// optional bool unignore = 2 [(.description) = "If set, remove from ignore/block list instead of adding "];
inline bool CPlayer_IgnoreFriend_Request::has_unignore() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_IgnoreFriend_Request::clear_unignore() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unignore_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CPlayer_IgnoreFriend_Request::unignore() const {
  // @@protoc_insertion_point(field_get:CPlayer_IgnoreFriend_Request.unignore)
  return _internal_unignore();
}
inline void CPlayer_IgnoreFriend_Request::set_unignore(bool value) {
  _internal_set_unignore(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_IgnoreFriend_Request.unignore)
}
inline bool CPlayer_IgnoreFriend_Request::_internal_unignore() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unignore_;
}
inline void CPlayer_IgnoreFriend_Request::_internal_set_unignore(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unignore_ = value;
}

// -------------------------------------------------------------------

// CPlayer_IgnoreFriend_Response

// optional uint32 friend_relationship = 1 [(.description) = "the resulting relationship"];
inline bool CPlayer_IgnoreFriend_Response::has_friend_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_IgnoreFriend_Response::clear_friend_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_relationship_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CPlayer_IgnoreFriend_Response::friend_relationship() const {
  // @@protoc_insertion_point(field_get:CPlayer_IgnoreFriend_Response.friend_relationship)
  return _internal_friend_relationship();
}
inline void CPlayer_IgnoreFriend_Response::set_friend_relationship(::uint32_t value) {
  _internal_set_friend_relationship(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_IgnoreFriend_Response.friend_relationship)
}
inline ::uint32_t CPlayer_IgnoreFriend_Response::_internal_friend_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friend_relationship_;
}
inline void CPlayer_IgnoreFriend_Response::_internal_set_friend_relationship(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_relationship_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetCommunityPreferences_Request

// -------------------------------------------------------------------

// CPlayer_CommunityPreferences

// optional bool hide_adult_content_violence = 1 [default = true];
inline bool CPlayer_CommunityPreferences::has_hide_adult_content_violence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CPlayer_CommunityPreferences::clear_hide_adult_content_violence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hide_adult_content_violence_ = true;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CPlayer_CommunityPreferences::hide_adult_content_violence() const {
  // @@protoc_insertion_point(field_get:CPlayer_CommunityPreferences.hide_adult_content_violence)
  return _internal_hide_adult_content_violence();
}
inline void CPlayer_CommunityPreferences::set_hide_adult_content_violence(bool value) {
  _internal_set_hide_adult_content_violence(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CPlayer_CommunityPreferences.hide_adult_content_violence)
}
inline bool CPlayer_CommunityPreferences::_internal_hide_adult_content_violence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hide_adult_content_violence_;
}
inline void CPlayer_CommunityPreferences::_internal_set_hide_adult_content_violence(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hide_adult_content_violence_ = value;
}

// optional bool hide_adult_content_sex = 2 [default = true];
inline bool CPlayer_CommunityPreferences::has_hide_adult_content_sex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CPlayer_CommunityPreferences::clear_hide_adult_content_sex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hide_adult_content_sex_ = true;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CPlayer_CommunityPreferences::hide_adult_content_sex() const {
  // @@protoc_insertion_point(field_get:CPlayer_CommunityPreferences.hide_adult_content_sex)
  return _internal_hide_adult_content_sex();
}
inline void CPlayer_CommunityPreferences::set_hide_adult_content_sex(bool value) {
  _internal_set_hide_adult_content_sex(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CPlayer_CommunityPreferences.hide_adult_content_sex)
}
inline bool CPlayer_CommunityPreferences::_internal_hide_adult_content_sex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hide_adult_content_sex_;
}
inline void CPlayer_CommunityPreferences::_internal_set_hide_adult_content_sex(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hide_adult_content_sex_ = value;
}

// optional bool parenthesize_nicknames = 4 [default = false];
inline bool CPlayer_CommunityPreferences::has_parenthesize_nicknames() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_CommunityPreferences::clear_parenthesize_nicknames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parenthesize_nicknames_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CPlayer_CommunityPreferences::parenthesize_nicknames() const {
  // @@protoc_insertion_point(field_get:CPlayer_CommunityPreferences.parenthesize_nicknames)
  return _internal_parenthesize_nicknames();
}
inline void CPlayer_CommunityPreferences::set_parenthesize_nicknames(bool value) {
  _internal_set_parenthesize_nicknames(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_CommunityPreferences.parenthesize_nicknames)
}
inline bool CPlayer_CommunityPreferences::_internal_parenthesize_nicknames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parenthesize_nicknames_;
}
inline void CPlayer_CommunityPreferences::_internal_set_parenthesize_nicknames(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parenthesize_nicknames_ = value;
}

// optional uint32 timestamp_updated = 3;
inline bool CPlayer_CommunityPreferences::has_timestamp_updated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_CommunityPreferences::clear_timestamp_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_updated_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CPlayer_CommunityPreferences::timestamp_updated() const {
  // @@protoc_insertion_point(field_get:CPlayer_CommunityPreferences.timestamp_updated)
  return _internal_timestamp_updated();
}
inline void CPlayer_CommunityPreferences::set_timestamp_updated(::uint32_t value) {
  _internal_set_timestamp_updated(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_CommunityPreferences.timestamp_updated)
}
inline ::uint32_t CPlayer_CommunityPreferences::_internal_timestamp_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_updated_;
}
inline void CPlayer_CommunityPreferences::_internal_set_timestamp_updated(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_updated_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetCommunityPreferences_Response

// optional .CPlayer_CommunityPreferences preferences = 1;
inline bool CPlayer_GetCommunityPreferences_Response::has_preferences() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.preferences_ != nullptr);
  return value;
}
inline void CPlayer_GetCommunityPreferences_Response::clear_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.preferences_ != nullptr) _impl_.preferences_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CPlayer_CommunityPreferences& CPlayer_GetCommunityPreferences_Response::_internal_preferences() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CPlayer_CommunityPreferences* p = _impl_.preferences_;
  return p != nullptr ? *p : reinterpret_cast<const ::CPlayer_CommunityPreferences&>(::_CPlayer_CommunityPreferences_default_instance_);
}
inline const ::CPlayer_CommunityPreferences& CPlayer_GetCommunityPreferences_Response::preferences() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetCommunityPreferences_Response.preferences)
  return _internal_preferences();
}
inline void CPlayer_GetCommunityPreferences_Response::unsafe_arena_set_allocated_preferences(
    ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferences_);
  }
  _impl_.preferences_ = reinterpret_cast<::CPlayer_CommunityPreferences*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CPlayer_GetCommunityPreferences_Response.preferences)
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE CPlayer_GetCommunityPreferences_Response::release_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CPlayer_CommunityPreferences* released = _impl_.preferences_;
  _impl_.preferences_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE CPlayer_GetCommunityPreferences_Response::unsafe_arena_release_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CPlayer_GetCommunityPreferences_Response.preferences)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CPlayer_CommunityPreferences* temp = _impl_.preferences_;
  _impl_.preferences_ = nullptr;
  return temp;
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL CPlayer_GetCommunityPreferences_Response::_internal_mutable_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.preferences_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CPlayer_CommunityPreferences>(GetArena());
    _impl_.preferences_ = reinterpret_cast<::CPlayer_CommunityPreferences*>(p);
  }
  return _impl_.preferences_;
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL CPlayer_GetCommunityPreferences_Response::mutable_preferences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CPlayer_CommunityPreferences* _msg = _internal_mutable_preferences();
  // @@protoc_insertion_point(field_mutable:CPlayer_GetCommunityPreferences_Response.preferences)
  return _msg;
}
inline void CPlayer_GetCommunityPreferences_Response::set_allocated_preferences(::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferences_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.preferences_ = reinterpret_cast<::CPlayer_CommunityPreferences*>(value);
  // @@protoc_insertion_point(field_set_allocated:CPlayer_GetCommunityPreferences_Response.preferences)
}

// -------------------------------------------------------------------

// CPlayer_SetCommunityPreferences_Request

// optional .CPlayer_CommunityPreferences preferences = 1;
inline bool CPlayer_SetCommunityPreferences_Request::has_preferences() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.preferences_ != nullptr);
  return value;
}
inline void CPlayer_SetCommunityPreferences_Request::clear_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.preferences_ != nullptr) _impl_.preferences_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CPlayer_CommunityPreferences& CPlayer_SetCommunityPreferences_Request::_internal_preferences() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CPlayer_CommunityPreferences* p = _impl_.preferences_;
  return p != nullptr ? *p : reinterpret_cast<const ::CPlayer_CommunityPreferences&>(::_CPlayer_CommunityPreferences_default_instance_);
}
inline const ::CPlayer_CommunityPreferences& CPlayer_SetCommunityPreferences_Request::preferences() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_SetCommunityPreferences_Request.preferences)
  return _internal_preferences();
}
inline void CPlayer_SetCommunityPreferences_Request::unsafe_arena_set_allocated_preferences(
    ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferences_);
  }
  _impl_.preferences_ = reinterpret_cast<::CPlayer_CommunityPreferences*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CPlayer_SetCommunityPreferences_Request.preferences)
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE CPlayer_SetCommunityPreferences_Request::release_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CPlayer_CommunityPreferences* released = _impl_.preferences_;
  _impl_.preferences_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE CPlayer_SetCommunityPreferences_Request::unsafe_arena_release_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CPlayer_SetCommunityPreferences_Request.preferences)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CPlayer_CommunityPreferences* temp = _impl_.preferences_;
  _impl_.preferences_ = nullptr;
  return temp;
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL CPlayer_SetCommunityPreferences_Request::_internal_mutable_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.preferences_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CPlayer_CommunityPreferences>(GetArena());
    _impl_.preferences_ = reinterpret_cast<::CPlayer_CommunityPreferences*>(p);
  }
  return _impl_.preferences_;
}
inline ::CPlayer_CommunityPreferences* PROTOBUF_NONNULL CPlayer_SetCommunityPreferences_Request::mutable_preferences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CPlayer_CommunityPreferences* _msg = _internal_mutable_preferences();
  // @@protoc_insertion_point(field_mutable:CPlayer_SetCommunityPreferences_Request.preferences)
  return _msg;
}
inline void CPlayer_SetCommunityPreferences_Request::set_allocated_preferences(::CPlayer_CommunityPreferences* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferences_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.preferences_ = reinterpret_cast<::CPlayer_CommunityPreferences*>(value);
  // @@protoc_insertion_point(field_set_allocated:CPlayer_SetCommunityPreferences_Request.preferences)
}

// -------------------------------------------------------------------

// CPlayer_SetCommunityPreferences_Response

// -------------------------------------------------------------------

// CPlayer_GetNewSteamAnnouncementState_Request

// optional int32 language = 1;
inline bool CPlayer_GetNewSteamAnnouncementState_Request::has_language() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetNewSteamAnnouncementState_Request::clear_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t CPlayer_GetNewSteamAnnouncementState_Request::language() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetNewSteamAnnouncementState_Request.language)
  return _internal_language();
}
inline void CPlayer_GetNewSteamAnnouncementState_Request::set_language(::int32_t value) {
  _internal_set_language(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_GetNewSteamAnnouncementState_Request.language)
}
inline ::int32_t CPlayer_GetNewSteamAnnouncementState_Request::_internal_language() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.language_;
}
inline void CPlayer_GetNewSteamAnnouncementState_Request::_internal_set_language(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_ = value;
}

// -------------------------------------------------------------------

// CPlayer_GetNewSteamAnnouncementState_Response

// optional int32 state = 1;
inline bool CPlayer_GetNewSteamAnnouncementState_Response::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CPlayer_GetNewSteamAnnouncementState_Response::state() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetNewSteamAnnouncementState_Response.state)
  return _internal_state();
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::set_state(::int32_t value) {
  _internal_set_state(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CPlayer_GetNewSteamAnnouncementState_Response.state)
}
inline ::int32_t CPlayer_GetNewSteamAnnouncementState_Response::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::_internal_set_state(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// optional string announcement_headline = 2;
inline bool CPlayer_GetNewSteamAnnouncementState_Response::has_announcement_headline() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::clear_announcement_headline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcement_headline_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPlayer_GetNewSteamAnnouncementState_Response::announcement_headline() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetNewSteamAnnouncementState_Response.announcement_headline)
  return _internal_announcement_headline();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CPlayer_GetNewSteamAnnouncementState_Response::set_announcement_headline(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.announcement_headline_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CPlayer_GetNewSteamAnnouncementState_Response.announcement_headline)
}
inline std::string* PROTOBUF_NONNULL CPlayer_GetNewSteamAnnouncementState_Response::mutable_announcement_headline()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_announcement_headline();
  // @@protoc_insertion_point(field_mutable:CPlayer_GetNewSteamAnnouncementState_Response.announcement_headline)
  return _s;
}
inline const std::string& CPlayer_GetNewSteamAnnouncementState_Response::_internal_announcement_headline() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.announcement_headline_.Get();
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::_internal_set_announcement_headline(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.announcement_headline_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CPlayer_GetNewSteamAnnouncementState_Response::_internal_mutable_announcement_headline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.announcement_headline_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CPlayer_GetNewSteamAnnouncementState_Response::release_announcement_headline() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CPlayer_GetNewSteamAnnouncementState_Response.announcement_headline)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.announcement_headline_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.announcement_headline_.Set("", GetArena());
  }
  return released;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::set_allocated_announcement_headline(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.announcement_headline_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.announcement_headline_.IsDefault()) {
    _impl_.announcement_headline_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CPlayer_GetNewSteamAnnouncementState_Response.announcement_headline)
}

// optional string announcement_url = 3;
inline bool CPlayer_GetNewSteamAnnouncementState_Response::has_announcement_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::clear_announcement_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcement_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CPlayer_GetNewSteamAnnouncementState_Response::announcement_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CPlayer_GetNewSteamAnnouncementState_Response.announcement_url)
  return _internal_announcement_url();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CPlayer_GetNewSteamAnnouncementState_Response::set_announcement_url(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.announcement_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CPlayer_GetNewSteamAnnouncementState_Response.announcement_url)
}
inline std::string* PROTOBUF_NONNULL CPlayer_GetNewSteamAnnouncementState_Response::mutable_announcement_url()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_announcement_url();
  // @@protoc_insertion_point(field_mutable:CPlayer_GetNewSteamAnnouncementState_Response.announcement_url)
  return _s;
}
inline const std::string& CPlayer_GetNewSteamAnnouncementState_Response::_internal_announcement_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.announcement_url_.Get();
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::_internal_set_announcement_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.announcement_url_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CPlayer_GetNewSteamAnnouncementState_Response::_internal_mutable_announcement_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.announcement_url_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CPlayer_GetNewSteamAnnouncementState_Response::release_announcement_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CPlayer_GetNewSteamAnnouncementState_Response.announcement_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.announcement_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.announcement_url_.Set("", GetArena());
  }
  return released;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::set_allocated_announcement_url(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.announcement_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.announcement_url_.IsDefault()) {
    _impl_.announcement_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CPlayer_GetNewSteamAnnouncementState_Response.announcement_url)
}

// optional uint32 time_posted = 4;
inline bool CPlayer_GetNewSteamAnnouncementState_Response::has_time_posted() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::clear_time_posted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_posted_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CPlayer_GetNewSteamAnnouncementState_Response::time_posted() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetNewSteamAnnouncementState_Response.time_posted)
  return _internal_time_posted();
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::set_time_posted(::uint32_t value) {
  _internal_set_time_posted(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CPlayer_GetNewSteamAnnouncementState_Response.time_posted)
}
inline ::uint32_t CPlayer_GetNewSteamAnnouncementState_Response::_internal_time_posted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_posted_;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::_internal_set_time_posted(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_posted_ = value;
}

// optional uint64 announcement_gid = 5;
inline bool CPlayer_GetNewSteamAnnouncementState_Response::has_announcement_gid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::clear_announcement_gid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcement_gid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t CPlayer_GetNewSteamAnnouncementState_Response::announcement_gid() const {
  // @@protoc_insertion_point(field_get:CPlayer_GetNewSteamAnnouncementState_Response.announcement_gid)
  return _internal_announcement_gid();
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::set_announcement_gid(::uint64_t value) {
  _internal_set_announcement_gid(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CPlayer_GetNewSteamAnnouncementState_Response.announcement_gid)
}
inline ::uint64_t CPlayer_GetNewSteamAnnouncementState_Response::_internal_announcement_gid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.announcement_gid_;
}
inline void CPlayer_GetNewSteamAnnouncementState_Response::_internal_set_announcement_gid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcement_gid_ = value;
}

// -------------------------------------------------------------------

// CPlayer_UpdateSteamAnnouncementLastRead_Request

// optional uint64 announcement_gid = 1;
inline bool CPlayer_UpdateSteamAnnouncementLastRead_Request::has_announcement_gid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CPlayer_UpdateSteamAnnouncementLastRead_Request::clear_announcement_gid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcement_gid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CPlayer_UpdateSteamAnnouncementLastRead_Request::announcement_gid() const {
  // @@protoc_insertion_point(field_get:CPlayer_UpdateSteamAnnouncementLastRead_Request.announcement_gid)
  return _internal_announcement_gid();
}
inline void CPlayer_UpdateSteamAnnouncementLastRead_Request::set_announcement_gid(::uint64_t value) {
  _internal_set_announcement_gid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CPlayer_UpdateSteamAnnouncementLastRead_Request.announcement_gid)
}
inline ::uint64_t CPlayer_UpdateSteamAnnouncementLastRead_Request::_internal_announcement_gid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.announcement_gid_;
}
inline void CPlayer_UpdateSteamAnnouncementLastRead_Request::_internal_set_announcement_gid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.announcement_gid_ = value;
}

// optional uint32 time_posted = 2;
inline bool CPlayer_UpdateSteamAnnouncementLastRead_Request::has_time_posted() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CPlayer_UpdateSteamAnnouncementLastRead_Request::clear_time_posted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_posted_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CPlayer_UpdateSteamAnnouncementLastRead_Request::time_posted() const {
  // @@protoc_insertion_point(field_get:CPlayer_UpdateSteamAnnouncementLastRead_Request.time_posted)
  return _internal_time_posted();
}
inline void CPlayer_UpdateSteamAnnouncementLastRead_Request::set_time_posted(::uint32_t value) {
  _internal_set_time_posted(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CPlayer_UpdateSteamAnnouncementLastRead_Request.time_posted)
}
inline ::uint32_t CPlayer_UpdateSteamAnnouncementLastRead_Request::_internal_time_posted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_posted_;
}
inline void CPlayer_UpdateSteamAnnouncementLastRead_Request::_internal_set_time_posted(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_posted_ = value;
}

// -------------------------------------------------------------------

// CPlayer_UpdateSteamAnnouncementLastRead_Response

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ENotificationSetting> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ENotificationSetting>() {
  return ::ENotificationSetting_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // steammessages_5fplayer_2esteamworkssdk_2eproto_2epb_2eh

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steammessages_cloud.steamworkssdk.proto
// Protobuf C++ Version: 6.30.0-rc1

#ifndef steammessages_5fcloud_2esteamworkssdk_2eproto_2epb_2eh
#define steammessages_5fcloud_2esteamworkssdk_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fcloud_2esteamworkssdk_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_steammessages_5fcloud_2esteamworkssdk_2eproto;
}  // extern "C"
class CCloud_Delete_Request;
struct CCloud_Delete_RequestDefaultTypeInternal;
extern CCloud_Delete_RequestDefaultTypeInternal _CCloud_Delete_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_Delete_Request_class_data_;
class CCloud_Delete_Response;
struct CCloud_Delete_ResponseDefaultTypeInternal;
extern CCloud_Delete_ResponseDefaultTypeInternal _CCloud_Delete_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_Delete_Response_class_data_;
class CCloud_EnumerateUserFiles_Request;
struct CCloud_EnumerateUserFiles_RequestDefaultTypeInternal;
extern CCloud_EnumerateUserFiles_RequestDefaultTypeInternal _CCloud_EnumerateUserFiles_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_EnumerateUserFiles_Request_class_data_;
class CCloud_EnumerateUserFiles_Response;
struct CCloud_EnumerateUserFiles_ResponseDefaultTypeInternal;
extern CCloud_EnumerateUserFiles_ResponseDefaultTypeInternal _CCloud_EnumerateUserFiles_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_EnumerateUserFiles_Response_class_data_;
class CCloud_GetFileDetails_Request;
struct CCloud_GetFileDetails_RequestDefaultTypeInternal;
extern CCloud_GetFileDetails_RequestDefaultTypeInternal _CCloud_GetFileDetails_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_GetFileDetails_Request_class_data_;
class CCloud_GetFileDetails_Response;
struct CCloud_GetFileDetails_ResponseDefaultTypeInternal;
extern CCloud_GetFileDetails_ResponseDefaultTypeInternal _CCloud_GetFileDetails_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_GetFileDetails_Response_class_data_;
class CCloud_GetUploadServerInfo_Request;
struct CCloud_GetUploadServerInfo_RequestDefaultTypeInternal;
extern CCloud_GetUploadServerInfo_RequestDefaultTypeInternal _CCloud_GetUploadServerInfo_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_GetUploadServerInfo_Request_class_data_;
class CCloud_GetUploadServerInfo_Response;
struct CCloud_GetUploadServerInfo_ResponseDefaultTypeInternal;
extern CCloud_GetUploadServerInfo_ResponseDefaultTypeInternal _CCloud_GetUploadServerInfo_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_GetUploadServerInfo_Response_class_data_;
class CCloud_UserFile;
struct CCloud_UserFileDefaultTypeInternal;
extern CCloud_UserFileDefaultTypeInternal _CCloud_UserFile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CCloud_UserFile_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class CCloud_UserFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_UserFile) */ {
 public:
  inline CCloud_UserFile() : CCloud_UserFile(nullptr) {}
  ~CCloud_UserFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_UserFile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_UserFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_UserFile(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_UserFile(const CCloud_UserFile& from) : CCloud_UserFile(nullptr, from) {}
  inline CCloud_UserFile(CCloud_UserFile&& from) noexcept
      : CCloud_UserFile(nullptr, std::move(from)) {}
  inline CCloud_UserFile& operator=(const CCloud_UserFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_UserFile& operator=(CCloud_UserFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_UserFile& default_instance() {
    return *reinterpret_cast<const CCloud_UserFile*>(
        &_CCloud_UserFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CCloud_UserFile& a, CCloud_UserFile& b) { a.Swap(&b); }
  inline void Swap(CCloud_UserFile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_UserFile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_UserFile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_UserFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_UserFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_UserFile& from) { CCloud_UserFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_UserFile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_UserFile"; }

 protected:
  explicit CCloud_UserFile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_UserFile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_UserFile& from);
  CCloud_UserFile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_UserFile&& from) noexcept
      : CCloud_UserFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilenameFieldNumber = 3,
    kUrlFieldNumber = 6,
    kUgcidFieldNumber = 2,
    kAppidFieldNumber = 1,
    kFileSizeFieldNumber = 5,
    kTimestampFieldNumber = 4,
    kSteamidCreatorFieldNumber = 7,
  };
  // optional string filename = 3;
  bool has_filename() const;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_filename();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_filename();
  void set_allocated_filename(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_filename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_filename();

  public:
  // optional string url = 6;
  bool has_url() const;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_url();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_url();
  void set_allocated_url(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_url() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_url(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_url();

  public:
  // optional uint64 ugcid = 2;
  bool has_ugcid() const;
  void clear_ugcid() ;
  ::uint64_t ugcid() const;
  void set_ugcid(::uint64_t value);

  private:
  ::uint64_t _internal_ugcid() const;
  void _internal_set_ugcid(::uint64_t value);

  public:
  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // optional uint32 file_size = 5;
  bool has_file_size() const;
  void clear_file_size() ;
  ::uint32_t file_size() const;
  void set_file_size(::uint32_t value);

  private:
  ::uint32_t _internal_file_size() const;
  void _internal_set_file_size(::uint32_t value);

  public:
  // optional uint64 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // optional fixed64 steamid_creator = 7;
  bool has_steamid_creator() const;
  void clear_steamid_creator() ;
  ::uint64_t steamid_creator() const;
  void set_steamid_creator(::uint64_t value);

  private:
  ::uint64_t _internal_steamid_creator() const;
  void _internal_set_steamid_creator(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CCloud_UserFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 35,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_UserFile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::uint64_t ugcid_;
    ::uint32_t appid_;
    ::uint32_t file_size_;
    ::uint64_t timestamp_;
    ::uint64_t steamid_creator_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_UserFile_class_data_;
// -------------------------------------------------------------------

class CCloud_GetUploadServerInfo_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_GetUploadServerInfo_Response) */ {
 public:
  inline CCloud_GetUploadServerInfo_Response() : CCloud_GetUploadServerInfo_Response(nullptr) {}
  ~CCloud_GetUploadServerInfo_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_GetUploadServerInfo_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_GetUploadServerInfo_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_GetUploadServerInfo_Response(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_GetUploadServerInfo_Response(const CCloud_GetUploadServerInfo_Response& from) : CCloud_GetUploadServerInfo_Response(nullptr, from) {}
  inline CCloud_GetUploadServerInfo_Response(CCloud_GetUploadServerInfo_Response&& from) noexcept
      : CCloud_GetUploadServerInfo_Response(nullptr, std::move(from)) {}
  inline CCloud_GetUploadServerInfo_Response& operator=(const CCloud_GetUploadServerInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_GetUploadServerInfo_Response& operator=(CCloud_GetUploadServerInfo_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_GetUploadServerInfo_Response& default_instance() {
    return *reinterpret_cast<const CCloud_GetUploadServerInfo_Response*>(
        &_CCloud_GetUploadServerInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CCloud_GetUploadServerInfo_Response& a, CCloud_GetUploadServerInfo_Response& b) { a.Swap(&b); }
  inline void Swap(CCloud_GetUploadServerInfo_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_GetUploadServerInfo_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_GetUploadServerInfo_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_GetUploadServerInfo_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_GetUploadServerInfo_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_GetUploadServerInfo_Response& from) { CCloud_GetUploadServerInfo_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_GetUploadServerInfo_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_GetUploadServerInfo_Response"; }

 protected:
  explicit CCloud_GetUploadServerInfo_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_GetUploadServerInfo_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_GetUploadServerInfo_Response& from);
  CCloud_GetUploadServerInfo_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_GetUploadServerInfo_Response&& from) noexcept
      : CCloud_GetUploadServerInfo_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServerUrlFieldNumber = 1,
  };
  // optional string server_url = 1;
  bool has_server_url() const;
  void clear_server_url() ;
  const std::string& server_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server_url(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_server_url();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_server_url();
  void set_allocated_server_url(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_server_url() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_server_url(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_server_url();

  public:
  // @@protoc_insertion_point(class_scope:CCloud_GetUploadServerInfo_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_GetUploadServerInfo_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr server_url_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_GetUploadServerInfo_Response_class_data_;
// -------------------------------------------------------------------

class CCloud_GetUploadServerInfo_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_GetUploadServerInfo_Request) */ {
 public:
  inline CCloud_GetUploadServerInfo_Request() : CCloud_GetUploadServerInfo_Request(nullptr) {}
  ~CCloud_GetUploadServerInfo_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_GetUploadServerInfo_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_GetUploadServerInfo_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_GetUploadServerInfo_Request(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_GetUploadServerInfo_Request(const CCloud_GetUploadServerInfo_Request& from) : CCloud_GetUploadServerInfo_Request(nullptr, from) {}
  inline CCloud_GetUploadServerInfo_Request(CCloud_GetUploadServerInfo_Request&& from) noexcept
      : CCloud_GetUploadServerInfo_Request(nullptr, std::move(from)) {}
  inline CCloud_GetUploadServerInfo_Request& operator=(const CCloud_GetUploadServerInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_GetUploadServerInfo_Request& operator=(CCloud_GetUploadServerInfo_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_GetUploadServerInfo_Request& default_instance() {
    return *reinterpret_cast<const CCloud_GetUploadServerInfo_Request*>(
        &_CCloud_GetUploadServerInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CCloud_GetUploadServerInfo_Request& a, CCloud_GetUploadServerInfo_Request& b) { a.Swap(&b); }
  inline void Swap(CCloud_GetUploadServerInfo_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_GetUploadServerInfo_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_GetUploadServerInfo_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_GetUploadServerInfo_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_GetUploadServerInfo_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_GetUploadServerInfo_Request& from) { CCloud_GetUploadServerInfo_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_GetUploadServerInfo_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_GetUploadServerInfo_Request"; }

 protected:
  explicit CCloud_GetUploadServerInfo_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_GetUploadServerInfo_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_GetUploadServerInfo_Request& from);
  CCloud_GetUploadServerInfo_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_GetUploadServerInfo_Request&& from) noexcept
      : CCloud_GetUploadServerInfo_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1 [(.description) = "App ID to which a file will be uploaded to."];
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CCloud_GetUploadServerInfo_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_GetUploadServerInfo_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_GetUploadServerInfo_Request_class_data_;
// -------------------------------------------------------------------

class CCloud_GetFileDetails_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_GetFileDetails_Request) */ {
 public:
  inline CCloud_GetFileDetails_Request() : CCloud_GetFileDetails_Request(nullptr) {}
  ~CCloud_GetFileDetails_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_GetFileDetails_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_GetFileDetails_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_GetFileDetails_Request(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_GetFileDetails_Request(const CCloud_GetFileDetails_Request& from) : CCloud_GetFileDetails_Request(nullptr, from) {}
  inline CCloud_GetFileDetails_Request(CCloud_GetFileDetails_Request&& from) noexcept
      : CCloud_GetFileDetails_Request(nullptr, std::move(from)) {}
  inline CCloud_GetFileDetails_Request& operator=(const CCloud_GetFileDetails_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_GetFileDetails_Request& operator=(CCloud_GetFileDetails_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_GetFileDetails_Request& default_instance() {
    return *reinterpret_cast<const CCloud_GetFileDetails_Request*>(
        &_CCloud_GetFileDetails_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CCloud_GetFileDetails_Request& a, CCloud_GetFileDetails_Request& b) { a.Swap(&b); }
  inline void Swap(CCloud_GetFileDetails_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_GetFileDetails_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_GetFileDetails_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_GetFileDetails_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_GetFileDetails_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_GetFileDetails_Request& from) { CCloud_GetFileDetails_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_GetFileDetails_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_GetFileDetails_Request"; }

 protected:
  explicit CCloud_GetFileDetails_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_GetFileDetails_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_GetFileDetails_Request& from);
  CCloud_GetFileDetails_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_GetFileDetails_Request&& from) noexcept
      : CCloud_GetFileDetails_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUgcidFieldNumber = 1,
    kAppidFieldNumber = 2,
  };
  // optional uint64 ugcid = 1 [(.description) = "ID of the Cloud file to get details for."];
  bool has_ugcid() const;
  void clear_ugcid() ;
  ::uint64_t ugcid() const;
  void set_ugcid(::uint64_t value);

  private:
  ::uint64_t _internal_ugcid() const;
  void _internal_set_ugcid(::uint64_t value);

  public:
  // optional uint32 appid = 2 [(.description) = "App ID the file belongs to."];
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CCloud_GetFileDetails_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_GetFileDetails_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t ugcid_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_GetFileDetails_Request_class_data_;
// -------------------------------------------------------------------

class CCloud_EnumerateUserFiles_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_EnumerateUserFiles_Request) */ {
 public:
  inline CCloud_EnumerateUserFiles_Request() : CCloud_EnumerateUserFiles_Request(nullptr) {}
  ~CCloud_EnumerateUserFiles_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_EnumerateUserFiles_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_EnumerateUserFiles_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_EnumerateUserFiles_Request(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_EnumerateUserFiles_Request(const CCloud_EnumerateUserFiles_Request& from) : CCloud_EnumerateUserFiles_Request(nullptr, from) {}
  inline CCloud_EnumerateUserFiles_Request(CCloud_EnumerateUserFiles_Request&& from) noexcept
      : CCloud_EnumerateUserFiles_Request(nullptr, std::move(from)) {}
  inline CCloud_EnumerateUserFiles_Request& operator=(const CCloud_EnumerateUserFiles_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_EnumerateUserFiles_Request& operator=(CCloud_EnumerateUserFiles_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_EnumerateUserFiles_Request& default_instance() {
    return *reinterpret_cast<const CCloud_EnumerateUserFiles_Request*>(
        &_CCloud_EnumerateUserFiles_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CCloud_EnumerateUserFiles_Request& a, CCloud_EnumerateUserFiles_Request& b) { a.Swap(&b); }
  inline void Swap(CCloud_EnumerateUserFiles_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_EnumerateUserFiles_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_EnumerateUserFiles_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_EnumerateUserFiles_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_EnumerateUserFiles_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_EnumerateUserFiles_Request& from) { CCloud_EnumerateUserFiles_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_EnumerateUserFiles_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_EnumerateUserFiles_Request"; }

 protected:
  explicit CCloud_EnumerateUserFiles_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_EnumerateUserFiles_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_EnumerateUserFiles_Request& from);
  CCloud_EnumerateUserFiles_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_EnumerateUserFiles_Request&& from) noexcept
      : CCloud_EnumerateUserFiles_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppidFieldNumber = 1,
    kExtendedDetailsFieldNumber = 2,
    kCountFieldNumber = 3,
    kStartIndexFieldNumber = 4,
  };
  // optional uint32 appid = 1 [(.description) = "App ID to enumerate the files of."];
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // optional bool extended_details = 2 [(.description) = "(Optional) Get extended details back on the files found. Defaults to only returned the app Id and UGC Id of the files found."];
  bool has_extended_details() const;
  void clear_extended_details() ;
  bool extended_details() const;
  void set_extended_details(bool value);

  private:
  bool _internal_extended_details() const;
  void _internal_set_extended_details(bool value);

  public:
  // optional uint32 count = 3 [(.description) = "(Optional) Maximum number of results to return on this call. Defaults to a maximum of 500 files returned."];
  bool has_count() const;
  void clear_count() ;
  ::uint32_t count() const;
  void set_count(::uint32_t value);

  private:
  ::uint32_t _internal_count() const;
  void _internal_set_count(::uint32_t value);

  public:
  // optional uint32 start_index = 4 [(.description) = "(Optional) Starting index to begin enumeration at. Defaults to the beginning of the list."];
  bool has_start_index() const;
  void clear_start_index() ;
  ::uint32_t start_index() const;
  void set_start_index(::uint32_t value);

  private:
  ::uint32_t _internal_start_index() const;
  void _internal_set_start_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CCloud_EnumerateUserFiles_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_EnumerateUserFiles_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t appid_;
    bool extended_details_;
    ::uint32_t count_;
    ::uint32_t start_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_EnumerateUserFiles_Request_class_data_;
// -------------------------------------------------------------------

class CCloud_Delete_Response final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CCloud_Delete_Response) */ {
 public:
  inline CCloud_Delete_Response() : CCloud_Delete_Response(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_Delete_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_Delete_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_Delete_Response(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_Delete_Response(const CCloud_Delete_Response& from) : CCloud_Delete_Response(nullptr, from) {}
  inline CCloud_Delete_Response(CCloud_Delete_Response&& from) noexcept
      : CCloud_Delete_Response(nullptr, std::move(from)) {}
  inline CCloud_Delete_Response& operator=(const CCloud_Delete_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_Delete_Response& operator=(CCloud_Delete_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_Delete_Response& default_instance() {
    return *reinterpret_cast<const CCloud_Delete_Response*>(
        &_CCloud_Delete_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CCloud_Delete_Response& a, CCloud_Delete_Response& b) { a.Swap(&b); }
  inline void Swap(CCloud_Delete_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_Delete_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_Delete_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CCloud_Delete_Response>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CCloud_Delete_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CCloud_Delete_Response& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_Delete_Response"; }

 protected:
  explicit CCloud_Delete_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_Delete_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_Delete_Response& from);
  CCloud_Delete_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_Delete_Response&& from) noexcept
      : CCloud_Delete_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CCloud_Delete_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_Delete_Response& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_Delete_Response_class_data_;
// -------------------------------------------------------------------

class CCloud_Delete_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_Delete_Request) */ {
 public:
  inline CCloud_Delete_Request() : CCloud_Delete_Request(nullptr) {}
  ~CCloud_Delete_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_Delete_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_Delete_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_Delete_Request(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_Delete_Request(const CCloud_Delete_Request& from) : CCloud_Delete_Request(nullptr, from) {}
  inline CCloud_Delete_Request(CCloud_Delete_Request&& from) noexcept
      : CCloud_Delete_Request(nullptr, std::move(from)) {}
  inline CCloud_Delete_Request& operator=(const CCloud_Delete_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_Delete_Request& operator=(CCloud_Delete_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_Delete_Request& default_instance() {
    return *reinterpret_cast<const CCloud_Delete_Request*>(
        &_CCloud_Delete_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CCloud_Delete_Request& a, CCloud_Delete_Request& b) { a.Swap(&b); }
  inline void Swap(CCloud_Delete_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_Delete_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_Delete_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_Delete_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_Delete_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_Delete_Request& from) { CCloud_Delete_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_Delete_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_Delete_Request"; }

 protected:
  explicit CCloud_Delete_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_Delete_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_Delete_Request& from);
  CCloud_Delete_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_Delete_Request&& from) noexcept
      : CCloud_Delete_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilenameFieldNumber = 1,
    kAppidFieldNumber = 2,
  };
  // optional string filename = 1;
  bool has_filename() const;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_filename();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_filename();
  void set_allocated_filename(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_filename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_filename();

  public:
  // optional uint32 appid = 2 [(.description) = "App ID the file belongs to."];
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CCloud_Delete_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_Delete_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_Delete_Request_class_data_;
// -------------------------------------------------------------------

class CCloud_GetFileDetails_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_GetFileDetails_Response) */ {
 public:
  inline CCloud_GetFileDetails_Response() : CCloud_GetFileDetails_Response(nullptr) {}
  ~CCloud_GetFileDetails_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_GetFileDetails_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_GetFileDetails_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_GetFileDetails_Response(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_GetFileDetails_Response(const CCloud_GetFileDetails_Response& from) : CCloud_GetFileDetails_Response(nullptr, from) {}
  inline CCloud_GetFileDetails_Response(CCloud_GetFileDetails_Response&& from) noexcept
      : CCloud_GetFileDetails_Response(nullptr, std::move(from)) {}
  inline CCloud_GetFileDetails_Response& operator=(const CCloud_GetFileDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_GetFileDetails_Response& operator=(CCloud_GetFileDetails_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_GetFileDetails_Response& default_instance() {
    return *reinterpret_cast<const CCloud_GetFileDetails_Response*>(
        &_CCloud_GetFileDetails_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CCloud_GetFileDetails_Response& a, CCloud_GetFileDetails_Response& b) { a.Swap(&b); }
  inline void Swap(CCloud_GetFileDetails_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_GetFileDetails_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_GetFileDetails_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_GetFileDetails_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_GetFileDetails_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_GetFileDetails_Response& from) { CCloud_GetFileDetails_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_GetFileDetails_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_GetFileDetails_Response"; }

 protected:
  explicit CCloud_GetFileDetails_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_GetFileDetails_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_GetFileDetails_Response& from);
  CCloud_GetFileDetails_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_GetFileDetails_Response&& from) noexcept
      : CCloud_GetFileDetails_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDetailsFieldNumber = 1,
  };
  // optional .CCloud_UserFile details = 1;
  bool has_details() const;
  void clear_details() ;
  const ::CCloud_UserFile& details() const;
  [[nodiscard]] ::CCloud_UserFile* PROTOBUF_NULLABLE release_details();
  ::CCloud_UserFile* PROTOBUF_NONNULL mutable_details();
  void set_allocated_details(::CCloud_UserFile* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_details(::CCloud_UserFile* PROTOBUF_NULLABLE value);
  ::CCloud_UserFile* PROTOBUF_NULLABLE unsafe_arena_release_details();

  private:
  const ::CCloud_UserFile& _internal_details() const;
  ::CCloud_UserFile* PROTOBUF_NONNULL _internal_mutable_details();

  public:
  // @@protoc_insertion_point(class_scope:CCloud_GetFileDetails_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_GetFileDetails_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CCloud_UserFile* PROTOBUF_NULLABLE details_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_GetFileDetails_Response_class_data_;
// -------------------------------------------------------------------

class CCloud_EnumerateUserFiles_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCloud_EnumerateUserFiles_Response) */ {
 public:
  inline CCloud_EnumerateUserFiles_Response() : CCloud_EnumerateUserFiles_Response(nullptr) {}
  ~CCloud_EnumerateUserFiles_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CCloud_EnumerateUserFiles_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CCloud_EnumerateUserFiles_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCloud_EnumerateUserFiles_Response(::google::protobuf::internal::ConstantInitialized);

  inline CCloud_EnumerateUserFiles_Response(const CCloud_EnumerateUserFiles_Response& from) : CCloud_EnumerateUserFiles_Response(nullptr, from) {}
  inline CCloud_EnumerateUserFiles_Response(CCloud_EnumerateUserFiles_Response&& from) noexcept
      : CCloud_EnumerateUserFiles_Response(nullptr, std::move(from)) {}
  inline CCloud_EnumerateUserFiles_Response& operator=(const CCloud_EnumerateUserFiles_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCloud_EnumerateUserFiles_Response& operator=(CCloud_EnumerateUserFiles_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCloud_EnumerateUserFiles_Response& default_instance() {
    return *reinterpret_cast<const CCloud_EnumerateUserFiles_Response*>(
        &_CCloud_EnumerateUserFiles_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CCloud_EnumerateUserFiles_Response& a, CCloud_EnumerateUserFiles_Response& b) { a.Swap(&b); }
  inline void Swap(CCloud_EnumerateUserFiles_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCloud_EnumerateUserFiles_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCloud_EnumerateUserFiles_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CCloud_EnumerateUserFiles_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCloud_EnumerateUserFiles_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCloud_EnumerateUserFiles_Response& from) { CCloud_EnumerateUserFiles_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CCloud_EnumerateUserFiles_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CCloud_EnumerateUserFiles_Response"; }

 protected:
  explicit CCloud_EnumerateUserFiles_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CCloud_EnumerateUserFiles_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CCloud_EnumerateUserFiles_Response& from);
  CCloud_EnumerateUserFiles_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CCloud_EnumerateUserFiles_Response&& from) noexcept
      : CCloud_EnumerateUserFiles_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilesFieldNumber = 1,
    kTotalFilesFieldNumber = 2,
  };
  // repeated .CCloud_UserFile files = 1;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  ::CCloud_UserFile* PROTOBUF_NONNULL mutable_files(int index);
  ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>* PROTOBUF_NONNULL mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>* PROTOBUF_NONNULL _internal_mutable_files();
  public:
  const ::CCloud_UserFile& files(int index) const;
  ::CCloud_UserFile* PROTOBUF_NONNULL add_files();
  const ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>& files() const;
  // optional uint32 total_files = 2;
  bool has_total_files() const;
  void clear_total_files() ;
  ::uint32_t total_files() const;
  void set_total_files(::uint32_t value);

  private:
  ::uint32_t _internal_total_files() const;
  void _internal_set_total_files(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CCloud_EnumerateUserFiles_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CCloud_EnumerateUserFiles_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CCloud_UserFile > files_;
    ::uint32_t total_files_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fcloud_2esteamworkssdk_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CCloud_EnumerateUserFiles_Response_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CCloud_GetUploadServerInfo_Request

// optional uint32 appid = 1 [(.description) = "App ID to which a file will be uploaded to."];
inline bool CCloud_GetUploadServerInfo_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CCloud_GetUploadServerInfo_Request::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CCloud_GetUploadServerInfo_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_GetUploadServerInfo_Request.appid)
  return _internal_appid();
}
inline void CCloud_GetUploadServerInfo_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CCloud_GetUploadServerInfo_Request.appid)
}
inline ::uint32_t CCloud_GetUploadServerInfo_Request::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CCloud_GetUploadServerInfo_Request::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// -------------------------------------------------------------------

// CCloud_GetUploadServerInfo_Response

// optional string server_url = 1;
inline bool CCloud_GetUploadServerInfo_Response::has_server_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CCloud_GetUploadServerInfo_Response::clear_server_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCloud_GetUploadServerInfo_Response::server_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCloud_GetUploadServerInfo_Response.server_url)
  return _internal_server_url();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CCloud_GetUploadServerInfo_Response::set_server_url(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.server_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CCloud_GetUploadServerInfo_Response.server_url)
}
inline std::string* PROTOBUF_NONNULL CCloud_GetUploadServerInfo_Response::mutable_server_url()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_server_url();
  // @@protoc_insertion_point(field_mutable:CCloud_GetUploadServerInfo_Response.server_url)
  return _s;
}
inline const std::string& CCloud_GetUploadServerInfo_Response::_internal_server_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_url_.Get();
}
inline void CCloud_GetUploadServerInfo_Response::_internal_set_server_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.server_url_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CCloud_GetUploadServerInfo_Response::_internal_mutable_server_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.server_url_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CCloud_GetUploadServerInfo_Response::release_server_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCloud_GetUploadServerInfo_Response.server_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.server_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.server_url_.Set("", GetArena());
  }
  return released;
}
inline void CCloud_GetUploadServerInfo_Response::set_allocated_server_url(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.server_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.server_url_.IsDefault()) {
    _impl_.server_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CCloud_GetUploadServerInfo_Response.server_url)
}

// -------------------------------------------------------------------

// CCloud_GetFileDetails_Request

// optional uint64 ugcid = 1 [(.description) = "ID of the Cloud file to get details for."];
inline bool CCloud_GetFileDetails_Request::has_ugcid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CCloud_GetFileDetails_Request::clear_ugcid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ugcid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CCloud_GetFileDetails_Request::ugcid() const {
  // @@protoc_insertion_point(field_get:CCloud_GetFileDetails_Request.ugcid)
  return _internal_ugcid();
}
inline void CCloud_GetFileDetails_Request::set_ugcid(::uint64_t value) {
  _internal_set_ugcid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CCloud_GetFileDetails_Request.ugcid)
}
inline ::uint64_t CCloud_GetFileDetails_Request::_internal_ugcid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ugcid_;
}
inline void CCloud_GetFileDetails_Request::_internal_set_ugcid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ugcid_ = value;
}

// optional uint32 appid = 2 [(.description) = "App ID the file belongs to."];
inline bool CCloud_GetFileDetails_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CCloud_GetFileDetails_Request::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CCloud_GetFileDetails_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_GetFileDetails_Request.appid)
  return _internal_appid();
}
inline void CCloud_GetFileDetails_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CCloud_GetFileDetails_Request.appid)
}
inline ::uint32_t CCloud_GetFileDetails_Request::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CCloud_GetFileDetails_Request::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// -------------------------------------------------------------------

// CCloud_UserFile

// optional uint32 appid = 1;
inline bool CCloud_UserFile::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CCloud_UserFile::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CCloud_UserFile::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.appid)
  return _internal_appid();
}
inline void CCloud_UserFile::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.appid)
}
inline ::uint32_t CCloud_UserFile::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CCloud_UserFile::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// optional uint64 ugcid = 2;
inline bool CCloud_UserFile::has_ugcid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CCloud_UserFile::clear_ugcid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ugcid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CCloud_UserFile::ugcid() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.ugcid)
  return _internal_ugcid();
}
inline void CCloud_UserFile::set_ugcid(::uint64_t value) {
  _internal_set_ugcid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.ugcid)
}
inline ::uint64_t CCloud_UserFile::_internal_ugcid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ugcid_;
}
inline void CCloud_UserFile::_internal_set_ugcid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ugcid_ = value;
}

// optional string filename = 3;
inline bool CCloud_UserFile::has_filename() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CCloud_UserFile::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCloud_UserFile::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CCloud_UserFile::set_filename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CCloud_UserFile.filename)
}
inline std::string* PROTOBUF_NONNULL CCloud_UserFile::mutable_filename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:CCloud_UserFile.filename)
  return _s;
}
inline const std::string& CCloud_UserFile::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void CCloud_UserFile::_internal_set_filename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CCloud_UserFile::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CCloud_UserFile::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCloud_UserFile.filename)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.filename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.filename_.Set("", GetArena());
  }
  return released;
}
inline void CCloud_UserFile::set_allocated_filename(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.filename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.filename_.IsDefault()) {
    _impl_.filename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CCloud_UserFile.filename)
}

// optional uint64 timestamp = 4;
inline bool CCloud_UserFile::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CCloud_UserFile::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t CCloud_UserFile::timestamp() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.timestamp)
  return _internal_timestamp();
}
inline void CCloud_UserFile::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.timestamp)
}
inline ::uint64_t CCloud_UserFile::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void CCloud_UserFile::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// optional uint32 file_size = 5;
inline bool CCloud_UserFile::has_file_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CCloud_UserFile::clear_file_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CCloud_UserFile::file_size() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.file_size)
  return _internal_file_size();
}
inline void CCloud_UserFile::set_file_size(::uint32_t value) {
  _internal_set_file_size(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.file_size)
}
inline ::uint32_t CCloud_UserFile::_internal_file_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_size_;
}
inline void CCloud_UserFile::_internal_set_file_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_size_ = value;
}

// optional string url = 6;
inline bool CCloud_UserFile::has_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CCloud_UserFile::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CCloud_UserFile::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CCloud_UserFile::set_url(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CCloud_UserFile.url)
}
inline std::string* PROTOBUF_NONNULL CCloud_UserFile::mutable_url()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:CCloud_UserFile.url)
  return _s;
}
inline const std::string& CCloud_UserFile::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void CCloud_UserFile::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CCloud_UserFile::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CCloud_UserFile::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCloud_UserFile.url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.url_.Set("", GetArena());
  }
  return released;
}
inline void CCloud_UserFile::set_allocated_url(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.url_.IsDefault()) {
    _impl_.url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CCloud_UserFile.url)
}

// optional fixed64 steamid_creator = 7;
inline bool CCloud_UserFile::has_steamid_creator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CCloud_UserFile::clear_steamid_creator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_creator_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint64_t CCloud_UserFile::steamid_creator() const {
  // @@protoc_insertion_point(field_get:CCloud_UserFile.steamid_creator)
  return _internal_steamid_creator();
}
inline void CCloud_UserFile::set_steamid_creator(::uint64_t value) {
  _internal_set_steamid_creator(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CCloud_UserFile.steamid_creator)
}
inline ::uint64_t CCloud_UserFile::_internal_steamid_creator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_creator_;
}
inline void CCloud_UserFile::_internal_set_steamid_creator(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_creator_ = value;
}

// -------------------------------------------------------------------

// CCloud_GetFileDetails_Response

// optional .CCloud_UserFile details = 1;
inline bool CCloud_GetFileDetails_Response::has_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.details_ != nullptr);
  return value;
}
inline void CCloud_GetFileDetails_Response::clear_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.details_ != nullptr) _impl_.details_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CCloud_UserFile& CCloud_GetFileDetails_Response::_internal_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CCloud_UserFile* p = _impl_.details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCloud_UserFile&>(::_CCloud_UserFile_default_instance_);
}
inline const ::CCloud_UserFile& CCloud_GetFileDetails_Response::details() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCloud_GetFileDetails_Response.details)
  return _internal_details();
}
inline void CCloud_GetFileDetails_Response::unsafe_arena_set_allocated_details(
    ::CCloud_UserFile* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.details_);
  }
  _impl_.details_ = reinterpret_cast<::CCloud_UserFile*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCloud_GetFileDetails_Response.details)
}
inline ::CCloud_UserFile* PROTOBUF_NULLABLE CCloud_GetFileDetails_Response::release_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CCloud_UserFile* released = _impl_.details_;
  _impl_.details_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CCloud_UserFile* PROTOBUF_NULLABLE CCloud_GetFileDetails_Response::unsafe_arena_release_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCloud_GetFileDetails_Response.details)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CCloud_UserFile* temp = _impl_.details_;
  _impl_.details_ = nullptr;
  return temp;
}
inline ::CCloud_UserFile* PROTOBUF_NONNULL CCloud_GetFileDetails_Response::_internal_mutable_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.details_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CCloud_UserFile>(GetArena());
    _impl_.details_ = reinterpret_cast<::CCloud_UserFile*>(p);
  }
  return _impl_.details_;
}
inline ::CCloud_UserFile* PROTOBUF_NONNULL CCloud_GetFileDetails_Response::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CCloud_UserFile* _msg = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:CCloud_GetFileDetails_Response.details)
  return _msg;
}
inline void CCloud_GetFileDetails_Response::set_allocated_details(::CCloud_UserFile* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.details_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.details_ = reinterpret_cast<::CCloud_UserFile*>(value);
  // @@protoc_insertion_point(field_set_allocated:CCloud_GetFileDetails_Response.details)
}

// -------------------------------------------------------------------

// CCloud_EnumerateUserFiles_Request

// optional uint32 appid = 1 [(.description) = "App ID to enumerate the files of."];
inline bool CCloud_EnumerateUserFiles_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CCloud_EnumerateUserFiles_Request::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CCloud_EnumerateUserFiles_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.appid)
  return _internal_appid();
}
inline void CCloud_EnumerateUserFiles_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.appid)
}
inline ::uint32_t CCloud_EnumerateUserFiles_Request::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CCloud_EnumerateUserFiles_Request::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// optional bool extended_details = 2 [(.description) = "(Optional) Get extended details back on the files found. Defaults to only returned the app Id and UGC Id of the files found."];
inline bool CCloud_EnumerateUserFiles_Request::has_extended_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CCloud_EnumerateUserFiles_Request::clear_extended_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_details_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CCloud_EnumerateUserFiles_Request::extended_details() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.extended_details)
  return _internal_extended_details();
}
inline void CCloud_EnumerateUserFiles_Request::set_extended_details(bool value) {
  _internal_set_extended_details(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.extended_details)
}
inline bool CCloud_EnumerateUserFiles_Request::_internal_extended_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extended_details_;
}
inline void CCloud_EnumerateUserFiles_Request::_internal_set_extended_details(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_details_ = value;
}

// optional uint32 count = 3 [(.description) = "(Optional) Maximum number of results to return on this call. Defaults to a maximum of 500 files returned."];
inline bool CCloud_EnumerateUserFiles_Request::has_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CCloud_EnumerateUserFiles_Request::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CCloud_EnumerateUserFiles_Request::count() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.count)
  return _internal_count();
}
inline void CCloud_EnumerateUserFiles_Request::set_count(::uint32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.count)
}
inline ::uint32_t CCloud_EnumerateUserFiles_Request::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void CCloud_EnumerateUserFiles_Request::_internal_set_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// optional uint32 start_index = 4 [(.description) = "(Optional) Starting index to begin enumeration at. Defaults to the beginning of the list."];
inline bool CCloud_EnumerateUserFiles_Request::has_start_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CCloud_EnumerateUserFiles_Request::clear_start_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CCloud_EnumerateUserFiles_Request::start_index() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Request.start_index)
  return _internal_start_index();
}
inline void CCloud_EnumerateUserFiles_Request::set_start_index(::uint32_t value) {
  _internal_set_start_index(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Request.start_index)
}
inline ::uint32_t CCloud_EnumerateUserFiles_Request::_internal_start_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_index_;
}
inline void CCloud_EnumerateUserFiles_Request::_internal_set_start_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_index_ = value;
}

// -------------------------------------------------------------------

// CCloud_EnumerateUserFiles_Response

// repeated .CCloud_UserFile files = 1;
inline int CCloud_EnumerateUserFiles_Response::_internal_files_size() const {
  return _internal_files().size();
}
inline int CCloud_EnumerateUserFiles_Response::files_size() const {
  return _internal_files_size();
}
inline void CCloud_EnumerateUserFiles_Response::clear_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.files_.Clear();
}
inline ::CCloud_UserFile* PROTOBUF_NONNULL CCloud_EnumerateUserFiles_Response::mutable_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CCloud_EnumerateUserFiles_Response.files)
  return _internal_mutable_files()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>* PROTOBUF_NONNULL CCloud_EnumerateUserFiles_Response::mutable_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CCloud_EnumerateUserFiles_Response.files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_files();
}
inline const ::CCloud_UserFile& CCloud_EnumerateUserFiles_Response::files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Response.files)
  return _internal_files().Get(index);
}
inline ::CCloud_UserFile* PROTOBUF_NONNULL CCloud_EnumerateUserFiles_Response::add_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CCloud_UserFile* _add = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add:CCloud_EnumerateUserFiles_Response.files)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>& CCloud_EnumerateUserFiles_Response::files() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CCloud_EnumerateUserFiles_Response.files)
  return _internal_files();
}
inline const ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>&
CCloud_EnumerateUserFiles_Response::_internal_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<::CCloud_UserFile>* PROTOBUF_NONNULL
CCloud_EnumerateUserFiles_Response::_internal_mutable_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.files_;
}

// optional uint32 total_files = 2;
inline bool CCloud_EnumerateUserFiles_Response::has_total_files() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CCloud_EnumerateUserFiles_Response::clear_total_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_files_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CCloud_EnumerateUserFiles_Response::total_files() const {
  // @@protoc_insertion_point(field_get:CCloud_EnumerateUserFiles_Response.total_files)
  return _internal_total_files();
}
inline void CCloud_EnumerateUserFiles_Response::set_total_files(::uint32_t value) {
  _internal_set_total_files(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CCloud_EnumerateUserFiles_Response.total_files)
}
inline ::uint32_t CCloud_EnumerateUserFiles_Response::_internal_total_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_files_;
}
inline void CCloud_EnumerateUserFiles_Response::_internal_set_total_files(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_files_ = value;
}

// -------------------------------------------------------------------

// CCloud_Delete_Request

// optional string filename = 1;
inline bool CCloud_Delete_Request::has_filename() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CCloud_Delete_Request::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCloud_Delete_Request::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCloud_Delete_Request.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CCloud_Delete_Request::set_filename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CCloud_Delete_Request.filename)
}
inline std::string* PROTOBUF_NONNULL CCloud_Delete_Request::mutable_filename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:CCloud_Delete_Request.filename)
  return _s;
}
inline const std::string& CCloud_Delete_Request::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void CCloud_Delete_Request::_internal_set_filename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CCloud_Delete_Request::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CCloud_Delete_Request::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCloud_Delete_Request.filename)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.filename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.filename_.Set("", GetArena());
  }
  return released;
}
inline void CCloud_Delete_Request::set_allocated_filename(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.filename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.filename_.IsDefault()) {
    _impl_.filename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CCloud_Delete_Request.filename)
}

// optional uint32 appid = 2 [(.description) = "App ID the file belongs to."];
inline bool CCloud_Delete_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CCloud_Delete_Request::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CCloud_Delete_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCloud_Delete_Request.appid)
  return _internal_appid();
}
inline void CCloud_Delete_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CCloud_Delete_Request.appid)
}
inline ::uint32_t CCloud_Delete_Request::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CCloud_Delete_Request::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// -------------------------------------------------------------------

// CCloud_Delete_Response

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // steammessages_5fcloud_2esteamworkssdk_2eproto_2epb_2eh

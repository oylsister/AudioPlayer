// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steamdatagram_messages_auth.proto
// Protobuf C++ Version: 6.30.0-rc1

#include "steamdatagram_messages_auth.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CMsgSteamDatagramRelayAuthTicket_ExtraField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        string_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        int64_value_{::int64_t{0}},
        fixed64_value_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgSteamDatagramRelayAuthTicket_ExtraField::CMsgSteamDatagramRelayAuthTicket_ExtraField(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgSteamDatagramRelayAuthTicket_ExtraFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSteamDatagramRelayAuthTicket_ExtraFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSteamDatagramRelayAuthTicket_ExtraFieldDefaultTypeInternal() {}
  union {
    CMsgSteamDatagramRelayAuthTicket_ExtraField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSteamDatagramRelayAuthTicket_ExtraFieldDefaultTypeInternal _CMsgSteamDatagramRelayAuthTicket_ExtraField_default_instance_;

inline constexpr CMsgSteamDatagramHostedServerAddressPlaintext::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ipv6_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ipv4_{0u},
        port_{0u},
        routing_secret_{::uint64_t{0u}},
        protocol_version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgSteamDatagramHostedServerAddressPlaintext::CMsgSteamDatagramHostedServerAddressPlaintext(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgSteamDatagramHostedServerAddressPlaintext_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgSteamDatagramHostedServerAddressPlaintextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSteamDatagramHostedServerAddressPlaintextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSteamDatagramHostedServerAddressPlaintextDefaultTypeInternal() {}
  union {
    CMsgSteamDatagramHostedServerAddressPlaintext _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSteamDatagramHostedServerAddressPlaintextDefaultTypeInternal _CMsgSteamDatagramHostedServerAddressPlaintext_default_instance_;

inline constexpr CMsgSteamDatagramGameCoordinatorServerLogin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        routing_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        appdata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        legacy_identity_binary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        identity_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_generated_{0u},
        appid_{0u},
        dummy_steam_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgSteamDatagramGameCoordinatorServerLogin::CMsgSteamDatagramGameCoordinatorServerLogin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgSteamDatagramGameCoordinatorServerLogin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgSteamDatagramGameCoordinatorServerLoginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSteamDatagramGameCoordinatorServerLoginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSteamDatagramGameCoordinatorServerLoginDefaultTypeInternal() {}
  union {
    CMsgSteamDatagramGameCoordinatorServerLogin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSteamDatagramGameCoordinatorServerLoginDefaultTypeInternal _CMsgSteamDatagramGameCoordinatorServerLogin_default_instance_;

inline constexpr CMsgSteamDatagramCachedCredentialsForApp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        relay_tickets_{},
        private_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cert_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CMsgSteamDatagramCachedCredentialsForApp::CMsgSteamDatagramCachedCredentialsForApp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgSteamDatagramCachedCredentialsForApp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgSteamDatagramCachedCredentialsForAppDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSteamDatagramCachedCredentialsForAppDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSteamDatagramCachedCredentialsForAppDefaultTypeInternal() {}
  union {
    CMsgSteamDatagramCachedCredentialsForApp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSteamDatagramCachedCredentialsForAppDefaultTypeInternal _CMsgSteamDatagramCachedCredentialsForApp_default_instance_;

inline constexpr CMsgSteamDatagramSignedRelayAuthTicket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        certs_{},
        ticket_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reserved_do_not_use_{::uint64_t{0u}},
        key_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgSteamDatagramSignedRelayAuthTicket::CMsgSteamDatagramSignedRelayAuthTicket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgSteamDatagramSignedRelayAuthTicket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgSteamDatagramSignedRelayAuthTicketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSteamDatagramSignedRelayAuthTicketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSteamDatagramSignedRelayAuthTicketDefaultTypeInternal() {}
  union {
    CMsgSteamDatagramSignedRelayAuthTicket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSteamDatagramSignedRelayAuthTicketDefaultTypeInternal _CMsgSteamDatagramSignedRelayAuthTicket_default_instance_;

inline constexpr CMsgSteamDatagramSignedGameCoordinatorServerLogin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        login_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cert_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgSteamDatagramSignedGameCoordinatorServerLogin::CMsgSteamDatagramSignedGameCoordinatorServerLogin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgSteamDatagramSignedGameCoordinatorServerLoginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSteamDatagramSignedGameCoordinatorServerLoginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSteamDatagramSignedGameCoordinatorServerLoginDefaultTypeInternal() {}
  union {
    CMsgSteamDatagramSignedGameCoordinatorServerLogin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSteamDatagramSignedGameCoordinatorServerLoginDefaultTypeInternal _CMsgSteamDatagramSignedGameCoordinatorServerLogin_default_instance_;

inline constexpr CMsgSteamDatagramRelayAuthTicket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extra_fields_{},
        gameserver_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        legacy_authorized_client_identity_binary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        legacy_gameserver_identity_binary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authorized_client_identity_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameserver_identity_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        legacy_authorized_steam_id_{::uint64_t{0u}},
        time_expiry_{0u},
        authorized_public_ip_{0u},
        legacy_gameserver_steam_id_{::uint64_t{0u}},
        app_id_{0u},
        legacy_gameserver_pop_id_{0u},
        virtual_port_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgSteamDatagramRelayAuthTicket::CMsgSteamDatagramRelayAuthTicket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CMsgSteamDatagramRelayAuthTicket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CMsgSteamDatagramRelayAuthTicketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgSteamDatagramRelayAuthTicketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgSteamDatagramRelayAuthTicketDefaultTypeInternal() {}
  union {
    CMsgSteamDatagramRelayAuthTicket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgSteamDatagramRelayAuthTicketDefaultTypeInternal _CMsgSteamDatagramRelayAuthTicket_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_steamdatagram_5fmessages_5fauth_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_steamdatagram_5fmessages_5fauth_2eproto = nullptr;
const ::uint32_t
    TableStruct_steamdatagram_5fmessages_5fauth_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket_ExtraField, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.string_value_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.int64_value_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.fixed64_value_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.time_expiry_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.authorized_client_identity_string_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.gameserver_identity_string_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.authorized_public_ip_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.gameserver_address_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.app_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.virtual_port_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.extra_fields_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_authorized_steam_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_steam_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_pop_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_authorized_client_identity_binary_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_identity_binary_),
        6,
        3,
        4,
        7,
        0,
        9,
        11,
        ~0u,
        5,
        8,
        10,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedRelayAuthTicket, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedRelayAuthTicket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedRelayAuthTicket, _impl_.reserved_do_not_use_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedRelayAuthTicket, _impl_.ticket_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedRelayAuthTicket, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedRelayAuthTicket, _impl_.key_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedRelayAuthTicket, _impl_.certs_),
        2,
        0,
        1,
        3,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramCachedCredentialsForApp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramCachedCredentialsForApp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramCachedCredentialsForApp, _impl_.private_key_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramCachedCredentialsForApp, _impl_.cert_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramCachedCredentialsForApp, _impl_.relay_tickets_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.time_generated_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.appid_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.routing_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.appdata_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.legacy_identity_binary_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.identity_string_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.dummy_steam_id_),
        4,
        5,
        0,
        1,
        2,
        3,
        6,
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedGameCoordinatorServerLogin, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.cert_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.login_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.signature_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramHostedServerAddressPlaintext, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramHostedServerAddressPlaintext, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.ipv4_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.ipv6_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.routing_secret_),
        PROTOBUF_FIELD_OFFSET(::CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.protocol_version_),
        1,
        0,
        2,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::CMsgSteamDatagramRelayAuthTicket_ExtraField)},
        {16, 37, -1, sizeof(::CMsgSteamDatagramRelayAuthTicket)},
        {50, 63, -1, sizeof(::CMsgSteamDatagramSignedRelayAuthTicket)},
        {68, 79, -1, sizeof(::CMsgSteamDatagramCachedCredentialsForApp)},
        {82, 97, -1, sizeof(::CMsgSteamDatagramGameCoordinatorServerLogin)},
        {104, 115, -1, sizeof(::CMsgSteamDatagramSignedGameCoordinatorServerLogin)},
        {118, 131, -1, sizeof(::CMsgSteamDatagramHostedServerAddressPlaintext)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_CMsgSteamDatagramRelayAuthTicket_ExtraField_default_instance_._instance,
    &::_CMsgSteamDatagramRelayAuthTicket_default_instance_._instance,
    &::_CMsgSteamDatagramSignedRelayAuthTicket_default_instance_._instance,
    &::_CMsgSteamDatagramCachedCredentialsForApp_default_instance_._instance,
    &::_CMsgSteamDatagramGameCoordinatorServerLogin_default_instance_._instance,
    &::_CMsgSteamDatagramSignedGameCoordinatorServerLogin_default_instance_._instance,
    &::_CMsgSteamDatagramHostedServerAddressPlaintext_default_instance_._instance,
};
const char descriptor_table_protodef_steamdatagram_5fmessages_5fauth_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!steamdatagram_messages_auth.proto\032+ste"
    "amnetworkingsockets_messages_certs.proto"
    "\"\317\004\n CMsgSteamDatagramRelayAuthTicket\022\023\n"
    "\013time_expiry\030\001 \001(\007\022)\n!authorized_client_"
    "identity_string\030\016 \001(\t\022\"\n\032gameserver_iden"
    "tity_string\030\017 \001(\t\022\034\n\024authorized_public_i"
    "p\030\003 \001(\007\022\032\n\022gameserver_address\030\013 \001(\014\022\016\n\006a"
    "pp_id\030\007 \001(\r\022\024\n\014virtual_port\030\n \001(\r\022B\n\014ext"
    "ra_fields\030\010 \003(\0132,.CMsgSteamDatagramRelay"
    "AuthTicket.ExtraField\022\"\n\032legacy_authoriz"
    "ed_steam_id\030\002 \001(\006\022\"\n\032legacy_gameserver_s"
    "team_id\030\004 \001(\006\022 \n\030legacy_gameserver_pop_i"
    "d\030\t \001(\007\0220\n(legacy_authorized_client_iden"
    "tity_binary\030\014 \001(\014\022)\n!legacy_gameserver_i"
    "dentity_binary\030\r \001(\014\032\\\n\nExtraField\022\014\n\004na"
    "me\030\001 \001(\t\022\024\n\014string_value\030\002 \001(\t\022\023\n\013int64_"
    "value\030\003 \001(\022\022\025\n\rfixed64_value\030\005 \001(\006\"\254\001\n&C"
    "MsgSteamDatagramSignedRelayAuthTicket\022\033\n"
    "\023reserved_do_not_use\030\001 \001(\006\022\016\n\006ticket\030\003 \001"
    "(\014\022\021\n\tsignature\030\004 \001(\014\022\016\n\006key_id\030\002 \001(\006\0222\n"
    "\005certs\030\005 \003(\0132#.CMsgSteamDatagramCertific"
    "ateSigned\"d\n(CMsgSteamDatagramCachedCred"
    "entialsForApp\022\023\n\013private_key\030\001 \001(\014\022\014\n\004ce"
    "rt\030\002 \001(\014\022\025\n\rrelay_tickets\030\003 \003(\014\"\307\001\n+CMsg"
    "SteamDatagramGameCoordinatorServerLogin\022"
    "\026\n\016time_generated\030\001 \001(\r\022\r\n\005appid\030\002 \001(\r\022\017"
    "\n\007routing\030\003 \001(\014\022\017\n\007appdata\030\004 \001(\014\022\036\n\026lega"
    "cy_identity_binary\030\005 \001(\014\022\027\n\017identity_str"
    "ing\030\006 \001(\t\022\026\n\016dummy_steam_id\030c \001(\006\"\210\001\n1CM"
    "sgSteamDatagramSignedGameCoordinatorServ"
    "erLogin\0221\n\004cert\030\001 \001(\0132#.CMsgSteamDatagra"
    "mCertificateSigned\022\r\n\005login\030\002 \001(\014\022\021\n\tsig"
    "nature\030\003 \001(\014\"\213\001\n-CMsgSteamDatagramHosted"
    "ServerAddressPlaintext\022\014\n\004ipv4\030\001 \001(\007\022\014\n\004"
    "ipv6\030\002 \001(\014\022\014\n\004port\030\003 \001(\r\022\026\n\016routing_secr"
    "et\030\004 \001(\006\022\030\n\020protocol_version\030\005 \001(\rB\005H\001\200\001"
    "\000"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_steamdatagram_5fmessages_5fauth_2eproto_deps[1] = {
        &::descriptor_table_steamnetworkingsockets_5fmessages_5fcerts_2eproto,
};
static ::absl::once_flag descriptor_table_steamdatagram_5fmessages_5fauth_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_steamdatagram_5fmessages_5fauth_2eproto = {
    false,
    false,
    1441,
    descriptor_table_protodef_steamdatagram_5fmessages_5fauth_2eproto,
    "steamdatagram_messages_auth.proto",
    &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto_once,
    descriptor_table_steamdatagram_5fmessages_5fauth_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_steamdatagram_5fmessages_5fauth_2eproto::offsets,
    file_level_enum_descriptors_steamdatagram_5fmessages_5fauth_2eproto,
    file_level_service_descriptors_steamdatagram_5fmessages_5fauth_2eproto,
};
// ===================================================================

class CMsgSteamDatagramRelayAuthTicket_ExtraField::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgSteamDatagramRelayAuthTicket_ExtraField>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_._has_bits_);
};

CMsgSteamDatagramRelayAuthTicket_ExtraField::CMsgSteamDatagramRelayAuthTicket_ExtraField(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSteamDatagramRelayAuthTicket.ExtraField)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramRelayAuthTicket_ExtraField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgSteamDatagramRelayAuthTicket_ExtraField& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        string_value_(arena, from.string_value_) {}

CMsgSteamDatagramRelayAuthTicket_ExtraField::CMsgSteamDatagramRelayAuthTicket_ExtraField(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgSteamDatagramRelayAuthTicket_ExtraField& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgSteamDatagramRelayAuthTicket_ExtraField* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, int64_value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, int64_value_),
           offsetof(Impl_, fixed64_value_) -
               offsetof(Impl_, int64_value_) +
               sizeof(Impl_::fixed64_value_));

  // @@protoc_insertion_point(copy_constructor:CMsgSteamDatagramRelayAuthTicket.ExtraField)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramRelayAuthTicket_ExtraField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        string_value_(arena) {}

inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, int64_value_),
           0,
           offsetof(Impl_, fixed64_value_) -
               offsetof(Impl_, int64_value_) +
               sizeof(Impl_::fixed64_value_));
}
CMsgSteamDatagramRelayAuthTicket_ExtraField::~CMsgSteamDatagramRelayAuthTicket_ExtraField() {
  // @@protoc_insertion_point(destructor:CMsgSteamDatagramRelayAuthTicket.ExtraField)
  SharedDtor(*this);
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::SharedDtor(MessageLite& self) {
  CMsgSteamDatagramRelayAuthTicket_ExtraField& this_ = static_cast<CMsgSteamDatagramRelayAuthTicket_ExtraField&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.string_value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket_ExtraField::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgSteamDatagramRelayAuthTicket_ExtraField(arena);
}
constexpr auto CMsgSteamDatagramRelayAuthTicket_ExtraField::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgSteamDatagramRelayAuthTicket_ExtraField),
                                            alignof(CMsgSteamDatagramRelayAuthTicket_ExtraField));
}
constexpr auto CMsgSteamDatagramRelayAuthTicket_ExtraField::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgSteamDatagramRelayAuthTicket_ExtraField_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgSteamDatagramRelayAuthTicket_ExtraField::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgSteamDatagramRelayAuthTicket_ExtraField>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgSteamDatagramRelayAuthTicket_ExtraField::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgSteamDatagramRelayAuthTicket_ExtraField>(), &CMsgSteamDatagramRelayAuthTicket_ExtraField::ByteSizeLong,
              &CMsgSteamDatagramRelayAuthTicket_ExtraField::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_._cached_size_),
          false,
      },
      &CMsgSteamDatagramRelayAuthTicket_ExtraField::kDescriptorMethods,
      &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_ =
            CMsgSteamDatagramRelayAuthTicket_ExtraField::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket_ExtraField::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_.tc_table);
  return CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 68, 2>
CMsgSteamDatagramRelayAuthTicket_ExtraField::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgSteamDatagramRelayAuthTicket_ExtraField_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgSteamDatagramRelayAuthTicket_ExtraField>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.name_)}},
    // optional string string_value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.string_value_)}},
    // optional sint64 int64_value = 3;
    {::_pbi::TcParser::FastZ64S1,
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.int64_value_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 fixed64_value = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.fixed64_value_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string string_value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.string_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional sint64 int64_value = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.int64_value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // optional fixed64 fixed64_value = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.fixed64_value_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
    "\53\4\14\0\0\0\0\0"
    "CMsgSteamDatagramRelayAuthTicket.ExtraField"
    "name"
    "string_value"
  }},
};
PROTOBUF_NOINLINE void CMsgSteamDatagramRelayAuthTicket_ExtraField::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamDatagramRelayAuthTicket.ExtraField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.string_value_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.int64_value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fixed64_value_) -
        reinterpret_cast<char*>(&_impl_.int64_value_)) + sizeof(_impl_.fixed64_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket_ExtraField::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgSteamDatagramRelayAuthTicket_ExtraField& this_ = static_cast<const CMsgSteamDatagramRelayAuthTicket_ExtraField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket_ExtraField::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgSteamDatagramRelayAuthTicket_ExtraField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamDatagramRelayAuthTicket.ExtraField)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgSteamDatagramRelayAuthTicket.ExtraField.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string string_value = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_string_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional sint64 int64_value = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        3, this_._internal_int64_value(), target);
  }

  // optional fixed64 fixed64_value = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        5, this_._internal_fixed64_value(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamDatagramRelayAuthTicket.ExtraField)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgSteamDatagramRelayAuthTicket_ExtraField::ByteSizeLong(const MessageLite& base) {
  const CMsgSteamDatagramRelayAuthTicket_ExtraField& this_ = static_cast<const CMsgSteamDatagramRelayAuthTicket_ExtraField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgSteamDatagramRelayAuthTicket_ExtraField::ByteSizeLong() const {
  const CMsgSteamDatagramRelayAuthTicket_ExtraField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgSteamDatagramRelayAuthTicket.ExtraField)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 9;
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string string_value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_string_value());
    }
    // optional sint64 int64_value = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
          this_._internal_int64_value());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgSteamDatagramRelayAuthTicket_ExtraField::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgSteamDatagramRelayAuthTicket_ExtraField*>(&to_msg);
  auto& from = static_cast<const CMsgSteamDatagramRelayAuthTicket_ExtraField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamDatagramRelayAuthTicket.ExtraField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_string_value(from._internal_string_value());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.int64_value_ = from._impl_.int64_value_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.fixed64_value_ = from._impl_.fixed64_value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSteamDatagramRelayAuthTicket_ExtraField::CopyFrom(const CMsgSteamDatagramRelayAuthTicket_ExtraField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamDatagramRelayAuthTicket.ExtraField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgSteamDatagramRelayAuthTicket_ExtraField::InternalSwap(CMsgSteamDatagramRelayAuthTicket_ExtraField* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_value_, &other->_impl_.string_value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.fixed64_value_)
      + sizeof(CMsgSteamDatagramRelayAuthTicket_ExtraField::_impl_.fixed64_value_)
      - PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket_ExtraField, _impl_.int64_value_)>(
          reinterpret_cast<char*>(&_impl_.int64_value_),
          reinterpret_cast<char*>(&other->_impl_.int64_value_));
}

::google::protobuf::Metadata CMsgSteamDatagramRelayAuthTicket_ExtraField::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgSteamDatagramRelayAuthTicket::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgSteamDatagramRelayAuthTicket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_._has_bits_);
};

CMsgSteamDatagramRelayAuthTicket::CMsgSteamDatagramRelayAuthTicket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramRelayAuthTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSteamDatagramRelayAuthTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramRelayAuthTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgSteamDatagramRelayAuthTicket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extra_fields_{visibility, arena, from.extra_fields_},
        gameserver_address_(arena, from.gameserver_address_),
        legacy_authorized_client_identity_binary_(arena, from.legacy_authorized_client_identity_binary_),
        legacy_gameserver_identity_binary_(arena, from.legacy_gameserver_identity_binary_),
        authorized_client_identity_string_(arena, from.authorized_client_identity_string_),
        gameserver_identity_string_(arena, from.gameserver_identity_string_) {}

CMsgSteamDatagramRelayAuthTicket::CMsgSteamDatagramRelayAuthTicket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgSteamDatagramRelayAuthTicket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramRelayAuthTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgSteamDatagramRelayAuthTicket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, legacy_authorized_steam_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, legacy_authorized_steam_id_),
           offsetof(Impl_, virtual_port_) -
               offsetof(Impl_, legacy_authorized_steam_id_) +
               sizeof(Impl_::virtual_port_));

  // @@protoc_insertion_point(copy_constructor:CMsgSteamDatagramRelayAuthTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramRelayAuthTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        extra_fields_{visibility, arena},
        gameserver_address_(arena),
        legacy_authorized_client_identity_binary_(arena),
        legacy_gameserver_identity_binary_(arena),
        authorized_client_identity_string_(arena),
        gameserver_identity_string_(arena) {}

inline void CMsgSteamDatagramRelayAuthTicket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, legacy_authorized_steam_id_),
           0,
           offsetof(Impl_, virtual_port_) -
               offsetof(Impl_, legacy_authorized_steam_id_) +
               sizeof(Impl_::virtual_port_));
}
CMsgSteamDatagramRelayAuthTicket::~CMsgSteamDatagramRelayAuthTicket() {
  // @@protoc_insertion_point(destructor:CMsgSteamDatagramRelayAuthTicket)
  SharedDtor(*this);
}
inline void CMsgSteamDatagramRelayAuthTicket::SharedDtor(MessageLite& self) {
  CMsgSteamDatagramRelayAuthTicket& this_ = static_cast<CMsgSteamDatagramRelayAuthTicket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.gameserver_address_.Destroy();
  this_._impl_.legacy_authorized_client_identity_binary_.Destroy();
  this_._impl_.legacy_gameserver_identity_binary_.Destroy();
  this_._impl_.authorized_client_identity_string_.Destroy();
  this_._impl_.gameserver_identity_string_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgSteamDatagramRelayAuthTicket(arena);
}
constexpr auto CMsgSteamDatagramRelayAuthTicket::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.extra_fields_) +
          decltype(CMsgSteamDatagramRelayAuthTicket::_impl_.extra_fields_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgSteamDatagramRelayAuthTicket), alignof(CMsgSteamDatagramRelayAuthTicket), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgSteamDatagramRelayAuthTicket::PlacementNew_,
                                 sizeof(CMsgSteamDatagramRelayAuthTicket),
                                 alignof(CMsgSteamDatagramRelayAuthTicket));
  }
}
constexpr auto CMsgSteamDatagramRelayAuthTicket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgSteamDatagramRelayAuthTicket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgSteamDatagramRelayAuthTicket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgSteamDatagramRelayAuthTicket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgSteamDatagramRelayAuthTicket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgSteamDatagramRelayAuthTicket>(), &CMsgSteamDatagramRelayAuthTicket::ByteSizeLong,
              &CMsgSteamDatagramRelayAuthTicket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_._cached_size_),
          false,
      },
      &CMsgSteamDatagramRelayAuthTicket::kDescriptorMethods,
      &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgSteamDatagramRelayAuthTicket_class_data_ =
            CMsgSteamDatagramRelayAuthTicket::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgSteamDatagramRelayAuthTicket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgSteamDatagramRelayAuthTicket_class_data_.tc_table);
  return CMsgSteamDatagramRelayAuthTicket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 108, 2>
CMsgSteamDatagramRelayAuthTicket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934576,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgSteamDatagramRelayAuthTicket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgSteamDatagramRelayAuthTicket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed32 time_expiry = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.time_expiry_)}},
    // optional fixed64 legacy_authorized_steam_id = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_authorized_steam_id_)}},
    // optional fixed32 authorized_public_ip = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.authorized_public_ip_)}},
    // optional fixed64 legacy_gameserver_steam_id = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_steam_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 app_id = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgSteamDatagramRelayAuthTicket, _impl_.app_id_), 9>(),
     {56, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.app_id_)}},
    // repeated .CMsgSteamDatagramRelayAuthTicket.ExtraField extra_fields = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.extra_fields_)}},
    // optional fixed32 legacy_gameserver_pop_id = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_pop_id_)}},
    // optional uint32 virtual_port = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgSteamDatagramRelayAuthTicket, _impl_.virtual_port_), 11>(),
     {80, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.virtual_port_)}},
    // optional bytes gameserver_address = 11;
    {::_pbi::TcParser::FastBS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.gameserver_address_)}},
    // optional bytes legacy_authorized_client_identity_binary = 12;
    {::_pbi::TcParser::FastBS1,
     {98, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_authorized_client_identity_binary_)}},
    // optional bytes legacy_gameserver_identity_binary = 13;
    {::_pbi::TcParser::FastBS1,
     {106, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_identity_binary_)}},
    // optional string authorized_client_identity_string = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.authorized_client_identity_string_)}},
    // optional string gameserver_identity_string = 15;
    {::_pbi::TcParser::FastSS1,
     {122, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.gameserver_identity_string_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed32 time_expiry = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.time_expiry_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 legacy_authorized_steam_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_authorized_steam_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed32 authorized_public_ip = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.authorized_public_ip_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 legacy_gameserver_steam_id = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_steam_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 app_id = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.app_id_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgSteamDatagramRelayAuthTicket.ExtraField extra_fields = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.extra_fields_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional fixed32 legacy_gameserver_pop_id = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_pop_id_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional uint32 virtual_port = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.virtual_port_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes gameserver_address = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.gameserver_address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes legacy_authorized_client_identity_binary = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_authorized_client_identity_binary_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes legacy_gameserver_identity_binary = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_gameserver_identity_binary_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string authorized_client_identity_string = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.authorized_client_identity_string_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string gameserver_identity_string = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.gameserver_identity_string_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgSteamDatagramRelayAuthTicket_ExtraField>()},
  }},
  {{
    "\40\0\0\0\0\0\0\0\0\0\0\0\41\32\0\0"
    "CMsgSteamDatagramRelayAuthTicket"
    "authorized_client_identity_string"
    "gameserver_identity_string"
  }},
};
PROTOBUF_NOINLINE void CMsgSteamDatagramRelayAuthTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamDatagramRelayAuthTicket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extra_fields_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.gameserver_address_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.legacy_authorized_client_identity_binary_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.legacy_gameserver_identity_binary_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.authorized_client_identity_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.gameserver_identity_string_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.legacy_authorized_steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.authorized_public_ip_) -
        reinterpret_cast<char*>(&_impl_.legacy_authorized_steam_id_)) + sizeof(_impl_.authorized_public_ip_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.legacy_gameserver_steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.virtual_port_) -
        reinterpret_cast<char*>(&_impl_.legacy_gameserver_steam_id_)) + sizeof(_impl_.virtual_port_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgSteamDatagramRelayAuthTicket& this_ = static_cast<const CMsgSteamDatagramRelayAuthTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramRelayAuthTicket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgSteamDatagramRelayAuthTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamDatagramRelayAuthTicket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional fixed32 time_expiry = 1;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this_._internal_time_expiry(), target);
  }

  // optional fixed64 legacy_authorized_steam_id = 2;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this_._internal_legacy_authorized_steam_id(), target);
  }

  // optional fixed32 authorized_public_ip = 3;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        3, this_._internal_authorized_public_ip(), target);
  }

  // optional fixed64 legacy_gameserver_steam_id = 4;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this_._internal_legacy_gameserver_steam_id(), target);
  }

  // optional uint32 app_id = 7;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this_._internal_app_id(), target);
  }

  // repeated .CMsgSteamDatagramRelayAuthTicket.ExtraField extra_fields = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extra_fields_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extra_fields().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional fixed32 legacy_gameserver_pop_id = 9;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        9, this_._internal_legacy_gameserver_pop_id(), target);
  }

  // optional uint32 virtual_port = 10;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_virtual_port(), target);
  }

  // optional bytes gameserver_address = 11;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_gameserver_address();
    target = stream->WriteBytesMaybeAliased(11, _s, target);
  }

  // optional bytes legacy_authorized_client_identity_binary = 12;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_legacy_authorized_client_identity_binary();
    target = stream->WriteBytesMaybeAliased(12, _s, target);
  }

  // optional bytes legacy_gameserver_identity_binary = 13;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_legacy_gameserver_identity_binary();
    target = stream->WriteBytesMaybeAliased(13, _s, target);
  }

  // optional string authorized_client_identity_string = 14;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const std::string& _s = this_._internal_authorized_client_identity_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional string gameserver_identity_string = 15;
  if ((cached_has_bits & 0x00000010u) != 0) {
    const std::string& _s = this_._internal_gameserver_identity_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamDatagramRelayAuthTicket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgSteamDatagramRelayAuthTicket::ByteSizeLong(const MessageLite& base) {
  const CMsgSteamDatagramRelayAuthTicket& this_ = static_cast<const CMsgSteamDatagramRelayAuthTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgSteamDatagramRelayAuthTicket::ByteSizeLong() const {
  const CMsgSteamDatagramRelayAuthTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgSteamDatagramRelayAuthTicket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgSteamDatagramRelayAuthTicket.ExtraField extra_fields = 8;
    {
      total_size += 1UL * this_._internal_extra_fields_size();
      for (const auto& msg : this_._internal_extra_fields()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000120u & cached_has_bits) * 9;
  total_size += ::absl::popcount(0x000004c0u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional bytes gameserver_address = 11;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_gameserver_address());
    }
    // optional bytes legacy_authorized_client_identity_binary = 12;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_legacy_authorized_client_identity_binary());
    }
    // optional bytes legacy_gameserver_identity_binary = 13;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_legacy_gameserver_identity_binary());
    }
    // optional string authorized_client_identity_string = 14;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_authorized_client_identity_string());
    }
    // optional string gameserver_identity_string = 15;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_gameserver_identity_string());
    }
  }
  if ((cached_has_bits & 0x00000a00u) != 0) {
    // optional uint32 app_id = 7;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_app_id());
    }
    // optional uint32 virtual_port = 10;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_virtual_port());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgSteamDatagramRelayAuthTicket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgSteamDatagramRelayAuthTicket*>(&to_msg);
  auto& from = static_cast<const CMsgSteamDatagramRelayAuthTicket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamDatagramRelayAuthTicket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extra_fields()->MergeFrom(
      from._internal_extra_fields());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_gameserver_address(from._internal_gameserver_address());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_legacy_authorized_client_identity_binary(from._internal_legacy_authorized_client_identity_binary());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_legacy_gameserver_identity_binary(from._internal_legacy_gameserver_identity_binary());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_authorized_client_identity_string(from._internal_authorized_client_identity_string());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_internal_set_gameserver_identity_string(from._internal_gameserver_identity_string());
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.legacy_authorized_steam_id_ = from._impl_.legacy_authorized_steam_id_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.time_expiry_ = from._impl_.time_expiry_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.authorized_public_ip_ = from._impl_.authorized_public_ip_;
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.legacy_gameserver_steam_id_ = from._impl_.legacy_gameserver_steam_id_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.app_id_ = from._impl_.app_id_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.legacy_gameserver_pop_id_ = from._impl_.legacy_gameserver_pop_id_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.virtual_port_ = from._impl_.virtual_port_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSteamDatagramRelayAuthTicket::CopyFrom(const CMsgSteamDatagramRelayAuthTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamDatagramRelayAuthTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgSteamDatagramRelayAuthTicket::InternalSwap(CMsgSteamDatagramRelayAuthTicket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extra_fields_.InternalSwap(&other->_impl_.extra_fields_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gameserver_address_, &other->_impl_.gameserver_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.legacy_authorized_client_identity_binary_, &other->_impl_.legacy_authorized_client_identity_binary_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.legacy_gameserver_identity_binary_, &other->_impl_.legacy_gameserver_identity_binary_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authorized_client_identity_string_, &other->_impl_.authorized_client_identity_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gameserver_identity_string_, &other->_impl_.gameserver_identity_string_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.virtual_port_)
      + sizeof(CMsgSteamDatagramRelayAuthTicket::_impl_.virtual_port_)
      - PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramRelayAuthTicket, _impl_.legacy_authorized_steam_id_)>(
          reinterpret_cast<char*>(&_impl_.legacy_authorized_steam_id_),
          reinterpret_cast<char*>(&other->_impl_.legacy_authorized_steam_id_));
}

::google::protobuf::Metadata CMsgSteamDatagramRelayAuthTicket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgSteamDatagramSignedRelayAuthTicket::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgSteamDatagramSignedRelayAuthTicket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_._has_bits_);
};

void CMsgSteamDatagramSignedRelayAuthTicket::clear_certs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.certs_.Clear();
}
CMsgSteamDatagramSignedRelayAuthTicket::CMsgSteamDatagramSignedRelayAuthTicket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramSignedRelayAuthTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSteamDatagramSignedRelayAuthTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramSignedRelayAuthTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgSteamDatagramSignedRelayAuthTicket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        certs_{visibility, arena, from.certs_},
        ticket_(arena, from.ticket_),
        signature_(arena, from.signature_) {}

CMsgSteamDatagramSignedRelayAuthTicket::CMsgSteamDatagramSignedRelayAuthTicket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgSteamDatagramSignedRelayAuthTicket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramSignedRelayAuthTicket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgSteamDatagramSignedRelayAuthTicket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reserved_do_not_use_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, reserved_do_not_use_),
           offsetof(Impl_, key_id_) -
               offsetof(Impl_, reserved_do_not_use_) +
               sizeof(Impl_::key_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgSteamDatagramSignedRelayAuthTicket)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramSignedRelayAuthTicket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        certs_{visibility, arena},
        ticket_(arena),
        signature_(arena) {}

inline void CMsgSteamDatagramSignedRelayAuthTicket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reserved_do_not_use_),
           0,
           offsetof(Impl_, key_id_) -
               offsetof(Impl_, reserved_do_not_use_) +
               sizeof(Impl_::key_id_));
}
CMsgSteamDatagramSignedRelayAuthTicket::~CMsgSteamDatagramSignedRelayAuthTicket() {
  // @@protoc_insertion_point(destructor:CMsgSteamDatagramSignedRelayAuthTicket)
  SharedDtor(*this);
}
inline void CMsgSteamDatagramSignedRelayAuthTicket::SharedDtor(MessageLite& self) {
  CMsgSteamDatagramSignedRelayAuthTicket& this_ = static_cast<CMsgSteamDatagramSignedRelayAuthTicket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ticket_.Destroy();
  this_._impl_.signature_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgSteamDatagramSignedRelayAuthTicket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgSteamDatagramSignedRelayAuthTicket(arena);
}
constexpr auto CMsgSteamDatagramSignedRelayAuthTicket::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.certs_) +
          decltype(CMsgSteamDatagramSignedRelayAuthTicket::_impl_.certs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgSteamDatagramSignedRelayAuthTicket), alignof(CMsgSteamDatagramSignedRelayAuthTicket), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgSteamDatagramSignedRelayAuthTicket::PlacementNew_,
                                 sizeof(CMsgSteamDatagramSignedRelayAuthTicket),
                                 alignof(CMsgSteamDatagramSignedRelayAuthTicket));
  }
}
constexpr auto CMsgSteamDatagramSignedRelayAuthTicket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgSteamDatagramSignedRelayAuthTicket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgSteamDatagramSignedRelayAuthTicket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgSteamDatagramSignedRelayAuthTicket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgSteamDatagramSignedRelayAuthTicket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgSteamDatagramSignedRelayAuthTicket>(), &CMsgSteamDatagramSignedRelayAuthTicket::ByteSizeLong,
              &CMsgSteamDatagramSignedRelayAuthTicket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_._cached_size_),
          false,
      },
      &CMsgSteamDatagramSignedRelayAuthTicket::kDescriptorMethods,
      &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgSteamDatagramSignedRelayAuthTicket_class_data_ =
            CMsgSteamDatagramSignedRelayAuthTicket::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgSteamDatagramSignedRelayAuthTicket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgSteamDatagramSignedRelayAuthTicket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgSteamDatagramSignedRelayAuthTicket_class_data_.tc_table);
  return CMsgSteamDatagramSignedRelayAuthTicket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2>
CMsgSteamDatagramSignedRelayAuthTicket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgSteamDatagramSignedRelayAuthTicket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgSteamDatagramSignedRelayAuthTicket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 reserved_do_not_use = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.reserved_do_not_use_)}},
    // optional fixed64 key_id = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.key_id_)}},
    // optional bytes ticket = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.ticket_)}},
    // optional bytes signature = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.signature_)}},
    // repeated .CMsgSteamDatagramCertificateSigned certs = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.certs_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 reserved_do_not_use = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.reserved_do_not_use_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 key_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.key_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional bytes ticket = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.ticket_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes signature = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.signature_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .CMsgSteamDatagramCertificateSigned certs = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.certs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgSteamDatagramCertificateSigned>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgSteamDatagramSignedRelayAuthTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamDatagramSignedRelayAuthTicket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.certs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.ticket_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.signature_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.reserved_do_not_use_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.key_id_) -
        reinterpret_cast<char*>(&_impl_.reserved_do_not_use_)) + sizeof(_impl_.key_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramSignedRelayAuthTicket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgSteamDatagramSignedRelayAuthTicket& this_ = static_cast<const CMsgSteamDatagramSignedRelayAuthTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramSignedRelayAuthTicket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgSteamDatagramSignedRelayAuthTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamDatagramSignedRelayAuthTicket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional fixed64 reserved_do_not_use = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this_._internal_reserved_do_not_use(), target);
  }

  // optional fixed64 key_id = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this_._internal_key_id(), target);
  }

  // optional bytes ticket = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_ticket();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // optional bytes signature = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_signature();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // repeated .CMsgSteamDatagramCertificateSigned certs = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_certs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_certs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamDatagramSignedRelayAuthTicket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgSteamDatagramSignedRelayAuthTicket::ByteSizeLong(const MessageLite& base) {
  const CMsgSteamDatagramSignedRelayAuthTicket& this_ = static_cast<const CMsgSteamDatagramSignedRelayAuthTicket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgSteamDatagramSignedRelayAuthTicket::ByteSizeLong() const {
  const CMsgSteamDatagramSignedRelayAuthTicket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgSteamDatagramSignedRelayAuthTicket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CMsgSteamDatagramCertificateSigned certs = 5;
    {
      total_size += 1UL * this_._internal_certs_size();
      for (const auto& msg : this_._internal_certs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x0000000cu & cached_has_bits) * 9;
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional bytes ticket = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_ticket());
    }
    // optional bytes signature = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_signature());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgSteamDatagramSignedRelayAuthTicket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgSteamDatagramSignedRelayAuthTicket*>(&to_msg);
  auto& from = static_cast<const CMsgSteamDatagramSignedRelayAuthTicket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamDatagramSignedRelayAuthTicket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_certs()->MergeFrom(
      from._internal_certs());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_ticket(from._internal_ticket());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_signature(from._internal_signature());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.reserved_do_not_use_ = from._impl_.reserved_do_not_use_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.key_id_ = from._impl_.key_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSteamDatagramSignedRelayAuthTicket::CopyFrom(const CMsgSteamDatagramSignedRelayAuthTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamDatagramSignedRelayAuthTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgSteamDatagramSignedRelayAuthTicket::InternalSwap(CMsgSteamDatagramSignedRelayAuthTicket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.certs_.InternalSwap(&other->_impl_.certs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ticket_, &other->_impl_.ticket_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.key_id_)
      + sizeof(CMsgSteamDatagramSignedRelayAuthTicket::_impl_.key_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedRelayAuthTicket, _impl_.reserved_do_not_use_)>(
          reinterpret_cast<char*>(&_impl_.reserved_do_not_use_),
          reinterpret_cast<char*>(&other->_impl_.reserved_do_not_use_));
}

::google::protobuf::Metadata CMsgSteamDatagramSignedRelayAuthTicket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgSteamDatagramCachedCredentialsForApp::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgSteamDatagramCachedCredentialsForApp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_._has_bits_);
};

CMsgSteamDatagramCachedCredentialsForApp::CMsgSteamDatagramCachedCredentialsForApp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramCachedCredentialsForApp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSteamDatagramCachedCredentialsForApp)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramCachedCredentialsForApp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgSteamDatagramCachedCredentialsForApp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        relay_tickets_{visibility, arena, from.relay_tickets_},
        private_key_(arena, from.private_key_),
        cert_(arena, from.cert_) {}

CMsgSteamDatagramCachedCredentialsForApp::CMsgSteamDatagramCachedCredentialsForApp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgSteamDatagramCachedCredentialsForApp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramCachedCredentialsForApp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgSteamDatagramCachedCredentialsForApp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CMsgSteamDatagramCachedCredentialsForApp)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramCachedCredentialsForApp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        relay_tickets_{visibility, arena},
        private_key_(arena),
        cert_(arena) {}

inline void CMsgSteamDatagramCachedCredentialsForApp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CMsgSteamDatagramCachedCredentialsForApp::~CMsgSteamDatagramCachedCredentialsForApp() {
  // @@protoc_insertion_point(destructor:CMsgSteamDatagramCachedCredentialsForApp)
  SharedDtor(*this);
}
inline void CMsgSteamDatagramCachedCredentialsForApp::SharedDtor(MessageLite& self) {
  CMsgSteamDatagramCachedCredentialsForApp& this_ = static_cast<CMsgSteamDatagramCachedCredentialsForApp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.private_key_.Destroy();
  this_._impl_.cert_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgSteamDatagramCachedCredentialsForApp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgSteamDatagramCachedCredentialsForApp(arena);
}
constexpr auto CMsgSteamDatagramCachedCredentialsForApp::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_.relay_tickets_) +
          decltype(CMsgSteamDatagramCachedCredentialsForApp::_impl_.relay_tickets_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CMsgSteamDatagramCachedCredentialsForApp), alignof(CMsgSteamDatagramCachedCredentialsForApp), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CMsgSteamDatagramCachedCredentialsForApp::PlacementNew_,
                                 sizeof(CMsgSteamDatagramCachedCredentialsForApp),
                                 alignof(CMsgSteamDatagramCachedCredentialsForApp));
  }
}
constexpr auto CMsgSteamDatagramCachedCredentialsForApp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgSteamDatagramCachedCredentialsForApp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgSteamDatagramCachedCredentialsForApp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgSteamDatagramCachedCredentialsForApp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgSteamDatagramCachedCredentialsForApp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgSteamDatagramCachedCredentialsForApp>(), &CMsgSteamDatagramCachedCredentialsForApp::ByteSizeLong,
              &CMsgSteamDatagramCachedCredentialsForApp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_._cached_size_),
          false,
      },
      &CMsgSteamDatagramCachedCredentialsForApp::kDescriptorMethods,
      &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgSteamDatagramCachedCredentialsForApp_class_data_ =
            CMsgSteamDatagramCachedCredentialsForApp::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgSteamDatagramCachedCredentialsForApp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgSteamDatagramCachedCredentialsForApp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgSteamDatagramCachedCredentialsForApp_class_data_.tc_table);
  return CMsgSteamDatagramCachedCredentialsForApp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CMsgSteamDatagramCachedCredentialsForApp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgSteamDatagramCachedCredentialsForApp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgSteamDatagramCachedCredentialsForApp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes private_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_.private_key_)}},
    // optional bytes cert = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_.cert_)}},
    // repeated bytes relay_tickets = 3;
    {::_pbi::TcParser::FastBR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_.relay_tickets_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes private_key = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_.private_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes cert = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_.cert_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated bytes relay_tickets = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramCachedCredentialsForApp, _impl_.relay_tickets_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgSteamDatagramCachedCredentialsForApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamDatagramCachedCredentialsForApp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.relay_tickets_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.private_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.cert_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramCachedCredentialsForApp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgSteamDatagramCachedCredentialsForApp& this_ = static_cast<const CMsgSteamDatagramCachedCredentialsForApp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramCachedCredentialsForApp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgSteamDatagramCachedCredentialsForApp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamDatagramCachedCredentialsForApp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes private_key = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_private_key();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional bytes cert = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_cert();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // repeated bytes relay_tickets = 3;
  for (int i = 0, n = this_._internal_relay_tickets_size(); i < n; ++i) {
    const auto& s = this_._internal_relay_tickets().Get(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamDatagramCachedCredentialsForApp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgSteamDatagramCachedCredentialsForApp::ByteSizeLong(const MessageLite& base) {
  const CMsgSteamDatagramCachedCredentialsForApp& this_ = static_cast<const CMsgSteamDatagramCachedCredentialsForApp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgSteamDatagramCachedCredentialsForApp::ByteSizeLong() const {
  const CMsgSteamDatagramCachedCredentialsForApp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgSteamDatagramCachedCredentialsForApp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated bytes relay_tickets = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_relay_tickets().size());
      for (int i = 0, n = this_._internal_relay_tickets().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
            this_._internal_relay_tickets().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional bytes private_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_private_key());
    }
    // optional bytes cert = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_cert());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgSteamDatagramCachedCredentialsForApp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgSteamDatagramCachedCredentialsForApp*>(&to_msg);
  auto& from = static_cast<const CMsgSteamDatagramCachedCredentialsForApp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamDatagramCachedCredentialsForApp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_relay_tickets()->MergeFrom(from._internal_relay_tickets());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_private_key(from._internal_private_key());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_cert(from._internal_cert());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSteamDatagramCachedCredentialsForApp::CopyFrom(const CMsgSteamDatagramCachedCredentialsForApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamDatagramCachedCredentialsForApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgSteamDatagramCachedCredentialsForApp::InternalSwap(CMsgSteamDatagramCachedCredentialsForApp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.relay_tickets_.InternalSwap(&other->_impl_.relay_tickets_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.private_key_, &other->_impl_.private_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cert_, &other->_impl_.cert_, arena);
}

::google::protobuf::Metadata CMsgSteamDatagramCachedCredentialsForApp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgSteamDatagramGameCoordinatorServerLogin::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgSteamDatagramGameCoordinatorServerLogin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_._has_bits_);
};

CMsgSteamDatagramGameCoordinatorServerLogin::CMsgSteamDatagramGameCoordinatorServerLogin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramGameCoordinatorServerLogin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSteamDatagramGameCoordinatorServerLogin)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramGameCoordinatorServerLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgSteamDatagramGameCoordinatorServerLogin& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        routing_(arena, from.routing_),
        appdata_(arena, from.appdata_),
        legacy_identity_binary_(arena, from.legacy_identity_binary_),
        identity_string_(arena, from.identity_string_) {}

CMsgSteamDatagramGameCoordinatorServerLogin::CMsgSteamDatagramGameCoordinatorServerLogin(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgSteamDatagramGameCoordinatorServerLogin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramGameCoordinatorServerLogin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgSteamDatagramGameCoordinatorServerLogin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_generated_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_generated_),
           offsetof(Impl_, dummy_steam_id_) -
               offsetof(Impl_, time_generated_) +
               sizeof(Impl_::dummy_steam_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgSteamDatagramGameCoordinatorServerLogin)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramGameCoordinatorServerLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        routing_(arena),
        appdata_(arena),
        legacy_identity_binary_(arena),
        identity_string_(arena) {}

inline void CMsgSteamDatagramGameCoordinatorServerLogin::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_generated_),
           0,
           offsetof(Impl_, dummy_steam_id_) -
               offsetof(Impl_, time_generated_) +
               sizeof(Impl_::dummy_steam_id_));
}
CMsgSteamDatagramGameCoordinatorServerLogin::~CMsgSteamDatagramGameCoordinatorServerLogin() {
  // @@protoc_insertion_point(destructor:CMsgSteamDatagramGameCoordinatorServerLogin)
  SharedDtor(*this);
}
inline void CMsgSteamDatagramGameCoordinatorServerLogin::SharedDtor(MessageLite& self) {
  CMsgSteamDatagramGameCoordinatorServerLogin& this_ = static_cast<CMsgSteamDatagramGameCoordinatorServerLogin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.routing_.Destroy();
  this_._impl_.appdata_.Destroy();
  this_._impl_.legacy_identity_binary_.Destroy();
  this_._impl_.identity_string_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgSteamDatagramGameCoordinatorServerLogin::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgSteamDatagramGameCoordinatorServerLogin(arena);
}
constexpr auto CMsgSteamDatagramGameCoordinatorServerLogin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgSteamDatagramGameCoordinatorServerLogin),
                                            alignof(CMsgSteamDatagramGameCoordinatorServerLogin));
}
constexpr auto CMsgSteamDatagramGameCoordinatorServerLogin::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgSteamDatagramGameCoordinatorServerLogin_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgSteamDatagramGameCoordinatorServerLogin::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgSteamDatagramGameCoordinatorServerLogin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgSteamDatagramGameCoordinatorServerLogin::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgSteamDatagramGameCoordinatorServerLogin>(), &CMsgSteamDatagramGameCoordinatorServerLogin::ByteSizeLong,
              &CMsgSteamDatagramGameCoordinatorServerLogin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_._cached_size_),
          false,
      },
      &CMsgSteamDatagramGameCoordinatorServerLogin::kDescriptorMethods,
      &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgSteamDatagramGameCoordinatorServerLogin_class_data_ =
            CMsgSteamDatagramGameCoordinatorServerLogin::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgSteamDatagramGameCoordinatorServerLogin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgSteamDatagramGameCoordinatorServerLogin_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgSteamDatagramGameCoordinatorServerLogin_class_data_.tc_table);
  return CMsgSteamDatagramGameCoordinatorServerLogin_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 67, 7>
CMsgSteamDatagramGameCoordinatorServerLogin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_._has_bits_),
    0, // no _extensions_
    99, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgSteamDatagramGameCoordinatorServerLogin_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgSteamDatagramGameCoordinatorServerLogin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 time_generated = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.time_generated_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.time_generated_)}},
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.appid_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.appid_)}},
    // optional bytes routing = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.routing_)}},
    // optional bytes appdata = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.appdata_)}},
    // optional bytes legacy_identity_binary = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.legacy_identity_binary_)}},
    // optional string identity_string = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.identity_string_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    99, 0, 1,
    65534, 6,
    65535, 65535
  }}, {{
    // optional uint32 time_generated = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.time_generated_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.appid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes routing = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.routing_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes appdata = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.appdata_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes legacy_identity_binary = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.legacy_identity_binary_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string identity_string = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.identity_string_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed64 dummy_steam_id = 99;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.dummy_steam_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
    "\53\0\0\0\0\0\17\0"
    "CMsgSteamDatagramGameCoordinatorServerLogin"
    "identity_string"
  }},
};
PROTOBUF_NOINLINE void CMsgSteamDatagramGameCoordinatorServerLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamDatagramGameCoordinatorServerLogin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.routing_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.appdata_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.legacy_identity_binary_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.identity_string_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000070u) != 0) {
    ::memset(&_impl_.time_generated_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dummy_steam_id_) -
        reinterpret_cast<char*>(&_impl_.time_generated_)) + sizeof(_impl_.dummy_steam_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramGameCoordinatorServerLogin::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgSteamDatagramGameCoordinatorServerLogin& this_ = static_cast<const CMsgSteamDatagramGameCoordinatorServerLogin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramGameCoordinatorServerLogin::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgSteamDatagramGameCoordinatorServerLogin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamDatagramGameCoordinatorServerLogin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 time_generated = 1;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_time_generated(), target);
  }

  // optional uint32 appid = 2;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_appid(), target);
  }

  // optional bytes routing = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_routing();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // optional bytes appdata = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_appdata();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // optional bytes legacy_identity_binary = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_legacy_identity_binary();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  // optional string identity_string = 6;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const std::string& _s = this_._internal_identity_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgSteamDatagramGameCoordinatorServerLogin.identity_string");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional fixed64 dummy_steam_id = 99;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        99, this_._internal_dummy_steam_id(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamDatagramGameCoordinatorServerLogin)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgSteamDatagramGameCoordinatorServerLogin::ByteSizeLong(const MessageLite& base) {
  const CMsgSteamDatagramGameCoordinatorServerLogin& this_ = static_cast<const CMsgSteamDatagramGameCoordinatorServerLogin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgSteamDatagramGameCoordinatorServerLogin::ByteSizeLong() const {
  const CMsgSteamDatagramGameCoordinatorServerLogin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgSteamDatagramGameCoordinatorServerLogin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000040u & cached_has_bits) * 10;
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional bytes routing = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_routing());
    }
    // optional bytes appdata = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_appdata());
    }
    // optional bytes legacy_identity_binary = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_legacy_identity_binary());
    }
    // optional string identity_string = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_identity_string());
    }
    // optional uint32 time_generated = 1;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_time_generated());
    }
    // optional uint32 appid = 2;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_appid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgSteamDatagramGameCoordinatorServerLogin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgSteamDatagramGameCoordinatorServerLogin*>(&to_msg);
  auto& from = static_cast<const CMsgSteamDatagramGameCoordinatorServerLogin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamDatagramGameCoordinatorServerLogin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_routing(from._internal_routing());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_appdata(from._internal_appdata());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_legacy_identity_binary(from._internal_legacy_identity_binary());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_identity_string(from._internal_identity_string());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.time_generated_ = from._impl_.time_generated_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.dummy_steam_id_ = from._impl_.dummy_steam_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSteamDatagramGameCoordinatorServerLogin::CopyFrom(const CMsgSteamDatagramGameCoordinatorServerLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamDatagramGameCoordinatorServerLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgSteamDatagramGameCoordinatorServerLogin::InternalSwap(CMsgSteamDatagramGameCoordinatorServerLogin* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.routing_, &other->_impl_.routing_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.appdata_, &other->_impl_.appdata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.legacy_identity_binary_, &other->_impl_.legacy_identity_binary_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.identity_string_, &other->_impl_.identity_string_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.dummy_steam_id_)
      + sizeof(CMsgSteamDatagramGameCoordinatorServerLogin::_impl_.dummy_steam_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramGameCoordinatorServerLogin, _impl_.time_generated_)>(
          reinterpret_cast<char*>(&_impl_.time_generated_),
          reinterpret_cast<char*>(&other->_impl_.time_generated_));
}

::google::protobuf::Metadata CMsgSteamDatagramGameCoordinatorServerLogin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgSteamDatagramSignedGameCoordinatorServerLogin::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgSteamDatagramSignedGameCoordinatorServerLogin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_._has_bits_);
};

void CMsgSteamDatagramSignedGameCoordinatorServerLogin::clear_cert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cert_ != nullptr) _impl_.cert_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CMsgSteamDatagramSignedGameCoordinatorServerLogin::CMsgSteamDatagramSignedGameCoordinatorServerLogin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramSignedGameCoordinatorServerLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgSteamDatagramSignedGameCoordinatorServerLogin& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        login_(arena, from.login_),
        signature_(arena, from.signature_) {}

CMsgSteamDatagramSignedGameCoordinatorServerLogin::CMsgSteamDatagramSignedGameCoordinatorServerLogin(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgSteamDatagramSignedGameCoordinatorServerLogin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgSteamDatagramSignedGameCoordinatorServerLogin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cert_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cert_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramSignedGameCoordinatorServerLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        login_(arena),
        signature_(arena) {}

inline void CMsgSteamDatagramSignedGameCoordinatorServerLogin::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cert_ = {};
}
CMsgSteamDatagramSignedGameCoordinatorServerLogin::~CMsgSteamDatagramSignedGameCoordinatorServerLogin() {
  // @@protoc_insertion_point(destructor:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
  SharedDtor(*this);
}
inline void CMsgSteamDatagramSignedGameCoordinatorServerLogin::SharedDtor(MessageLite& self) {
  CMsgSteamDatagramSignedGameCoordinatorServerLogin& this_ = static_cast<CMsgSteamDatagramSignedGameCoordinatorServerLogin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.login_.Destroy();
  this_._impl_.signature_.Destroy();
  delete this_._impl_.cert_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgSteamDatagramSignedGameCoordinatorServerLogin::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgSteamDatagramSignedGameCoordinatorServerLogin(arena);
}
constexpr auto CMsgSteamDatagramSignedGameCoordinatorServerLogin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgSteamDatagramSignedGameCoordinatorServerLogin),
                                            alignof(CMsgSteamDatagramSignedGameCoordinatorServerLogin));
}
constexpr auto CMsgSteamDatagramSignedGameCoordinatorServerLogin::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgSteamDatagramSignedGameCoordinatorServerLogin_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgSteamDatagramSignedGameCoordinatorServerLogin::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgSteamDatagramSignedGameCoordinatorServerLogin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgSteamDatagramSignedGameCoordinatorServerLogin::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgSteamDatagramSignedGameCoordinatorServerLogin>(), &CMsgSteamDatagramSignedGameCoordinatorServerLogin::ByteSizeLong,
              &CMsgSteamDatagramSignedGameCoordinatorServerLogin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_._cached_size_),
          false,
      },
      &CMsgSteamDatagramSignedGameCoordinatorServerLogin::kDescriptorMethods,
      &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_ =
            CMsgSteamDatagramSignedGameCoordinatorServerLogin::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgSteamDatagramSignedGameCoordinatorServerLogin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_.tc_table);
  return CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
CMsgSteamDatagramSignedGameCoordinatorServerLogin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CMsgSteamDatagramSignedGameCoordinatorServerLogin_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgSteamDatagramSignedGameCoordinatorServerLogin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgSteamDatagramCertificateSigned cert = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.cert_)}},
    // optional bytes login = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.login_)}},
    // optional bytes signature = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgSteamDatagramCertificateSigned cert = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.cert_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes login = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.login_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes signature = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramSignedGameCoordinatorServerLogin, _impl_.signature_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CMsgSteamDatagramCertificateSigned>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgSteamDatagramSignedGameCoordinatorServerLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.login_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.signature_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.cert_ != nullptr);
      _impl_.cert_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramSignedGameCoordinatorServerLogin::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgSteamDatagramSignedGameCoordinatorServerLogin& this_ = static_cast<const CMsgSteamDatagramSignedGameCoordinatorServerLogin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramSignedGameCoordinatorServerLogin::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgSteamDatagramSignedGameCoordinatorServerLogin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .CMsgSteamDatagramCertificateSigned cert = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.cert_, this_._impl_.cert_->GetCachedSize(), target,
        stream);
  }

  // optional bytes login = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_login();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional bytes signature = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_signature();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgSteamDatagramSignedGameCoordinatorServerLogin::ByteSizeLong(const MessageLite& base) {
  const CMsgSteamDatagramSignedGameCoordinatorServerLogin& this_ = static_cast<const CMsgSteamDatagramSignedGameCoordinatorServerLogin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgSteamDatagramSignedGameCoordinatorServerLogin::ByteSizeLong() const {
  const CMsgSteamDatagramSignedGameCoordinatorServerLogin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional bytes login = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_login());
    }
    // optional bytes signature = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_signature());
    }
    // optional .CMsgSteamDatagramCertificateSigned cert = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cert_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgSteamDatagramSignedGameCoordinatorServerLogin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgSteamDatagramSignedGameCoordinatorServerLogin*>(&to_msg);
  auto& from = static_cast<const CMsgSteamDatagramSignedGameCoordinatorServerLogin&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_login(from._internal_login());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_signature(from._internal_signature());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.cert_ != nullptr);
      if (_this->_impl_.cert_ == nullptr) {
        _this->_impl_.cert_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cert_);
      } else {
        _this->_impl_.cert_->MergeFrom(*from._impl_.cert_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSteamDatagramSignedGameCoordinatorServerLogin::CopyFrom(const CMsgSteamDatagramSignedGameCoordinatorServerLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamDatagramSignedGameCoordinatorServerLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgSteamDatagramSignedGameCoordinatorServerLogin::InternalSwap(CMsgSteamDatagramSignedGameCoordinatorServerLogin* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.login_, &other->_impl_.login_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  swap(_impl_.cert_, other->_impl_.cert_);
}

::google::protobuf::Metadata CMsgSteamDatagramSignedGameCoordinatorServerLogin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgSteamDatagramHostedServerAddressPlaintext::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgSteamDatagramHostedServerAddressPlaintext>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_._has_bits_);
};

CMsgSteamDatagramHostedServerAddressPlaintext::CMsgSteamDatagramHostedServerAddressPlaintext(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramHostedServerAddressPlaintext_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSteamDatagramHostedServerAddressPlaintext)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramHostedServerAddressPlaintext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CMsgSteamDatagramHostedServerAddressPlaintext& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ipv6_(arena, from.ipv6_) {}

CMsgSteamDatagramHostedServerAddressPlaintext::CMsgSteamDatagramHostedServerAddressPlaintext(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CMsgSteamDatagramHostedServerAddressPlaintext& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CMsgSteamDatagramHostedServerAddressPlaintext_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CMsgSteamDatagramHostedServerAddressPlaintext* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ipv4_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ipv4_),
           offsetof(Impl_, protocol_version_) -
               offsetof(Impl_, ipv4_) +
               sizeof(Impl_::protocol_version_));

  // @@protoc_insertion_point(copy_constructor:CMsgSteamDatagramHostedServerAddressPlaintext)
}
PROTOBUF_NDEBUG_INLINE CMsgSteamDatagramHostedServerAddressPlaintext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ipv6_(arena) {}

inline void CMsgSteamDatagramHostedServerAddressPlaintext::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ipv4_),
           0,
           offsetof(Impl_, protocol_version_) -
               offsetof(Impl_, ipv4_) +
               sizeof(Impl_::protocol_version_));
}
CMsgSteamDatagramHostedServerAddressPlaintext::~CMsgSteamDatagramHostedServerAddressPlaintext() {
  // @@protoc_insertion_point(destructor:CMsgSteamDatagramHostedServerAddressPlaintext)
  SharedDtor(*this);
}
inline void CMsgSteamDatagramHostedServerAddressPlaintext::SharedDtor(MessageLite& self) {
  CMsgSteamDatagramHostedServerAddressPlaintext& this_ = static_cast<CMsgSteamDatagramHostedServerAddressPlaintext&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ipv6_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CMsgSteamDatagramHostedServerAddressPlaintext::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CMsgSteamDatagramHostedServerAddressPlaintext(arena);
}
constexpr auto CMsgSteamDatagramHostedServerAddressPlaintext::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CMsgSteamDatagramHostedServerAddressPlaintext),
                                            alignof(CMsgSteamDatagramHostedServerAddressPlaintext));
}
constexpr auto CMsgSteamDatagramHostedServerAddressPlaintext::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CMsgSteamDatagramHostedServerAddressPlaintext_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CMsgSteamDatagramHostedServerAddressPlaintext::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CMsgSteamDatagramHostedServerAddressPlaintext>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CMsgSteamDatagramHostedServerAddressPlaintext::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CMsgSteamDatagramHostedServerAddressPlaintext>(), &CMsgSteamDatagramHostedServerAddressPlaintext::ByteSizeLong,
              &CMsgSteamDatagramHostedServerAddressPlaintext::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_._cached_size_),
          false,
      },
      &CMsgSteamDatagramHostedServerAddressPlaintext::kDescriptorMethods,
      &descriptor_table_steamdatagram_5fmessages_5fauth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CMsgSteamDatagramHostedServerAddressPlaintext_class_data_ =
            CMsgSteamDatagramHostedServerAddressPlaintext::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL CMsgSteamDatagramHostedServerAddressPlaintext::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CMsgSteamDatagramHostedServerAddressPlaintext_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CMsgSteamDatagramHostedServerAddressPlaintext_class_data_.tc_table);
  return CMsgSteamDatagramHostedServerAddressPlaintext_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
CMsgSteamDatagramHostedServerAddressPlaintext::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CMsgSteamDatagramHostedServerAddressPlaintext_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgSteamDatagramHostedServerAddressPlaintext>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed32 ipv4 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.ipv4_)}},
    // optional bytes ipv6 = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.ipv6_)}},
    // optional uint32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.port_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.port_)}},
    // optional fixed64 routing_secret = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.routing_secret_)}},
    // optional uint32 protocol_version = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.protocol_version_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.protocol_version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed32 ipv4 = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.ipv4_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional bytes ipv6 = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.ipv6_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 port = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.port_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 routing_secret = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.routing_secret_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 protocol_version = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.protocol_version_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CMsgSteamDatagramHostedServerAddressPlaintext::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSteamDatagramHostedServerAddressPlaintext)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.ipv6_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000001eu) != 0) {
    ::memset(&_impl_.ipv4_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.protocol_version_) -
        reinterpret_cast<char*>(&_impl_.ipv4_)) + sizeof(_impl_.protocol_version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramHostedServerAddressPlaintext::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CMsgSteamDatagramHostedServerAddressPlaintext& this_ = static_cast<const CMsgSteamDatagramHostedServerAddressPlaintext&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CMsgSteamDatagramHostedServerAddressPlaintext::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CMsgSteamDatagramHostedServerAddressPlaintext& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSteamDatagramHostedServerAddressPlaintext)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional fixed32 ipv4 = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this_._internal_ipv4(), target);
  }

  // optional bytes ipv6 = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_ipv6();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional uint32 port = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_port(), target);
  }

  // optional fixed64 routing_secret = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this_._internal_routing_secret(), target);
  }

  // optional uint32 protocol_version = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_protocol_version(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSteamDatagramHostedServerAddressPlaintext)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CMsgSteamDatagramHostedServerAddressPlaintext::ByteSizeLong(const MessageLite& base) {
  const CMsgSteamDatagramHostedServerAddressPlaintext& this_ = static_cast<const CMsgSteamDatagramHostedServerAddressPlaintext&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CMsgSteamDatagramHostedServerAddressPlaintext::ByteSizeLong() const {
  const CMsgSteamDatagramHostedServerAddressPlaintext& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CMsgSteamDatagramHostedServerAddressPlaintext)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 9;
  total_size += static_cast<bool>(0x00000002u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x00000015u) != 0) {
    // optional bytes ipv6 = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_ipv6());
    }
    // optional uint32 port = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_port());
    }
    // optional uint32 protocol_version = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_protocol_version());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CMsgSteamDatagramHostedServerAddressPlaintext::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgSteamDatagramHostedServerAddressPlaintext*>(&to_msg);
  auto& from = static_cast<const CMsgSteamDatagramHostedServerAddressPlaintext&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgSteamDatagramHostedServerAddressPlaintext)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_ipv6(from._internal_ipv6());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.ipv4_ = from._impl_.ipv4_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.port_ = from._impl_.port_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.routing_secret_ = from._impl_.routing_secret_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.protocol_version_ = from._impl_.protocol_version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgSteamDatagramHostedServerAddressPlaintext::CopyFrom(const CMsgSteamDatagramHostedServerAddressPlaintext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSteamDatagramHostedServerAddressPlaintext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgSteamDatagramHostedServerAddressPlaintext::InternalSwap(CMsgSteamDatagramHostedServerAddressPlaintext* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ipv6_, &other->_impl_.ipv6_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.protocol_version_)
      + sizeof(CMsgSteamDatagramHostedServerAddressPlaintext::_impl_.protocol_version_)
      - PROTOBUF_FIELD_OFFSET(CMsgSteamDatagramHostedServerAddressPlaintext, _impl_.ipv4_)>(
          reinterpret_cast<char*>(&_impl_.ipv4_),
          reinterpret_cast<char*>(&other->_impl_.ipv4_));
}

::google::protobuf::Metadata CMsgSteamDatagramHostedServerAddressPlaintext::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_steamdatagram_5fmessages_5fauth_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steammessages.proto
// Protobuf C++ Version: 6.30.0-rc1

#ifndef steammessages_2eproto_2epb_2eh
#define steammessages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_steammessages_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_steammessages_2eproto;
}  // extern "C"
enum GCProtoBufMsgSrc : int;
extern const uint32_t GCProtoBufMsgSrc_internal_data_[];
class CChinaAgreementSessions_StartAgreementSessionInGame_Request;
struct CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal;
extern CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal _CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_;
class CChinaAgreementSessions_StartAgreementSessionInGame_Response;
struct CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal;
extern CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal _CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_;
class CMsgProtoBufHeader;
struct CMsgProtoBufHeaderDefaultTypeInternal;
extern CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CMsgProtoBufHeader_class_data_;
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::GCProtoBufMsgSrc_internal_data_>
    internal::EnumTraitsImpl::value<::GCProtoBufMsgSrc>;
}  // namespace protobuf
}  // namespace google

enum GCProtoBufMsgSrc : int {
  GCProtoBufMsgSrc_Unspecified = 0,
  GCProtoBufMsgSrc_FromSystem = 1,
  GCProtoBufMsgSrc_FromSteamID = 2,
  GCProtoBufMsgSrc_FromGC = 3,
  GCProtoBufMsgSrc_ReplySystem = 4,
};

extern const uint32_t GCProtoBufMsgSrc_internal_data_[];
inline constexpr GCProtoBufMsgSrc GCProtoBufMsgSrc_MIN =
    static_cast<GCProtoBufMsgSrc>(0);
inline constexpr GCProtoBufMsgSrc GCProtoBufMsgSrc_MAX =
    static_cast<GCProtoBufMsgSrc>(4);
inline bool GCProtoBufMsgSrc_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int GCProtoBufMsgSrc_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL GCProtoBufMsgSrc_descriptor();
template <typename T>
const std::string& GCProtoBufMsgSrc_Name(T value) {
  static_assert(std::is_same<T, GCProtoBufMsgSrc>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GCProtoBufMsgSrc_Name().");
  return GCProtoBufMsgSrc_Name(static_cast<GCProtoBufMsgSrc>(value));
}
template <>
inline const std::string& GCProtoBufMsgSrc_Name(GCProtoBufMsgSrc value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GCProtoBufMsgSrc_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool GCProtoBufMsgSrc_Parse(
    absl::string_view name, GCProtoBufMsgSrc* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCProtoBufMsgSrc>(GCProtoBufMsgSrc_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class CMsgProtoBufHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgProtoBufHeader) */ {
 public:
  inline CMsgProtoBufHeader() : CMsgProtoBufHeader(nullptr) {}
  ~CMsgProtoBufHeader() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CMsgProtoBufHeader* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CMsgProtoBufHeader));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgProtoBufHeader(::google::protobuf::internal::ConstantInitialized);

  inline CMsgProtoBufHeader(const CMsgProtoBufHeader& from) : CMsgProtoBufHeader(nullptr, from) {}
  inline CMsgProtoBufHeader(CMsgProtoBufHeader&& from) noexcept
      : CMsgProtoBufHeader(nullptr, std::move(from)) {}
  inline CMsgProtoBufHeader& operator=(const CMsgProtoBufHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgProtoBufHeader& operator=(CMsgProtoBufHeader&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgProtoBufHeader& default_instance() {
    return *reinterpret_cast<const CMsgProtoBufHeader*>(
        &_CMsgProtoBufHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CMsgProtoBufHeader& a, CMsgProtoBufHeader& b) { a.Swap(&b); }
  inline void Swap(CMsgProtoBufHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgProtoBufHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgProtoBufHeader* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CMsgProtoBufHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgProtoBufHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgProtoBufHeader& from) { CMsgProtoBufHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CMsgProtoBufHeader* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CMsgProtoBufHeader"; }

 protected:
  explicit CMsgProtoBufHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CMsgProtoBufHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CMsgProtoBufHeader& from);
  CMsgProtoBufHeader(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CMsgProtoBufHeader&& from) noexcept
      : CMsgProtoBufHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetJobNameFieldNumber = 12,
    kErrorMessageFieldNumber = 14,
    kClientSteamIdFieldNumber = 1,
    kClientSessionIdFieldNumber = 2,
    kSourceAppIdFieldNumber = 3,
    kIpFieldNumber = 15,
    kGcMsgSrcFieldNumber = 200,
    kGcDirIndexSourceFieldNumber = 201,
    kEresultFieldNumber = 13,
    kJobIdSourceFieldNumber = 10,
    kJobIdTargetFieldNumber = 11,
  };
  // optional string target_job_name = 12;
  bool has_target_job_name() const;
  void clear_target_job_name() ;
  const std::string& target_job_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_job_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_target_job_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_target_job_name();
  void set_allocated_target_job_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_target_job_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_target_job_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_target_job_name();

  public:
  // optional string error_message = 14;
  bool has_error_message() const;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

  public:
  // optional fixed64 client_steam_id = 1;
  bool has_client_steam_id() const;
  void clear_client_steam_id() ;
  ::uint64_t client_steam_id() const;
  void set_client_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_client_steam_id() const;
  void _internal_set_client_steam_id(::uint64_t value);

  public:
  // optional int32 client_session_id = 2;
  bool has_client_session_id() const;
  void clear_client_session_id() ;
  ::int32_t client_session_id() const;
  void set_client_session_id(::int32_t value);

  private:
  ::int32_t _internal_client_session_id() const;
  void _internal_set_client_session_id(::int32_t value);

  public:
  // optional uint32 source_app_id = 3;
  bool has_source_app_id() const;
  void clear_source_app_id() ;
  ::uint32_t source_app_id() const;
  void set_source_app_id(::uint32_t value);

  private:
  ::uint32_t _internal_source_app_id() const;
  void _internal_set_source_app_id(::uint32_t value);

  public:
  // optional uint32 ip = 15;
  bool has_ip() const;
  void clear_ip() ;
  ::uint32_t ip() const;
  void set_ip(::uint32_t value);

  private:
  ::uint32_t _internal_ip() const;
  void _internal_set_ip(::uint32_t value);

  public:
  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  bool has_gc_msg_src() const;
  void clear_gc_msg_src() ;
  ::GCProtoBufMsgSrc gc_msg_src() const;
  void set_gc_msg_src(::GCProtoBufMsgSrc value);

  private:
  ::GCProtoBufMsgSrc _internal_gc_msg_src() const;
  void _internal_set_gc_msg_src(::GCProtoBufMsgSrc value);

  public:
  // optional uint32 gc_dir_index_source = 201;
  bool has_gc_dir_index_source() const;
  void clear_gc_dir_index_source() ;
  ::uint32_t gc_dir_index_source() const;
  void set_gc_dir_index_source(::uint32_t value);

  private:
  ::uint32_t _internal_gc_dir_index_source() const;
  void _internal_set_gc_dir_index_source(::uint32_t value);

  public:
  // optional int32 eresult = 13 [default = 2];
  bool has_eresult() const;
  void clear_eresult() ;
  ::int32_t eresult() const;
  void set_eresult(::int32_t value);

  private:
  ::int32_t _internal_eresult() const;
  void _internal_set_eresult(::int32_t value);

  public:
  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  bool has_job_id_source() const;
  void clear_job_id_source() ;
  ::uint64_t job_id_source() const;
  void set_job_id_source(::uint64_t value);

  private:
  ::uint64_t _internal_job_id_source() const;
  void _internal_set_job_id_source(::uint64_t value);

  public:
  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  bool has_job_id_target() const;
  void clear_job_id_target() ;
  ::uint64_t job_id_target() const;
  void set_job_id_target(::uint64_t value);

  private:
  ::uint64_t _internal_job_id_target() const;
  void _internal_set_job_id_target(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgProtoBufHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   1, 63,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CMsgProtoBufHeader& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr target_job_name_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::uint64_t client_steam_id_;
    ::int32_t client_session_id_;
    ::uint32_t source_app_id_;
    ::uint32_t ip_;
    int gc_msg_src_;
    ::uint32_t gc_dir_index_source_;
    ::int32_t eresult_;
    ::uint64_t job_id_source_;
    ::uint64_t job_id_target_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CMsgProtoBufHeader_class_data_;
// -------------------------------------------------------------------

class CChinaAgreementSessions_StartAgreementSessionInGame_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CChinaAgreementSessions_StartAgreementSessionInGame_Response) */ {
 public:
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Response() : CChinaAgreementSessions_StartAgreementSessionInGame_Response(nullptr) {}
  ~CChinaAgreementSessions_StartAgreementSessionInGame_Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CChinaAgreementSessions_StartAgreementSessionInGame_Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CChinaAgreementSessions_StartAgreementSessionInGame_Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_Response(::google::protobuf::internal::ConstantInitialized);

  inline CChinaAgreementSessions_StartAgreementSessionInGame_Response(const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from) : CChinaAgreementSessions_StartAgreementSessionInGame_Response(nullptr, from) {}
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Response(CChinaAgreementSessions_StartAgreementSessionInGame_Response&& from) noexcept
      : CChinaAgreementSessions_StartAgreementSessionInGame_Response(nullptr, std::move(from)) {}
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Response& operator=(const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Response& operator=(CChinaAgreementSessions_StartAgreementSessionInGame_Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChinaAgreementSessions_StartAgreementSessionInGame_Response& default_instance() {
    return *reinterpret_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Response*>(
        &_CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CChinaAgreementSessions_StartAgreementSessionInGame_Response& a, CChinaAgreementSessions_StartAgreementSessionInGame_Response& b) { a.Swap(&b); }
  inline void Swap(CChinaAgreementSessions_StartAgreementSessionInGame_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChinaAgreementSessions_StartAgreementSessionInGame_Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CChinaAgreementSessions_StartAgreementSessionInGame_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from) { CChinaAgreementSessions_StartAgreementSessionInGame_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CChinaAgreementSessions_StartAgreementSessionInGame_Response"; }

 protected:
  explicit CChinaAgreementSessions_StartAgreementSessionInGame_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CChinaAgreementSessions_StartAgreementSessionInGame_Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from);
  CChinaAgreementSessions_StartAgreementSessionInGame_Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CChinaAgreementSessions_StartAgreementSessionInGame_Response&& from) noexcept
      : CChinaAgreementSessions_StartAgreementSessionInGame_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgreementUrlFieldNumber = 1,
  };
  // optional string agreement_url = 1;
  bool has_agreement_url() const;
  void clear_agreement_url() ;
  const std::string& agreement_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agreement_url(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_agreement_url();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_agreement_url();
  void set_allocated_agreement_url(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_agreement_url() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_agreement_url(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_agreement_url();

  public:
  // @@protoc_insertion_point(class_scope:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 82,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr agreement_url_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CChinaAgreementSessions_StartAgreementSessionInGame_Response_class_data_;
// -------------------------------------------------------------------

class CChinaAgreementSessions_StartAgreementSessionInGame_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CChinaAgreementSessions_StartAgreementSessionInGame_Request) */ {
 public:
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Request() : CChinaAgreementSessions_StartAgreementSessionInGame_Request(nullptr) {}
  ~CChinaAgreementSessions_StartAgreementSessionInGame_Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CChinaAgreementSessions_StartAgreementSessionInGame_Request* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CChinaAgreementSessions_StartAgreementSessionInGame_Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_Request(::google::protobuf::internal::ConstantInitialized);

  inline CChinaAgreementSessions_StartAgreementSessionInGame_Request(const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from) : CChinaAgreementSessions_StartAgreementSessionInGame_Request(nullptr, from) {}
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Request(CChinaAgreementSessions_StartAgreementSessionInGame_Request&& from) noexcept
      : CChinaAgreementSessions_StartAgreementSessionInGame_Request(nullptr, std::move(from)) {}
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Request& operator=(const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CChinaAgreementSessions_StartAgreementSessionInGame_Request& operator=(CChinaAgreementSessions_StartAgreementSessionInGame_Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CChinaAgreementSessions_StartAgreementSessionInGame_Request& default_instance() {
    return *reinterpret_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Request*>(
        &_CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CChinaAgreementSessions_StartAgreementSessionInGame_Request& a, CChinaAgreementSessions_StartAgreementSessionInGame_Request& b) { a.Swap(&b); }
  inline void Swap(CChinaAgreementSessions_StartAgreementSessionInGame_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CChinaAgreementSessions_StartAgreementSessionInGame_Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CChinaAgreementSessions_StartAgreementSessionInGame_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from) { CChinaAgreementSessions_StartAgreementSessionInGame_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CChinaAgreementSessions_StartAgreementSessionInGame_Request"; }

 protected:
  explicit CChinaAgreementSessions_StartAgreementSessionInGame_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CChinaAgreementSessions_StartAgreementSessionInGame_Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from);
  CChinaAgreementSessions_StartAgreementSessionInGame_Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CChinaAgreementSessions_StartAgreementSessionInGame_Request&& from) noexcept
      : CChinaAgreementSessions_StartAgreementSessionInGame_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClientIpaddressFieldNumber = 3,
    kSteamidFieldNumber = 2,
    kAppidFieldNumber = 1,
  };
  // optional string client_ipaddress = 3;
  bool has_client_ipaddress() const;
  void clear_client_ipaddress() ;
  const std::string& client_ipaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_ipaddress(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_client_ipaddress();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_client_ipaddress();
  void set_allocated_client_ipaddress(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_client_ipaddress() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_client_ipaddress(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_client_ipaddress();

  public:
  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 84,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr client_ipaddress_;
    ::uint64_t steamid_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CChinaAgreementSessions_StartAgreementSessionInGame_Request_class_data_;

// ===================================================================



inline constexpr int kKeyFieldFieldNumber =
    60000;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
    key_field;
inline constexpr int kMsgpoolSoftLimitFieldNumber =
    60000;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
    msgpool_soft_limit;
inline constexpr int kMsgpoolHardLimitFieldNumber =
    60001;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
    msgpool_hard_limit;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CMsgProtoBufHeader

// optional fixed64 client_steam_id = 1;
inline bool CMsgProtoBufHeader::has_client_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_client_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CMsgProtoBufHeader::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.client_steam_id)
  return _internal_client_steam_id();
}
inline void CMsgProtoBufHeader::set_client_steam_id(::uint64_t value) {
  _internal_set_client_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.client_steam_id)
}
inline ::uint64_t CMsgProtoBufHeader::_internal_client_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_steam_id_;
}
inline void CMsgProtoBufHeader::_internal_set_client_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_steam_id_ = value;
}

// optional int32 client_session_id = 2;
inline bool CMsgProtoBufHeader::has_client_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_client_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_session_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CMsgProtoBufHeader::client_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.client_session_id)
  return _internal_client_session_id();
}
inline void CMsgProtoBufHeader::set_client_session_id(::int32_t value) {
  _internal_set_client_session_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.client_session_id)
}
inline ::int32_t CMsgProtoBufHeader::_internal_client_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_session_id_;
}
inline void CMsgProtoBufHeader::_internal_set_client_session_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_session_id_ = value;
}

// optional uint32 source_app_id = 3;
inline bool CMsgProtoBufHeader::has_source_app_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_source_app_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_app_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgProtoBufHeader::source_app_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.source_app_id)
  return _internal_source_app_id();
}
inline void CMsgProtoBufHeader::set_source_app_id(::uint32_t value) {
  _internal_set_source_app_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.source_app_id)
}
inline ::uint32_t CMsgProtoBufHeader::_internal_source_app_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_app_id_;
}
inline void CMsgProtoBufHeader::_internal_set_source_app_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_app_id_ = value;
}

// optional fixed64 job_id_source = 10 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_job_id_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_source_ = ::uint64_t{18446744073709551615u};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint64_t CMsgProtoBufHeader::job_id_source() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.job_id_source)
  return _internal_job_id_source();
}
inline void CMsgProtoBufHeader::set_job_id_source(::uint64_t value) {
  _internal_set_job_id_source(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.job_id_source)
}
inline ::uint64_t CMsgProtoBufHeader::_internal_job_id_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.job_id_source_;
}
inline void CMsgProtoBufHeader::_internal_set_job_id_source(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_source_ = value;
}

// optional fixed64 job_id_target = 11 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_job_id_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_target_ = ::uint64_t{18446744073709551615u};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint64_t CMsgProtoBufHeader::job_id_target() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.job_id_target)
  return _internal_job_id_target();
}
inline void CMsgProtoBufHeader::set_job_id_target(::uint64_t value) {
  _internal_set_job_id_target(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.job_id_target)
}
inline ::uint64_t CMsgProtoBufHeader::_internal_job_id_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.job_id_target_;
}
inline void CMsgProtoBufHeader::_internal_set_job_id_target(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_target_ = value;
}

// optional string target_job_name = 12;
inline bool CMsgProtoBufHeader::has_target_job_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_target_job_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_job_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgProtoBufHeader::target_job_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.target_job_name)
  return _internal_target_job_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgProtoBufHeader::set_target_job_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_job_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.target_job_name)
}
inline std::string* PROTOBUF_NONNULL CMsgProtoBufHeader::mutable_target_job_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_job_name();
  // @@protoc_insertion_point(field_mutable:CMsgProtoBufHeader.target_job_name)
  return _s;
}
inline const std::string& CMsgProtoBufHeader::_internal_target_job_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_job_name_.Get();
}
inline void CMsgProtoBufHeader::_internal_set_target_job_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_job_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgProtoBufHeader::_internal_mutable_target_job_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.target_job_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgProtoBufHeader::release_target_job_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgProtoBufHeader.target_job_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.target_job_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.target_job_name_.Set("", GetArena());
  }
  return released;
}
inline void CMsgProtoBufHeader::set_allocated_target_job_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.target_job_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_job_name_.IsDefault()) {
    _impl_.target_job_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgProtoBufHeader.target_job_name)
}

// optional int32 eresult = 13 [default = 2];
inline bool CMsgProtoBufHeader::has_eresult() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_eresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_ = 2;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t CMsgProtoBufHeader::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.eresult)
  return _internal_eresult();
}
inline void CMsgProtoBufHeader::set_eresult(::int32_t value) {
  _internal_set_eresult(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.eresult)
}
inline ::int32_t CMsgProtoBufHeader::_internal_eresult() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eresult_;
}
inline void CMsgProtoBufHeader::_internal_set_eresult(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_ = value;
}

// optional string error_message = 14;
inline bool CMsgProtoBufHeader::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgProtoBufHeader::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CMsgProtoBufHeader::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.error_message)
}
inline std::string* PROTOBUF_NONNULL CMsgProtoBufHeader::mutable_error_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:CMsgProtoBufHeader.error_message)
  return _s;
}
inline const std::string& CMsgProtoBufHeader::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void CMsgProtoBufHeader::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CMsgProtoBufHeader::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CMsgProtoBufHeader::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgProtoBufHeader.error_message)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void CMsgProtoBufHeader::set_allocated_error_message(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgProtoBufHeader.error_message)
}

// optional uint32 ip = 15;
inline bool CMsgProtoBufHeader::has_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgProtoBufHeader::ip() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.ip)
  return _internal_ip();
}
inline void CMsgProtoBufHeader::set_ip(::uint32_t value) {
  _internal_set_ip(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.ip)
}
inline ::uint32_t CMsgProtoBufHeader::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_;
}
inline void CMsgProtoBufHeader::_internal_set_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_ = value;
}

// optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
inline bool CMsgProtoBufHeader::has_gc_msg_src() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_gc_msg_src() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gc_msg_src_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::GCProtoBufMsgSrc CMsgProtoBufHeader::gc_msg_src() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.gc_msg_src)
  return _internal_gc_msg_src();
}
inline void CMsgProtoBufHeader::set_gc_msg_src(::GCProtoBufMsgSrc value) {
  _internal_set_gc_msg_src(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.gc_msg_src)
}
inline ::GCProtoBufMsgSrc CMsgProtoBufHeader::_internal_gc_msg_src() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::GCProtoBufMsgSrc>(_impl_.gc_msg_src_);
}
inline void CMsgProtoBufHeader::_internal_set_gc_msg_src(::GCProtoBufMsgSrc value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::GCProtoBufMsgSrc_internal_data_));
                                          _impl_.gc_msg_src_ = value;
}

// optional uint32 gc_dir_index_source = 201;
inline bool CMsgProtoBufHeader::has_gc_dir_index_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_gc_dir_index_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gc_dir_index_source_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgProtoBufHeader::gc_dir_index_source() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.gc_dir_index_source)
  return _internal_gc_dir_index_source();
}
inline void CMsgProtoBufHeader::set_gc_dir_index_source(::uint32_t value) {
  _internal_set_gc_dir_index_source(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.gc_dir_index_source)
}
inline ::uint32_t CMsgProtoBufHeader::_internal_gc_dir_index_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gc_dir_index_source_;
}
inline void CMsgProtoBufHeader::_internal_set_gc_dir_index_source(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gc_dir_index_source_ = value;
}

// -------------------------------------------------------------------

// CChinaAgreementSessions_StartAgreementSessionInGame_Request

// optional uint32 appid = 1;
inline bool CChinaAgreementSessions_StartAgreementSessionInGame_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CChinaAgreementSessions_StartAgreementSessionInGame_Request::appid() const {
  // @@protoc_insertion_point(field_get:CChinaAgreementSessions_StartAgreementSessionInGame_Request.appid)
  return _internal_appid();
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CChinaAgreementSessions_StartAgreementSessionInGame_Request.appid)
}
inline ::uint32_t CChinaAgreementSessions_StartAgreementSessionInGame_Request::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// optional fixed64 steamid = 2;
inline bool CChinaAgreementSessions_StartAgreementSessionInGame_Request::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t CChinaAgreementSessions_StartAgreementSessionInGame_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CChinaAgreementSessions_StartAgreementSessionInGame_Request.steamid)
  return _internal_steamid();
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CChinaAgreementSessions_StartAgreementSessionInGame_Request.steamid)
}
inline ::uint64_t CChinaAgreementSessions_StartAgreementSessionInGame_Request::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// optional string client_ipaddress = 3;
inline bool CChinaAgreementSessions_StartAgreementSessionInGame_Request::has_client_ipaddress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::clear_client_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_ipaddress_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChinaAgreementSessions_StartAgreementSessionInGame_Request::client_ipaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CChinaAgreementSessions_StartAgreementSessionInGame_Request.client_ipaddress)
  return _internal_client_ipaddress();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CChinaAgreementSessions_StartAgreementSessionInGame_Request::set_client_ipaddress(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_ipaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CChinaAgreementSessions_StartAgreementSessionInGame_Request.client_ipaddress)
}
inline std::string* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Request::mutable_client_ipaddress()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_ipaddress();
  // @@protoc_insertion_point(field_mutable:CChinaAgreementSessions_StartAgreementSessionInGame_Request.client_ipaddress)
  return _s;
}
inline const std::string& CChinaAgreementSessions_StartAgreementSessionInGame_Request::_internal_client_ipaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_ipaddress_.Get();
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::_internal_set_client_ipaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.client_ipaddress_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Request::_internal_mutable_client_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.client_ipaddress_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CChinaAgreementSessions_StartAgreementSessionInGame_Request::release_client_ipaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CChinaAgreementSessions_StartAgreementSessionInGame_Request.client_ipaddress)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.client_ipaddress_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.client_ipaddress_.Set("", GetArena());
  }
  return released;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::set_allocated_client_ipaddress(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.client_ipaddress_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_ipaddress_.IsDefault()) {
    _impl_.client_ipaddress_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CChinaAgreementSessions_StartAgreementSessionInGame_Request.client_ipaddress)
}

// -------------------------------------------------------------------

// CChinaAgreementSessions_StartAgreementSessionInGame_Response

// optional string agreement_url = 1;
inline bool CChinaAgreementSessions_StartAgreementSessionInGame_Response::has_agreement_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Response::clear_agreement_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agreement_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CChinaAgreementSessions_StartAgreementSessionInGame_Response::agreement_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CChinaAgreementSessions_StartAgreementSessionInGame_Response.agreement_url)
  return _internal_agreement_url();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CChinaAgreementSessions_StartAgreementSessionInGame_Response::set_agreement_url(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.agreement_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CChinaAgreementSessions_StartAgreementSessionInGame_Response.agreement_url)
}
inline std::string* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Response::mutable_agreement_url()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agreement_url();
  // @@protoc_insertion_point(field_mutable:CChinaAgreementSessions_StartAgreementSessionInGame_Response.agreement_url)
  return _s;
}
inline const std::string& CChinaAgreementSessions_StartAgreementSessionInGame_Response::_internal_agreement_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agreement_url_.Get();
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Response::_internal_set_agreement_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.agreement_url_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CChinaAgreementSessions_StartAgreementSessionInGame_Response::_internal_mutable_agreement_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.agreement_url_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CChinaAgreementSessions_StartAgreementSessionInGame_Response::release_agreement_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CChinaAgreementSessions_StartAgreementSessionInGame_Response.agreement_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.agreement_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.agreement_url_.Set("", GetArena());
  }
  return released;
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Response::set_allocated_agreement_url(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.agreement_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agreement_url_.IsDefault()) {
    _impl_.agreement_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CChinaAgreementSessions_StartAgreementSessionInGame_Response.agreement_url)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::GCProtoBufMsgSrc> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::GCProtoBufMsgSrc>() {
  return ::GCProtoBufMsgSrc_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // steammessages_2eproto_2epb_2eh

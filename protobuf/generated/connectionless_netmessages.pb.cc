// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: connectionless_netmessages.proto
// Protobuf C++ Version: 6.30.0-rc1

#include "connectionless_netmessages.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr C2S_CONNECTION_Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        addon_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR C2S_CONNECTION_Message::C2S_CONNECTION_Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(C2S_CONNECTION_Message_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_CONNECTION_MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_CONNECTION_MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_CONNECTION_MessageDefaultTypeInternal() {}
  union {
    C2S_CONNECTION_Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_CONNECTION_MessageDefaultTypeInternal _C2S_CONNECTION_Message_default_instance_;

inline constexpr C2S_CONNECT_Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        splitplayers_{},
        encrypted_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auth_steam_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        challenge_context_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_version_{0u},
        auth_protocol_{0u},
        reservation_cookie_{::uint64_t{0u}},
        challenge_number_{0u},
        low_violence_{false} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_CONNECT_Message::C2S_CONNECT_Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(C2S_CONNECT_Message_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_CONNECT_MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_CONNECT_MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_CONNECT_MessageDefaultTypeInternal() {}
  union {
    C2S_CONNECT_Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_CONNECT_MessageDefaultTypeInternal _C2S_CONNECT_Message_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_connectionless_5fnetmessages_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_connectionless_5fnetmessages_2eproto = nullptr;
const ::uint32_t
    TableStruct_connectionless_5fnetmessages_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.host_version_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.auth_protocol_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.challenge_number_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.reservation_cookie_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.low_violence_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.encrypted_password_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.splitplayers_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.auth_steam_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECT_Message, _impl_.challenge_context_),
        3,
        4,
        6,
        5,
        7,
        0,
        ~0u,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECTION_Message, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECTION_Message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::C2S_CONNECTION_Message, _impl_.addon_name_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::C2S_CONNECT_Message)},
        {26, 35, -1, sizeof(::C2S_CONNECTION_Message)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_C2S_CONNECT_Message_default_instance_._instance,
    &::_C2S_CONNECTION_Message_default_instance_._instance,
};
const char descriptor_table_protodef_connectionless_5fnetmessages_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n connectionless_netmessages.proto\032\021netm"
    "essages.proto\"\214\002\n\023C2S_CONNECT_Message\022\024\n"
    "\014host_version\030\001 \001(\r\022\025\n\rauth_protocol\030\002 \001"
    "(\r\022\030\n\020challenge_number\030\003 \001(\r\022\032\n\022reservat"
    "ion_cookie\030\004 \001(\006\022\024\n\014low_violence\030\005 \001(\010\022\032"
    "\n\022encrypted_password\030\006 \001(\014\0221\n\014splitplaye"
    "rs\030\007 \003(\0132\033.CCLCMsg_SplitPlayerConnect\022\022\n"
    "\nauth_steam\030\010 \001(\014\022\031\n\021challenge_context\030\t"
    " \001(\t\",\n\026C2S_CONNECTION_Message\022\022\n\naddon_"
    "name\030\001 \001(\t"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_connectionless_5fnetmessages_2eproto_deps[1] = {
        &::descriptor_table_netmessages_2eproto,
};
static ::absl::once_flag descriptor_table_connectionless_5fnetmessages_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_connectionless_5fnetmessages_2eproto = {
    false,
    false,
    370,
    descriptor_table_protodef_connectionless_5fnetmessages_2eproto,
    "connectionless_netmessages.proto",
    &descriptor_table_connectionless_5fnetmessages_2eproto_once,
    descriptor_table_connectionless_5fnetmessages_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_connectionless_5fnetmessages_2eproto::offsets,
    file_level_enum_descriptors_connectionless_5fnetmessages_2eproto,
    file_level_service_descriptors_connectionless_5fnetmessages_2eproto,
};
// ===================================================================

class C2S_CONNECT_Message::_Internal {
 public:
  using HasBits =
      decltype(std::declval<C2S_CONNECT_Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_._has_bits_);
};

void C2S_CONNECT_Message::clear_splitplayers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.splitplayers_.Clear();
}
C2S_CONNECT_Message::C2S_CONNECT_Message(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, C2S_CONNECT_Message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:C2S_CONNECT_Message)
}
PROTOBUF_NDEBUG_INLINE C2S_CONNECT_Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::C2S_CONNECT_Message& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        splitplayers_{visibility, arena, from.splitplayers_},
        encrypted_password_(arena, from.encrypted_password_),
        auth_steam_(arena, from.auth_steam_),
        challenge_context_(arena, from.challenge_context_) {}

C2S_CONNECT_Message::C2S_CONNECT_Message(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const C2S_CONNECT_Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, C2S_CONNECT_Message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_CONNECT_Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, host_version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, host_version_),
           offsetof(Impl_, low_violence_) -
               offsetof(Impl_, host_version_) +
               sizeof(Impl_::low_violence_));

  // @@protoc_insertion_point(copy_constructor:C2S_CONNECT_Message)
}
PROTOBUF_NDEBUG_INLINE C2S_CONNECT_Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        splitplayers_{visibility, arena},
        encrypted_password_(arena),
        auth_steam_(arena),
        challenge_context_(arena) {}

inline void C2S_CONNECT_Message::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, host_version_),
           0,
           offsetof(Impl_, low_violence_) -
               offsetof(Impl_, host_version_) +
               sizeof(Impl_::low_violence_));
}
C2S_CONNECT_Message::~C2S_CONNECT_Message() {
  // @@protoc_insertion_point(destructor:C2S_CONNECT_Message)
  SharedDtor(*this);
}
inline void C2S_CONNECT_Message::SharedDtor(MessageLite& self) {
  C2S_CONNECT_Message& this_ = static_cast<C2S_CONNECT_Message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.encrypted_password_.Destroy();
  this_._impl_.auth_steam_.Destroy();
  this_._impl_.challenge_context_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL C2S_CONNECT_Message::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) C2S_CONNECT_Message(arena);
}
constexpr auto C2S_CONNECT_Message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.splitplayers_) +
          decltype(C2S_CONNECT_Message::_impl_.splitplayers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(C2S_CONNECT_Message), alignof(C2S_CONNECT_Message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&C2S_CONNECT_Message::PlacementNew_,
                                 sizeof(C2S_CONNECT_Message),
                                 alignof(C2S_CONNECT_Message));
  }
}
constexpr auto C2S_CONNECT_Message::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_C2S_CONNECT_Message_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &C2S_CONNECT_Message::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<C2S_CONNECT_Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &C2S_CONNECT_Message::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<C2S_CONNECT_Message>(), &C2S_CONNECT_Message::ByteSizeLong,
              &C2S_CONNECT_Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_._cached_size_),
          false,
      },
      &C2S_CONNECT_Message::kDescriptorMethods,
      &descriptor_table_connectionless_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        C2S_CONNECT_Message_class_data_ =
            C2S_CONNECT_Message::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL C2S_CONNECT_Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&C2S_CONNECT_Message_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(C2S_CONNECT_Message_class_data_.tc_table);
  return C2S_CONNECT_Message_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 53, 2>
C2S_CONNECT_Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    C2S_CONNECT_Message_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::C2S_CONNECT_Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 host_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_CONNECT_Message, _impl_.host_version_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.host_version_)}},
    // optional uint32 auth_protocol = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_CONNECT_Message, _impl_.auth_protocol_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.auth_protocol_)}},
    // optional uint32 challenge_number = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_CONNECT_Message, _impl_.challenge_number_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.challenge_number_)}},
    // optional fixed64 reservation_cookie = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 5, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.reservation_cookie_)}},
    // optional bool low_violence = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(C2S_CONNECT_Message, _impl_.low_violence_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.low_violence_)}},
    // optional bytes encrypted_password = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.encrypted_password_)}},
    // repeated .CCLCMsg_SplitPlayerConnect splitplayers = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.splitplayers_)}},
    // optional bytes auth_steam = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.auth_steam_)}},
    // optional string challenge_context = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 2, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.challenge_context_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 host_version = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.host_version_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 auth_protocol = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.auth_protocol_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 challenge_number = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.challenge_number_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 reservation_cookie = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.reservation_cookie_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional bool low_violence = 5;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.low_violence_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bytes encrypted_password = 6;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.encrypted_password_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .CCLCMsg_SplitPlayerConnect splitplayers = 7;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.splitplayers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes auth_steam = 8;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.auth_steam_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string challenge_context = 9;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.challenge_context_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::CCLCMsg_SplitPlayerConnect>()},
  }},
  {{
    "\23\0\0\0\0\0\0\0\0\21\0\0\0\0\0\0"
    "C2S_CONNECT_Message"
    "challenge_context"
  }},
};
PROTOBUF_NOINLINE void C2S_CONNECT_Message::Clear() {
// @@protoc_insertion_point(message_clear_start:C2S_CONNECT_Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.splitplayers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.encrypted_password_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.auth_steam_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.challenge_context_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f8u) != 0) {
    ::memset(&_impl_.host_version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.low_violence_) -
        reinterpret_cast<char*>(&_impl_.host_version_)) + sizeof(_impl_.low_violence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL C2S_CONNECT_Message::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const C2S_CONNECT_Message& this_ = static_cast<const C2S_CONNECT_Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL C2S_CONNECT_Message::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const C2S_CONNECT_Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:C2S_CONNECT_Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 host_version = 1;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_host_version(), target);
  }

  // optional uint32 auth_protocol = 2;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_auth_protocol(), target);
  }

  // optional uint32 challenge_number = 3;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this_._internal_challenge_number(), target);
  }

  // optional fixed64 reservation_cookie = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this_._internal_reservation_cookie(), target);
  }

  // optional bool low_violence = 5;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this_._internal_low_violence(), target);
  }

  // optional bytes encrypted_password = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_encrypted_password();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // repeated .CCLCMsg_SplitPlayerConnect splitplayers = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_splitplayers_size());
       i < n; i++) {
    const auto& repfield = this_._internal_splitplayers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional bytes auth_steam = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_auth_steam();
    target = stream->WriteBytesMaybeAliased(8, _s, target);
  }

  // optional string challenge_context = 9;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const std::string& _s = this_._internal_challenge_context();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "C2S_CONNECT_Message.challenge_context");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:C2S_CONNECT_Message)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t C2S_CONNECT_Message::ByteSizeLong(const MessageLite& base) {
  const C2S_CONNECT_Message& this_ = static_cast<const C2S_CONNECT_Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t C2S_CONNECT_Message::ByteSizeLong() const {
  const C2S_CONNECT_Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:C2S_CONNECT_Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .CCLCMsg_SplitPlayerConnect splitplayers = 7;
    {
      total_size += 1UL * this_._internal_splitplayers_size();
      for (const auto& msg : this_._internal_splitplayers()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000020u & cached_has_bits) * 9;
  total_size += static_cast<bool>(0x00000080u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000005fu) != 0) {
    // optional bytes encrypted_password = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_encrypted_password());
    }
    // optional bytes auth_steam = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_auth_steam());
    }
    // optional string challenge_context = 9;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_challenge_context());
    }
    // optional uint32 host_version = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_host_version());
    }
    // optional uint32 auth_protocol = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_auth_protocol());
    }
    // optional uint32 challenge_number = 3;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_challenge_number());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void C2S_CONNECT_Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_CONNECT_Message*>(&to_msg);
  auto& from = static_cast<const C2S_CONNECT_Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:C2S_CONNECT_Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_splitplayers()->MergeFrom(
      from._internal_splitplayers());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_encrypted_password(from._internal_encrypted_password());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_auth_steam(from._internal_auth_steam());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_challenge_context(from._internal_challenge_context());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.host_version_ = from._impl_.host_version_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.auth_protocol_ = from._impl_.auth_protocol_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.reservation_cookie_ = from._impl_.reservation_cookie_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.challenge_number_ = from._impl_.challenge_number_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.low_violence_ = from._impl_.low_violence_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_CONNECT_Message::CopyFrom(const C2S_CONNECT_Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:C2S_CONNECT_Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_CONNECT_Message::InternalSwap(C2S_CONNECT_Message* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.splitplayers_.InternalSwap(&other->_impl_.splitplayers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encrypted_password_, &other->_impl_.encrypted_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auth_steam_, &other->_impl_.auth_steam_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.challenge_context_, &other->_impl_.challenge_context_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.low_violence_)
      + sizeof(C2S_CONNECT_Message::_impl_.low_violence_)
      - PROTOBUF_FIELD_OFFSET(C2S_CONNECT_Message, _impl_.host_version_)>(
          reinterpret_cast<char*>(&_impl_.host_version_),
          reinterpret_cast<char*>(&other->_impl_.host_version_));
}

::google::protobuf::Metadata C2S_CONNECT_Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_CONNECTION_Message::_Internal {
 public:
  using HasBits =
      decltype(std::declval<C2S_CONNECTION_Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(C2S_CONNECTION_Message, _impl_._has_bits_);
};

C2S_CONNECTION_Message::C2S_CONNECTION_Message(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, C2S_CONNECTION_Message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:C2S_CONNECTION_Message)
}
PROTOBUF_NDEBUG_INLINE C2S_CONNECTION_Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::C2S_CONNECTION_Message& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        addon_name_(arena, from.addon_name_) {}

C2S_CONNECTION_Message::C2S_CONNECTION_Message(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const C2S_CONNECTION_Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, C2S_CONNECTION_Message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_CONNECTION_Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:C2S_CONNECTION_Message)
}
PROTOBUF_NDEBUG_INLINE C2S_CONNECTION_Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        addon_name_(arena) {}

inline void C2S_CONNECTION_Message::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
C2S_CONNECTION_Message::~C2S_CONNECTION_Message() {
  // @@protoc_insertion_point(destructor:C2S_CONNECTION_Message)
  SharedDtor(*this);
}
inline void C2S_CONNECTION_Message::SharedDtor(MessageLite& self) {
  C2S_CONNECTION_Message& this_ = static_cast<C2S_CONNECTION_Message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.addon_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL C2S_CONNECTION_Message::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) C2S_CONNECTION_Message(arena);
}
constexpr auto C2S_CONNECTION_Message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(C2S_CONNECTION_Message),
                                            alignof(C2S_CONNECTION_Message));
}
constexpr auto C2S_CONNECTION_Message::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_C2S_CONNECTION_Message_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &C2S_CONNECTION_Message::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<C2S_CONNECTION_Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &C2S_CONNECTION_Message::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<C2S_CONNECTION_Message>(), &C2S_CONNECTION_Message::ByteSizeLong,
              &C2S_CONNECTION_Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(C2S_CONNECTION_Message, _impl_._cached_size_),
          false,
      },
      &C2S_CONNECTION_Message::kDescriptorMethods,
      &descriptor_table_connectionless_5fnetmessages_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        C2S_CONNECTION_Message_class_data_ =
            C2S_CONNECTION_Message::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL C2S_CONNECTION_Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&C2S_CONNECTION_Message_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(C2S_CONNECTION_Message_class_data_.tc_table);
  return C2S_CONNECTION_Message_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2>
C2S_CONNECTION_Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(C2S_CONNECTION_Message, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    C2S_CONNECTION_Message_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::C2S_CONNECTION_Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string addon_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(C2S_CONNECTION_Message, _impl_.addon_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string addon_name = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_CONNECTION_Message, _impl_.addon_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\12\0\0\0\0\0\0"
    "C2S_CONNECTION_Message"
    "addon_name"
  }},
};
PROTOBUF_NOINLINE void C2S_CONNECTION_Message::Clear() {
// @@protoc_insertion_point(message_clear_start:C2S_CONNECTION_Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.addon_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL C2S_CONNECTION_Message::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const C2S_CONNECTION_Message& this_ = static_cast<const C2S_CONNECTION_Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL C2S_CONNECTION_Message::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const C2S_CONNECTION_Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:C2S_CONNECTION_Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string addon_name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_addon_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "C2S_CONNECTION_Message.addon_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:C2S_CONNECTION_Message)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t C2S_CONNECTION_Message::ByteSizeLong(const MessageLite& base) {
  const C2S_CONNECTION_Message& this_ = static_cast<const C2S_CONNECTION_Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t C2S_CONNECTION_Message::ByteSizeLong() const {
  const C2S_CONNECTION_Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:C2S_CONNECTION_Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional string addon_name = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_addon_name());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void C2S_CONNECTION_Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_CONNECTION_Message*>(&to_msg);
  auto& from = static_cast<const C2S_CONNECTION_Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:C2S_CONNECTION_Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_addon_name(from._internal_addon_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_CONNECTION_Message::CopyFrom(const C2S_CONNECTION_Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:C2S_CONNECTION_Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_CONNECTION_Message::InternalSwap(C2S_CONNECTION_Message* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addon_name_, &other->_impl_.addon_name_, arena);
}

::google::protobuf::Metadata C2S_CONNECTION_Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_connectionless_5fnetmessages_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
